<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 10:14:21.518" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.751" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:22.767" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:24.686" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:22.747" endtime="20201112 10:14:24.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.693" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:24.690" endtime="20201112 10:14:24.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.744" endtime="20201112 10:14:24.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.700" endtime="20201112 10:14:25.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.697" endtime="20201112 10:14:25.031"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.061" endtime="20201112 10:14:25.083"></status>
</kw>
<msg timestamp="20201112 10:14:25.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.058" endtime="20201112 10:14:25.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.087" endtime="20201112 10:14:25.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.097" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:25.093" endtime="20201112 10:14:25.098"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:25.052" endtime="20201112 10:14:25.100"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:25.045" endtime="20201112 10:14:25.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.043" endtime="20201112 10:14:25.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:25.110" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:25.109" endtime="20201112 10:14:25.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.104" endtime="20201112 10:14:25.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.041" endtime="20201112 10:14:25.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.039" endtime="20201112 10:14:25.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.113" endtime="20201112 10:14:25.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.035" endtime="20201112 10:14:25.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.120" endtime="20201112 10:14:25.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.032" endtime="20201112 10:14:25.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.740" endtime="20201112 10:14:25.126"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.140" endtime="20201112 10:14:25.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.137" endtime="20201112 10:14:25.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.198" endtime="20201112 10:14:25.220"></status>
</kw>
<msg timestamp="20201112 10:14:25.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.195" endtime="20201112 10:14:25.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.223" endtime="20201112 10:14:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.234" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:25.230" endtime="20201112 10:14:25.234"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:25.188" endtime="20201112 10:14:25.236"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:25.182" endtime="20201112 10:14:25.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.178" endtime="20201112 10:14:25.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:25.246" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:25.245" endtime="20201112 10:14:25.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.240" endtime="20201112 10:14:25.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.176" endtime="20201112 10:14:25.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.173" endtime="20201112 10:14:25.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.250" endtime="20201112 10:14:25.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.169" endtime="20201112 10:14:25.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.165" endtime="20201112 10:14:25.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.134" endtime="20201112 10:14:25.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.274" endtime="20201112 10:14:25.284"></status>
</kw>
<msg timestamp="20201112 10:14:25.285" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.270" endtime="20201112 10:14:25.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.291" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.287" endtime="20201112 10:14:25.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.293" endtime="20201112 10:14:25.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.263" endtime="20201112 10:14:25.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.259" endtime="20201112 10:14:25.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.310" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:14:25.308" endtime="20201112 10:14:25.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.314" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:14:25.312" endtime="20201112 10:14:25.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.302" endtime="20201112 10:14:25.316"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:25.127" endtime="20201112 10:14:25.319" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:21.781" endtime="20201112 10:14:25.326"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.458" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:25.473" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:27.407" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:25.454" endtime="20201112 10:14:27.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.414" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:27.411" endtime="20201112 10:14:27.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.451" endtime="20201112 10:14:27.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.421" endtime="20201112 10:14:27.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.418" endtime="20201112 10:14:27.751"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.780" endtime="20201112 10:14:27.802"></status>
</kw>
<msg timestamp="20201112 10:14:27.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.777" endtime="20201112 10:14:27.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.805" endtime="20201112 10:14:27.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.816" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:27.811" endtime="20201112 10:14:27.816"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.770" endtime="20201112 10:14:27.818"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.765" endtime="20201112 10:14:27.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.762" endtime="20201112 10:14:27.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:27.828" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:27.827" endtime="20201112 10:14:27.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.822" endtime="20201112 10:14:27.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.760" endtime="20201112 10:14:27.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.759" endtime="20201112 10:14:27.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.832" endtime="20201112 10:14:27.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.755" endtime="20201112 10:14:27.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.838" endtime="20201112 10:14:27.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.752" endtime="20201112 10:14:27.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.448" endtime="20201112 10:14:27.844"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.857" endtime="20201112 10:14:27.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.854" endtime="20201112 10:14:27.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.976" endtime="20201112 10:14:27.998"></status>
</kw>
<msg timestamp="20201112 10:14:27.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.972" endtime="20201112 10:14:27.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.005" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.001" endtime="20201112 10:14:28.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:28.007" endtime="20201112 10:14:28.012"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.965" endtime="20201112 10:14:28.014"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.959" endtime="20201112 10:14:28.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.895" endtime="20201112 10:14:28.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:28.024" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:28.022" endtime="20201112 10:14:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.018" endtime="20201112 10:14:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.893" endtime="20201112 10:14:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.891" endtime="20201112 10:14:28.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.027" endtime="20201112 10:14:28.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.887" endtime="20201112 10:14:28.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.882" endtime="20201112 10:14:28.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.851" endtime="20201112 10:14:28.034"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:28.039" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.058" endtime="20201112 10:14:28.070"></status>
</kw>
<msg timestamp="20201112 10:14:28.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.055" endtime="20201112 10:14:28.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.073" endtime="20201112 10:14:28.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.079" endtime="20201112 10:14:28.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.048" endtime="20201112 10:14:28.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.043" endtime="20201112 10:14:28.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.102" endtime="20201112 10:14:28.455"></status>
</kw>
<msg timestamp="20201112 10:14:28.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190790361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.099" endtime="20201112 10:14:28.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190790361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.464" endtime="20201112 10:14:28.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.483" endtime="20201112 10:14:28.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.092" endtime="20201112 10:14:28.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.087" endtime="20201112 10:14:28.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.500" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:28.497" endtime="20201112 10:14:28.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.511" level="INFO">VALUE: [{'time': 0.190789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190790361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190799819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.45800000001773e-06, 'source_diff': 9.45800000001773e-06}, {'time': 0.190800292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190807319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999992789e-06, 'source_diff': 7.026999999992789e-06}, {'time': 0.190807792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190814917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.190815389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190821694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30499999998424e-06, 'source_diff': 6.30499999998424e-06}, {'time': 0.190822167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190827847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000007901e-06, 'source_diff': 5.680000000007901e-06}, {'time': 0.190828319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190838708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.190839181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190848306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.190848778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190853222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999992343e-06, 'source_diff': 4.443999999992343e-06}, {'time': 0.190853694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190864486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079200000000946e-05, 'source_diff': 1.079200000000946e-05}, {'time': 0.190864958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190873264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999985714e-06, 'source_diff': 8.305999999985714e-06}, {'time': 0.190873736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190882528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.79200000000746e-06, 'source_diff': 8.79200000000746e-06}, {'time': 0.190883, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190893306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.030600000001547e-05, 'source_diff': 1.030600000001547e-05}, {'time': 0.190893778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.190899431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6530000000221126e-06, 'source_diff': 5.6530000000221126e-06}, {'time': 0.190899903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190906736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83299999998388e-06, 'source_diff': 6.83299999998388e-06}, {'time': 0.190907208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190917681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000010835e-05, 'source_diff': 1.0473000000010835e-05}, {'time': 0.190918153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190928014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.190928486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190933236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.190933708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190939653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944999999979439e-06, 'source_diff': 5.944999999979439e-06}, {'time': 0.190940194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000205528e-07, 'source_diff': 5.410000000205528e-07}, {'time': 0.190950444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999989434e-05, 'source_diff': 1.0249999999989434e-05}, {'time': 0.190950917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190958264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.346999999990889e-06, 'source_diff': 7.346999999990889e-06}, {'time': 0.190958736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190967139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000017924e-06, 'source_diff': 8.403000000017924e-06}, {'time': 0.190967611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190972056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.444999999991817e-06, 'source_diff': 4.444999999991817e-06}, {'time': 0.190972528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190981389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.190981931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.190990097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.190990569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190995653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999988542e-06, 'source_diff': 5.083999999988542e-06}, {'time': 0.190996125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191000528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4030000000139236e-06, 'source_diff': 4.4030000000139236e-06}, {'time': 0.191001, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191008153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000009735e-06, 'source_diff': 7.153000000009735e-06}, {'time': 0.191008625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.191016097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000008361e-06, 'source_diff': 7.472000000008361e-06}, {'time': 0.191016569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191027458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000013915e-05, 'source_diff': 1.0889000000013915e-05}, {'time': 0.191027931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191037056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.191037528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191042694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.191043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191053333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999978137e-05, 'source_diff': 1.0165999999978137e-05}, {'time': 0.191053806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.191058806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191068986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.191069458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191078792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.191079264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191089806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.191090347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.191096542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1950000000143834e-06, 'source_diff': 6.1950000000143834e-06}, {'time': 0.191097014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191107069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0054999999981051e-05, 'source_diff': 1.0054999999981051e-05}, {'time': 0.191107542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191113028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.1911135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191122833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.191123306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.93000000001609e-06, 'source_diff': 6.93000000001609e-06}, {'time': 0.191130708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191136931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.191137403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191146, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.191146472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191157069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.191157542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.1911675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999976597e-06, 'source_diff': 9.957999999976597e-06}, {'time': 0.191167972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191176264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000020838e-06, 'source_diff': 8.292000000020838e-06}, {'time': 0.191176736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.191183611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999989528e-06, 'source_diff': 6.874999999989528e-06}, {'time': 0.191184153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.191191208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000005807e-06, 'source_diff': 7.055000000005807e-06}, {'time': 0.191191681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.191199208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000007167e-06, 'source_diff': 7.527000000007167e-06}, {'time': 0.191199681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:28.502" endtime="20201112 10:14:28.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.491" endtime="20201112 10:14:28.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:28.571" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:28.517" endtime="20201112 10:14:28.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.580" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:28.578" endtime="20201112 10:14:28.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.589" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.720000000013602e-07, 9.45800000001773e-06, 4.7300000000083386e-07, 7.026999999992789e-06, 4.7300000000083386e-07, 7.124999999996717e-06, 4.720000000013602e-07, 6.30499999998424e-06, 4.7300000000083386e-07, 5.680000000007901e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 4.443999999992343e-06, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 8.305999999985714e-06, 4.720000000013602e-07, 8.79200000000746e-06, 4.720000000013602e-07, 1.030600000001547e-05, 4.7199999997360464e-07, 5.6530000000221126e-06, 4.720000000013602e-07, 6.83299999998388e-06, 4.720000000013602e-07, 1.0473000000010835e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.944999999979439e-06, 5.410000000205528e-07, 1.0249999999989434e-05, 4.7300000000083386e-07, 7.346999999990889e-06, 4.720000000013602e-07, 8.403000000017924e-06, 4.720000000013602e-07, 4.444999999991817e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999922709e-07, 8.166000000003892e-06, 4.720000000013602e-07, 5.083999999988542e-06, 4.720000000013602e-07, 4.4030000000139236e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.7199999997360464e-07, 7.472000000008361e-06, 4.720000000013602e-07, 1.0889000000013915e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 1.0165999999978137e-05, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 5.409999999927972e-07, 6.1950000000143834e-06, 4.720000000013602e-07, 1.0054999999981051e-05, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 6.93000000001609e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 9.957999999976597e-06, 4.720000000013602e-07, 8.292000000020838e-06, 4.720000000013602e-07, 6.874999999989528e-06, 5.419999999922709e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 7.527000000007167e-06, 4.7300000000083386e-07], 'time': [0.190789889, 0.190790361, 0.190799819, 0.190800292, 0.190807319, 0.190807792, 0.190814917, 0.190815389, 0.190821694, 0.190822167, 0.190827847, 0.190828319, 0.190838708, 0.190839181, 0.190848306, 0.190848778, 0.190853222, 0.190853694, 0.190864486, 0.190864958, 0.190873264, 0.190873736, 0.190882528, 0.190883, 0.190893306, 0.190893778, 0.190899431, 0.190899903, 0.190906736, 0.190907208, 0.190917681, 0.190918153, 0.190928014, 0.190928486, 0.190933236, 0.190933708, 0.190939653, 0.190940194, 0.190950444, 0.190950917, 0.190958264, 0.190958736, 0.190967139, 0.190967611, 0.190972056, 0.190972528, 0.190981389, 0.190981931, 0.190990097, 0.190990569, 0.190995653, 0.190996125, 0.191000528, 0.191001, 0.191008153, 0.191008625, 0.191016097, 0.191016569, 0.191027458, 0.191027931, 0.191037056, 0.191037528, 0.191042694, 0.191043167, 0.191053333, 0.191053806, 0.191058333, 0.191058806, 0.191068986, 0.191069458, 0.191078792, 0.191079264, 0.191089806, 0.191090347, 0.191096542, 0.191097014, 0.191107069, 0.191107542, 0.191113028, 0.1911135, 0.191122833, 0.191123306, 0.191130236, 0.191130708, 0.191136931, 0.191137403, 0.191146, 0.191146472, 0.191157069, 0.191157542, 0.1911675, 0.191167972, 0.191176264, 0.191176736, 0.191183611, 0.191184153, 0.191191208, 0.191191681, 0.191199208, 0.191199681], 'diff': [0, 4.720000000013602e-07, 9.45800000001773e-06, 4.7300000000083386e-07, 7.026999999992789e-06, 4.7300000000083386e-07, 7.124999999996717e-06, 4.720000000013602e-07, 6.30499999998424e-06, 4.7300000000083386e-07, 5.680000000007901e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 4.443999999992343e-06, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 8.305999999985714e-06, 4.720000000013602e-07, 8.79200000000746e-06, 4.720000000013602e-07, 1.030600000001547e-05, 4.7199999997360464e-07, 5.6530000000221126e-06, 4.720000000013602e-07, 6.83299999998388e-06, 4.720000000013602e-07, 1.0473000000010835e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.944999999979439e-06, 5.410000000205528e-07, 1.0249999999989434e-05, 4.7300000000083386e-07, 7.346999999990889e-06, 4.720000000013602e-07, 8.403000000017924e-06, 4.720000000013602e-07, 4.444999999991817e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999922709e-07, 8.166000000003892e-06, 4.720000000013602e-07, 5.083999999988542e-06, 4.720000000013602e-07, 4.4030000000139236e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.7199999997360464e-07, 7.472000000008361e-06, 4.720000000013602e-07, 1.0889000000013915e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 1.0165999999978137e-05, 4.7300000000083386e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 5.409999999927972e-07, 6.1950000000143834e-06, 4.720000000013602e-07, 1.0054999999981051e-05, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 6.93000000001609e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 9.957999999976597e-06, 4.720000000013602e-07, 8.292000000020838e-06, 4.720000000013602e-07, 6.874999999989528e-06, 5.419999999922709e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 7.527000000007167e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:28.582" endtime="20201112 10:14:28.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.572" endtime="20201112 10:14:28.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.603" level="INFO">${RESULT} = [{'time': 0.190790361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190800292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.594" endtime="20201112 10:14:28.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:28.633" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:28.605" endtime="20201112 10:14:28.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:28.641" endtime="20201112 10:14:28.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.649" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.410000000205528e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:14:28.646" endtime="20201112 10:14:28.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.635" endtime="20201112 10:14:28.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.657" endtime="20201112 10:14:28.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.665" endtime="20201112 10:14:28.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.661" endtime="20201112 10:14:28.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.653" endtime="20201112 10:14:28.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.040" endtime="20201112 10:14:28.691"></status>
</kw>
<msg timestamp="20201112 10:14:28.691" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.711" endtime="20201112 10:14:28.721"></status>
</kw>
<msg timestamp="20201112 10:14:28.722" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.707" endtime="20201112 10:14:28.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.724" endtime="20201112 10:14:28.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.731" endtime="20201112 10:14:28.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.700" endtime="20201112 10:14:28.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.696" endtime="20201112 10:14:28.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.754" endtime="20201112 10:14:29.093"></status>
</kw>
<msg timestamp="20201112 10:14:29.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035295417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035295889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.751" endtime="20201112 10:14:29.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035295417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035295889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.102" endtime="20201112 10:14:29.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.122" endtime="20201112 10:14:29.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.744" endtime="20201112 10:14:29.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.739" endtime="20201112 10:14:29.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.138" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:29.136" endtime="20201112 10:14:29.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.149" level="INFO">VALUE: [{'time': 0.035295417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035295889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035305014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.035305486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035315556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.035316028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035320569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.035321042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035330625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.035331167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03533675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.035337222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035341639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.035342111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035349264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.035349736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035354597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.035355069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035361569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035362042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03537275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.035373222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035378694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035379167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03538725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.035387722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035396958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.035397431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035407597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.035408069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035417625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.035418097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035423681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.035424153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035433278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.03543375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035440375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035440847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035446625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.035447097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035455181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.08400000000542e-06, 'source_diff': 8.08400000000542e-06}, {'time': 0.035455653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035465097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.035465569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861999999994371e-06, 'source_diff': 4.861999999994371e-06}, {'time': 0.035470903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035480847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000004782e-06, 'source_diff': 9.944000000004782e-06}, {'time': 0.035481319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035485861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.035486333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03549725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035497722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035506944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999996233e-06, 'source_diff': 9.221999999996233e-06}, {'time': 0.035507417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035511944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.035512417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035517375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.035517847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035528653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.035529125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035533875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.035534347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035540639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.035541111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035550972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035551444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035559472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.035560014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035564208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.035564681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.035574694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035579861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.035580333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035589264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.035589736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035600528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.035601, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0356115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.035611972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035620542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.035621014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035627958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.035628431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.03563375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035642625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.035643167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.035652014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035661264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.035661736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035666681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.035667153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035677625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.035678097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035683153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.035683625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035694042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000005616e-05, 'source_diff': 1.0417000000005616e-05}, {'time': 0.035694514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:29.140" endtime="20201112 10:14:29.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.130" endtime="20201112 10:14:29.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:29.209" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:29.155" endtime="20201112 10:14:29.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.219" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:29.216" endtime="20201112 10:14:29.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.228" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 4.5410000000037365e-06, 4.7299999999389497e-07, 9.583000000000508e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 4.861999999994371e-06, 4.720000000013602e-07, 9.944000000004782e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.028000000000202e-06, 5.419999999992098e-07, 4.193999999999032e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.420000000061487e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 5.05600000000328e-06, 4.7199999999442133e-07, 1.0417000000005616e-05, 4.7199999999442133e-07], 'time': [0.035295417, 0.035295889, 0.035305014, 0.035305486, 0.035315556, 0.035316028, 0.035320569, 0.035321042, 0.035330625, 0.035331167, 0.03533675, 0.035337222, 0.035341639, 0.035342111, 0.035349264, 0.035349736, 0.035354597, 0.035355069, 0.035361569, 0.035362042, 0.03537275, 0.035373222, 0.035378694, 0.035379167, 0.03538725, 0.035387722, 0.035396958, 0.035397431, 0.035407597, 0.035408069, 0.035417625, 0.035418097, 0.035423681, 0.035424153, 0.035433278, 0.03543375, 0.035440375, 0.035440847, 0.035446625, 0.035447097, 0.035455181, 0.035455653, 0.035465097, 0.035465569, 0.035470431, 0.035470903, 0.035480847, 0.035481319, 0.035485861, 0.035486333, 0.03549725, 0.035497722, 0.035506944, 0.035507417, 0.035511944, 0.035512417, 0.035517375, 0.035517847, 0.035528653, 0.035529125, 0.035533875, 0.035534347, 0.035540639, 0.035541111, 0.035550972, 0.035551444, 0.035559472, 0.035560014, 0.035564208, 0.035564681, 0.035574222, 0.035574694, 0.035579861, 0.035580333, 0.035589264, 0.035589736, 0.035600528, 0.035601, 0.0356115, 0.035611972, 0.035620542, 0.035621014, 0.035627958, 0.035628431, 0.035633278, 0.03563375, 0.035642625, 0.035643167, 0.035651542, 0.035652014, 0.035661264, 0.035661736, 0.035666681, 0.035667153, 0.035677625, 0.035678097, 0.035683153, 0.035683625, 0.035694042, 0.035694514], 'diff': [0, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 4.5410000000037365e-06, 4.7299999999389497e-07, 9.583000000000508e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 4.861999999994371e-06, 4.720000000013602e-07, 9.944000000004782e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.028000000000202e-06, 5.419999999992098e-07, 4.193999999999032e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.420000000061487e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 5.05600000000328e-06, 4.7199999999442133e-07, 1.0417000000005616e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:29.221" endtime="20201112 10:14:29.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.211" endtime="20201112 10:14:29.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.243" level="INFO">${RESULT} = [{'time': 0.035295889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035305486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:29.234" endtime="20201112 10:14:29.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:29.274" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:29.245" endtime="20201112 10:14:29.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.284" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:29.281" endtime="20201112 10:14:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.289" level="INFO">VALUE: [4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 10:14:29.286" endtime="20201112 10:14:29.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.275" endtime="20201112 10:14:29.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.298" endtime="20201112 10:14:29.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.306" endtime="20201112 10:14:29.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.301" endtime="20201112 10:14:29.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.293" endtime="20201112 10:14:29.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.692" endtime="20201112 10:14:29.331"></status>
</kw>
<msg timestamp="20201112 10:14:29.332" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.353" endtime="20201112 10:14:29.363"></status>
</kw>
<msg timestamp="20201112 10:14:29.364" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.348" endtime="20201112 10:14:29.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.367" endtime="20201112 10:14:29.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.373" endtime="20201112 10:14:29.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.341" endtime="20201112 10:14:29.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.336" endtime="20201112 10:14:29.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.396" endtime="20201112 10:14:29.727"></status>
</kw>
<msg timestamp="20201112 10:14:29.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037253847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037254319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.392" endtime="20201112 10:14:29.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037253847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037254319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.736" endtime="20201112 10:14:29.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.755" endtime="20201112 10:14:29.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.385" endtime="20201112 10:14:29.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.381" endtime="20201112 10:14:29.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.771" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:29.769" endtime="20201112 10:14:29.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.782" level="INFO">VALUE: [{'time': 0.037253847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037254319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037263125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.037263597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03727075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.037271222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037278778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.03727925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037287556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.037288028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037297556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.037298028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.037304694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037314139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.037314611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037318917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.037319389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037330208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.037330681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03733625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.037336722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037343875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.037344347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037354403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.037354875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03736225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037362722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037368528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.037369, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037378403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.037378875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037384569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.037385042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037393847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.037394319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037399389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069999999995911e-06, 'source_diff': 5.069999999995911e-06}, {'time': 0.037399861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037408764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037409236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037418375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037418847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037427917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037435583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.037436056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037445236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.037445778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037455514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.037455986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037466472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.037466944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037475292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037485708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.037486181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.037493347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037501639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037502111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03750875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.037509222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0375195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037519972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037528056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.037528528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037533167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037533639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037538069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.037538542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03754475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037545222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037553403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.037553875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037564667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.037565139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037574486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037574958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037582208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037582681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037590875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.037591347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037599736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000004476e-06, 'source_diff': 8.389000000004476e-06}, {'time': 0.037600208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037607583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037608056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037618208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.037618681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037626264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.037626736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037632417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.037632889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.193999999994093e-06, 'source_diff': 6.193999999994093e-06}, {'time': 0.037639556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037644431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037644903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037655583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.037656056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037663194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1379999999968136e-06, 'source_diff': 7.1379999999968136e-06}, {'time': 0.037663667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:29.773" endtime="20201112 10:14:29.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.763" endtime="20201112 10:14:29.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:29.842" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:29.788" endtime="20201112 10:14:29.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.851" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:29.849" endtime="20201112 10:14:29.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.860" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 5.569000000003876e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 5.419999999992098e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 6.694000000001532e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 6.193999999994093e-06, 4.7300000000083386e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.1379999999968136e-06, 4.7300000000083386e-07], 'time': [0.037253847, 0.037254319, 0.037263125, 0.037263597, 0.03727075, 0.037271222, 0.037278778, 0.03727925, 0.037287556, 0.037288028, 0.037297556, 0.037298028, 0.037304222, 0.037304694, 0.037314139, 0.037314611, 0.037318917, 0.037319389, 0.037330208, 0.037330681, 0.03733625, 0.037336722, 0.037343875, 0.037344347, 0.037354403, 0.037354875, 0.03736225, 0.037362722, 0.037368528, 0.037369, 0.037378403, 0.037378875, 0.037384569, 0.037385042, 0.037393847, 0.037394319, 0.037399389, 0.037399861, 0.037408764, 0.037409236, 0.037418375, 0.037418847, 0.037427444, 0.037427917, 0.037435583, 0.037436056, 0.037445236, 0.037445778, 0.037455514, 0.037455986, 0.037466472, 0.037466944, 0.037474819, 0.037475292, 0.037485708, 0.037486181, 0.037492875, 0.037493347, 0.037501639, 0.037502111, 0.03750875, 0.037509222, 0.0375195, 0.037519972, 0.037528056, 0.037528528, 0.037533167, 0.037533639, 0.037538069, 0.037538542, 0.03754475, 0.037545222, 0.037553403, 0.037553875, 0.037564667, 0.037565139, 0.037574486, 0.037574958, 0.037582208, 0.037582681, 0.037590875, 0.037591347, 0.037599736, 0.037600208, 0.037607583, 0.037608056, 0.037618208, 0.037618681, 0.037626264, 0.037626736, 0.037632417, 0.037632889, 0.037639083, 0.037639556, 0.037644431, 0.037644903, 0.037655583, 0.037656056, 0.037663194, 0.037663667], 'diff': [0, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 5.569000000003876e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 5.419999999992098e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 6.694000000001532e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 6.193999999994093e-06, 4.7300000000083386e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.1379999999968136e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:29.853" endtime="20201112 10:14:29.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.844" endtime="20201112 10:14:29.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.874" level="INFO">${RESULT} = [{'time': 0.037254319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037263597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.865" endtime="20201112 10:14:29.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:29.904" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:29.876" endtime="20201112 10:14:29.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.915" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:29.912" endtime="20201112 10:14:29.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.921" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:14:29.918" endtime="20201112 10:14:29.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.906" endtime="20201112 10:14:29.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.929" endtime="20201112 10:14:29.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.938" endtime="20201112 10:14:29.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.933" endtime="20201112 10:14:29.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.925" endtime="20201112 10:14:29.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.333" endtime="20201112 10:14:29.963"></status>
</kw>
<msg timestamp="20201112 10:14:29.964" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.984" endtime="20201112 10:14:29.994"></status>
</kw>
<msg timestamp="20201112 10:14:29.995" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.981" endtime="20201112 10:14:29.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.998" endtime="20201112 10:14:30.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.004" endtime="20201112 10:14:30.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.974" endtime="20201112 10:14:30.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.969" endtime="20201112 10:14:30.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.027" endtime="20201112 10:14:30.361"></status>
</kw>
<msg timestamp="20201112 10:14:30.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036644361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.024" endtime="20201112 10:14:30.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036644361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.371" endtime="20201112 10:14:30.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.390" endtime="20201112 10:14:30.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.017" endtime="20201112 10:14:30.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.012" endtime="20201112 10:14:30.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.406" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:30.403" endtime="20201112 10:14:30.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.417" level="INFO">VALUE: [{'time': 0.036643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036644361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036652028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.0366525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036658278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.03665875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036669444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.036669917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036676111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.193999999994093e-06, 'source_diff': 6.193999999994093e-06}, {'time': 0.036676583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.036686722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036697083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.036697556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036705139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036705611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036716375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0764000000003382e-05, 'source_diff': 1.0764000000003382e-05}, {'time': 0.036716847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036722639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.036723111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036730889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036731361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036736431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.036736903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036747778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.03674825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036756542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036757014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036762167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036762639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036771458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036771931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036777194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.262999999998408e-06, 'source_diff': 5.262999999998408e-06}, {'time': 0.036777667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036787, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036787472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036798264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.036798736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036807236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036807708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036813194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036813667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036824028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.0368245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036833208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.036833681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.036844431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036853764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036854236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036861583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.036862056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036867, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036867472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036872014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036872486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036879514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036879986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036886528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.54200000000521e-06, 'source_diff': 6.54200000000521e-06}, {'time': 0.036887, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036893292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.036893764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036904375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036904847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036913431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.036913903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036918806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036924736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036930319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036930792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036940653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036941125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036951403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036951875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036959431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036959903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036965056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036965528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036974444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000004642e-06, 'source_diff': 8.916000000004642e-06}, {'time': 0.036974917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036983097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.036983569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036993236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.036993708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036999056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.036999528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037006778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.03700725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037017, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.037017472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037022736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037023208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037032778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.03703325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037041306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.05600000000628e-06, 'source_diff': 8.05600000000628e-06}, {'time': 0.037041778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037046431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.037046903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:30.408" endtime="20201112 10:14:30.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.398" endtime="20201112 10:14:30.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:30.478" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:30.423" endtime="20201112 10:14:30.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.487" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:30.485" endtime="20201112 10:14:30.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.496" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 6.193999999994093e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 1.0764000000003382e-05, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 9.333000000000258e-06, 4.720000000013602e-07, 7.347000000004766e-06, 4.7299999999389497e-07, 4.943999999999782e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 8.583999999998981e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7299999999389497e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 8.916000000004642e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.34800000000224e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.7199999999442133e-07, 8.05600000000628e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07], 'time': [0.036643889, 0.036644361, 0.036652028, 0.0366525, 0.036658278, 0.03665875, 0.036669444, 0.036669917, 0.036676111, 0.036676583, 0.03668625, 0.036686722, 0.036697083, 0.036697556, 0.036705139, 0.036705611, 0.036716375, 0.036716847, 0.036722639, 0.036723111, 0.036730889, 0.036731361, 0.036736431, 0.036736903, 0.036747778, 0.03674825, 0.036756542, 0.036757014, 0.036762167, 0.036762639, 0.036771458, 0.036771931, 0.036777194, 0.036777667, 0.036787, 0.036787472, 0.036798264, 0.036798736, 0.036807236, 0.036807708, 0.036813194, 0.036813667, 0.036824028, 0.0368245, 0.036833208, 0.036833681, 0.036843958, 0.036844431, 0.036853764, 0.036854236, 0.036861583, 0.036862056, 0.036867, 0.036867472, 0.036872014, 0.036872486, 0.036879514, 0.036879986, 0.036886528, 0.036887, 0.036893292, 0.036893764, 0.036904375, 0.036904847, 0.036913431, 0.036913903, 0.036918333, 0.036918806, 0.036924264, 0.036924736, 0.036930319, 0.036930792, 0.036940653, 0.036941125, 0.036951403, 0.036951875, 0.036959431, 0.036959903, 0.036965056, 0.036965528, 0.036974444, 0.036974917, 0.036983097, 0.036983569, 0.036993236, 0.036993708, 0.036999056, 0.036999528, 0.037006778, 0.03700725, 0.037017, 0.037017472, 0.037022736, 0.037023208, 0.037032778, 0.03703325, 0.037041306, 0.037041778, 0.037046431, 0.037046903], 'diff': [0, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 6.193999999994093e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 1.0764000000003382e-05, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 9.333000000000258e-06, 4.720000000013602e-07, 7.347000000004766e-06, 4.7299999999389497e-07, 4.943999999999782e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 8.583999999998981e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7299999999389497e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 8.916000000004642e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.34800000000224e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.7199999999442133e-07, 8.05600000000628e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:30.489" endtime="20201112 10:14:30.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.480" endtime="20201112 10:14:30.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.510" level="INFO">${RESULT} = [{'time': 0.036644361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0366525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:30.501" endtime="20201112 10:14:30.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:30.540" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:30.512" endtime="20201112 10:14:30.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:30.548" endtime="20201112 10:14:30.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.555" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:30.552" endtime="20201112 10:14:30.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.542" endtime="20201112 10:14:30.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.564" endtime="20201112 10:14:30.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.572" endtime="20201112 10:14:30.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.568" endtime="20201112 10:14:30.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.559" endtime="20201112 10:14:30.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.965" endtime="20201112 10:14:30.597"></status>
</kw>
<msg timestamp="20201112 10:14:30.598" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.617" endtime="20201112 10:14:30.627"></status>
</kw>
<msg timestamp="20201112 10:14:30.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.614" endtime="20201112 10:14:30.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.631" endtime="20201112 10:14:30.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.637" endtime="20201112 10:14:30.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.607" endtime="20201112 10:14:30.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.602" endtime="20201112 10:14:30.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.660" endtime="20201112 10:14:30.999"></status>
</kw>
<msg timestamp="20201112 10:14:31.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035172097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035172569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.657" endtime="20201112 10:14:31.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035172097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035172569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.010" endtime="20201112 10:14:31.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.029" endtime="20201112 10:14:31.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.649" endtime="20201112 10:14:31.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.645" endtime="20201112 10:14:31.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.046" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:31.044" endtime="20201112 10:14:31.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.058" level="INFO">VALUE: [{'time': 0.035172097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035172569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035178639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.035179181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03518625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0690000000053765e-06, 'source_diff': 7.0690000000053765e-06}, {'time': 0.035186792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035195375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.035195847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035213958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035214431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035222931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035223403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035228875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035229347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035233833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.035234375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035243806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.035244278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03524925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.035249722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035259139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.035259611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035268431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.035268903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03527825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035278722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035285444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.035285917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035292528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.035293, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035299306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.035299778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035308083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.035308556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035316431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.035316903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035326764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035327236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035332708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035333181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035342111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.035342583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035348375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.035348847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035355472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035355944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035362042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.035362514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035367361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.035367833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035377847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035385417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.57000000000535e-06, 'source_diff': 7.57000000000535e-06}, {'time': 0.035385889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035393236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.035393708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035403333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.035403875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035409514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.035409986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035419944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.035420417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035428194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.035428667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035434722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0550000000048065e-06, 'source_diff': 6.0550000000048065e-06}, {'time': 0.035435264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035443542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.035444014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035453972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.035454444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03546525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.035465722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035472028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.0354725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035480903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.035481375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03548625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.035486722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035492069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.035492542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035498111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.035498583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035505722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.035506194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035516181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.987000000002966e-06, 'source_diff': 9.987000000002966e-06}, {'time': 0.035516653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035523153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035523625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035533694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0068999999994499e-05, 'source_diff': 1.0068999999994499e-05}, {'time': 0.035534167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035542778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.03554325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035548153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.035548694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035556347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.035556819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999995567e-06, 'source_diff': 8.194999999995567e-06}, {'time': 0.035565486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:31.048" endtime="20201112 10:14:31.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.037" endtime="20201112 10:14:31.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:31.117" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:31.064" endtime="20201112 10:14:31.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.128" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:31.125" endtime="20201112 10:14:31.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.137" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 6.069999999996911e-06, 5.419999999992098e-07, 7.0690000000053765e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.485999999997992e-06, 5.419999999992098e-07, 9.431000000004186e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 9.417000000004616e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.09800000000299e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.720000000013602e-07, 9.624999999999218e-06, 5.419999999992098e-07, 5.639000000001726e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7299999999389497e-07, 6.0550000000048065e-06, 5.419999999992098e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 5.347000000002766e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0068999999994499e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.903000000000546e-06, 5.409999999997361e-07, 7.653000000003296e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07], 'time': [0.035172097, 0.035172569, 0.035178639, 0.035179181, 0.03518625, 0.035186792, 0.035195375, 0.035195847, 0.035203111, 0.035203583, 0.035213958, 0.035214431, 0.035222931, 0.035223403, 0.035228875, 0.035229347, 0.035233833, 0.035234375, 0.035243806, 0.035244278, 0.03524925, 0.035249722, 0.035259139, 0.035259611, 0.035268431, 0.035268903, 0.03527825, 0.035278722, 0.035285444, 0.035285917, 0.035292528, 0.035293, 0.035299306, 0.035299778, 0.035308083, 0.035308556, 0.035316431, 0.035316903, 0.035326764, 0.035327236, 0.035332708, 0.035333181, 0.035342111, 0.035342583, 0.035348375, 0.035348847, 0.035355472, 0.035355944, 0.035362042, 0.035362514, 0.035367361, 0.035367833, 0.035377375, 0.035377847, 0.035385417, 0.035385889, 0.035393236, 0.035393708, 0.035403333, 0.035403875, 0.035409514, 0.035409986, 0.035419944, 0.035420417, 0.035428194, 0.035428667, 0.035434722, 0.035435264, 0.035443542, 0.035444014, 0.035453972, 0.035454444, 0.03546525, 0.035465722, 0.035472028, 0.0354725, 0.035480903, 0.035481375, 0.03548625, 0.035486722, 0.035492069, 0.035492542, 0.035498111, 0.035498583, 0.035505722, 0.035506194, 0.035516181, 0.035516653, 0.035523153, 0.035523625, 0.035533694, 0.035534167, 0.035542778, 0.03554325, 0.035548153, 0.035548694, 0.035556347, 0.035556819, 0.035565014, 0.035565486], 'diff': [0, 4.720000000013602e-07, 6.069999999996911e-06, 5.419999999992098e-07, 7.0690000000053765e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.485999999997992e-06, 5.419999999992098e-07, 9.431000000004186e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 9.417000000004616e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.09800000000299e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.720000000013602e-07, 9.624999999999218e-06, 5.419999999992098e-07, 5.639000000001726e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7299999999389497e-07, 6.0550000000048065e-06, 5.419999999992098e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 5.347000000002766e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0068999999994499e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.903000000000546e-06, 5.409999999997361e-07, 7.653000000003296e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:31.130" endtime="20201112 10:14:31.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.120" endtime="20201112 10:14:31.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.151" level="INFO">${RESULT} = [{'time': 0.035172569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035179181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.142" endtime="20201112 10:14:31.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:31.183" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:31.153" endtime="20201112 10:14:31.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.193" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:31.191" endtime="20201112 10:14:31.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.198" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:31.195" endtime="20201112 10:14:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.184" endtime="20201112 10:14:31.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.207" endtime="20201112 10:14:31.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.215" endtime="20201112 10:14:31.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.211" endtime="20201112 10:14:31.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.203" endtime="20201112 10:14:31.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.599" endtime="20201112 10:14:31.241"></status>
</kw>
<msg timestamp="20201112 10:14:31.241" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.263" endtime="20201112 10:14:31.273"></status>
</kw>
<msg timestamp="20201112 10:14:31.274" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.259" endtime="20201112 10:14:31.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.277" endtime="20201112 10:14:31.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.283" endtime="20201112 10:14:31.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.251" endtime="20201112 10:14:31.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.246" endtime="20201112 10:14:31.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.306" endtime="20201112 10:14:31.641"></status>
</kw>
<msg timestamp="20201112 10:14:31.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037435472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037435944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.303" endtime="20201112 10:14:31.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037435472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037435944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.650" endtime="20201112 10:14:31.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.670" endtime="20201112 10:14:31.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.296" endtime="20201112 10:14:31.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.291" endtime="20201112 10:14:31.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.686" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:31.683" endtime="20201112 10:14:31.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.697" level="INFO">VALUE: [{'time': 0.037435472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037435944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037441097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037441569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.03744825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037456444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.037456917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037462028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.037462569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037470833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.037471306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037476681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037477153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037481806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.037482278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037487528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.037488, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037495556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037496028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037504625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037505097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037509833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.037510306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037517681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037518153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037527056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.037527528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037536444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000004642e-06, 'source_diff': 8.916000000004642e-06}, {'time': 0.037536917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037545097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.037545569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037552611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.037553083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037562514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.037562986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037573153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.037573625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037579833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037580306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037586514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037586986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037596944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.037597417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037607806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037608278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037618667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037619139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037629931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.037630403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037637542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.037638014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.037643681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037651125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.037651597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.037661389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037665931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.037666403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037675667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.037676208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037683347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037683819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037693056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.237000000002216e-06, 'source_diff': 9.237000000002216e-06}, {'time': 0.037693528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037704111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.037704583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037710583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037711056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037716861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.037717333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037724306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.037724847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037735097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0250000000003312e-05, 'source_diff': 1.0250000000003312e-05}, {'time': 0.037735569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.037744139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.03775025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037750722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.037761347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037765875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.037766347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.03777325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037780806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037781278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.037786375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037791444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.037791917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037799792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037800264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037808556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037809028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037813972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.037814444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.037820944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:31.688" endtime="20201112 10:14:31.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.678" endtime="20201112 10:14:31.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:31.756" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:31.703" endtime="20201112 10:14:31.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.765" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:31.763" endtime="20201112 10:14:31.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.774" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 5.111000000002086e-06, 5.409999999997361e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.374999999996967e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 8.916000000004642e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 7.444000000002282e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.264000000001882e-06, 5.409999999997361e-07, 7.138999999996287e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 1.0250000000003312e-05, 4.7199999999442133e-07, 8.028000000000202e-06, 5.420000000061487e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 5.9589999999998255e-06, 5.409999999997361e-07], 'time': [0.037435472, 0.037435944, 0.037441097, 0.037441569, 0.037447778, 0.03744825, 0.037456444, 0.037456917, 0.037462028, 0.037462569, 0.037470833, 0.037471306, 0.037476681, 0.037477153, 0.037481806, 0.037482278, 0.037487528, 0.037488, 0.037495556, 0.037496028, 0.037504625, 0.037505097, 0.037509833, 0.037510306, 0.037517681, 0.037518153, 0.037527056, 0.037527528, 0.037536444, 0.037536917, 0.037545097, 0.037545569, 0.037552611, 0.037553083, 0.037562514, 0.037562986, 0.037573153, 0.037573625, 0.037579833, 0.037580306, 0.037586514, 0.037586986, 0.037596944, 0.037597417, 0.037607806, 0.037608278, 0.037618667, 0.037619139, 0.037629931, 0.037630403, 0.037637542, 0.037638014, 0.037643208, 0.037643681, 0.037651125, 0.037651597, 0.037660917, 0.037661389, 0.037665931, 0.037666403, 0.037675667, 0.037676208, 0.037683347, 0.037683819, 0.037693056, 0.037693528, 0.037704111, 0.037704583, 0.037710583, 0.037711056, 0.037716861, 0.037717333, 0.037724306, 0.037724847, 0.037735097, 0.037735569, 0.037743597, 0.037744139, 0.03775025, 0.037750722, 0.037760875, 0.037761347, 0.037765875, 0.037766347, 0.037772778, 0.03777325, 0.037780806, 0.037781278, 0.037785903, 0.037786375, 0.037791444, 0.037791917, 0.037799792, 0.037800264, 0.037808556, 0.037809028, 0.037813972, 0.037814444, 0.037820403, 0.037820944], 'diff': [0, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 5.111000000002086e-06, 5.409999999997361e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.374999999996967e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 8.916000000004642e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 7.444000000002282e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.264000000001882e-06, 5.409999999997361e-07, 7.138999999996287e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 1.0250000000003312e-05, 4.7199999999442133e-07, 8.028000000000202e-06, 5.420000000061487e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 5.9589999999998255e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:31.767" endtime="20201112 10:14:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.758" endtime="20201112 10:14:31.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.789" level="INFO">${RESULT} = [{'time': 0.037435944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037441569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.780" endtime="20201112 10:14:31.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:31.819" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:31.791" endtime="20201112 10:14:31.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:31.827" endtime="20201112 10:14:31.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.835" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 10:14:31.832" endtime="20201112 10:14:31.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.821" endtime="20201112 10:14:31.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.844" endtime="20201112 10:14:31.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.852" endtime="20201112 10:14:31.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.848" endtime="20201112 10:14:31.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.840" endtime="20201112 10:14:31.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.243" endtime="20201112 10:14:31.878"></status>
</kw>
<msg timestamp="20201112 10:14:31.878" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.897" endtime="20201112 10:14:31.908"></status>
</kw>
<msg timestamp="20201112 10:14:31.909" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.894" endtime="20201112 10:14:31.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.911" endtime="20201112 10:14:31.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.917" endtime="20201112 10:14:31.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.887" endtime="20201112 10:14:31.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.882" endtime="20201112 10:14:31.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.940" endtime="20201112 10:14:32.272"></status>
</kw>
<msg timestamp="20201112 10:14:32.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035327111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035327653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.937" endtime="20201112 10:14:32.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035327111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035327653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.281" endtime="20201112 10:14:32.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.300" endtime="20201112 10:14:32.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.930" endtime="20201112 10:14:32.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.925" endtime="20201112 10:14:32.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.317" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:32.315" endtime="20201112 10:14:32.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.328" level="INFO">VALUE: [{'time': 0.035327111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035327653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035338431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0777999999996013e-05, 'source_diff': 1.0777999999996013e-05}, {'time': 0.035338903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035346042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.035346514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035352819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.035353292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035362347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.035362819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5000000000045e-06, 'source_diff': 4.5000000000045e-06}, {'time': 0.035367792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035376931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035377403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035385375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.035385847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035394764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.035395236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035403319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000005947e-06, 'source_diff': 8.083000000005947e-06}, {'time': 0.035403792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035410153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.035410694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035415139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.035415681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035421264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.035421736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035428458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.035428931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.0354365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.035436972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035445042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.07000000000585e-06, 'source_diff': 8.07000000000585e-06}, {'time': 0.035445514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035450472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.035450944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035460181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.237000000002216e-06, 'source_diff': 9.237000000002216e-06}, {'time': 0.035460653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035470028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.035470569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035476361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.035476833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035487611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.035488083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035498361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.035498833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035507125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035507597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035517458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035517931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035526042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.035526514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035535097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.035535569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035545958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035546431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035553875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999995343e-06, 'source_diff': 7.443999999995343e-06}, {'time': 0.035554347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035562806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035568083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.035568556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.035576472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03558425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035584722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035594111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.035594653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035599069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.035599542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035603833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.035604306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035612278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.03561275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035619486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035619958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035626889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.035627361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035634417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.035634889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999995123e-06, 'source_diff': 8.999999999995123e-06}, {'time': 0.035644361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035651944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035652417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035661306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.035661778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035669333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.035669806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035677472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.035677944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035686042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.035686514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035691042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.035691514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035699181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.035699653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035710292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.035710833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035718597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035719069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035728486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.035728958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:32.319" endtime="20201112 10:14:32.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.309" endtime="20201112 10:14:32.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:32.389" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:32.334" endtime="20201112 10:14:32.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.398" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:32.396" endtime="20201112 10:14:32.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.407" level="INFO">VALUE: {'sourceeventsource_diff': [0, 5.419999999992098e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.7199999999442133e-07, 4.5000000000045e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7300000000083386e-07, 6.360999999996397e-06, 5.409999999997361e-07, 4.4449999999987555e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 8.07000000000585e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 9.374999999998967e-06, 5.409999999997361e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.443999999995343e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 7.444000000002282e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.388999999998537e-06, 5.419999999992098e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7300000000083386e-07, 7.971999999994983e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 8.999999999995123e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 1.0638999999999788e-05, 5.409999999997361e-07, 7.764000000000382e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07], 'time': [0.035327111, 0.035327653, 0.035338431, 0.035338903, 0.035346042, 0.035346514, 0.035352819, 0.035353292, 0.035362347, 0.035362819, 0.035367319, 0.035367792, 0.035376931, 0.035377403, 0.035385375, 0.035385847, 0.035394764, 0.035395236, 0.035403319, 0.035403792, 0.035410153, 0.035410694, 0.035415139, 0.035415681, 0.035421264, 0.035421736, 0.035428458, 0.035428931, 0.0354365, 0.035436972, 0.035445042, 0.035445514, 0.035450472, 0.035450944, 0.035460181, 0.035460653, 0.035470028, 0.035470569, 0.035476361, 0.035476833, 0.035487611, 0.035488083, 0.035498361, 0.035498833, 0.035507125, 0.035507597, 0.035517458, 0.035517931, 0.035526042, 0.035526514, 0.035535097, 0.035535569, 0.035545958, 0.035546431, 0.035553875, 0.035554347, 0.035562333, 0.035562806, 0.035568083, 0.035568556, 0.035576, 0.035576472, 0.03558425, 0.035584722, 0.035594111, 0.035594653, 0.035599069, 0.035599542, 0.035603833, 0.035604306, 0.035612278, 0.03561275, 0.035619486, 0.035619958, 0.035626889, 0.035627361, 0.035634417, 0.035634889, 0.035643889, 0.035644361, 0.035651944, 0.035652417, 0.035661306, 0.035661778, 0.035669333, 0.035669806, 0.035677472, 0.035677944, 0.035686042, 0.035686514, 0.035691042, 0.035691514, 0.035699181, 0.035699653, 0.035710292, 0.035710833, 0.035718597, 0.035719069, 0.035728486, 0.035728958], 'diff': [0, 5.419999999992098e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.7199999999442133e-07, 4.5000000000045e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7300000000083386e-07, 6.360999999996397e-06, 5.409999999997361e-07, 4.4449999999987555e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 8.07000000000585e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 9.374999999998967e-06, 5.409999999997361e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 7.443999999995343e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 7.444000000002282e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.388999999998537e-06, 5.419999999992098e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7300000000083386e-07, 7.971999999994983e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 8.999999999995123e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 1.0638999999999788e-05, 5.409999999997361e-07, 7.764000000000382e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:32.401" endtime="20201112 10:14:32.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.391" endtime="20201112 10:14:32.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.421" level="INFO">${RESULT} = [{'time': 0.035327653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035338903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.413" endtime="20201112 10:14:32.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:32.452" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:32.424" endtime="20201112 10:14:32.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.462" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:32.459" endtime="20201112 10:14:32.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.467" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:32.464" endtime="20201112 10:14:32.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.453" endtime="20201112 10:14:32.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.475" endtime="20201112 10:14:32.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.484" endtime="20201112 10:14:32.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.479" endtime="20201112 10:14:32.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.471" endtime="20201112 10:14:32.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.879" endtime="20201112 10:14:32.509"></status>
</kw>
<msg timestamp="20201112 10:14:32.510" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.529" endtime="20201112 10:14:32.539"></status>
</kw>
<msg timestamp="20201112 10:14:32.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.526" endtime="20201112 10:14:32.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.547" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.543" endtime="20201112 10:14:32.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.549" endtime="20201112 10:14:32.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.519" endtime="20201112 10:14:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.514" endtime="20201112 10:14:32.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.572" endtime="20201112 10:14:32.905"></status>
</kw>
<msg timestamp="20201112 10:14:32.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035375806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035376278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.568" endtime="20201112 10:14:32.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035375806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035376278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.914" endtime="20201112 10:14:32.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.933" endtime="20201112 10:14:32.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.561" endtime="20201112 10:14:32.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.557" endtime="20201112 10:14:32.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.949" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:32.947" endtime="20201112 10:14:32.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.961" level="INFO">VALUE: [{'time': 0.035375806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035376278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035383111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.035383583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035391056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472999999993957e-06, 'source_diff': 7.472999999993957e-06}, {'time': 0.035391528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035402417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.035402889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035409611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.035410083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035416917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.035417389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035422028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.0354225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.035431375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035442083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.035442556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.035451944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035459389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.035459861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035469, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035469472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.035476347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035487153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.035487625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035493194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.035493667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035498639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.035499111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03550425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.035504722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035510194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035510667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035516583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999994703e-06, 'source_diff': 5.915999999994703e-06}, {'time': 0.035517056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035523347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.035523819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035530986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.035531458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035541819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.035542292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035546944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.651999999993883e-06, 'source_diff': 4.651999999993883e-06}, {'time': 0.035547417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035554444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.035554917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035565083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.035565556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035574458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902000000005073e-06, 'source_diff': 8.902000000005073e-06}, {'time': 0.035574931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035584264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.035584736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035591167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.035591639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.035596736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035607347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.035607819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035618181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.035618653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035626875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.035627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.08400000000342e-06, 'source_diff': 6.08400000000342e-06}, {'time': 0.035633903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035639278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.03563975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2500000000052505e-06, 'source_diff': 5.2500000000052505e-06}, {'time': 0.035645472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035653653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.035654125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035664333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.035664875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035669931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.035670403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035679861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.035680333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035690694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.035691167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035700944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.77699999999554e-06, 'source_diff': 9.77699999999554e-06}, {'time': 0.035701417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035709583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.035710056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035719097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.035719569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035725347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.035725819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035733486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.035733958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035744556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597999999993613e-05, 'source_diff': 1.0597999999993613e-05}, {'time': 0.035745028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035751972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.035752444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035761028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.0357615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03576625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.035766722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035777222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.035777694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:32.952" endtime="20201112 10:14:32.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.941" endtime="20201112 10:14:32.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:33.020" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:32.967" endtime="20201112 10:14:33.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.029" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:33.027" endtime="20201112 10:14:33.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.038" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.472999999993957e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 5.915999999994703e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 4.651999999993883e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 8.902000000005073e-06, 4.7299999999389497e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7199999999442133e-07, 6.08400000000342e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 5.2500000000052505e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 5.05600000000328e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 8.166000000003892e-06, 4.7299999999389497e-07, 9.041000000001298e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0597999999993613e-05, 4.720000000013602e-07, 6.944000000001782e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07], 'time': [0.035375806, 0.035376278, 0.035383111, 0.035383583, 0.035391056, 0.035391528, 0.035402417, 0.035402889, 0.035409611, 0.035410083, 0.035416917, 0.035417389, 0.035422028, 0.0354225, 0.035430903, 0.035431375, 0.035442083, 0.035442556, 0.035451472, 0.035451944, 0.035459389, 0.035459861, 0.035469, 0.035469472, 0.035475875, 0.035476347, 0.035487153, 0.035487625, 0.035493194, 0.035493667, 0.035498639, 0.035499111, 0.03550425, 0.035504722, 0.035510194, 0.035510667, 0.035516583, 0.035517056, 0.035523347, 0.035523819, 0.035530986, 0.035531458, 0.035541819, 0.035542292, 0.035546944, 0.035547417, 0.035554444, 0.035554917, 0.035565083, 0.035565556, 0.035574458, 0.035574931, 0.035584264, 0.035584736, 0.035591167, 0.035591639, 0.035596264, 0.035596736, 0.035607347, 0.035607819, 0.035618181, 0.035618653, 0.035626875, 0.035627347, 0.035633431, 0.035633903, 0.035639278, 0.03563975, 0.035645, 0.035645472, 0.035653653, 0.035654125, 0.035664333, 0.035664875, 0.035669931, 0.035670403, 0.035679861, 0.035680333, 0.035690694, 0.035691167, 0.035700944, 0.035701417, 0.035709583, 0.035710056, 0.035719097, 0.035719569, 0.035725347, 0.035725819, 0.035733486, 0.035733958, 0.035744556, 0.035745028, 0.035751972, 0.035752444, 0.035761028, 0.0357615, 0.03576625, 0.035766722, 0.035777222, 0.035777694], 'diff': [0, 4.7199999999442133e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.472999999993957e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 5.915999999994703e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 4.651999999993883e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 8.902000000005073e-06, 4.7299999999389497e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7199999999442133e-07, 6.08400000000342e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 5.2500000000052505e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 5.05600000000328e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 8.166000000003892e-06, 4.7299999999389497e-07, 9.041000000001298e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0597999999993613e-05, 4.720000000013602e-07, 6.944000000001782e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:33.031" endtime="20201112 10:14:33.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.022" endtime="20201112 10:14:33.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.052" level="INFO">${RESULT} = [{'time': 0.035376278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035383583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:33.043" endtime="20201112 10:14:33.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:33.083" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:33.055" endtime="20201112 10:14:33.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.093" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:33.091" endtime="20201112 10:14:33.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.098" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:33.095" endtime="20201112 10:14:33.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.085" endtime="20201112 10:14:33.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.107" endtime="20201112 10:14:33.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.115" endtime="20201112 10:14:33.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.111" endtime="20201112 10:14:33.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.103" endtime="20201112 10:14:33.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.511" endtime="20201112 10:14:33.141"></status>
</kw>
<msg timestamp="20201112 10:14:33.141" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.163" endtime="20201112 10:14:33.173"></status>
</kw>
<msg timestamp="20201112 10:14:33.174" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.160" endtime="20201112 10:14:33.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.176" endtime="20201112 10:14:33.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.183" endtime="20201112 10:14:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.152" endtime="20201112 10:14:33.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.145" endtime="20201112 10:14:33.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.206" endtime="20201112 10:14:33.545"></status>
</kw>
<msg timestamp="20201112 10:14:33.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037745236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037745778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.203" endtime="20201112 10:14:33.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037745236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037745778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.554" endtime="20201112 10:14:33.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.574" endtime="20201112 10:14:33.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.195" endtime="20201112 10:14:33.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.191" endtime="20201112 10:14:33.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:33.588" endtime="20201112 10:14:33.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.601" level="INFO">VALUE: [{'time': 0.037745236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037745778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037749986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.037750458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037761333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.037761806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037767819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.037768292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037777403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.037777875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.037786347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.037793944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037803917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999996457e-06, 'source_diff': 9.972999999996457e-06}, {'time': 0.037804389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037814944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0555000000002368e-05, 'source_diff': 1.0555000000002368e-05}, {'time': 0.037815486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037825306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.037825778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037830958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.037831431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037836986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5550000000043065e-06, 'source_diff': 5.5550000000043065e-06}, {'time': 0.037837458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037845125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.037845597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037850972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037851444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037860681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.237000000002216e-06, 'source_diff': 9.237000000002216e-06}, {'time': 0.037861153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037867458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.037867931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037877264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.037877736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037887097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037887569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037891986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.037892458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037901056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.59800000000549e-06, 'source_diff': 8.59800000000549e-06}, {'time': 0.037901528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037910458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.037910931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037916194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.262999999998408e-06, 'source_diff': 5.262999999998408e-06}, {'time': 0.037916667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037921819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.037922292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037927556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037928028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037934764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037935236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037942167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.037942639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037948639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037949111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037953417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.037953889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037963556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.037964028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037968958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.037969431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.037980292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037990042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.037990514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038001417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.038001889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038011764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000006406e-06, 'source_diff': 9.875000000006406e-06}, {'time': 0.038012236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038022806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0570000000001412e-05, 'source_diff': 1.0570000000001412e-05}, {'time': 0.038023278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038028444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038028917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038033861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038034333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038042528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.038043, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.038048431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038053278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.03805375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038059431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.038059903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038067472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038067944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038078014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.038078486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038085306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.038085778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038090944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038091417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038098875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.038099347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038105653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.038106125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038114736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.038115208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8200000000056e-06, 'source_diff': 7.8200000000056e-06}, {'time': 0.038123569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999993567e-06, 'source_diff': 6.194999999993567e-06}, {'time': 0.038130236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:33.592" endtime="20201112 10:14:33.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.582" endtime="20201112 10:14:33.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:33.660" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:33.607" endtime="20201112 10:14:33.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.669" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:33.667" endtime="20201112 10:14:33.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.678" level="INFO">VALUE: {'sourceeventsource_diff': [0, 5.419999999992098e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7300000000083386e-07, 6.012999999999158e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 7.125000000003656e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 1.0555000000002368e-05, 5.419999999992098e-07, 9.820000000000662e-06, 4.7199999999442133e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 5.5550000000043065e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999442133e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.931000000001686e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 5.681000000000436e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 7.8200000000056e-06, 5.409999999997361e-07, 6.194999999993567e-06, 4.720000000013602e-07], 'time': [0.037745236, 0.037745778, 0.037749986, 0.037750458, 0.037761333, 0.037761806, 0.037767819, 0.037768292, 0.037777403, 0.037777875, 0.037785875, 0.037786347, 0.037793472, 0.037793944, 0.037803917, 0.037804389, 0.037814944, 0.037815486, 0.037825306, 0.037825778, 0.037830958, 0.037831431, 0.037836986, 0.037837458, 0.037845125, 0.037845597, 0.037850972, 0.037851444, 0.037860681, 0.037861153, 0.037867458, 0.037867931, 0.037877264, 0.037877736, 0.037887097, 0.037887569, 0.037891986, 0.037892458, 0.037901056, 0.037901528, 0.037910458, 0.037910931, 0.037916194, 0.037916667, 0.037921819, 0.037922292, 0.037927556, 0.037928028, 0.037934764, 0.037935236, 0.037942167, 0.037942639, 0.037948639, 0.037949111, 0.037953417, 0.037953889, 0.037963556, 0.037964028, 0.037968958, 0.037969431, 0.037979819, 0.037980292, 0.037990042, 0.037990514, 0.038001417, 0.038001889, 0.038011764, 0.038012236, 0.038022806, 0.038023278, 0.038028444, 0.038028917, 0.038033861, 0.038034333, 0.038042528, 0.038043, 0.038047958, 0.038048431, 0.038053278, 0.03805375, 0.038059431, 0.038059903, 0.038067472, 0.038067944, 0.038078014, 0.038078486, 0.038085306, 0.038085778, 0.038090944, 0.038091417, 0.038098875, 0.038099347, 0.038105653, 0.038106125, 0.038114736, 0.038115208, 0.038123028, 0.038123569, 0.038129764, 0.038130236], 'diff': [0, 5.419999999992098e-07, 4.207999999998602e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7300000000083386e-07, 6.012999999999158e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 7.125000000003656e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 1.0555000000002368e-05, 5.419999999992098e-07, 9.820000000000662e-06, 4.7199999999442133e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 5.5550000000043065e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.7199999999442133e-07, 8.59800000000549e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.931000000001686e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 5.681000000000436e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 7.8200000000056e-06, 5.409999999997361e-07, 6.194999999993567e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:33.672" endtime="20201112 10:14:33.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.662" endtime="20201112 10:14:33.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.693" level="INFO">${RESULT} = [{'time': 0.037745778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037750458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.684" endtime="20201112 10:14:33.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:33.723" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:33.695" endtime="20201112 10:14:33.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.734" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:33.731" endtime="20201112 10:14:33.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.739" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:33.736" endtime="20201112 10:14:33.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.725" endtime="20201112 10:14:33.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.748" endtime="20201112 10:14:33.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.756" endtime="20201112 10:14:33.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.752" endtime="20201112 10:14:33.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.744" endtime="20201112 10:14:33.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.142" endtime="20201112 10:14:33.782"></status>
</kw>
<msg timestamp="20201112 10:14:33.782" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.802" endtime="20201112 10:14:33.812"></status>
</kw>
<msg timestamp="20201112 10:14:33.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.798" endtime="20201112 10:14:33.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.816" endtime="20201112 10:14:33.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.822" endtime="20201112 10:14:33.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.791" endtime="20201112 10:14:33.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.787" endtime="20201112 10:14:33.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.844" endtime="20201112 10:14:34.176"></status>
</kw>
<msg timestamp="20201112 10:14:34.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035555319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035555792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.841" endtime="20201112 10:14:34.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035555319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035555792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.186" endtime="20201112 10:14:34.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.205" endtime="20201112 10:14:34.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.834" endtime="20201112 10:14:34.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.830" endtime="20201112 10:14:34.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.221" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:34.219" endtime="20201112 10:14:34.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.232" level="INFO">VALUE: [{'time': 0.035555319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035555792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035561056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035561528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035568569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.035569042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035575667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035576139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035583403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035583875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035588917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.035589389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035598319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.035598792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035605097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3050000000050566e-06, 'source_diff': 6.3050000000050566e-06}, {'time': 0.035605569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035613333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035613806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035621792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035622264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035633639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035638583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.035639056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.035647722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035652764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.04200000000371e-06, 'source_diff': 5.04200000000371e-06}, {'time': 0.035653306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.035661389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035665708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.035666181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035672486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3050000000050566e-06, 'source_diff': 6.3050000000050566e-06}, {'time': 0.035672958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035678736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.035679208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035686194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.035686736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035694194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035694667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035703917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.035704389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035714528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.035715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035719792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.035720319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.270000000001662e-07, 'source_diff': 5.270000000001662e-07}, {'time': 0.035729972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.035730444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.035739319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035748861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035749333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035754597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035755069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035760972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.035761444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035767014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999996411e-06, 'source_diff': 5.569999999996411e-06}, {'time': 0.035767486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035772125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035772597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035779639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035780111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035790597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.035791069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035797181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111999999995621e-06, 'source_diff': 6.111999999995621e-06}, {'time': 0.035797653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035803347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.035803819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035812722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035813194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035822639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.035823111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.035829778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035836444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.035836917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035843208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.035843681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035854361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.035854833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035864667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.035865208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035873778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.03587425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035878597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999994827e-06, 'source_diff': 4.346999999994827e-06}, {'time': 0.035879139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.035883792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035892611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.035893083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035903153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.035903625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.035913944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035922444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.035922917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035928597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.035929069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035937042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.035937514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:34.223" endtime="20201112 10:14:34.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.213" endtime="20201112 10:14:34.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:34.293" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:34.238" endtime="20201112 10:14:34.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.302" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:34.300" endtime="20201112 10:14:34.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.312" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.930000000004212e-06, 4.7299999999389497e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 5.409999999997361e-07, 5.04200000000371e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999442133e-07, 4.79200000000346e-06, 5.270000000001662e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 6.666000000002392e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 8.569999999999411e-06, 4.720000000013602e-07, 4.346999999994827e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.7199999999442133e-07], 'time': [0.035555319, 0.035555792, 0.035561056, 0.035561528, 0.035568569, 0.035569042, 0.035575667, 0.035576139, 0.035583403, 0.035583875, 0.035588917, 0.035589389, 0.035598319, 0.035598792, 0.035605097, 0.035605569, 0.035613333, 0.035613806, 0.035621792, 0.035622264, 0.035633167, 0.035633639, 0.035638583, 0.035639056, 0.035647181, 0.035647722, 0.035652764, 0.035653306, 0.035660917, 0.035661389, 0.035665708, 0.035666181, 0.035672486, 0.035672958, 0.035678736, 0.035679208, 0.035686194, 0.035686736, 0.035694194, 0.035694667, 0.035703917, 0.035704389, 0.035714528, 0.035715, 0.035719792, 0.035720319, 0.035729972, 0.035730444, 0.035738847, 0.035739319, 0.035748861, 0.035749333, 0.035754597, 0.035755069, 0.035760972, 0.035761444, 0.035767014, 0.035767486, 0.035772125, 0.035772597, 0.035779639, 0.035780111, 0.035790597, 0.035791069, 0.035797181, 0.035797653, 0.035803347, 0.035803819, 0.035812722, 0.035813194, 0.035822639, 0.035823111, 0.035829306, 0.035829778, 0.035836444, 0.035836917, 0.035843208, 0.035843681, 0.035854361, 0.035854833, 0.035864667, 0.035865208, 0.035873778, 0.03587425, 0.035878597, 0.035879139, 0.035883319, 0.035883792, 0.035892611, 0.035893083, 0.035903153, 0.035903625, 0.035913472, 0.035913944, 0.035922444, 0.035922917, 0.035928597, 0.035929069, 0.035937042, 0.035937514], 'diff': [0, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.930000000004212e-06, 4.7299999999389497e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 5.409999999997361e-07, 5.04200000000371e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999442133e-07, 4.79200000000346e-06, 5.270000000001662e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.569999999996411e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 6.666000000002392e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 8.569999999999411e-06, 4.720000000013602e-07, 4.346999999994827e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:34.305" endtime="20201112 10:14:34.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.295" endtime="20201112 10:14:34.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.326" level="INFO">${RESULT} = [{'time': 0.035555792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035561528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:34.317" endtime="20201112 10:14:34.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:34.356" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:34.328" endtime="20201112 10:14:34.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.366" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:34.364" endtime="20201112 10:14:34.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.372" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.270000000001662e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 10:14:34.368" endtime="20201112 10:14:34.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.358" endtime="20201112 10:14:34.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.380" endtime="20201112 10:14:34.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.388" endtime="20201112 10:14:34.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.384" endtime="20201112 10:14:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.376" endtime="20201112 10:14:34.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.783" endtime="20201112 10:14:34.414"></status>
</kw>
<msg timestamp="20201112 10:14:34.414" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.433" endtime="20201112 10:14:34.445"></status>
</kw>
<msg timestamp="20201112 10:14:34.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.430" endtime="20201112 10:14:34.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.452" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.448" endtime="20201112 10:14:34.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.455" endtime="20201112 10:14:34.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.423" endtime="20201112 10:14:34.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.419" endtime="20201112 10:14:34.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.477" endtime="20201112 10:14:34.825"></status>
</kw>
<msg timestamp="20201112 10:14:34.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.474" endtime="20201112 10:14:34.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.834" endtime="20201112 10:14:34.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.854" endtime="20201112 10:14:34.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.467" endtime="20201112 10:14:34.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.463" endtime="20201112 10:14:34.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.870" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:34.867" endtime="20201112 10:14:34.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.881" level="INFO">VALUE: [{'time': 0.035243347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035253819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.035254361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.035263306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035268792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035269264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035274611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.035275083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035281819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035282292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.035289292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035299347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.035299819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035310056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999996277e-05, 'source_diff': 1.0236999999996277e-05}, {'time': 0.035310597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035315625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.035316097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035322542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.035323014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035330972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.035331444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035338681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2370000000002155e-06, 'source_diff': 7.2370000000002155e-06}, {'time': 0.035339153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035345569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416000000002142e-06, 'source_diff': 6.416000000002142e-06}, {'time': 0.035346042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035351153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035356333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.179999999993523e-06, 'source_diff': 5.179999999993523e-06}, {'time': 0.035356806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035363125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.035363597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035372806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.209000000003076e-06, 'source_diff': 9.209000000003076e-06}, {'time': 0.035373278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035382917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.035383389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035393042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.035393514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035399097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.035399569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.035406486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035411833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.035412306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035418708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.035419181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.035428056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035434889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035435361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035445431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.035445903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035450958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.035451431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035462333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.035462806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035472903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.035473444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035480069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035480542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035487375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.035487847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035497403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.035497875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035502333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.035502806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388000000003002e-06, 'source_diff': 6.388000000003002e-06}, {'time': 0.035509667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0355165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035516972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035521319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.035521861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035531292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.035531764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035540708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.035541181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035546319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.035546792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035556139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035556611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035566361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.035566833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035575361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.035575833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035580944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035589444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.035589917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035598611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.035599083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035609681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.035610153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035617375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.035617847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035624583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035625056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035632403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.035632875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:34.872" endtime="20201112 10:14:34.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.862" endtime="20201112 10:14:34.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:34.940" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:34.887" endtime="20201112 10:14:34.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.949" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:34.947" endtime="20201112 10:14:34.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.958" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 9.999999999996123e-06, 5.419999999992098e-07, 8.403000000004046e-06, 5.419999999992098e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.346999999995827e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.720000000013602e-07, 1.0236999999996277e-05, 5.409999999997361e-07, 5.02800000000414e-06, 4.7199999999442133e-07, 6.445000000000756e-06, 4.720000000013602e-07, 7.958000000002352e-06, 4.7199999999442133e-07, 7.2370000000002155e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.179999999993523e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 9.209000000003076e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0097000000000578e-05, 5.409999999997361e-07, 6.625000000003156e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 6.388000000003002e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.347000000001766e-06, 5.419999999992098e-07, 9.430999999997247e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 5.138000000001752e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 8.694000000003532e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 7.222000000001172e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07], 'time': [0.035243347, 0.035243819, 0.035253819, 0.035254361, 0.035262764, 0.035263306, 0.035268792, 0.035269264, 0.035274611, 0.035275083, 0.035281819, 0.035282292, 0.035288819, 0.035289292, 0.035299347, 0.035299819, 0.035310056, 0.035310597, 0.035315625, 0.035316097, 0.035322542, 0.035323014, 0.035330972, 0.035331444, 0.035338681, 0.035339153, 0.035345569, 0.035346042, 0.035350681, 0.035351153, 0.035356333, 0.035356806, 0.035363125, 0.035363597, 0.035372806, 0.035373278, 0.035382917, 0.035383389, 0.035393042, 0.035393514, 0.035399097, 0.035399569, 0.035405944, 0.035406486, 0.035411833, 0.035412306, 0.035418708, 0.035419181, 0.035427583, 0.035428056, 0.035434889, 0.035435361, 0.035445431, 0.035445903, 0.035450958, 0.035451431, 0.035462333, 0.035462806, 0.035472903, 0.035473444, 0.035480069, 0.035480542, 0.035487375, 0.035487847, 0.035497403, 0.035497875, 0.035502333, 0.035502806, 0.035509194, 0.035509667, 0.0355165, 0.035516972, 0.035521319, 0.035521861, 0.035531292, 0.035531764, 0.035540708, 0.035541181, 0.035546319, 0.035546792, 0.035556139, 0.035556611, 0.035566361, 0.035566833, 0.035575361, 0.035575833, 0.035580472, 0.035580944, 0.035589444, 0.035589917, 0.035598611, 0.035599083, 0.035609681, 0.035610153, 0.035617375, 0.035617847, 0.035624583, 0.035625056, 0.035632403, 0.035632875], 'diff': [0, 4.720000000013602e-07, 9.999999999996123e-06, 5.419999999992098e-07, 8.403000000004046e-06, 5.419999999992098e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.346999999995827e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.720000000013602e-07, 1.0236999999996277e-05, 5.409999999997361e-07, 5.02800000000414e-06, 4.7199999999442133e-07, 6.445000000000756e-06, 4.720000000013602e-07, 7.958000000002352e-06, 4.7199999999442133e-07, 7.2370000000002155e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7300000000083386e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.179999999993523e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 9.209000000003076e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0097000000000578e-05, 5.409999999997361e-07, 6.625000000003156e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 6.388000000003002e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.347000000001766e-06, 5.419999999992098e-07, 9.430999999997247e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 5.138000000001752e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 8.694000000003532e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 7.222000000001172e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:34.951" endtime="20201112 10:14:34.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.942" endtime="20201112 10:14:34.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.973" level="INFO">${RESULT} = [{'time': 0.035243819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035254361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.963" endtime="20201112 10:14:34.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:35.003" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:34.975" endtime="20201112 10:14:35.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:35.011" endtime="20201112 10:14:35.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.018" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:35.015" endtime="20201112 10:14:35.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.005" endtime="20201112 10:14:35.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.027" endtime="20201112 10:14:35.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.035" endtime="20201112 10:14:35.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.031" endtime="20201112 10:14:35.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.022" endtime="20201112 10:14:35.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.415" endtime="20201112 10:14:35.061"></status>
</kw>
<msg timestamp="20201112 10:14:35.061" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.082" endtime="20201112 10:14:35.092"></status>
</kw>
<msg timestamp="20201112 10:14:35.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.079" endtime="20201112 10:14:35.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.096" endtime="20201112 10:14:35.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.102" endtime="20201112 10:14:35.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.070" endtime="20201112 10:14:35.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.066" endtime="20201112 10:14:35.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.125" endtime="20201112 10:14:35.466"></status>
</kw>
<msg timestamp="20201112 10:14:35.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.122" endtime="20201112 10:14:35.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.475" endtime="20201112 10:14:35.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.495" endtime="20201112 10:14:35.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.115" endtime="20201112 10:14:35.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.110" endtime="20201112 10:14:35.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.511" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:35.508" endtime="20201112 10:14:35.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.522" level="INFO">VALUE: [{'time': 0.036892208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036901389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036901861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036910681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.036911153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999996233e-06, 'source_diff': 9.221999999996233e-06}, {'time': 0.036920847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036929917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.036930458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.036937125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036948028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.0369485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036955958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036956431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036962639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.036963111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036972444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036972917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036980486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036980958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036988917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.036989389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036995514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.036995986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037006653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.037007125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037017611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.037018083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037027847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037028319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037034625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.037035097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037042347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037042819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037047764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.037048236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037053306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.037053778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037060708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999995273e-06, 'source_diff': 6.929999999995273e-06}, {'time': 0.037061181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037071667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.037072139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037077514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037077986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037086583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037087056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037093375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.037093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037099944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.037100417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037108597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.037109069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.037118139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037123944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.037124417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03713175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.037132222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.037140153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037146986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037147458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037153569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037154042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037159194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.037159667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037165875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037166347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03717525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037175722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037184542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.037185014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037192931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.037193472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037199986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037200458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037210736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.037211208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037218681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.037219153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000005557e-06, 'source_diff': 6.805000000005557e-06}, {'time': 0.037226431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037234, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.037234472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037240569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.037241042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037251889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.037252431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037263042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.037263514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.037270472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037279292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.037279764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037284208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037284681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037289958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.037290431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:35.513" endtime="20201112 10:14:35.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.503" endtime="20201112 10:14:35.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:35.582" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:35.528" endtime="20201112 10:14:35.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.591" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:35.589" endtime="20201112 10:14:35.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.600" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7299999999389497e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 9.069999999999911e-06, 5.409999999997361e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.959000000001826e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 6.929999999995273e-06, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 7.916999999996177e-06, 5.409999999997361e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.473000000000896e-06, 4.7199999999442133e-07, 6.805000000005557e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 1.0847000000001328e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 6.485999999999992e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07], 'time': [0.036892208, 0.036892681, 0.036901389, 0.036901861, 0.036910681, 0.036911153, 0.036920375, 0.036920847, 0.036929917, 0.036930458, 0.036936653, 0.036937125, 0.036948028, 0.0369485, 0.036955958, 0.036956431, 0.036962639, 0.036963111, 0.036972444, 0.036972917, 0.036980486, 0.036980958, 0.036988917, 0.036989389, 0.036995514, 0.036995986, 0.037006653, 0.037007125, 0.037017611, 0.037018083, 0.037027847, 0.037028319, 0.037034625, 0.037035097, 0.037042347, 0.037042819, 0.037047764, 0.037048236, 0.037053306, 0.037053778, 0.037060708, 0.037061181, 0.037071667, 0.037072139, 0.037077514, 0.037077986, 0.037086583, 0.037087056, 0.037093375, 0.037093847, 0.037099944, 0.037100417, 0.037108597, 0.037109069, 0.037117667, 0.037118139, 0.037123944, 0.037124417, 0.03713175, 0.037132222, 0.037139681, 0.037140153, 0.037146986, 0.037147458, 0.037153569, 0.037154042, 0.037159194, 0.037159667, 0.037165875, 0.037166347, 0.03717525, 0.037175722, 0.037184542, 0.037185014, 0.037192931, 0.037193472, 0.037199986, 0.037200458, 0.037210736, 0.037211208, 0.037218681, 0.037219153, 0.037225958, 0.037226431, 0.037234, 0.037234472, 0.037240569, 0.037241042, 0.037251889, 0.037252431, 0.037263042, 0.037263514, 0.03727, 0.037270472, 0.037279292, 0.037279764, 0.037284208, 0.037284681, 0.037289958, 0.037290431], 'diff': [0, 4.7299999999389497e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 9.069999999999911e-06, 5.409999999997361e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.959000000001826e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 6.929999999995273e-06, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 7.916999999996177e-06, 5.409999999997361e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.473000000000896e-06, 4.7199999999442133e-07, 6.805000000005557e-06, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 1.0847000000001328e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 6.485999999999992e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:35.593" endtime="20201112 10:14:35.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.584" endtime="20201112 10:14:35.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.614" level="INFO">${RESULT} = [{'time': 0.036892681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036901861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:35.606" endtime="20201112 10:14:35.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:35.646" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:35.616" endtime="20201112 10:14:35.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.656" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:35.654" endtime="20201112 10:14:35.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.661" level="INFO">VALUE: [4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:14:35.658" endtime="20201112 10:14:35.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.648" endtime="20201112 10:14:35.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.670" endtime="20201112 10:14:35.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.678" endtime="20201112 10:14:35.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.674" endtime="20201112 10:14:35.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.665" endtime="20201112 10:14:35.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.062" endtime="20201112 10:14:35.703"></status>
</kw>
<msg timestamp="20201112 10:14:35.704" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.723" endtime="20201112 10:14:35.734"></status>
</kw>
<msg timestamp="20201112 10:14:35.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.720" endtime="20201112 10:14:35.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.741" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.737" endtime="20201112 10:14:35.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.743" endtime="20201112 10:14:35.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.713" endtime="20201112 10:14:35.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.708" endtime="20201112 10:14:35.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.766" endtime="20201112 10:14:36.098"></status>
</kw>
<msg timestamp="20201112 10:14:36.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035543986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.763" endtime="20201112 10:14:36.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035543986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.107" endtime="20201112 10:14:36.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.126" endtime="20201112 10:14:36.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.756" endtime="20201112 10:14:36.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.751" endtime="20201112 10:14:36.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.143" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:36.140" endtime="20201112 10:14:36.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.154" level="INFO">VALUE: [{'time': 0.035543986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035544458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.035550111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035557764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.035558236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0355635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035563972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03557175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035572222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035582708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.035583181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035589806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035590278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035595222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.035595694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035600972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.035601444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035608375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999994747e-06, 'source_diff': 6.930999999994747e-06}, {'time': 0.035608847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035617, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000003796e-06, 'source_diff': 8.153000000003796e-06}, {'time': 0.035617542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035628194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.035628667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035636556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.035637028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035641972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.035642444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035651167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722999999995207e-06, 'source_diff': 8.722999999995207e-06}, {'time': 0.035651639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035660958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.035661431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035668889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035669361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035680208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035689153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.035689625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035697889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999993943e-06, 'source_diff': 8.263999999993943e-06}, {'time': 0.035698361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.035705042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035712625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035713097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035719597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035720069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035728167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.035728639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035735986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.035736458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035740986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.035741458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035749542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.08400000000542e-06, 'source_diff': 8.08400000000542e-06}, {'time': 0.035750014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035755375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.035755847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035761333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035761806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035769069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.035769542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.035775472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035783972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.035784444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035791694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035792167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035798167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035798639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035809153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.035809694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035819139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.035819611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035826958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.035827431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035837708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.035838181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035846167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035846639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035855861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.035856333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035866736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000006046e-05, 'source_diff': 1.0403000000006046e-05}, {'time': 0.035867208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035873917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.035874389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035884667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.035885139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035890403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035890875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035899806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.035900278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035909708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.035910181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035915333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.035915806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035924847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.035925319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035935583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.035936056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035942875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.035943347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:36.145" endtime="20201112 10:14:36.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.134" endtime="20201112 10:14:36.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:36.215" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:36.161" endtime="20201112 10:14:36.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.224" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:36.222" endtime="20201112 10:14:36.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.233" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.652999999996357e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 8.153000000003796e-06, 5.419999999992098e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.888999999997037e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 5.409999999997361e-07, 9.444999999996817e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 7.986000000001492e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 6.709000000000576e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07], 'time': [0.035543986, 0.035544458, 0.035549569, 0.035550111, 0.035557764, 0.035558236, 0.0355635, 0.035563972, 0.03557175, 0.035572222, 0.035582708, 0.035583181, 0.035589806, 0.035590278, 0.035595222, 0.035595694, 0.035600972, 0.035601444, 0.035608375, 0.035608847, 0.035617, 0.035617542, 0.035628194, 0.035628667, 0.035636556, 0.035637028, 0.035641972, 0.035642444, 0.035651167, 0.035651639, 0.035660958, 0.035661431, 0.035668889, 0.035669361, 0.035679736, 0.035680208, 0.035689153, 0.035689625, 0.035697889, 0.035698361, 0.035704569, 0.035705042, 0.035712625, 0.035713097, 0.035719597, 0.035720069, 0.035728167, 0.035728639, 0.035735986, 0.035736458, 0.035740986, 0.035741458, 0.035749542, 0.035750014, 0.035755375, 0.035755847, 0.035761333, 0.035761806, 0.035769069, 0.035769542, 0.035775, 0.035775472, 0.035783972, 0.035784444, 0.035791694, 0.035792167, 0.035798167, 0.035798639, 0.035809153, 0.035809694, 0.035819139, 0.035819611, 0.035826958, 0.035827431, 0.035837708, 0.035838181, 0.035846167, 0.035846639, 0.035855861, 0.035856333, 0.035866736, 0.035867208, 0.035873917, 0.035874389, 0.035884667, 0.035885139, 0.035890403, 0.035890875, 0.035899806, 0.035900278, 0.035909708, 0.035910181, 0.035915333, 0.035915806, 0.035924847, 0.035925319, 0.035935583, 0.035936056, 0.035942875, 0.035943347], 'diff': [0, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.652999999996357e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 8.153000000003796e-06, 5.419999999992098e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.888999999997037e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 5.409999999997361e-07, 9.444999999996817e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 7.986000000001492e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 6.709000000000576e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:36.227" endtime="20201112 10:14:36.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.217" endtime="20201112 10:14:36.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.248" level="INFO">${RESULT} = [{'time': 0.035544458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035550111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.239" endtime="20201112 10:14:36.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:36.278" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:36.250" endtime="20201112 10:14:36.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.288" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:36.286" endtime="20201112 10:14:36.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.294" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:36.291" endtime="20201112 10:14:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.280" endtime="20201112 10:14:36.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.302" endtime="20201112 10:14:36.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.311" endtime="20201112 10:14:36.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.306" endtime="20201112 10:14:36.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.298" endtime="20201112 10:14:36.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.705" endtime="20201112 10:14:36.336"></status>
</kw>
<msg timestamp="20201112 10:14:36.336" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.356" endtime="20201112 10:14:36.366"></status>
</kw>
<msg timestamp="20201112 10:14:36.367" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.352" endtime="20201112 10:14:36.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.369" endtime="20201112 10:14:36.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.375" endtime="20201112 10:14:36.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.345" endtime="20201112 10:14:36.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.341" endtime="20201112 10:14:36.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.400" endtime="20201112 10:14:36.733"></status>
</kw>
<msg timestamp="20201112 10:14:36.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035292708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035293181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.397" endtime="20201112 10:14:36.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035292708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035293181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.743" endtime="20201112 10:14:36.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.762" endtime="20201112 10:14:36.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.388" endtime="20201112 10:14:36.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.383" endtime="20201112 10:14:36.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.778" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:36.776" endtime="20201112 10:14:36.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.789" level="INFO">VALUE: [{'time': 0.035292708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035293181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035302528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035303, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035309931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.035310403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035318639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.035319181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035325069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888000000002502e-06, 'source_diff': 5.888000000002502e-06}, {'time': 0.035325542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.035336722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035345444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.035345917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035355056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.035355528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035360889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.035361361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035367486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.035367958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.035377847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035383958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.035384431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035388944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.035389417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035399917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.035400389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035406167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.035406639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035417556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0917000000006116e-05, 'source_diff': 1.0917000000006116e-05}, {'time': 0.035418028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035428931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035429403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035438333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.035438806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035446042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999993803e-06, 'source_diff': 7.235999999993803e-06}, {'time': 0.035446514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035457319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.035457792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035467875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.035468347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035475056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.035475528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035480917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.035481389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035487472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.035487944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03549225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.035492722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035499583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.035500056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035504472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.035504944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035513444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035513917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035522111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.035522583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035531306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722999999995207e-06, 'source_diff': 8.722999999995207e-06}, {'time': 0.035531778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035542056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.035542528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035550194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.035550667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035556986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.035557458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03556575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035566222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035576403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.035576875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035583542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.035584083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035593111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.035593583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035601889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.035602361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035611903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035612375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035619417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035619889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035628389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035628861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035638667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.035639208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035649931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0723000000004146e-05, 'source_diff': 1.0723000000004146e-05}, {'time': 0.035650472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035657292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.035657764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035664639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.035665181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035675875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.035676347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035686028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000004436e-06, 'source_diff': 9.681000000004436e-06}, {'time': 0.0356865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035692472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.035692944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035700319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.035700792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035710847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0054999999994929e-05, 'source_diff': 1.0054999999994929e-05}, {'time': 0.035711319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:36.780" endtime="20201112 10:14:36.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.770" endtime="20201112 10:14:36.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:36.848" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:36.795" endtime="20201112 10:14:36.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.858" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:36.855" endtime="20201112 10:14:36.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.867" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 8.236000000001742e-06, 5.419999999992098e-07, 5.888000000002502e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 9.417000000004616e-06, 4.7199999999442133e-07, 6.111000000003086e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.7300000000083386e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 6.667000000001866e-06, 5.409999999997361e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 9.806000000001092e-06, 5.409999999997361e-07, 1.0723000000004146e-05, 5.409999999997361e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.874999999996467e-06, 5.419999999992098e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 9.681000000004436e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 1.0054999999994929e-05, 4.720000000013602e-07], 'time': [0.035292708, 0.035293181, 0.035302528, 0.035303, 0.035309931, 0.035310403, 0.035318639, 0.035319181, 0.035325069, 0.035325542, 0.03533625, 0.035336722, 0.035345444, 0.035345917, 0.035355056, 0.035355528, 0.035360889, 0.035361361, 0.035367486, 0.035367958, 0.035377375, 0.035377847, 0.035383958, 0.035384431, 0.035388944, 0.035389417, 0.035399917, 0.035400389, 0.035406167, 0.035406639, 0.035417556, 0.035418028, 0.035428931, 0.035429403, 0.035438333, 0.035438806, 0.035446042, 0.035446514, 0.035457319, 0.035457792, 0.035467875, 0.035468347, 0.035475056, 0.035475528, 0.035480917, 0.035481389, 0.035487472, 0.035487944, 0.03549225, 0.035492722, 0.035499583, 0.035500056, 0.035504472, 0.035504944, 0.035513444, 0.035513917, 0.035522111, 0.035522583, 0.035531306, 0.035531778, 0.035542056, 0.035542528, 0.035550194, 0.035550667, 0.035556986, 0.035557458, 0.03556575, 0.035566222, 0.035576403, 0.035576875, 0.035583542, 0.035584083, 0.035593111, 0.035593583, 0.035601889, 0.035602361, 0.035611903, 0.035612375, 0.035619417, 0.035619889, 0.035628389, 0.035628861, 0.035638667, 0.035639208, 0.035649931, 0.035650472, 0.035657292, 0.035657764, 0.035664639, 0.035665181, 0.035675875, 0.035676347, 0.035686028, 0.0356865, 0.035692472, 0.035692944, 0.035700319, 0.035700792, 0.035710847, 0.035711319], 'diff': [0, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 8.236000000001742e-06, 5.419999999992098e-07, 5.888000000002502e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 9.417000000004616e-06, 4.7199999999442133e-07, 6.111000000003086e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.7300000000083386e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 6.667000000001866e-06, 5.409999999997361e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 9.806000000001092e-06, 5.409999999997361e-07, 1.0723000000004146e-05, 5.409999999997361e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.874999999996467e-06, 5.419999999992098e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 9.681000000004436e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 1.0054999999994929e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:36.860" endtime="20201112 10:14:36.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.850" endtime="20201112 10:14:36.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.881" level="INFO">${RESULT} = [{'time': 0.035293181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035303, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:36.872" endtime="20201112 10:14:36.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:36.911" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:36.883" endtime="20201112 10:14:36.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.921" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:36.919" endtime="20201112 10:14:36.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.926" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:36.923" endtime="20201112 10:14:36.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.913" endtime="20201112 10:14:36.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.935" endtime="20201112 10:14:36.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.945" endtime="20201112 10:14:36.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.939" endtime="20201112 10:14:36.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.931" endtime="20201112 10:14:36.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.338" endtime="20201112 10:14:36.970"></status>
</kw>
<msg timestamp="20201112 10:14:36.971" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.990" endtime="20201112 10:14:37.000"></status>
</kw>
<msg timestamp="20201112 10:14:37.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.986" endtime="20201112 10:14:37.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.004" endtime="20201112 10:14:37.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.010" endtime="20201112 10:14:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.979" endtime="20201112 10:14:37.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.975" endtime="20201112 10:14:37.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.033" endtime="20201112 10:14:37.372"></status>
</kw>
<msg timestamp="20201112 10:14:37.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.029" endtime="20201112 10:14:37.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.382" endtime="20201112 10:14:37.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.401" endtime="20201112 10:14:37.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.022" endtime="20201112 10:14:37.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.018" endtime="20201112 10:14:37.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.417" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:37.414" endtime="20201112 10:14:37.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.428" level="INFO">VALUE: [{'time': 0.035369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035375722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.035376194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035384611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.035385083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035392, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.035392472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035397528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.035398, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035403389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.035403861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035410458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.035410931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035418722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.035419194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.035430458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035436028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.0354365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035447181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.035447653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035455944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.035456417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035464611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.035465083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035472958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035473431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035481722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.035482194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035489333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.035489806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035497569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763000000000908e-06, 'source_diff': 7.763000000000908e-06}, {'time': 0.035498042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035508139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.035508611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035517625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.035518097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035526375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.035526847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035537222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035537694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035544736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035545208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035550153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.035550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035561542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035562014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035566944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.035567417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.0355775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.035577972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.035586, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035590986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.035591528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035596542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.01400000000457e-06, 'source_diff': 5.01400000000457e-06}, {'time': 0.035597083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035606708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.035607181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035613708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.035614181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035622986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.035623458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035633653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000004506e-05, 'source_diff': 1.0195000000004506e-05}, {'time': 0.035634125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035644694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0568999999994999e-05, 'source_diff': 1.0568999999994999e-05}, {'time': 0.035645167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035655375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.035655917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.035660708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035667222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.035667694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035676083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.035676556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8190000000051265e-06, 'source_diff': 6.8190000000051265e-06}, {'time': 0.035683917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035691861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999995843e-06, 'source_diff': 7.943999999995843e-06}, {'time': 0.035692333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035701958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.035702431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035712708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.035713181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035723764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.035724236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035730125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.035730597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035736389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.035736861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035745625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035754125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.035754597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035759153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.035759625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035767278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.03576775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035777097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035777569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:37.419" endtime="20201112 10:14:37.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.409" endtime="20201112 10:14:37.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:37.489" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:37.434" endtime="20201112 10:14:37.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.499" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:37.496" endtime="20201112 10:14:37.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.508" level="INFO">VALUE: {'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 6.917000000002116e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 5.57000000000335e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 8.291000000000548e-06, 4.7299999999389497e-07, 8.194000000003032e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 4.930000000000212e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.985999999998492e-06, 5.419999999992098e-07, 5.01400000000457e-06, 5.409999999997361e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999442133e-07, 1.0195000000004506e-05, 4.720000000013602e-07, 1.0568999999994999e-05, 4.7300000000083386e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 4.318999999995687e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 6.8190000000051265e-06, 5.419999999992098e-07, 7.943999999995843e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07], 'time': [0.035369139, 0.035369611, 0.035375722, 0.035376194, 0.035384611, 0.035385083, 0.035392, 0.035392472, 0.035397528, 0.035398, 0.035403389, 0.035403861, 0.035410458, 0.035410931, 0.035418722, 0.035419194, 0.035429986, 0.035430458, 0.035436028, 0.0354365, 0.035447181, 0.035447653, 0.035455944, 0.035456417, 0.035464611, 0.035465083, 0.035472958, 0.035473431, 0.035481722, 0.035482194, 0.035489333, 0.035489806, 0.035497569, 0.035498042, 0.035508139, 0.035508611, 0.035517625, 0.035518097, 0.035526375, 0.035526847, 0.035537222, 0.035537694, 0.035544736, 0.035545208, 0.035550153, 0.035550625, 0.035561542, 0.035562014, 0.035566944, 0.035567417, 0.0355775, 0.035577972, 0.035585528, 0.035586, 0.035590986, 0.035591528, 0.035596542, 0.035597083, 0.035606708, 0.035607181, 0.035613708, 0.035614181, 0.035622986, 0.035623458, 0.035633653, 0.035634125, 0.035644694, 0.035645167, 0.035655375, 0.035655917, 0.035660236, 0.035660708, 0.035667222, 0.035667694, 0.035676083, 0.035676556, 0.035683375, 0.035683917, 0.035691861, 0.035692333, 0.035701958, 0.035702431, 0.035712708, 0.035713181, 0.035723764, 0.035724236, 0.035730125, 0.035730597, 0.035736389, 0.035736861, 0.035745153, 0.035745625, 0.035754125, 0.035754597, 0.035759153, 0.035759625, 0.035767278, 0.03576775, 0.035777097, 0.035777569], 'diff': [0, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 6.917000000002116e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 5.57000000000335e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 8.291000000000548e-06, 4.7299999999389497e-07, 8.194000000003032e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 4.930000000000212e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.985999999998492e-06, 5.419999999992098e-07, 5.01400000000457e-06, 5.409999999997361e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999442133e-07, 1.0195000000004506e-05, 4.720000000013602e-07, 1.0568999999994999e-05, 4.7300000000083386e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 4.318999999995687e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 6.8190000000051265e-06, 5.419999999992098e-07, 7.943999999995843e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:37.501" endtime="20201112 10:14:37.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.491" endtime="20201112 10:14:37.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.522" level="INFO">${RESULT} = [{'time': 0.035369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035376194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.513" endtime="20201112 10:14:37.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:37.552" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:37.524" endtime="20201112 10:14:37.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.562" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:37.560" endtime="20201112 10:14:37.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.567" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:37.564" endtime="20201112 10:14:37.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.554" endtime="20201112 10:14:37.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.576" endtime="20201112 10:14:37.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.584" endtime="20201112 10:14:37.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.580" endtime="20201112 10:14:37.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.571" endtime="20201112 10:14:37.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.972" endtime="20201112 10:14:37.609"></status>
</kw>
<msg timestamp="20201112 10:14:37.610" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.629" endtime="20201112 10:14:37.639"></status>
</kw>
<msg timestamp="20201112 10:14:37.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.626" endtime="20201112 10:14:37.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.643" endtime="20201112 10:14:37.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.649" endtime="20201112 10:14:37.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.619" endtime="20201112 10:14:37.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.614" endtime="20201112 10:14:37.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.672" endtime="20201112 10:14:38.008"></status>
</kw>
<msg timestamp="20201112 10:14:38.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.668" endtime="20201112 10:14:38.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.018" endtime="20201112 10:14:38.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.037" endtime="20201112 10:14:38.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.661" endtime="20201112 10:14:38.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.657" endtime="20201112 10:14:38.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.053" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:38.051" endtime="20201112 10:14:38.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.064" level="INFO">VALUE: [{'time': 0.035243236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035248458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.035248931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035256736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.035257278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035266972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.035267514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035276847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.035277319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035284458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.035284931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035293653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.035294125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035301889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035302361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035310903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.035311444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035321931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0487000000003466e-05, 'source_diff': 1.0487000000003466e-05}, {'time': 0.035322403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035328403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035328875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03533675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035337222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035342389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.035342861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035348861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035349333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035356792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.035357264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035362542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.035363014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035367431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.035367903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035373903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035374375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035380819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.035381292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035387917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035388389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035395194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.035395667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035402931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035403403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035409486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.035409958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.035421236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035425542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.035426014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035434, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035434472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035444847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035445319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035453833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999994193e-06, 'source_diff': 8.513999999994193e-06}, {'time': 0.035454306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035463736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430000000004712e-06, 'source_diff': 9.430000000004712e-06}, {'time': 0.035464208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035471361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.035471833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035478167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.035478639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035483583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.035484056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035494417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.035494889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035501097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.035501569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035510542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.035519028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035526556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.035527028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035534069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.035534542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035543569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.02699999999479e-06, 'source_diff': 9.02699999999479e-06}, {'time': 0.035544042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035552875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.035553347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035560139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.035560681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035567153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.035567625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035574792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.035575264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035580833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.035581306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035591806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.035592278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035600972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.035601444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035611514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069999999993973e-05, 'source_diff': 1.0069999999993973e-05}, {'time': 0.035611986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.035619486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035626014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.035626486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.035635875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:38.055" endtime="20201112 10:14:38.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.045" endtime="20201112 10:14:38.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:38.123" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:38.070" endtime="20201112 10:14:38.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.132" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:38.130" endtime="20201112 10:14:38.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.142" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 4.75000000000475e-06, 4.7299999999389497e-07, 7.804999999999618e-06, 5.420000000061487e-07, 9.693999999997593e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 8.722000000002672e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 5.409999999997361e-07, 1.0487000000003466e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7199999999442133e-07, 7.459000000001326e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.444000000001282e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.7300000000083386e-07, 9.430000000004712e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.014000000000632e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 9.02699999999479e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 5.419999999992098e-07, 6.472000000000422e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.694000000003532e-06, 4.720000000013602e-07, 1.0069999999993973e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07], 'time': [0.035243236, 0.035243708, 0.035248458, 0.035248931, 0.035256736, 0.035257278, 0.035266972, 0.035267514, 0.035276847, 0.035277319, 0.035284458, 0.035284931, 0.035293653, 0.035294125, 0.035301889, 0.035302361, 0.035310903, 0.035311444, 0.035321931, 0.035322403, 0.035328403, 0.035328875, 0.03533675, 0.035337222, 0.035342389, 0.035342861, 0.035348861, 0.035349333, 0.035356792, 0.035357264, 0.035362542, 0.035363014, 0.035367431, 0.035367903, 0.035373903, 0.035374375, 0.035380819, 0.035381292, 0.035387917, 0.035388389, 0.035395194, 0.035395667, 0.035402931, 0.035403403, 0.035409486, 0.035409958, 0.035420764, 0.035421236, 0.035425542, 0.035426014, 0.035434, 0.035434472, 0.035444847, 0.035445319, 0.035453833, 0.035454306, 0.035463736, 0.035464208, 0.035471361, 0.035471833, 0.035478167, 0.035478639, 0.035483583, 0.035484056, 0.035494417, 0.035494889, 0.035501097, 0.035501569, 0.035510069, 0.035510542, 0.035518556, 0.035519028, 0.035526556, 0.035527028, 0.035534069, 0.035534542, 0.035543569, 0.035544042, 0.035552875, 0.035553347, 0.035560139, 0.035560681, 0.035567153, 0.035567625, 0.035574792, 0.035575264, 0.035580833, 0.035581306, 0.035591806, 0.035592278, 0.035600972, 0.035601444, 0.035611514, 0.035611986, 0.035619014, 0.035619486, 0.035626014, 0.035626486, 0.035635403, 0.035635875], 'diff': [0, 4.720000000013602e-07, 4.75000000000475e-06, 4.7299999999389497e-07, 7.804999999999618e-06, 5.420000000061487e-07, 9.693999999997593e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 8.722000000002672e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 5.409999999997361e-07, 1.0487000000003466e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7199999999442133e-07, 7.459000000001326e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.444000000001282e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.7300000000083386e-07, 9.430000000004712e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.014000000000632e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 9.02699999999479e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 5.419999999992098e-07, 6.472000000000422e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.694000000003532e-06, 4.720000000013602e-07, 1.0069999999993973e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:38.135" endtime="20201112 10:14:38.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.125" endtime="20201112 10:14:38.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.156" level="INFO">${RESULT} = [{'time': 0.035243708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035248931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:38.147" endtime="20201112 10:14:38.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:38.186" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:38.158" endtime="20201112 10:14:38.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.196" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:38.194" endtime="20201112 10:14:38.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.201" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 5.420000000061487e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 10:14:38.198" endtime="20201112 10:14:38.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.188" endtime="20201112 10:14:38.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.210" endtime="20201112 10:14:38.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.219" endtime="20201112 10:14:38.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.214" endtime="20201112 10:14:38.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.205" endtime="20201112 10:14:38.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.611" endtime="20201112 10:14:38.245"></status>
</kw>
<msg timestamp="20201112 10:14:38.245" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.266" endtime="20201112 10:14:38.277"></status>
</kw>
<msg timestamp="20201112 10:14:38.278" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.263" endtime="20201112 10:14:38.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.280" endtime="20201112 10:14:38.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.286" endtime="20201112 10:14:38.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.254" endtime="20201112 10:14:38.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.250" endtime="20201112 10:14:38.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.309" endtime="20201112 10:14:38.643"></status>
</kw>
<msg timestamp="20201112 10:14:38.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037453667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.306" endtime="20201112 10:14:38.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037453667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.653" endtime="20201112 10:14:38.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.672" endtime="20201112 10:14:38.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.299" endtime="20201112 10:14:38.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.294" endtime="20201112 10:14:38.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.688" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:38.686" endtime="20201112 10:14:38.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.699" level="INFO">VALUE: [{'time': 0.037453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037453667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037460889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.221999999994233e-06, 'source_diff': 7.221999999994233e-06}, {'time': 0.037461361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037472069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037472542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037480083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.037480556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037487931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.037488403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037497722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.037498194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037503667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.037504139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037512958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037513431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037520056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.037520528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037525486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.037525958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.037533569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037543319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.037543792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037552292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.037552764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037559792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.037560264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037567097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037567569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0375745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999994747e-06, 'source_diff': 6.930999999994747e-06}, {'time': 0.037574972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037585361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037585833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037593083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037593556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037604236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.037604708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037612694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.037613167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037621875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.037622347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037632431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.037632903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037638167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037638639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037645139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.037645611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037655889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037656361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037662472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037662944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037667458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.51400000000407e-06, 'source_diff': 4.51400000000407e-06}, {'time': 0.037667931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037676556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037677028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037685625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037686097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037693667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037694139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037702417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.037702889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037709306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.037709778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037718917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037719389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037725694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.037726167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037730861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.037731403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037739986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000006447e-06, 'source_diff': 8.583000000006447e-06}, {'time': 0.037740458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037749583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.037750056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03775875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.037759222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037767806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037774722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999995703e-06, 'source_diff': 6.915999999995703e-06}, {'time': 0.037775194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037780667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.037781139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.03778625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037795694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.037796167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037804361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.037804833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037810819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.037811292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037817694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.401999999995633e-06, 'source_diff': 6.401999999995633e-06}, {'time': 0.037818167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037823472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.037823944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037834542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.037835083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037844014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.037844486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037849861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037850333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:38.690" endtime="20201112 10:14:38.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.680" endtime="20201112 10:14:38.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:38.759" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:38.705" endtime="20201112 10:14:38.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.769" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:38.766" endtime="20201112 10:14:38.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.778" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.7300000000083386e-07, 7.221999999994233e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 7.375000000003906e-06, 4.7199999999442133e-07, 9.319000000000688e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 7.07000000000485e-06, 5.409999999997361e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.51400000000407e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 4.693999999999532e-06, 5.419999999992098e-07, 8.583000000006447e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7299999999389497e-07, 8.694000000003532e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 6.915999999995703e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 6.401999999995633e-06, 4.7300000000083386e-07, 5.304999999997118e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07], 'time': [0.037453194, 0.037453667, 0.037460889, 0.037461361, 0.037472069, 0.037472542, 0.037480083, 0.037480556, 0.037487931, 0.037488403, 0.037497722, 0.037498194, 0.037503667, 0.037504139, 0.037512958, 0.037513431, 0.037520056, 0.037520528, 0.037525486, 0.037525958, 0.037533028, 0.037533569, 0.037543319, 0.037543792, 0.037552292, 0.037552764, 0.037559792, 0.037560264, 0.037567097, 0.037567569, 0.0375745, 0.037574972, 0.037585361, 0.037585833, 0.037593083, 0.037593556, 0.037604236, 0.037604708, 0.037612694, 0.037613167, 0.037621875, 0.037622347, 0.037632431, 0.037632903, 0.037638167, 0.037638639, 0.037645139, 0.037645611, 0.037655889, 0.037656361, 0.037662472, 0.037662944, 0.037667458, 0.037667931, 0.037676556, 0.037677028, 0.037685625, 0.037686097, 0.037693667, 0.037694139, 0.037702417, 0.037702889, 0.037709306, 0.037709778, 0.037718917, 0.037719389, 0.037725694, 0.037726167, 0.037730861, 0.037731403, 0.037739986, 0.037740458, 0.037749583, 0.037750056, 0.03775875, 0.037759222, 0.037767333, 0.037767806, 0.037774722, 0.037775194, 0.037780667, 0.037781139, 0.037785778, 0.03778625, 0.037795694, 0.037796167, 0.037804361, 0.037804833, 0.037810819, 0.037811292, 0.037817694, 0.037818167, 0.037823472, 0.037823944, 0.037834542, 0.037835083, 0.037844014, 0.037844486, 0.037849861, 0.037850333], 'diff': [0, 4.7300000000083386e-07, 7.221999999994233e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 7.375000000003906e-06, 4.7199999999442133e-07, 9.319000000000688e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 7.07000000000485e-06, 5.409999999997361e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.51400000000407e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 4.693999999999532e-06, 5.419999999992098e-07, 8.583000000006447e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7299999999389497e-07, 8.694000000003532e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 6.915999999995703e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 6.401999999995633e-06, 4.7300000000083386e-07, 5.304999999997118e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:38.771" endtime="20201112 10:14:38.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.761" endtime="20201112 10:14:38.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.792" level="INFO">${RESULT} = [{'time': 0.037453667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037461361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.783" endtime="20201112 10:14:38.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:38.823" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:38.794" endtime="20201112 10:14:38.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.833" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:38.831" endtime="20201112 10:14:38.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.838" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:14:38.835" endtime="20201112 10:14:38.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.825" endtime="20201112 10:14:38.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.847" endtime="20201112 10:14:38.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.855" endtime="20201112 10:14:38.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.851" endtime="20201112 10:14:38.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.842" endtime="20201112 10:14:38.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.246" endtime="20201112 10:14:38.880"></status>
</kw>
<msg timestamp="20201112 10:14:38.881" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.900" endtime="20201112 10:14:38.910"></status>
</kw>
<msg timestamp="20201112 10:14:38.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.897" endtime="20201112 10:14:38.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.914" endtime="20201112 10:14:38.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.920" endtime="20201112 10:14:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.890" endtime="20201112 10:14:38.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.885" endtime="20201112 10:14:38.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.943" endtime="20201112 10:14:39.276"></status>
</kw>
<msg timestamp="20201112 10:14:39.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035312917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035313389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.939" endtime="20201112 10:14:39.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035312917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035313389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.285" endtime="20201112 10:14:39.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.305" endtime="20201112 10:14:39.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.932" endtime="20201112 10:14:39.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.928" endtime="20201112 10:14:39.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.321" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:39.319" endtime="20201112 10:14:39.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.332" level="INFO">VALUE: [{'time': 0.035312917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035313389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035320111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.035320583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035328458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035328931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035338792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035339264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035346528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035357361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999993459e-05, 'source_diff': 1.0360999999993459e-05}, {'time': 0.035357833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.035365889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035373542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.035374014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0353795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035379972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035387222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035387694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035396194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035396667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035402458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035402931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035410472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.035410944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035418722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035419194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035425083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.035425556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035433861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.035434333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035439069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.035439542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035447014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035447486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035457236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.035457708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035467153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.035467625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.035477014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035484569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.035485042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035495028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.0354955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035502931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.035503403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035509403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035509875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035516556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999994497e-06, 'source_diff': 6.680999999994497e-06}, {'time': 0.035517097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035522764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.035523236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035532264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.035532736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035539583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.035540056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035545528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035546, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035550417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.035550889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035560028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.0355605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.035568639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.035578875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035588, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.035588472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035596028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.0355965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035601139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.638999999993787e-06, 'source_diff': 4.638999999993787e-06}, {'time': 0.035601611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035608639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.035609111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035620014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035620486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035626528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.035627069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.035632097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035636375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}, {'time': 0.035636847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035644361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035653389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.035653861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035661847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035662319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03566675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.035667222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035671861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035672333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035682097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.035682569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035687833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.035688306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035697792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999996053e-06, 'source_diff': 9.485999999996053e-06}, {'time': 0.035698333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:39.323" endtime="20201112 10:14:39.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.313" endtime="20201112 10:14:39.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:39.393" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:39.338" endtime="20201112 10:14:39.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.402" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:39.400" endtime="20201112 10:14:39.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.411" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0360999999993459e-05, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 7.653000000003296e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.680999999994497e-06, 5.409999999997361e-07, 5.667000000000866e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.638999999993787e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 6.041999999997771e-06, 5.409999999997361e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.277999999996451e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 5.409999999997361e-07], 'time': [0.035312917, 0.035313389, 0.035320111, 0.035320583, 0.035328458, 0.035328931, 0.035338792, 0.035339264, 0.035346528, 0.035347, 0.035357361, 0.035357833, 0.035365417, 0.035365889, 0.035373542, 0.035374014, 0.0353795, 0.035379972, 0.035387222, 0.035387694, 0.035396194, 0.035396667, 0.035402458, 0.035402931, 0.035410472, 0.035410944, 0.035418722, 0.035419194, 0.035425083, 0.035425556, 0.035433861, 0.035434333, 0.035439069, 0.035439542, 0.035447014, 0.035447486, 0.035457236, 0.035457708, 0.035467153, 0.035467625, 0.035476542, 0.035477014, 0.035484569, 0.035485042, 0.035495028, 0.0354955, 0.035502931, 0.035503403, 0.035509403, 0.035509875, 0.035516556, 0.035517097, 0.035522764, 0.035523236, 0.035532264, 0.035532736, 0.035539583, 0.035540056, 0.035545528, 0.035546, 0.035550417, 0.035550889, 0.035560028, 0.0355605, 0.035568167, 0.035568639, 0.035578403, 0.035578875, 0.035588, 0.035588472, 0.035596028, 0.0355965, 0.035601139, 0.035601611, 0.035608639, 0.035609111, 0.035620014, 0.035620486, 0.035626528, 0.035627069, 0.035631625, 0.035632097, 0.035636375, 0.035636847, 0.035643889, 0.035644361, 0.035653389, 0.035653861, 0.035661847, 0.035662319, 0.03566675, 0.035667222, 0.035671861, 0.035672333, 0.035682097, 0.035682569, 0.035687833, 0.035688306, 0.035697792, 0.035698333], 'diff': [0, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0360999999993459e-05, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 7.653000000003296e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.680999999994497e-06, 5.409999999997361e-07, 5.667000000000866e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.638999999993787e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 6.041999999997771e-06, 5.409999999997361e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.277999999996451e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:39.404" endtime="20201112 10:14:39.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.395" endtime="20201112 10:14:39.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.425" level="INFO">${RESULT} = [{'time': 0.035313389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035320583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.416" endtime="20201112 10:14:39.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:39.455" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:39.427" endtime="20201112 10:14:39.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.466" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:39.463" endtime="20201112 10:14:39.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.471" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 10:14:39.468" endtime="20201112 10:14:39.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.457" endtime="20201112 10:14:39.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.480" endtime="20201112 10:14:39.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.488" endtime="20201112 10:14:39.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.483" endtime="20201112 10:14:39.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.475" endtime="20201112 10:14:39.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.882" endtime="20201112 10:14:39.513"></status>
</kw>
<msg timestamp="20201112 10:14:39.513" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.533" endtime="20201112 10:14:39.545"></status>
</kw>
<msg timestamp="20201112 10:14:39.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.530" endtime="20201112 10:14:39.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.548" endtime="20201112 10:14:39.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.554" endtime="20201112 10:14:39.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.523" endtime="20201112 10:14:39.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.518" endtime="20201112 10:14:39.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.579" endtime="20201112 10:14:39.922"></status>
</kw>
<msg timestamp="20201112 10:14:39.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035400181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.575" endtime="20201112 10:14:39.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035400181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.932" endtime="20201112 10:14:39.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.951" endtime="20201112 10:14:39.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.567" endtime="20201112 10:14:39.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.562" endtime="20201112 10:14:39.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.967" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:39.965" endtime="20201112 10:14:39.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.978" level="INFO">VALUE: [{'time': 0.035400181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035400653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035411389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0736000000004242e-05, 'source_diff': 1.0736000000004242e-05}, {'time': 0.035411931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035420736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.035421208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035432125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035432597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035440472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035440944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035448375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999995247e-06, 'source_diff': 7.430999999995247e-06}, {'time': 0.035448847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035459639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.035460111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035468125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.035468597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035474458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.035474931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035479486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.035479958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035487389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.035487861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.035496014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0355015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035501972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035510556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.035511028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035520806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.035521278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.929999999993273e-06, 'source_diff': 4.929999999993273e-06}, {'time': 0.035526681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035535292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.035535764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035542694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.035543167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035553403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.035553944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035564611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0667000000005866e-05, 'source_diff': 1.0667000000005866e-05}, {'time': 0.035565083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035575986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035576458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03558725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.035587722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0355975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999995013e-06, 'source_diff': 9.777999999995013e-06}, {'time': 0.035597972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035605208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.035605681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035612931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035613403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035623361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.035623833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.03563375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035642681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.035643153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035653097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000004782e-06, 'source_diff': 9.944000000004782e-06}, {'time': 0.035653569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035661375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.035661847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035668444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.035668917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03567525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.035675722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035684514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.035684986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035692611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.035693153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035700778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000004156e-06, 'source_diff': 7.625000000004156e-06}, {'time': 0.03570125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035705583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.035706056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035710583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.035711056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035715833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000004417e-06, 'source_diff': 4.777000000004417e-06}, {'time': 0.035716375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.035722194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035732583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035733056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035739681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035740153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035744597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.444000000006221e-06, 'source_diff': 4.444000000006221e-06}, {'time': 0.035745069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035755014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000004256e-06, 'source_diff': 9.945000000004256e-06}, {'time': 0.035755486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035763569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.035764042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0357685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.035769042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035773236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.035773708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035784, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.035784472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035802347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.035802819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.03581025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:39.969" endtime="20201112 10:14:39.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.959" endtime="20201112 10:14:39.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:40.037" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:39.984" endtime="20201112 10:14:40.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.046" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:40.044" endtime="20201112 10:14:40.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.055" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7199999999442133e-07, 1.0736000000004242e-05, 5.419999999992098e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.430999999995247e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 5.861000000002836e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 4.929999999993273e-06, 4.7300000000083386e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 6.930000000002212e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 5.409999999997361e-07, 1.0667000000005866e-05, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 9.944000000004782e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 7.624999999997217e-06, 5.419999999992098e-07, 7.625000000004156e-06, 4.7199999999442133e-07, 4.333000000002196e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.777000000004417e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 4.444000000006221e-06, 4.7199999999442133e-07, 9.945000000004256e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 5.419999999992098e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.720000000013602e-07, 6.889000000002976e-06, 5.419999999992098e-07], 'time': [0.035400181, 0.035400653, 0.035411389, 0.035411931, 0.035420736, 0.035421208, 0.035432125, 0.035432597, 0.035440472, 0.035440944, 0.035448375, 0.035448847, 0.035459639, 0.035460111, 0.035468125, 0.035468597, 0.035474458, 0.035474931, 0.035479486, 0.035479958, 0.035487389, 0.035487861, 0.035495542, 0.035496014, 0.0355015, 0.035501972, 0.035510556, 0.035511028, 0.035520806, 0.035521278, 0.035526208, 0.035526681, 0.035535292, 0.035535764, 0.035542694, 0.035543167, 0.035553403, 0.035553944, 0.035564611, 0.035565083, 0.035575986, 0.035576458, 0.03558725, 0.035587722, 0.0355975, 0.035597972, 0.035605208, 0.035605681, 0.035612931, 0.035613403, 0.035623361, 0.035623833, 0.035633278, 0.03563375, 0.035642681, 0.035643153, 0.035653097, 0.035653569, 0.035661375, 0.035661847, 0.035668444, 0.035668917, 0.03567525, 0.035675722, 0.035684514, 0.035684986, 0.035692611, 0.035693153, 0.035700778, 0.03570125, 0.035705583, 0.035706056, 0.035710583, 0.035711056, 0.035715833, 0.035716375, 0.035721722, 0.035722194, 0.035732583, 0.035733056, 0.035739681, 0.035740153, 0.035744597, 0.035745069, 0.035755014, 0.035755486, 0.035763569, 0.035764042, 0.0357685, 0.035769042, 0.035773236, 0.035773708, 0.035784, 0.035784472, 0.035794333, 0.035794806, 0.035802347, 0.035802819, 0.035809708, 0.03581025], 'diff': [0, 4.7199999999442133e-07, 1.0736000000004242e-05, 5.419999999992098e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.430999999995247e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 5.861000000002836e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 4.929999999993273e-06, 4.7300000000083386e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 6.930000000002212e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 5.409999999997361e-07, 1.0667000000005866e-05, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 9.944000000004782e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 7.624999999997217e-06, 5.419999999992098e-07, 7.625000000004156e-06, 4.7199999999442133e-07, 4.333000000002196e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.777000000004417e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 4.444000000006221e-06, 4.7199999999442133e-07, 9.945000000004256e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 5.419999999992098e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.720000000013602e-07, 6.889000000002976e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:40.049" endtime="20201112 10:14:40.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.039" endtime="20201112 10:14:40.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.070" level="INFO">${RESULT} = [{'time': 0.035400653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035411931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.061" endtime="20201112 10:14:40.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:40.100" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:40.072" endtime="20201112 10:14:40.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.110" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:40.108" endtime="20201112 10:14:40.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.115" level="INFO">VALUE: [4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 10:14:40.112" endtime="20201112 10:14:40.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.102" endtime="20201112 10:14:40.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.124" endtime="20201112 10:14:40.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.133" endtime="20201112 10:14:40.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.128" endtime="20201112 10:14:40.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.119" endtime="20201112 10:14:40.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.515" endtime="20201112 10:14:40.159"></status>
</kw>
<msg timestamp="20201112 10:14:40.159" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.179" endtime="20201112 10:14:40.191"></status>
</kw>
<msg timestamp="20201112 10:14:40.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.175" endtime="20201112 10:14:40.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.194" endtime="20201112 10:14:40.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.200" endtime="20201112 10:14:40.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.168" endtime="20201112 10:14:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.164" endtime="20201112 10:14:40.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.223" endtime="20201112 10:14:40.568"></status>
</kw>
<msg timestamp="20201112 10:14:40.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035613778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03561425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:40.219" endtime="20201112 10:14:40.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035613778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03561425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:40.578" endtime="20201112 10:14:40.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.597" endtime="20201112 10:14:40.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.212" endtime="20201112 10:14:40.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.208" endtime="20201112 10:14:40.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.613" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:40.610" endtime="20201112 10:14:40.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.624" level="INFO">VALUE: [{'time': 0.035613778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03561425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03562275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035623222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035633403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.035633875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035642778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.03564325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035650806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.035651278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035657292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.035657764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035668194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.035668736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035679306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0570000000001412e-05, 'source_diff': 1.0570000000001412e-05}, {'time': 0.035679778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035685472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.035685944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5000000000045e-06, 'source_diff': 4.5000000000045e-06}, {'time': 0.035690917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035696389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035696861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03570725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035707722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035713917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.035714389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035724083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.035724625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.035732125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035738014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.035738486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035743958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035744431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035748861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.035749333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035756278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.03575675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035764681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035771083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.035771556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035782347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.035782819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035787125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.035787597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035796111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.035796583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035801, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.035801472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035811653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.035812125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035816986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.035817458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035826569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.035827042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035832833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035833306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035837944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.637999999994313e-06, 'source_diff': 4.637999999994313e-06}, {'time': 0.035838417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035848792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035849264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035854125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.035854597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035862542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035871125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.035871597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035876444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.035876917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035881764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.035882236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035892, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.035892472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035897208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.035897681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035906, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.035906472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03591675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.035917222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035923306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.08400000000342e-06, 'source_diff': 6.08400000000342e-06}, {'time': 0.035923778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035931639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.035932111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035939472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.035939944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035946458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.035946931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035953569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6379999999963135e-06, 'source_diff': 6.6379999999963135e-06}, {'time': 0.035954042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.035961847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035968681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.035969153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035978597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.035979069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.035986375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.035993042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}]</msg>
<status status="PASS" starttime="20201112 10:14:40.615" endtime="20201112 10:14:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.605" endtime="20201112 10:14:40.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:40.685" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:40.630" endtime="20201112 10:14:40.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.694" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:40.692" endtime="20201112 10:14:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.703" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 5.419999999992098e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 5.694000000000532e-06, 4.7199999999442133e-07, 4.5000000000045e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 9.693999999997593e-06, 5.420000000061487e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 4.637999999994313e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7299999999389497e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.08400000000342e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 6.124999999995717e-06, 5.420000000061487e-07], 'time': [0.035613778, 0.03561425, 0.03562275, 0.035623222, 0.035633403, 0.035633875, 0.035642778, 0.03564325, 0.035650806, 0.035651278, 0.035657292, 0.035657764, 0.035668194, 0.035668736, 0.035679306, 0.035679778, 0.035685472, 0.035685944, 0.035690444, 0.035690917, 0.035696389, 0.035696861, 0.03570725, 0.035707722, 0.035713917, 0.035714389, 0.035724083, 0.035724625, 0.035731653, 0.035732125, 0.035738014, 0.035738486, 0.035743958, 0.035744431, 0.035748861, 0.035749333, 0.035756278, 0.03575675, 0.035764208, 0.035764681, 0.035771083, 0.035771556, 0.035782347, 0.035782819, 0.035787125, 0.035787597, 0.035796111, 0.035796583, 0.035801, 0.035801472, 0.035811653, 0.035812125, 0.035816986, 0.035817458, 0.035826569, 0.035827042, 0.035832833, 0.035833306, 0.035837944, 0.035838417, 0.035848792, 0.035849264, 0.035854125, 0.035854597, 0.035862069, 0.035862542, 0.035871125, 0.035871597, 0.035876444, 0.035876917, 0.035881764, 0.035882236, 0.035892, 0.035892472, 0.035897208, 0.035897681, 0.035906, 0.035906472, 0.03591675, 0.035917222, 0.035923306, 0.035923778, 0.035931639, 0.035932111, 0.035939472, 0.035939944, 0.035946458, 0.035946931, 0.035953569, 0.035954042, 0.035961375, 0.035961847, 0.035968681, 0.035969153, 0.035978597, 0.035979069, 0.035985903, 0.035986375, 0.0359925, 0.035993042], 'diff': [0, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 5.419999999992098e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 5.694000000000532e-06, 4.7199999999442133e-07, 4.5000000000045e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 9.693999999997593e-06, 5.420000000061487e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 6.402000000002572e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 4.637999999994313e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7299999999389497e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.08400000000342e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 7.332999999998258e-06, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 6.124999999995717e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201112 10:14:40.696" endtime="20201112 10:14:40.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.687" endtime="20201112 10:14:40.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.717" level="INFO">${RESULT} = [{'time': 0.03561425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035623222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:40.709" endtime="20201112 10:14:40.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:40.748" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:40.719" endtime="20201112 10:14:40.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:40.755" endtime="20201112 10:14:40.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.763" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201112 10:14:40.760" endtime="20201112 10:14:40.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.749" endtime="20201112 10:14:40.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.772" endtime="20201112 10:14:40.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.780" endtime="20201112 10:14:40.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.775" endtime="20201112 10:14:40.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.767" endtime="20201112 10:14:40.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.161" endtime="20201112 10:14:40.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.037" endtime="20201112 10:14:40.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.816" endtime="20201112 10:14:40.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.812" endtime="20201112 10:14:40.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.809" endtime="20201112 10:14:40.840"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:27.845" endtime="20201112 10:14:40.841" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.859" endtime="20201112 10:14:40.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.856" endtime="20201112 10:14:40.883"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.917" endtime="20201112 10:14:40.938"></status>
</kw>
<msg timestamp="20201112 10:14:40.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.913" endtime="20201112 10:14:40.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.942" endtime="20201112 10:14:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.953" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:40.949" endtime="20201112 10:14:40.953"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:40.905" endtime="20201112 10:14:40.955"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:40.898" endtime="20201112 10:14:40.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.896" endtime="20201112 10:14:40.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:40.965" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:40.964" endtime="20201112 10:14:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.959" endtime="20201112 10:14:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.894" endtime="20201112 10:14:40.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.892" endtime="20201112 10:14:40.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.969" endtime="20201112 10:14:40.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.888" endtime="20201112 10:14:40.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.884" endtime="20201112 10:14:40.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.853" endtime="20201112 10:14:40.976"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:40.980" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.999" endtime="20201112 10:14:41.012"></status>
</kw>
<msg timestamp="20201112 10:14:41.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.996" endtime="20201112 10:14:41.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.015" endtime="20201112 10:14:41.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.021" endtime="20201112 10:14:41.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.989" endtime="20201112 10:14:41.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.984" endtime="20201112 10:14:41.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.044" endtime="20201112 10:14:41.396"></status>
</kw>
<msg timestamp="20201112 10:14:41.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130975167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.041" endtime="20201112 10:14:41.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130975167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.406" endtime="20201112 10:14:41.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.424" endtime="20201112 10:14:41.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.034" endtime="20201112 10:14:41.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.029" endtime="20201112 10:14:41.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.441" level="INFO">${RESULT} = [{'time': 0.130975167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.000000000009e-06, 'source_diff': 9.000000000009e-06}, {'time': 0.130989014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0...</msg>
<status status="PASS" starttime="20201112 10:14:41.432" endtime="20201112 10:14:41.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:41.473" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:41.443" endtime="20201112 10:14:41.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.483" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:41.481" endtime="20201112 10:14:41.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.489" level="INFO">VALUE: [9.000000000009e-06, 9.055999999979525e-06, 8.750000000001812e-06, 8.903000000004546e-06, 8.833000000013635e-06, 8.916999999997177e-06, 9.222000000003172e-06, 9.76299999999597e-06, 8.90299999997679e-06, 9.25000000001619e-06, 9.750000000002812e-06, 9.083000000020824e-06, 9.26400000000882e-06, 8.750000000001812e-06, 8.72200000001655e-06, 9.430000000004712e-06, 8.77800000001483e-06, 8.915999999997704e-06, 9.25000000001619e-06, 8.930999999989808e-06, 9.097000000013455e-06, 9.05600000000728e-06, 9.415999999984326e-06, 9.097999999985174e-06, 9.597999999999551e-06, 9.26400000000882e-06, 9.431000000004186e-06, 9.58400000000692e-06, 9.569999999986534e-06, 9.4169999999838e-06, 8.763999999994443e-06, 9.402999999991168e-06, 9.26400000000882e-06, 9.082999999993069e-06, 9.4169999999838e-06, 9.417000000011555e-06, 8.959000000002826e-06, 8.915999999997704e-06, 9.26400000000882e-06, 9.25000000001619e-06, 8.763999999994443e-06, 9.083999999992542e-06, 9.25000000001619e-06, 8.763999999994443e-06, 9.583000000007447e-06, 9.402999999991168e-06, 9.443999999997343e-06, 9.582999999979691e-06, 9.431000000004186e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.485" endtime="20201112 10:14:41.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.475" endtime="20201112 10:14:41.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.497" endtime="20201112 10:14:41.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.505" endtime="20201112 10:14:41.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.501" endtime="20201112 10:14:41.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.493" endtime="20201112 10:14:41.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.981" endtime="20201112 10:14:41.531"></status>
</kw>
<msg timestamp="20201112 10:14:41.531" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.550" endtime="20201112 10:14:41.562"></status>
</kw>
<msg timestamp="20201112 10:14:41.563" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.547" endtime="20201112 10:14:41.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.565" endtime="20201112 10:14:41.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.572" endtime="20201112 10:14:41.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.540" endtime="20201112 10:14:41.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.535" endtime="20201112 10:14:41.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.594" endtime="20201112 10:14:41.929"></status>
</kw>
<msg timestamp="20201112 10:14:41.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035858514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035867611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.591" endtime="20201112 10:14:41.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035858514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035867611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.938" endtime="20201112 10:14:41.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.957" endtime="20201112 10:14:41.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.584" endtime="20201112 10:14:41.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.580" endtime="20201112 10:14:41.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.974" level="INFO">${RESULT} = [{'time': 0.035867611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.035886653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.965" endtime="20201112 10:14:41.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:42.006" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:41.976" endtime="20201112 10:14:42.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.016" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:42.014" endtime="20201112 10:14:42.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.021" level="INFO">VALUE: [9.096999999999578e-06, 9.610999999999648e-06, 8.929999999997273e-06, 9.582999999993569e-06, 8.764000000001382e-06, 9.083000000000008e-06, 9.583999999999981e-06, 8.750000000001812e-06, 9.416999999997677e-06, 9.583999999999981e-06, 9.069999999999911e-06, 8.764000000001382e-06, 9.583999999999981e-06, 9.389000000005476e-06, 9.388999999998537e-06, 8.930999999996747e-06, 9.610999999999648e-06, 9.277999999994513e-06, 9.431000000004186e-06, 8.750000000001812e-06, 8.931000000003686e-06, 9.152999999997857e-06, 8.764000000001382e-06, 9.416000000005142e-06, 9.583999999999981e-06, 8.764000000001382e-06, 9.583000000000508e-06, 8.916000000004642e-06, 9.583999999999981e-06, 9.360999999999398e-06, 8.723000000002146e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.096999999999578e-06, 9.250000000002312e-06, 8.944999999996317e-06, 9.069999999999911e-06, 9.235999999995803e-06, 8.763999999994443e-06, 8.735999999995303e-06, 9.429999999997773e-06, 9.110999999999148e-06, 8.916999999997177e-06, 9.069999999999911e-06, 8.750000000001812e-06, 9.388999999998537e-06, 9.610999999999648e-06, 9.250000000002312e-06, 8.916000000004642e-06, 8.777000000001478e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.018" endtime="20201112 10:14:42.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.008" endtime="20201112 10:14:42.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.030" endtime="20201112 10:14:42.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.038" endtime="20201112 10:14:42.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.034" endtime="20201112 10:14:42.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.025" endtime="20201112 10:14:42.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.532" endtime="20201112 10:14:42.063"></status>
</kw>
<msg timestamp="20201112 10:14:42.064" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.083" endtime="20201112 10:14:42.095"></status>
</kw>
<msg timestamp="20201112 10:14:42.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.080" endtime="20201112 10:14:42.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.099" endtime="20201112 10:14:42.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.105" endtime="20201112 10:14:42.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.073" endtime="20201112 10:14:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.068" endtime="20201112 10:14:42.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.128" endtime="20201112 10:14:42.462"></status>
</kw>
<msg timestamp="20201112 10:14:42.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036015667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036025264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.124" endtime="20201112 10:14:42.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036015667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036025264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.471" endtime="20201112 10:14:42.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.489" endtime="20201112 10:14:42.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.117" endtime="20201112 10:14:42.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.113" endtime="20201112 10:14:42.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.507" level="INFO">${RESULT} = [{'time': 0.036025264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.036045264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.498" endtime="20201112 10:14:42.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:42.541" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:42.509" endtime="20201112 10:14:42.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.551" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:42.548" endtime="20201112 10:14:42.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.556" level="INFO">VALUE: [9.597000000000078e-06, 9.222000000003172e-06, 9.416999999997677e-06, 8.736000000002242e-06, 9.069000000000438e-06, 9.583999999999981e-06, 8.749999999994873e-06, 8.915999999997704e-06, 8.902999999997607e-06, 9.264000000001882e-06, 9.083999999999481e-06, 9.597000000000078e-06, 9.235999999995803e-06, 9.249999999995373e-06, 9.582999999993569e-06, 9.570000000000412e-06, 9.415999999998204e-06, 9.430999999997247e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.583000000000508e-06, 8.916999999997177e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.444000000004282e-06, 9.250000000002312e-06, 9.431000000004186e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.610999999999648e-06, 9.374999999998967e-06, 9.096999999999578e-06, 9.569000000000938e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.402999999998107e-06, 9.597999999999551e-06, 9.610999999999648e-06, 9.445000000003756e-06, 9.083000000000008e-06, 8.709000000002576e-06, 9.250000000002312e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.249999999995373e-06, 8.749999999994873e-06, 9.458000000003852e-06, 8.750000000001812e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.553" endtime="20201112 10:14:42.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.542" endtime="20201112 10:14:42.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.564" endtime="20201112 10:14:42.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.573" endtime="20201112 10:14:42.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.568" endtime="20201112 10:14:42.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.560" endtime="20201112 10:14:42.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.065" endtime="20201112 10:14:42.598"></status>
</kw>
<msg timestamp="20201112 10:14:42.598" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.618" endtime="20201112 10:14:42.630"></status>
</kw>
<msg timestamp="20201112 10:14:42.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.614" endtime="20201112 10:14:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.637" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.633" endtime="20201112 10:14:42.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.639" endtime="20201112 10:14:42.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.607" endtime="20201112 10:14:42.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.603" endtime="20201112 10:14:42.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.662" endtime="20201112 10:14:42.999"></status>
</kw>
<msg timestamp="20201112 10:14:43.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035795597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035804681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.659" endtime="20201112 10:14:43.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035795597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035804681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.009" endtime="20201112 10:14:43.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.028" endtime="20201112 10:14:43.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.651" endtime="20201112 10:14:43.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.647" endtime="20201112 10:14:43.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.045" level="INFO">${RESULT} = [{'time': 0.035804681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.035818792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.036" endtime="20201112 10:14:43.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:43.075" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:43.047" endtime="20201112 10:14:43.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.087" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:43.083" endtime="20201112 10:14:43.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.092" level="INFO">VALUE: [9.083999999999481e-06, 9.583999999999981e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.597999999999551e-06, 9.249999999995373e-06, 8.750000000001812e-06, 9.083999999999481e-06, 9.597999999999551e-06, 9.096999999999578e-06, 9.764000000002382e-06, 9.250000000002312e-06, 9.583000000000508e-06, 8.902999999997607e-06, 9.429999999997773e-06, 9.401999999998634e-06, 8.930999999996747e-06, 8.930999999996747e-06, 9.583000000000508e-06, 9.083000000000008e-06, 9.597000000000078e-06, 9.417000000004616e-06, 9.263999999994943e-06, 9.416999999997677e-06, 9.416999999997677e-06, 8.875000000005406e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.500000000002562e-06, 9.611999999999121e-06, 9.583000000000508e-06, 8.722000000002672e-06, 8.917000000004116e-06, 8.749999999994873e-06, 8.750000000001812e-06, 9.235999999995803e-06, 9.083000000000008e-06, 9.083000000000008e-06, 8.930999999996747e-06, 8.931000000003686e-06, 9.583000000000508e-06, 9.417000000004616e-06, 8.916000000004642e-06, 9.417000000004616e-06, 9.667000000004866e-06, 9.638999999998787e-06, 9.555000000001368e-06, 9.430999999997247e-06, 9.597000000000078e-06, 8.943999999996843e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.089" endtime="20201112 10:14:43.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.077" endtime="20201112 10:14:43.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.101" endtime="20201112 10:14:43.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.109" endtime="20201112 10:14:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.105" endtime="20201112 10:14:43.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.096" endtime="20201112 10:14:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.600" endtime="20201112 10:14:43.134"></status>
</kw>
<msg timestamp="20201112 10:14:43.135" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.154" endtime="20201112 10:14:43.166"></status>
</kw>
<msg timestamp="20201112 10:14:43.167" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.151" endtime="20201112 10:14:43.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.173" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.170" endtime="20201112 10:14:43.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.176" endtime="20201112 10:14:43.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.144" endtime="20201112 10:14:43.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.139" endtime="20201112 10:14:43.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.199" endtime="20201112 10:14:43.535"></status>
</kw>
<msg timestamp="20201112 10:14:43.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035900417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035909153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.195" endtime="20201112 10:14:43.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035900417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035909153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.545" endtime="20201112 10:14:43.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.563" endtime="20201112 10:14:43.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.188" endtime="20201112 10:14:43.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.184" endtime="20201112 10:14:43.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.581" level="INFO">${RESULT} = [{'time': 0.035909153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.035925083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.572" endtime="20201112 10:14:43.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:43.611" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:43.583" endtime="20201112 10:14:43.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.621" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:43.619" endtime="20201112 10:14:43.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.626" level="INFO">VALUE: [8.736000000002242e-06, 9.249999999995373e-06, 9.416999999997677e-06, 9.570000000000412e-06, 9.264000000001882e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.458000000003852e-06, 9.110999999999148e-06, 9.096999999999578e-06, 9.236000000002742e-06, 9.110999999999148e-06, 9.333000000000258e-06, 9.582999999993569e-06, 9.194999999996567e-06, 9.083000000000008e-06, 8.903000000004546e-06, 9.083999999999481e-06, 8.749999999994873e-06, 9.403000000005046e-06, 8.915999999997704e-06, 9.250000000002312e-06, 9.500000000002562e-06, 8.929999999997273e-06, 9.110999999999148e-06, 9.083000000000008e-06, 9.000000000002062e-06, 8.736000000002242e-06, 9.26299999999547e-06, 8.736000000002242e-06, 8.916999999997177e-06, 8.929999999997273e-06, 9.416999999997677e-06, 9.250000000002312e-06, 9.416999999997677e-06, 8.707999999996163e-06, 9.069999999999911e-06, 9.792000000001522e-06, 8.916999999997177e-06, 8.902999999997607e-06, 8.778000000000952e-06, 8.749999999994873e-06, 9.583000000000508e-06, 9.124999999998717e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.110999999999148e-06, 9.249999999995373e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.623" endtime="20201112 10:14:43.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.613" endtime="20201112 10:14:43.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.636" endtime="20201112 10:14:43.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.644" endtime="20201112 10:14:43.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.640" endtime="20201112 10:14:43.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.630" endtime="20201112 10:14:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.136" endtime="20201112 10:14:43.670"></status>
</kw>
<msg timestamp="20201112 10:14:43.670" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.689" endtime="20201112 10:14:43.701"></status>
</kw>
<msg timestamp="20201112 10:14:43.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.686" endtime="20201112 10:14:43.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.705" endtime="20201112 10:14:43.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.711" endtime="20201112 10:14:43.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.679" endtime="20201112 10:14:43.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.674" endtime="20201112 10:14:43.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.735" endtime="20201112 10:14:44.070"></status>
</kw>
<msg timestamp="20201112 10:14:44.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035862681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035872278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.731" endtime="20201112 10:14:44.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035862681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035872278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.080" endtime="20201112 10:14:44.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.098" endtime="20201112 10:14:44.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.724" endtime="20201112 10:14:44.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.719" endtime="20201112 10:14:44.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.115" level="INFO">${RESULT} = [{'time': 0.035872278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.035891417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.107" endtime="20201112 10:14:44.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:44.146" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:44.118" endtime="20201112 10:14:44.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.156" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:44.154" endtime="20201112 10:14:44.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.161" level="INFO">VALUE: [9.597000000000078e-06, 9.388999999998537e-06, 8.750000000001812e-06, 9.250000000002312e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.083000000000008e-06, 9.264000000001882e-06, 9.181000000003936e-06, 9.570000000000412e-06, 8.749999999994873e-06, 9.083999999999481e-06, 8.973000000002396e-06, 8.749999999994873e-06, 9.416999999997677e-06, 8.763000000001908e-06, 8.915999999997704e-06, 8.694000000003532e-06, 9.083000000000008e-06, 8.902999999997607e-06, 9.152999999997857e-06, 8.901999999998134e-06, 9.083000000000008e-06, 9.597000000000078e-06, 8.763999999994443e-06, 9.083000000000008e-06, 9.444999999996817e-06, 9.570000000000412e-06, 9.152999999997857e-06, 9.236000000002742e-06, 9.416999999997677e-06, 8.764000000001382e-06, 8.958999999995887e-06, 8.902999999997607e-06, 9.249999999995373e-06, 9.443999999997343e-06, 8.902999999997607e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.124999999998717e-06, 9.249999999995373e-06, 8.915999999997704e-06, 9.430999999997247e-06, 9.778000000001952e-06, 9.083999999999481e-06, 9.583999999999981e-06, 9.096999999999578e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 10:14:44.158" endtime="20201112 10:14:44.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.148" endtime="20201112 10:14:44.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.170" endtime="20201112 10:14:44.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.178" endtime="20201112 10:14:44.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.173" endtime="20201112 10:14:44.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.165" endtime="20201112 10:14:44.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.671" endtime="20201112 10:14:44.205"></status>
</kw>
<msg timestamp="20201112 10:14:44.205" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.224" endtime="20201112 10:14:44.236"></status>
</kw>
<msg timestamp="20201112 10:14:44.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.221" endtime="20201112 10:14:44.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.240" endtime="20201112 10:14:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.246" endtime="20201112 10:14:44.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.214" endtime="20201112 10:14:44.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.210" endtime="20201112 10:14:44.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.269" endtime="20201112 10:14:44.605"></status>
</kw>
<msg timestamp="20201112 10:14:44.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035920903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035930208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.266" endtime="20201112 10:14:44.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035920903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035930208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.614" endtime="20201112 10:14:44.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.632" endtime="20201112 10:14:44.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.259" endtime="20201112 10:14:44.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.254" endtime="20201112 10:14:44.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.649" level="INFO">${RESULT} = [{'time': 0.035930208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.035944222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.641" endtime="20201112 10:14:44.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:44.681" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:44.651" endtime="20201112 10:14:44.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:44.689" endtime="20201112 10:14:44.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.696" level="INFO">VALUE: [9.305000000001118e-06, 9.388999999998537e-06, 9.083999999999481e-06, 9.556000000000842e-06, 8.917000000004116e-06, 9.403000000005046e-06, 8.917000000004116e-06, 9.250000000002312e-06, 8.929999999997273e-06, 9.583000000000508e-06, 9.250000000002312e-06, 8.875000000005406e-06, 8.750000000001812e-06, 9.264000000001882e-06, 9.429999999997773e-06, 9.610999999999648e-06, 9.250000000002312e-06, 9.569000000000938e-06, 8.944000000003782e-06, 8.749999999994873e-06, 9.152999999997857e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.417000000004616e-06, 9.430999999997247e-06, 8.915999999997704e-06, 9.083000000000008e-06, 9.429999999997773e-06, 9.277000000001978e-06, 9.430999999997247e-06, 9.250000000002312e-06, 9.416999999997677e-06, 9.236000000002742e-06, 9.264000000001882e-06, 8.903000000004546e-06, 9.083000000000008e-06, 9.819000000001188e-06, 9.096999999999578e-06, 9.264000000001882e-06, 9.416999999997677e-06, 8.931000000003686e-06, 9.415999999998204e-06, 8.792000000000522e-06, 9.693999999997593e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.235999999995803e-06, 8.750000000001812e-06, 9.319000000000688e-06]</msg>
<status status="PASS" starttime="20201112 10:14:44.693" endtime="20201112 10:14:44.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.683" endtime="20201112 10:14:44.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.705" endtime="20201112 10:14:44.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.713" endtime="20201112 10:14:44.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.709" endtime="20201112 10:14:44.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.701" endtime="20201112 10:14:44.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.206" endtime="20201112 10:14:44.739"></status>
</kw>
<msg timestamp="20201112 10:14:44.739" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.760" endtime="20201112 10:14:44.772"></status>
</kw>
<msg timestamp="20201112 10:14:44.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.756" endtime="20201112 10:14:44.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.775" endtime="20201112 10:14:44.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.782" endtime="20201112 10:14:44.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.749" endtime="20201112 10:14:44.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.743" endtime="20201112 10:14:44.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.805" endtime="20201112 10:14:45.140"></status>
</kw>
<msg timestamp="20201112 10:14:45.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037416153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.801" endtime="20201112 10:14:45.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037416153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.150" endtime="20201112 10:14:45.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.168" endtime="20201112 10:14:45.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.794" endtime="20201112 10:14:45.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.790" endtime="20201112 10:14:45.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.185" level="INFO">${RESULT} = [{'time': 0.037416153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037430181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.176" endtime="20201112 10:14:45.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:45.215" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:45.187" endtime="20201112 10:14:45.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:45.223" endtime="20201112 10:14:45.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.231" level="INFO">VALUE: [9.028000000001202e-06, 9.083999999999481e-06, 9.152000000005323e-06, 8.930999999996747e-06, 9.069999999999911e-06, 8.680999999996497e-06, 9.083000000000008e-06, 9.264000000001882e-06, 9.402999999998107e-06, 9.387999999999064e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.750000000001812e-06, 9.416999999997677e-06, 9.249999999995373e-06, 9.583999999999981e-06, 9.610999999999648e-06, 9.264000000001882e-06, 8.888999999998037e-06, 9.429999999997773e-06, 8.931000000003686e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.278000000001452e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.153000000004796e-06, 8.931000000003686e-06, 8.750000000001812e-06, 8.943999999996843e-06, 9.583000000000508e-06, 9.264000000001882e-06, 9.389000000005476e-06, 8.959000000002826e-06, 8.778000000000952e-06, 8.749999999994873e-06, 8.916000000004642e-06, 8.750000000001812e-06, 9.458000000003852e-06, 9.583000000000508e-06, 8.750000000001812e-06, 9.263999999994943e-06, 8.916999999997177e-06, 9.249999999995373e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.556000000000842e-06, 8.778000000000952e-06, 8.930999999996747e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 10:14:45.228" endtime="20201112 10:14:45.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.217" endtime="20201112 10:14:45.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.240" endtime="20201112 10:14:45.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.248" endtime="20201112 10:14:45.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.243" endtime="20201112 10:14:45.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.235" endtime="20201112 10:14:45.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.740" endtime="20201112 10:14:45.273"></status>
</kw>
<msg timestamp="20201112 10:14:45.274" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.293" endtime="20201112 10:14:45.305"></status>
</kw>
<msg timestamp="20201112 10:14:45.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.290" endtime="20201112 10:14:45.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.313" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.309" endtime="20201112 10:14:45.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.315" endtime="20201112 10:14:45.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.283" endtime="20201112 10:14:45.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.278" endtime="20201112 10:14:45.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.340" endtime="20201112 10:14:45.676"></status>
</kw>
<msg timestamp="20201112 10:14:45.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036547958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036557208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.336" endtime="20201112 10:14:45.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036547958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036557208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.685" endtime="20201112 10:14:45.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.704" endtime="20201112 10:14:45.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.329" endtime="20201112 10:14:45.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.325" endtime="20201112 10:14:45.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.721" level="INFO">${RESULT} = [{'time': 0.036557208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036572264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.712" endtime="20201112 10:14:45.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:45.751" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:45.723" endtime="20201112 10:14:45.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:45.759" endtime="20201112 10:14:45.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.767" level="INFO">VALUE: [9.250000000002312e-06, 8.750000000001812e-06, 9.165999999997954e-06, 9.083000000000008e-06, 9.431000000004186e-06, 9.597000000000078e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.249999999995373e-06, 8.736999999994777e-06, 9.415999999998204e-06, 9.250000000002312e-06, 9.360999999999398e-06, 9.583000000000508e-06, 8.832999999999758e-06, 9.097000000006517e-06, 9.236000000002742e-06, 9.555000000001368e-06, 9.458999999996387e-06, 8.749999999994873e-06, 9.417000000004616e-06, 8.750000000001812e-06, 9.278000000001452e-06, 9.471999999996483e-06, 8.763000000001908e-06, 8.916999999997177e-06, 8.750000000001812e-06, 9.277000000001978e-06, 9.416000000005142e-06, 8.916999999997177e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.306000000000592e-06, 9.459000000003326e-06, 8.708000000003102e-06, 8.750000000001812e-06, 9.250000000002312e-06, 9.069000000000438e-06, 9.583000000000508e-06, 8.915999999997704e-06, 9.096999999999578e-06, 8.860999999998898e-06, 9.096999999999578e-06, 9.583000000000508e-06, 8.929999999997273e-06, 8.917000000004116e-06, 9.583000000000508e-06, 9.083000000000008e-06, 9.597000000000078e-06, 9.083999999999481e-06]</msg>
<status status="PASS" starttime="20201112 10:14:45.764" endtime="20201112 10:14:45.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.753" endtime="20201112 10:14:45.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.775" endtime="20201112 10:14:45.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.783" endtime="20201112 10:14:45.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.779" endtime="20201112 10:14:45.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.771" endtime="20201112 10:14:45.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.275" endtime="20201112 10:14:45.809"></status>
</kw>
<msg timestamp="20201112 10:14:45.809" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.829" endtime="20201112 10:14:45.841"></status>
</kw>
<msg timestamp="20201112 10:14:45.842" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.826" endtime="20201112 10:14:45.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.845" endtime="20201112 10:14:45.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.851" endtime="20201112 10:14:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.819" endtime="20201112 10:14:45.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.814" endtime="20201112 10:14:45.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.875" endtime="20201112 10:14:46.211"></status>
</kw>
<msg timestamp="20201112 10:14:46.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036737472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036746389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.872" endtime="20201112 10:14:46.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036737472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036746389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.220" endtime="20201112 10:14:46.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.238" endtime="20201112 10:14:46.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.863" endtime="20201112 10:14:46.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.859" endtime="20201112 10:14:46.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.255" level="INFO">${RESULT} = [{'time': 0.036746389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036760389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.247" endtime="20201112 10:14:46.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:46.286" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:46.258" endtime="20201112 10:14:46.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.295" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:46.293" endtime="20201112 10:14:46.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.301" level="INFO">VALUE: [8.916999999997177e-06, 8.749999999994873e-06, 9.597000000000078e-06, 9.417000000004616e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.597000000000078e-06, 9.305000000001118e-06, 8.846999999999328e-06, 8.750000000001812e-06, 8.931000000003686e-06, 9.416999999997677e-06, 8.736000000002242e-06, 8.750000000001812e-06, 9.054999999993929e-06, 9.429999999997773e-06, 9.597999999999551e-06, 9.069000000000438e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.277999999994513e-06, 9.416000000005142e-06, 9.277000000001978e-06, 9.583999999999981e-06, 8.902999999997607e-06, 9.429999999997773e-06, 9.360999999999398e-06, 9.278000000001452e-06, 8.764000000001382e-06, 9.055000000000868e-06, 8.722999999995207e-06, 8.901999999998134e-06, 9.374999999998967e-06, 9.333000000000258e-06, 9.443999999997343e-06, 9.583999999999981e-06, 9.306000000000592e-06, 9.597999999999551e-06, 9.083000000000008e-06, 9.333999999999731e-06, 9.110999999999148e-06, 9.250000000002312e-06, 9.028000000001202e-06, 9.403000000005046e-06, 9.237000000002216e-06, 9.402999999998107e-06, 9.069000000000438e-06, 9.096999999999578e-06, 9.264000000001882e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201112 10:14:46.298" endtime="20201112 10:14:46.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.287" endtime="20201112 10:14:46.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.310" endtime="20201112 10:14:46.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.318" endtime="20201112 10:14:46.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.313" endtime="20201112 10:14:46.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.305" endtime="20201112 10:14:46.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.810" endtime="20201112 10:14:46.344"></status>
</kw>
<msg timestamp="20201112 10:14:46.344" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.364" endtime="20201112 10:14:46.375"></status>
</kw>
<msg timestamp="20201112 10:14:46.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.360" endtime="20201112 10:14:46.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.379" endtime="20201112 10:14:46.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.385" endtime="20201112 10:14:46.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.353" endtime="20201112 10:14:46.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.349" endtime="20201112 10:14:46.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.408" endtime="20201112 10:14:46.746"></status>
</kw>
<msg timestamp="20201112 10:14:46.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035827083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035836319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.404" endtime="20201112 10:14:46.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035827083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035836319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.756" endtime="20201112 10:14:46.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.774" endtime="20201112 10:14:46.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.397" endtime="20201112 10:14:46.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.393" endtime="20201112 10:14:46.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.791" level="INFO">${RESULT} = [{'time': 0.035836319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.035852458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.782" endtime="20201112 10:14:46.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:46.823" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:46.793" endtime="20201112 10:14:46.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.833" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:46.831" endtime="20201112 10:14:46.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.839" level="INFO">VALUE: [9.235999999995803e-06, 9.401999999998634e-06, 9.624999999999218e-06, 8.931000000003686e-06, 9.250000000002312e-06, 9.415999999998204e-06, 8.750000000001812e-06, 9.221999999996233e-06, 9.028000000001202e-06, 9.264000000001882e-06, 8.930999999996747e-06, 9.583000000000508e-06, 8.915999999997704e-06, 9.249999999995373e-06, 9.443999999997343e-06, 9.597999999999551e-06, 8.916999999997177e-06, 9.167000000004366e-06, 9.569000000000938e-06, 9.430999999997247e-06, 8.902999999997607e-06, 9.249999999995373e-06, 9.125000000005656e-06, 9.416000000005142e-06, 9.264000000001882e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.624999999999218e-06, 8.749999999994873e-06, 9.555000000001368e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.153000000004796e-06, 9.250000000002312e-06, 8.764000000001382e-06, 9.402999999998107e-06, 9.430000000004712e-06, 8.764000000001382e-06, 9.360999999999398e-06, 9.069999999999911e-06, 9.151999999998384e-06, 8.915999999997704e-06, 9.249999999995373e-06, 8.750000000001812e-06, 9.249999999995373e-06, 9.402999999998107e-06, 8.77699999999454e-06, 8.874999999998467e-06, 9.444999999996817e-06, 9.749999999995873e-06]</msg>
<status status="PASS" starttime="20201112 10:14:46.836" endtime="20201112 10:14:46.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.825" endtime="20201112 10:14:46.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.848" endtime="20201112 10:14:46.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.856" endtime="20201112 10:14:46.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.852" endtime="20201112 10:14:46.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.843" endtime="20201112 10:14:46.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.345" endtime="20201112 10:14:46.881"></status>
</kw>
<msg timestamp="20201112 10:14:46.882" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.901" endtime="20201112 10:14:46.913"></status>
</kw>
<msg timestamp="20201112 10:14:46.914" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.898" endtime="20201112 10:14:46.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.920" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.916" endtime="20201112 10:14:46.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.923" endtime="20201112 10:14:46.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.891" endtime="20201112 10:14:46.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.886" endtime="20201112 10:14:46.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.945" endtime="20201112 10:14:47.281"></status>
</kw>
<msg timestamp="20201112 10:14:47.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035781111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035790028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.942" endtime="20201112 10:14:47.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035781111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035790028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.291" endtime="20201112 10:14:47.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.310" endtime="20201112 10:14:47.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.935" endtime="20201112 10:14:47.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.931" endtime="20201112 10:14:47.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.327" level="INFO">${RESULT} = [{'time': 0.035790028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.035808014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.318" endtime="20201112 10:14:47.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:47.358" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:47.329" endtime="20201112 10:14:47.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.368" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:47.366" endtime="20201112 10:14:47.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.374" level="INFO">VALUE: [8.917000000004116e-06, 8.764000000001382e-06, 9.250000000002312e-06, 8.958000000003352e-06, 9.430999999997247e-06, 9.763999999995443e-06, 8.76299999999497e-06, 8.763999999994443e-06, 9.430999999997247e-06, 9.249999999995373e-06, 8.902999999997607e-06, 9.443999999997343e-06, 9.443999999997343e-06, 9.263999999994943e-06, 9.445000000003756e-06, 9.263999999994943e-06, 9.069999999999911e-06, 9.306000000000592e-06, 9.097999999999051e-06, 8.945000000003256e-06, 9.597000000000078e-06, 8.749999999994873e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.430999999997247e-06, 8.737000000001716e-06, 9.583999999999981e-06, 8.763999999994443e-06, 9.055000000000868e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.430999999997247e-06, 9.457999999996913e-06, 9.236000000002742e-06, 9.249999999995373e-06, 8.736000000002242e-06, 9.250000000002312e-06, 9.624999999999218e-06, 8.750000000001812e-06, 9.415999999998204e-06, 9.499999999995623e-06, 9.597999999999551e-06, 9.08400000000642e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.735999999995303e-06, 9.264000000001882e-06, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201112 10:14:47.371" endtime="20201112 10:14:47.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.360" endtime="20201112 10:14:47.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.383" endtime="20201112 10:14:47.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.391" endtime="20201112 10:14:47.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.387" endtime="20201112 10:14:47.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.378" endtime="20201112 10:14:47.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.883" endtime="20201112 10:14:47.416"></status>
</kw>
<msg timestamp="20201112 10:14:47.417" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.436" endtime="20201112 10:14:47.448"></status>
</kw>
<msg timestamp="20201112 10:14:47.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.433" endtime="20201112 10:14:47.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.455" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.451" endtime="20201112 10:14:47.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.457" endtime="20201112 10:14:47.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.426" endtime="20201112 10:14:47.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.421" endtime="20201112 10:14:47.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.480" endtime="20201112 10:14:47.816"></status>
</kw>
<msg timestamp="20201112 10:14:47.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035913, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03592225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:47.477" endtime="20201112 10:14:47.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035913, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03592225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:14:47.826" endtime="20201112 10:14:47.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.844" endtime="20201112 10:14:47.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.470" endtime="20201112 10:14:47.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.465" endtime="20201112 10:14:47.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.861" level="INFO">${RESULT} = [{'time': 0.03592225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.035937306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:47.852" endtime="20201112 10:14:47.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:47.893" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:47.863" endtime="20201112 10:14:47.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:47.901" endtime="20201112 10:14:47.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.908" level="INFO">VALUE: [9.250000000002312e-06, 9.597999999999551e-06, 8.763000000001908e-06, 9.250000000002312e-06, 8.945000000003256e-06, 9.429999999997773e-06, 8.917000000004116e-06, 8.930999999996747e-06, 9.569000000000938e-06, 8.736000000002242e-06, 9.570000000000412e-06, 9.388999999998537e-06, 8.916999999997177e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.319000000000688e-06, 8.749999999994873e-06, 9.069000000000438e-06, 9.263999999994943e-06, 9.597999999999551e-06, 9.042000000000772e-06, 9.402000000005573e-06, 9.583000000000508e-06, 9.264000000001882e-06, 9.472000000003422e-06, 9.583000000000508e-06, 9.764000000002382e-06, 9.583999999999981e-06, 9.223000000002646e-06, 9.263999999994943e-06, 9.152000000005323e-06, 8.916999999997177e-06, 9.263999999994943e-06, 9.069999999999911e-06, 9.764000000002382e-06, 8.929999999997273e-06, 8.930000000004212e-06, 9.500000000002562e-06, 8.750000000001812e-06, 9.069000000000438e-06, 8.764000000001382e-06, 9.096999999999578e-06, 8.972000000002922e-06, 9.402999999998107e-06, 9.583000000000508e-06, 9.416999999997677e-06, 9.208000000003602e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201112 10:14:47.905" endtime="20201112 10:14:47.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.895" endtime="20201112 10:14:47.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.989" endtime="20201112 10:14:47.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.997" endtime="20201112 10:14:48.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.993" endtime="20201112 10:14:48.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.984" endtime="20201112 10:14:48.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.418" endtime="20201112 10:14:48.022"></status>
</kw>
<msg timestamp="20201112 10:14:48.023" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.042" endtime="20201112 10:14:48.054"></status>
</kw>
<msg timestamp="20201112 10:14:48.055" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.039" endtime="20201112 10:14:48.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.057" endtime="20201112 10:14:48.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.064" endtime="20201112 10:14:48.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.032" endtime="20201112 10:14:48.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.027" endtime="20201112 10:14:48.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.086" endtime="20201112 10:14:48.420"></status>
</kw>
<msg timestamp="20201112 10:14:48.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036011917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036020833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.083" endtime="20201112 10:14:48.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036011917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036020833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.430" endtime="20201112 10:14:48.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.448" endtime="20201112 10:14:48.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.076" endtime="20201112 10:14:48.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.071" endtime="20201112 10:14:48.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.465" level="INFO">${RESULT} = [{'time': 0.036020833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916000000004642e-06, 'source_diff': 8.916000000004642e-06}, {'time': 0.036034792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.456" endtime="20201112 10:14:48.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:48.496" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:48.467" endtime="20201112 10:14:48.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.506" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:48.504" endtime="20201112 10:14:48.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.512" level="INFO">VALUE: [8.916000000004642e-06, 9.431000000004186e-06, 9.083000000000008e-06, 8.930000000004212e-06, 8.764000000001382e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.306000000000592e-06, 9.083000000000008e-06, 9.472000000003422e-06, 9.597000000000078e-06, 9.069000000000438e-06, 9.416999999997677e-06, 9.485999999996053e-06, 9.250000000002312e-06, 9.416999999997677e-06, 9.083999999999481e-06, 9.083000000000008e-06, 8.929999999997273e-06, 9.083999999999481e-06, 8.763000000001908e-06, 9.583000000000508e-06, 9.236000000002742e-06, 8.736000000002242e-06, 9.569000000000938e-06, 9.250000000002312e-06, 9.264000000001882e-06, 8.931000000003686e-06, 9.583000000000508e-06, 9.083000000000008e-06, 9.416000000005142e-06, 9.097999999999051e-06, 9.388999999998537e-06, 9.069000000000438e-06, 8.973000000002396e-06, 8.764000000001382e-06, 9.249999999995373e-06, 9.597999999999551e-06, 8.929999999997273e-06, 9.097999999999051e-06, 8.916999999997177e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.763999999995443e-06, 8.902000000005073e-06, 9.402999999998107e-06, 9.264000000001882e-06, 9.401999999998634e-06]</msg>
<status status="PASS" starttime="20201112 10:14:48.509" endtime="20201112 10:14:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.498" endtime="20201112 10:14:48.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.521" endtime="20201112 10:14:48.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.529" endtime="20201112 10:14:48.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.525" endtime="20201112 10:14:48.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.516" endtime="20201112 10:14:48.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.024" endtime="20201112 10:14:48.555"></status>
</kw>
<msg timestamp="20201112 10:14:48.555" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.576" endtime="20201112 10:14:48.588"></status>
</kw>
<msg timestamp="20201112 10:14:48.589" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.572" endtime="20201112 10:14:48.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.595" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.591" endtime="20201112 10:14:48.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.597" endtime="20201112 10:14:48.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.565" endtime="20201112 10:14:48.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.560" endtime="20201112 10:14:48.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.620" endtime="20201112 10:14:48.960"></status>
</kw>
<msg timestamp="20201112 10:14:48.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037734972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037743889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.617" endtime="20201112 10:14:48.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037734972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037743889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.969" endtime="20201112 10:14:48.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.988" endtime="20201112 10:14:48.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.610" endtime="20201112 10:14:48.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.605" endtime="20201112 10:14:48.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.005" level="INFO">${RESULT} = [{'time': 0.037743889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037761944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.996" endtime="20201112 10:14:49.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:49.037" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:49.007" endtime="20201112 10:14:49.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.048" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:49.046" endtime="20201112 10:14:49.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.054" level="INFO">VALUE: [8.917000000004116e-06, 8.735999999995303e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.110999999999148e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.917000000004116e-06, 9.250000000002312e-06, 9.110999999999148e-06, 8.750000000001812e-06, 9.069999999999911e-06, 9.763999999995443e-06, 9.443999999997343e-06, 9.431000000004186e-06, 9.389000000005476e-06, 9.264000000001882e-06, 9.263999999994943e-06, 9.735999999996303e-06, 9.417000000004616e-06, 9.403000000005046e-06, 9.083999999999481e-06, 9.250000000002312e-06, 9.583999999999981e-06, 8.778000000000952e-06, 9.403000000005046e-06, 9.570000000000412e-06, 9.250000000002312e-06, 9.416000000005142e-06, 8.902000000005073e-06, 9.250000000002312e-06, 8.763000000001908e-06, 9.083000000000008e-06, 8.985999999995553e-06, 9.430999999997247e-06, 8.736000000002242e-06, 9.777000000002478e-06, 9.750000000002812e-06, 9.583000000000508e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.569000000000938e-06, 9.416999999997677e-06, 8.917000000004116e-06, 9.402999999998107e-06, 8.917000000004116e-06, 8.958000000003352e-06, 9.583000000000508e-06, 9.083000000000008e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 10:14:49.051" endtime="20201112 10:14:49.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.039" endtime="20201112 10:14:49.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.064" endtime="20201112 10:14:49.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.072" endtime="20201112 10:14:49.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.067" endtime="20201112 10:14:49.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.059" endtime="20201112 10:14:49.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.556" endtime="20201112 10:14:49.097"></status>
</kw>
<msg timestamp="20201112 10:14:49.098" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.118" endtime="20201112 10:14:49.130"></status>
</kw>
<msg timestamp="20201112 10:14:49.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.115" endtime="20201112 10:14:49.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.134" endtime="20201112 10:14:49.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.140" endtime="20201112 10:14:49.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.108" endtime="20201112 10:14:49.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.103" endtime="20201112 10:14:49.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.163" endtime="20201112 10:14:49.500"></status>
</kw>
<msg timestamp="20201112 10:14:49.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037689931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037699181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.160" endtime="20201112 10:14:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037689931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037699181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.510" endtime="20201112 10:14:49.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.529" endtime="20201112 10:14:49.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.153" endtime="20201112 10:14:49.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.148" endtime="20201112 10:14:49.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.546" level="INFO">${RESULT} = [{'time': 0.037699181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.037715222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.537" endtime="20201112 10:14:49.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:49.576" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:49.548" endtime="20201112 10:14:49.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.587" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:49.584" endtime="20201112 10:14:49.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.594" level="INFO">VALUE: [9.249999999995373e-06, 8.915999999997704e-06, 9.597999999999551e-06, 8.917000000004116e-06, 9.430000000004712e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.152999999997857e-06, 9.250000000002312e-06, 9.416999999997677e-06, 8.917000000004116e-06, 9.263000000002408e-06, 9.583000000000508e-06, 9.069999999999911e-06, 9.096999999999578e-06, 9.250000000002312e-06, 8.832999999999758e-06, 9.083000000000008e-06, 9.597000000000078e-06, 8.944000000003782e-06, 8.915999999997704e-06, 8.874999999998467e-06, 9.416999999997677e-06, 9.583000000000508e-06, 8.931000000003686e-06, 8.930999999996747e-06, 8.750000000001812e-06, 9.77699999999554e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.471999999996483e-06, 9.096999999999578e-06, 9.415999999998204e-06, 9.444000000004282e-06, 9.055000000000868e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.860999999998898e-06, 9.416999999997677e-06, 9.430999999997247e-06, 8.791000000001048e-06, 9.583000000000508e-06, 9.249999999995373e-06, 8.957999999996413e-06, 8.749999999994873e-06, 8.916000000004642e-06, 9.264000000001882e-06, 9.083999999999481e-06]</msg>
<status status="PASS" starttime="20201112 10:14:49.589" endtime="20201112 10:14:49.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.578" endtime="20201112 10:14:49.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.604" endtime="20201112 10:14:49.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.612" endtime="20201112 10:14:49.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.608" endtime="20201112 10:14:49.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.599" endtime="20201112 10:14:49.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.099" endtime="20201112 10:14:49.638"></status>
</kw>
<msg timestamp="20201112 10:14:49.639" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.658" endtime="20201112 10:14:49.670"></status>
</kw>
<msg timestamp="20201112 10:14:49.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.655" endtime="20201112 10:14:49.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.673" endtime="20201112 10:14:49.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.679" endtime="20201112 10:14:49.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.648" endtime="20201112 10:14:49.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.643" endtime="20201112 10:14:49.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.702" endtime="20201112 10:14:50.038"></status>
</kw>
<msg timestamp="20201112 10:14:50.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036163403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036172139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.699" endtime="20201112 10:14:50.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036163403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036172139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.048" endtime="20201112 10:14:50.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.066" endtime="20201112 10:14:50.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.692" endtime="20201112 10:14:50.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.687" endtime="20201112 10:14:50.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.084" level="INFO">${RESULT} = [{'time': 0.036172139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036187194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.075" endtime="20201112 10:14:50.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:50.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:50.086" endtime="20201112 10:14:50.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.124" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:50.122" endtime="20201112 10:14:50.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.129" level="INFO">VALUE: [8.736000000002242e-06, 9.541000000001798e-06, 9.264000000001882e-06, 9.083000000000008e-06, 9.583000000000508e-06, 9.333000000000258e-06, 9.415999999998204e-06, 8.901999999998134e-06, 8.750000000001812e-06, 9.583000000000508e-06, 9.401999999998634e-06, 9.583999999999981e-06, 9.097000000006517e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.402999999998107e-06, 8.915999999997704e-06, 9.069999999999911e-06, 9.388999999998537e-06, 8.943999999996843e-06, 9.027999999994263e-06, 9.416999999997677e-06, 9.249999999995373e-06, 9.430999999997247e-06, 8.750000000001812e-06, 9.443999999997343e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.583000000000508e-06, 9.582999999993569e-06, 8.778000000000952e-06, 9.083000000000008e-06, 8.749999999994873e-06, 9.264000000001882e-06, 9.457999999996913e-06, 8.916000000004642e-06, 9.083000000000008e-06, 8.750000000001812e-06, 9.264000000001882e-06, 9.222000000003172e-06, 9.236999999995277e-06, 8.943999999996843e-06, 8.944999999996317e-06, 9.069999999999911e-06, 8.915999999997704e-06, 9.583000000000508e-06, 9.610999999999648e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201112 10:14:50.126" endtime="20201112 10:14:50.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.116" endtime="20201112 10:14:50.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.138" endtime="20201112 10:14:50.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.148" endtime="20201112 10:14:50.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.144" endtime="20201112 10:14:50.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.134" endtime="20201112 10:14:50.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.640" endtime="20201112 10:14:50.173"></status>
</kw>
<msg timestamp="20201112 10:14:50.174" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.193" endtime="20201112 10:14:50.205"></status>
</kw>
<msg timestamp="20201112 10:14:50.206" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.190" endtime="20201112 10:14:50.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.208" endtime="20201112 10:14:50.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.214" endtime="20201112 10:14:50.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.183" endtime="20201112 10:14:50.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.178" endtime="20201112 10:14:50.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.237" endtime="20201112 10:14:50.573"></status>
</kw>
<msg timestamp="20201112 10:14:50.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035835014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035843764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.234" endtime="20201112 10:14:50.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035835014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035843764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.582" endtime="20201112 10:14:50.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.601" endtime="20201112 10:14:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.227" endtime="20201112 10:14:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.222" endtime="20201112 10:14:50.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.618" level="INFO">${RESULT} = [{'time': 0.035843764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.035859722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.609" endtime="20201112 10:14:50.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:50.649" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:50.620" endtime="20201112 10:14:50.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.659" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:50.656" endtime="20201112 10:14:50.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.664" level="INFO">VALUE: [8.750000000001812e-06, 8.929999999997273e-06, 9.666999999997927e-06, 8.916999999997177e-06, 9.764000000002382e-06, 9.417000000004616e-06, 9.471999999996483e-06, 9.209000000003076e-06, 9.582999999993569e-06, 9.083000000000008e-06, 9.542000000001272e-06, 9.638999999998787e-06, 9.236000000002742e-06, 9.416999999997677e-06, 9.097000000006517e-06, 9.194999999996567e-06, 9.097000000006517e-06, 9.570000000000412e-06, 8.763999999994443e-06, 9.750000000002812e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.431000000004186e-06, 9.415999999998204e-06, 9.236000000002742e-06, 9.583999999999981e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.056000000000342e-06, 9.415999999998204e-06, 9.777000000002478e-06, 9.083000000000008e-06, 9.583000000000508e-06, 9.583999999999981e-06, 8.931000000003686e-06, 9.096999999999578e-06, 9.764000000002382e-06, 9.610999999999648e-06, 9.263000000002408e-06, 9.416999999997677e-06, 8.903000000004546e-06, 9.416999999997677e-06, 8.958000000003352e-06, 9.583000000000508e-06, 9.08400000000642e-06, 9.597000000000078e-06, 8.819999999999661e-06, 8.930000000004212e-06, 8.750000000001812e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201112 10:14:50.661" endtime="20201112 10:14:50.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.650" endtime="20201112 10:14:50.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.673" endtime="20201112 10:14:50.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.681" endtime="20201112 10:14:50.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.677" endtime="20201112 10:14:50.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.669" endtime="20201112 10:14:50.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.175" endtime="20201112 10:14:50.708"></status>
</kw>
<msg timestamp="20201112 10:14:50.709" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.728" endtime="20201112 10:14:50.740"></status>
</kw>
<msg timestamp="20201112 10:14:50.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.725" endtime="20201112 10:14:50.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.744" endtime="20201112 10:14:50.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.750" endtime="20201112 10:14:50.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.717" endtime="20201112 10:14:50.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.713" endtime="20201112 10:14:50.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.773" endtime="20201112 10:14:51.107"></status>
</kw>
<msg timestamp="20201112 10:14:51.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035951514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035961097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.769" endtime="20201112 10:14:51.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035951514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035961097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.116" endtime="20201112 10:14:51.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.135" endtime="20201112 10:14:51.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.762" endtime="20201112 10:14:51.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.758" endtime="20201112 10:14:51.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.152" level="INFO">${RESULT} = [{'time': 0.035961097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.035978125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.143" endtime="20201112 10:14:51.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:51.184" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:51.154" endtime="20201112 10:14:51.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.194" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:51.192" endtime="20201112 10:14:51.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.199" level="INFO">VALUE: [9.583000000000508e-06, 9.583000000000508e-06, 9.597999999999551e-06, 8.721999999995733e-06, 9.249999999995373e-06, 9.083000000000008e-06, 9.08400000000642e-06, 9.583000000000508e-06, 8.749999999994873e-06, 9.430999999997247e-06, 8.943999999996843e-06, 8.763999999994443e-06, 9.417000000004616e-06, 9.069000000000438e-06, 9.250000000002312e-06, 9.79099999999511e-06, 8.929999999997273e-06, 9.471999999996483e-06, 8.750000000001812e-06, 8.722999999995207e-06, 9.056000000000342e-06, 9.583000000000508e-06, 9.402000000005573e-06, 9.415999999998204e-06, 9.235999999995803e-06, 9.443999999997343e-06, 9.236000000002742e-06, 9.096999999999578e-06, 9.417000000004616e-06, 8.916000000004642e-06, 9.263999999994943e-06, 9.08400000000642e-06, 8.750000000001812e-06, 9.597000000000078e-06, 9.416000000005142e-06, 9.292000000001022e-06, 8.750000000001812e-06, 9.250000000002312e-06, 9.750000000002812e-06, 9.430999999997247e-06, 9.583000000000508e-06, 8.930999999996747e-06, 9.430999999997247e-06, 8.930999999996747e-06, 9.221999999996233e-06, 9.083000000000008e-06, 9.750000000002812e-06, 9.194999999996567e-06, 9.431000000004186e-06, 8.972000000002922e-06]</msg>
<status status="PASS" starttime="20201112 10:14:51.196" endtime="20201112 10:14:51.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.186" endtime="20201112 10:14:51.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.209" endtime="20201112 10:14:51.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.217" endtime="20201112 10:14:51.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.212" endtime="20201112 10:14:51.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.204" endtime="20201112 10:14:51.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.710" endtime="20201112 10:14:51.242"></status>
</kw>
<msg timestamp="20201112 10:14:51.242" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.263" endtime="20201112 10:14:51.275"></status>
</kw>
<msg timestamp="20201112 10:14:51.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.260" endtime="20201112 10:14:51.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.278" endtime="20201112 10:14:51.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.285" endtime="20201112 10:14:51.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.253" endtime="20201112 10:14:51.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.247" endtime="20201112 10:14:51.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.308" endtime="20201112 10:14:51.648"></status>
</kw>
<msg timestamp="20201112 10:14:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037320528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.304" endtime="20201112 10:14:51.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037320528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.658" endtime="20201112 10:14:51.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.677" endtime="20201112 10:14:51.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.297" endtime="20201112 10:14:51.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.293" endtime="20201112 10:14:51.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.694" level="INFO">${RESULT} = [{'time': 0.037320528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037337542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.685" endtime="20201112 10:14:51.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:51.724" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:51.696" endtime="20201112 10:14:51.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:51.732" endtime="20201112 10:14:51.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.740" level="INFO">VALUE: [8.764000000001382e-06, 8.750000000001812e-06, 8.916999999997177e-06, 9.069000000000438e-06, 9.416999999997677e-06, 9.346999999999828e-06, 9.583000000000508e-06, 9.500000000002562e-06, 9.583000000000508e-06, 9.195000000003506e-06, 8.930999999996747e-06, 8.903000000004546e-06, 9.264000000001882e-06, 8.749999999994873e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.583000000000508e-06, 9.583999999999981e-06, 8.944999999996317e-06, 8.722000000002672e-06, 9.570000000000412e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.764000000002382e-06, 9.083999999999481e-06, 8.750000000001812e-06, 9.013999999994693e-06, 9.417000000004616e-06, 9.749999999995873e-06, 8.764000000001382e-06, 8.930999999996747e-06, 8.735999999995303e-06, 9.431000000004186e-06, 9.487000000002466e-06, 8.903000000004546e-06, 9.430999999997247e-06, 8.917000000004116e-06, 9.124999999998717e-06, 9.054999999993929e-06, 9.527000000002228e-06, 8.874999999998467e-06, 9.069999999999911e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.097999999999051e-06, 8.750000000001812e-06, 9.000000000002062e-06, 9.430000000004712e-06, 9.403000000005046e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201112 10:14:51.737" endtime="20201112 10:14:51.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.726" endtime="20201112 10:14:51.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.749" endtime="20201112 10:14:51.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.757" endtime="20201112 10:14:51.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.753" endtime="20201112 10:14:51.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.745" endtime="20201112 10:14:51.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.244" endtime="20201112 10:14:51.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.978" endtime="20201112 10:14:51.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.795" endtime="20201112 10:14:51.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.790" endtime="20201112 10:14:51.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.788" endtime="20201112 10:14:51.819"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:40.847" endtime="20201112 10:14:51.820" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.840" endtime="20201112 10:14:51.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.837" endtime="20201112 10:14:51.864"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.898" endtime="20201112 10:14:51.924"></status>
</kw>
<msg timestamp="20201112 10:14:51.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.895" endtime="20201112 10:14:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.932" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.927" endtime="20201112 10:14:51.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.938" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:51.934" endtime="20201112 10:14:51.939"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:51.888" endtime="20201112 10:14:51.940"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:51.881" endtime="20201112 10:14:51.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.879" endtime="20201112 10:14:51.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:51.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:51.949" endtime="20201112 10:14:51.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.944" endtime="20201112 10:14:51.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.877" endtime="20201112 10:14:51.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.875" endtime="20201112 10:14:51.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.954" endtime="20201112 10:14:51.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.870" endtime="20201112 10:14:51.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.865" endtime="20201112 10:14:51.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.834" endtime="20201112 10:14:51.961"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.985" endtime="20201112 10:14:52.007"></status>
</kw>
<msg timestamp="20201112 10:14:52.008" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.981" endtime="20201112 10:14:52.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.014" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.010" endtime="20201112 10:14:52.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.016" endtime="20201112 10:14:52.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.974" endtime="20201112 10:14:52.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.968" endtime="20201112 10:14:52.023"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.027" endtime="20201112 10:14:52.032"></status>
</kw>
<msg timestamp="20201112 10:14:52.033" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:52.025" endtime="20201112 10:14:52.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.043" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:52.040" endtime="20201112 10:14:52.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.047" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:52.045" endtime="20201112 10:14:52.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.035" endtime="20201112 10:14:52.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.060" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:52.056" endtime="20201112 10:14:52.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.065" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:52.063" endtime="20201112 10:14:52.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.051" endtime="20201112 10:14:52.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.083" endtime="20201112 10:14:52.431"></status>
</kw>
<msg timestamp="20201112 10:14:52.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136195514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136210625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.080" endtime="20201112 10:14:52.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136195514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136210625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.440" endtime="20201112 10:14:52.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.459" endtime="20201112 10:14:52.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.073" endtime="20201112 10:14:52.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.068" endtime="20201112 10:14:52.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.476" level="INFO">${RESULT} = [{'time': 0.136210625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5111000000012087e-05, 'source_diff': 1.5111000000012087e-05}, {'time': 0.136235583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:52.467" endtime="20201112 10:14:52.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:52.506" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:52.478" endtime="20201112 10:14:52.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.517" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:52.515" endtime="20201112 10:14:52.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.523" level="INFO">VALUE: [1.5111000000012087e-05, 1.47769999999936e-05, 1.5431000000010187e-05, 1.494499999998844e-05, 1.5597000000006078e-05, 1.5429999999982957e-05, 1.561099999999871e-05, 1.4764000000000443e-05, 1.5263999999987066e-05, 1.50969999999917e-05, 1.5597000000006078e-05, 1.5249999999994435e-05, 1.5611999999998183e-05, 1.555500000000043e-05, 1.4929999999996335e-05, 1.563899999998397e-05, 1.5444000000003344e-05, 1.5389000000004538e-05, 1.4749999999980057e-05, 1.5236000000001804e-05, 1.5028000000000263e-05, 1.5277999999979697e-05, 1.4764000000000443e-05, 1.5249999999994435e-05, 1.5319000000013627e-05, 1.5111000000012087e-05, 1.4749999999980057e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.5097000000019456e-05, 1.4721999999994795e-05, 1.5278000000007452e-05, 1.5749999999981057e-05, 1.4917000000003178e-05, 1.5333000000006258e-05, 1.54169999999898e-05, 1.4930999999995809e-05, 1.5583000000013447e-05, 1.4806000000006092e-05, 1.508299999999907e-05, 1.4847000000012267e-05, 1.5278000000007452e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.4750000000007812e-05, 1.5277999999979697e-05, 1.5236000000001804e-05, 1.5235999999974048e-05, 1.5111000000012087e-05, 1.4929999999996335e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.520" endtime="20201112 10:14:52.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.508" endtime="20201112 10:14:52.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.532" endtime="20201112 10:14:52.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.540" endtime="20201112 10:14:52.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.536" endtime="20201112 10:14:52.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.528" endtime="20201112 10:14:52.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.963" endtime="20201112 10:14:52.566"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:51.827" endtime="20201112 10:14:52.568" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.587" endtime="20201112 10:14:52.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.584" endtime="20201112 10:14:52.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.645" endtime="20201112 10:14:52.671"></status>
</kw>
<msg timestamp="20201112 10:14:52.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.642" endtime="20201112 10:14:52.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.674" endtime="20201112 10:14:52.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.685" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:52.681" endtime="20201112 10:14:52.686"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:52.634" endtime="20201112 10:14:52.688"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:52.627" endtime="20201112 10:14:52.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.624" endtime="20201112 10:14:52.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:52.698" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:52.697" endtime="20201112 10:14:52.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.692" endtime="20201112 10:14:52.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.622" endtime="20201112 10:14:52.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.621" endtime="20201112 10:14:52.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.702" endtime="20201112 10:14:52.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.617" endtime="20201112 10:14:52.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.612" endtime="20201112 10:14:52.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.581" endtime="20201112 10:14:52.710"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.734" endtime="20201112 10:14:52.832"></status>
</kw>
<msg timestamp="20201112 10:14:52.833" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.731" endtime="20201112 10:14:52.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.839" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.835" endtime="20201112 10:14:52.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.841" endtime="20201112 10:14:52.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.724" endtime="20201112 10:14:52.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.718" endtime="20201112 10:14:52.848"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.852" endtime="20201112 10:14:52.857"></status>
</kw>
<msg timestamp="20201112 10:14:52.858" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:52.850" endtime="20201112 10:14:52.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.868" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:52.865" endtime="20201112 10:14:52.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.872" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:52.870" endtime="20201112 10:14:52.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.860" endtime="20201112 10:14:52.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.883" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:52.881" endtime="20201112 10:14:52.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.888" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:52.886" endtime="20201112 10:14:52.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.875" endtime="20201112 10:14:52.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.908" endtime="20201112 10:14:53.267"></status>
</kw>
<msg timestamp="20201112 10:14:53.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139810972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139858, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:52.903" endtime="20201112 10:14:53.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139810972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139858, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:53.276" endtime="20201112 10:14:53.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.294" endtime="20201112 10:14:53.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.896" endtime="20201112 10:14:53.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.891" endtime="20201112 10:14:53.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.311" level="INFO">${RESULT} = [{'time': 0.139858, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.702800000000451e-05, 'source_diff': 4.702800000000451e-05}, {'time': 0.141362875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:53.302" endtime="20201112 10:14:53.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:53.341" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:53.313" endtime="20201112 10:14:53.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.359" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:53.357" endtime="20201112 10:14:53.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.364" level="INFO">VALUE: [4.702800000000451e-05, 4.662499999999459e-05, 4.626400000001807e-05, 4.6973000000005705e-05, 4.679199999998995e-05, 4.662499999999459e-05, 4.611099999998758e-05, 4.694399999999321e-05, 4.6791000000018235e-05, 4.675000000001206e-05, 4.677699999999785e-05, 4.662500000002234e-05, 4.6959000000013074e-05, 4.629100000000386e-05, 4.697200000000623e-05, 4.6957999999985844e-05, 4.6875000000001776e-05, 4.6111000000015334e-05, 4.6931000000000056e-05, 4.62780000000107e-05, 4.6445000000006065e-05, 4.644400000000659e-05, 4.679199999998995e-05, 4.676400000000469e-05, 4.679199999998995e-05, 4.6639000000014974e-05, 4.6429999999986205e-05, 4.679200000001771e-05, 4.626400000001807e-05, 4.631899999998912e-05, 4.6235999999977295e-05, 4.6931000000000056e-05, 4.6431000000013434e-05, 4.629200000000333e-05, 4.630599999999596e-05, 4.682000000000297e-05, 4.693000000000058e-05, 4.656900000002406e-05, 4.677799999999732e-05, 4.6111000000015334e-05, 4.636099999999477e-05, 4.6679999999993393e-05, 4.629200000000333e-05, 4.7139000000001596e-05, 4.6653000000007605e-05, 4.648600000001224e-05, 4.630599999999596e-05, 4.662499999999459e-05, 4.6139000000000596e-05, 4.709799999999542e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.361" endtime="20201112 10:14:53.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.350" endtime="20201112 10:14:53.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.373" endtime="20201112 10:14:53.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.381" endtime="20201112 10:14:53.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.377" endtime="20201112 10:14:53.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.368" endtime="20201112 10:14:53.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.712" endtime="20201112 10:14:53.406"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:52.574" endtime="20201112 10:14:53.409" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.428" endtime="20201112 10:14:53.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.424" endtime="20201112 10:14:53.451"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.487" endtime="20201112 10:14:53.508"></status>
</kw>
<msg timestamp="20201112 10:14:53.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.480" endtime="20201112 10:14:53.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.512" endtime="20201112 10:14:53.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.523" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:53.518" endtime="20201112 10:14:53.523"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.473" endtime="20201112 10:14:53.525"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.467" endtime="20201112 10:14:53.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.464" endtime="20201112 10:14:53.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:53.535" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:53.533" endtime="20201112 10:14:53.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.529" endtime="20201112 10:14:53.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.463" endtime="20201112 10:14:53.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.461" endtime="20201112 10:14:53.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.539" endtime="20201112 10:14:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.457" endtime="20201112 10:14:53.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.453" endtime="20201112 10:14:53.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.421" endtime="20201112 10:14:53.546"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.569" endtime="20201112 10:14:53.833"></status>
</kw>
<msg timestamp="20201112 10:14:53.834" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.565" endtime="20201112 10:14:53.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.840" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.836" endtime="20201112 10:14:53.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.843" endtime="20201112 10:14:53.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.558" endtime="20201112 10:14:53.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.553" endtime="20201112 10:14:53.849"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.854" endtime="20201112 10:14:53.858"></status>
</kw>
<msg timestamp="20201112 10:14:53.859" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:53.851" endtime="20201112 10:14:53.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.869" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:53.867" endtime="20201112 10:14:53.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.873" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:53.871" endtime="20201112 10:14:53.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.861" endtime="20201112 10:14:53.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.885" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:53.883" endtime="20201112 10:14:53.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.890" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:53.888" endtime="20201112 10:14:53.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.877" endtime="20201112 10:14:53.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.908" endtime="20201112 10:14:54.261"></status>
</kw>
<msg timestamp="20201112 10:14:54.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137214819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137297194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.905" endtime="20201112 10:14:54.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137214819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137297194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.270" endtime="20201112 10:14:54.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.288" endtime="20201112 10:14:54.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.898" endtime="20201112 10:14:54.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.893" endtime="20201112 10:14:54.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.306" level="INFO">${RESULT} = [{'time': 0.137297194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.23750000000234e-05, 'source_diff': 8.23750000000234e-05}, {'time': 0.142136069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:54.296" endtime="20201112 10:14:54.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:54.338" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:54.308" endtime="20201112 10:14:54.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.349" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:54.347" endtime="20201112 10:14:54.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.354" level="INFO">VALUE: [8.23750000000234e-05, 8.16110000000092e-05, 8.163899999999447e-05, 8.168000000000064e-05, 8.124999999997717e-05, 8.125000000000493e-05, 8.126399999999756e-05, 8.090300000002104e-05, 8.140299999997991e-05, 8.151400000000475e-05, 8.174999999999155e-05, 8.092999999997907e-05, 8.102800000001076e-05, 8.106899999998918e-05, 8.176400000001194e-05, 8.154199999999001e-05, 8.174999999999155e-05, 8.113900000000784e-05, 8.106999999998865e-05, 8.10970000000022e-05, 8.161200000000868e-05, 8.15269999999979e-05, 8.091699999998592e-05, 8.157000000000303e-05, 8.090299999996553e-05, 8.123599999998454e-05, 8.138899999998728e-05, 8.088900000002841e-05, 8.144399999998608e-05, 8.169499999999275e-05, 8.092999999997907e-05, 8.108400000000904e-05, 8.108299999998181e-05, 8.102700000001128e-05, 8.158299999999619e-05, 8.155599999998264e-05, 8.140299999997991e-05, 8.1027999999983e-05, 8.174999999999155e-05, 8.106899999998918e-05, 8.173599999999892e-05, 8.176399999998418e-05, 8.108299999998181e-05, 8.156900000000356e-05, 8.115300000000047e-05, 8.123600000004005e-05, 8.188900000000165e-05, 8.124999999997717e-05, 8.120900000002651e-05, 8.173599999999892e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.351" endtime="20201112 10:14:54.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.340" endtime="20201112 10:14:54.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.363" endtime="20201112 10:14:54.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.371" endtime="20201112 10:14:54.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.367" endtime="20201112 10:14:54.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.358" endtime="20201112 10:14:54.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.548" endtime="20201112 10:14:54.396"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:53.415" endtime="20201112 10:14:54.399" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.419" endtime="20201112 10:14:54.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.416" endtime="20201112 10:14:54.443"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.475" endtime="20201112 10:14:54.497"></status>
</kw>
<msg timestamp="20201112 10:14:54.498" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.472" endtime="20201112 10:14:54.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.500" endtime="20201112 10:14:54.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.512" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:54.507" endtime="20201112 10:14:54.513"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:54.465" endtime="20201112 10:14:54.515"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:54.459" endtime="20201112 10:14:54.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.456" endtime="20201112 10:14:54.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:54.525" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:54.524" endtime="20201112 10:14:54.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.519" endtime="20201112 10:14:54.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.454" endtime="20201112 10:14:54.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.453" endtime="20201112 10:14:54.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.529" endtime="20201112 10:14:54.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.449" endtime="20201112 10:14:54.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.444" endtime="20201112 10:14:54.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.413" endtime="20201112 10:14:54.536"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.558" endtime="20201112 10:14:54.583"></status>
</kw>
<msg timestamp="20201112 10:14:54.584" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.555" endtime="20201112 10:14:54.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.590" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.586" endtime="20201112 10:14:54.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.592" endtime="20201112 10:14:54.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.548" endtime="20201112 10:14:54.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.542" endtime="20201112 10:14:54.599"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.603" endtime="20201112 10:14:54.608"></status>
</kw>
<msg timestamp="20201112 10:14:54.609" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:54.601" endtime="20201112 10:14:54.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.619" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:54.616" endtime="20201112 10:14:54.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.623" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:54.621" endtime="20201112 10:14:54.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.611" endtime="20201112 10:14:54.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.635" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:54.633" endtime="20201112 10:14:54.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.639" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:54.637" endtime="20201112 10:14:54.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.627" endtime="20201112 10:14:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.657" endtime="20201112 10:14:55.016"></status>
</kw>
<msg timestamp="20201112 10:14:55.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131165333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131166806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.654" endtime="20201112 10:14:55.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131165333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131166806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.026" endtime="20201112 10:14:55.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.045" endtime="20201112 10:14:55.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.647" endtime="20201112 10:14:55.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.643" endtime="20201112 10:14:55.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.062" level="INFO">${RESULT} = [{'time': 0.131166806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.131189278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:55.053" endtime="20201112 10:14:55.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:55.094" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:55.064" endtime="20201112 10:14:55.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.105" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:55.103" endtime="20201112 10:14:55.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.110" level="INFO">VALUE: [1.473000000001834e-06, 1.4449999999888163e-06, 1.4999999999876223e-06, 1.4720000000023603e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4999999999876223e-06, 1.445000000016572e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.486000000022747e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.514000000008009e-06, 1.4720000000023603e-06, 1.486000000022747e-06, 1.4859999999949913e-06, 1.514000000008009e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.514000000008009e-06, 1.514000000008009e-06, 1.4720000000023603e-06, 1.4589999999814474e-06, 1.4999999999876223e-06, 1.4719999999746047e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.500000000015378e-06, 1.514000000008009e-06, 1.4859999999949913e-06, 1.459000000009203e-06, 1.459000000009203e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.4309999999961853e-06, 1.486000000022747e-06, 1.500000000015378e-06, 1.541999999993271e-06, 1.4720000000023603e-06, 1.4170000000035543e-06, 1.4859999999949913e-06, 1.4859999999949913e-06]</msg>
<status status="PASS" starttime="20201112 10:14:55.107" endtime="20201112 10:14:55.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.096" endtime="20201112 10:14:55.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.119" endtime="20201112 10:14:55.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.127" endtime="20201112 10:14:55.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.123" endtime="20201112 10:14:55.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.114" endtime="20201112 10:14:55.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.537" endtime="20201112 10:14:55.153"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:54.406" endtime="20201112 10:14:55.156" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.176" endtime="20201112 10:14:55.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.172" endtime="20201112 10:14:55.199"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.232" endtime="20201112 10:14:55.257"></status>
</kw>
<msg timestamp="20201112 10:14:55.259" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.228" endtime="20201112 10:14:55.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.261" endtime="20201112 10:14:55.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.273" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:55.267" endtime="20201112 10:14:55.274"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:55.221" endtime="20201112 10:14:55.276"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:55.215" endtime="20201112 10:14:55.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.212" endtime="20201112 10:14:55.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:55.286" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:55.284" endtime="20201112 10:14:55.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.280" endtime="20201112 10:14:55.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.211" endtime="20201112 10:14:55.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.209" endtime="20201112 10:14:55.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.289" endtime="20201112 10:14:55.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.205" endtime="20201112 10:14:55.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.201" endtime="20201112 10:14:55.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.169" endtime="20201112 10:14:55.296"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.320" endtime="20201112 10:14:55.419"></status>
</kw>
<msg timestamp="20201112 10:14:55.420" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.316" endtime="20201112 10:14:55.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.426" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.422" endtime="20201112 10:14:55.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.428" endtime="20201112 10:14:55.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.309" endtime="20201112 10:14:55.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.303" endtime="20201112 10:14:55.435"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.439" endtime="20201112 10:14:55.444"></status>
</kw>
<msg timestamp="20201112 10:14:55.445" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:55.436" endtime="20201112 10:14:55.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.455" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:55.452" endtime="20201112 10:14:55.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.459" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:55.457" endtime="20201112 10:14:55.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.446" endtime="20201112 10:14:55.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.471" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:55.468" endtime="20201112 10:14:55.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.475" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:55.473" endtime="20201112 10:14:55.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.462" endtime="20201112 10:14:55.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.493" endtime="20201112 10:14:55.853"></status>
</kw>
<msg timestamp="20201112 10:14:55.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137702208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137714972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.490" endtime="20201112 10:14:55.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137702208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137714972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.863" endtime="20201112 10:14:55.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.881" endtime="20201112 10:14:55.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.483" endtime="20201112 10:14:55.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.478" endtime="20201112 10:14:55.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.898" level="INFO">${RESULT} = [{'time': 0.137714972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.139225597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:55.889" endtime="20201112 10:14:55.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:55.930" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:55.900" endtime="20201112 10:14:55.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.941" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:55.939" endtime="20201112 10:14:55.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.946" level="INFO">VALUE: [1.2763999999998443e-05, 1.2833000000017636e-05, 1.277800000001883e-05, 1.2737000000012655e-05, 1.2763999999998443e-05, 1.2736000000013181e-05, 1.2735999999985426e-05, 1.2737000000012655e-05, 1.2750000000005812e-05, 1.2777999999991074e-05, 1.2805999999976336e-05, 1.2750000000005812e-05, 1.2792000000011461e-05, 1.2750000000005812e-05, 1.2735999999985426e-05, 1.27769999999916e-05, 1.2791999999983705e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2735999999985426e-05, 1.2749999999978057e-05, 1.2763999999998443e-05, 1.2736000000013181e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2749999999978057e-05, 1.2763999999998443e-05, 1.272200000002055e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2721999999992795e-05, 1.27369999999849e-05, 1.2721999999992795e-05, 1.2763999999998443e-05, 1.2708999999999637e-05, 1.2749999999978057e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.943" endtime="20201112 10:14:55.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.932" endtime="20201112 10:14:55.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.955" endtime="20201112 10:14:55.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.963" endtime="20201112 10:14:55.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.959" endtime="20201112 10:14:55.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.950" endtime="20201112 10:14:55.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.298" endtime="20201112 10:14:55.989"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:55.162" endtime="20201112 10:14:55.991" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.012" endtime="20201112 10:14:56.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.008" endtime="20201112 10:14:56.035"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.068" endtime="20201112 10:14:56.099"></status>
</kw>
<msg timestamp="20201112 10:14:56.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.065" endtime="20201112 10:14:56.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.102" endtime="20201112 10:14:56.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:56.109" endtime="20201112 10:14:56.114"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:56.058" endtime="20201112 10:14:56.116"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:56.051" endtime="20201112 10:14:56.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.049" endtime="20201112 10:14:56.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:56.126" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:56.124" endtime="20201112 10:14:56.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.120" endtime="20201112 10:14:56.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.047" endtime="20201112 10:14:56.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.045" endtime="20201112 10:14:56.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.129" endtime="20201112 10:14:56.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.041" endtime="20201112 10:14:56.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.037" endtime="20201112 10:14:56.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.005" endtime="20201112 10:14:56.136"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.159" endtime="20201112 10:14:56.425"></status>
</kw>
<msg timestamp="20201112 10:14:56.426" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.156" endtime="20201112 10:14:56.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.432" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.429" endtime="20201112 10:14:56.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.435" endtime="20201112 10:14:56.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.149" endtime="20201112 10:14:56.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.143" endtime="20201112 10:14:56.441"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.446" endtime="20201112 10:14:56.450"></status>
</kw>
<msg timestamp="20201112 10:14:56.451" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:56.443" endtime="20201112 10:14:56.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.461" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:56.459" endtime="20201112 10:14:56.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.465" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:56.463" endtime="20201112 10:14:56.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.453" endtime="20201112 10:14:56.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.477" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:56.475" endtime="20201112 10:14:56.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.481" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:56.479" endtime="20201112 10:14:56.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.469" endtime="20201112 10:14:56.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.501" endtime="20201112 10:14:56.853"></status>
</kw>
<msg timestamp="20201112 10:14:56.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143912653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.496" endtime="20201112 10:14:56.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143912653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143936889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.862" endtime="20201112 10:14:56.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.881" endtime="20201112 10:14:56.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.490" endtime="20201112 10:14:56.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.485" endtime="20201112 10:14:56.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.898" level="INFO">${RESULT} = [{'time': 0.143936889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4236000000010804e-05, 'source_diff': 2.4236000000010804e-05}, {'time': 0.148796097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:56.889" endtime="20201112 10:14:56.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:56.931" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:14:56.900" endtime="20201112 10:14:56.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.943" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:56.940" endtime="20201112 10:14:56.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.948" level="INFO">VALUE: [2.4236000000010804e-05, 2.424999999997568e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.423599999998305e-05, 2.4263999999996066e-05, 2.4236000000010804e-05, 2.4250000000003435e-05, 2.4221999999990418e-05, 2.4250000000003435e-05, 2.419500000000463e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.423599999998305e-05, 2.423599999998305e-05, 2.423599999998305e-05, 2.4209000000025016e-05, 2.4221999999990418e-05, 2.4263999999996066e-05, 2.4221999999990418e-05, 2.4223000000017647e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.4250000000003435e-05, 2.4236000000010804e-05, 2.4222000000018173e-05, 2.420799999997003e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4222000000018173e-05, 2.4236000000010804e-05, 2.4222000000018173e-05, 2.4222000000018173e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4262999999968837e-05, 2.4237000000038034e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4236000000010804e-05, 2.4235999999955293e-05, 2.4237000000038034e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4236000000010804e-05, 2.4249999999947924e-05, 2.4236000000010804e-05, 2.4236000000010804e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.945" endtime="20201112 10:14:56.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.933" endtime="20201112 10:14:56.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.957" endtime="20201112 10:14:56.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.965" endtime="20201112 10:14:56.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.961" endtime="20201112 10:14:56.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.952" endtime="20201112 10:14:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.138" endtime="20201112 10:14:56.990"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:55.999" endtime="20201112 10:14:56.993" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:25.339" endtime="20201112 10:14:57.014"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.187" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:57.202" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:59.133" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:57.184" endtime="20201112 10:14:59.134"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.140" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:59.136" endtime="20201112 10:14:59.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.181" endtime="20201112 10:14:59.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.147" endtime="20201112 10:14:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.144" endtime="20201112 10:14:59.482"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.512" endtime="20201112 10:14:59.535"></status>
</kw>
<msg timestamp="20201112 10:14:59.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.508" endtime="20201112 10:14:59.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.542" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.538" endtime="20201112 10:14:59.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.549" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:59.545" endtime="20201112 10:14:59.550"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:59.502" endtime="20201112 10:14:59.552"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:59.497" endtime="20201112 10:14:59.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.494" endtime="20201112 10:14:59.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:59.562" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:59.560" endtime="20201112 10:14:59.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.556" endtime="20201112 10:14:59.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.492" endtime="20201112 10:14:59.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.490" endtime="20201112 10:14:59.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.565" endtime="20201112 10:14:59.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.487" endtime="20201112 10:14:59.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.572" endtime="20201112 10:14:59.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.484" endtime="20201112 10:14:59.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.178" endtime="20201112 10:14:59.578"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.595" endtime="20201112 10:14:59.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.591" endtime="20201112 10:14:59.618"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.651" endtime="20201112 10:14:59.673"></status>
</kw>
<msg timestamp="20201112 10:14:59.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.648" endtime="20201112 10:14:59.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.677" endtime="20201112 10:14:59.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:59.684" endtime="20201112 10:14:59.689"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:59.641" endtime="20201112 10:14:59.691"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:59.634" endtime="20201112 10:14:59.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.632" endtime="20201112 10:14:59.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:59.701" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:59.699" endtime="20201112 10:14:59.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.695" endtime="20201112 10:14:59.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.630" endtime="20201112 10:14:59.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.628" endtime="20201112 10:14:59.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.704" endtime="20201112 10:14:59.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.624" endtime="20201112 10:14:59.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.620" endtime="20201112 10:14:59.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.586" endtime="20201112 10:14:59.711"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.738" endtime="20201112 10:14:59.753"></status>
</kw>
<msg timestamp="20201112 10:14:59.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.735" endtime="20201112 10:14:59.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.757" endtime="20201112 10:14:59.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.763" endtime="20201112 10:14:59.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.728" endtime="20201112 10:14:59.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.722" endtime="20201112 10:14:59.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.788" endtime="20201112 10:15:00.144"></status>
</kw>
<msg timestamp="20201112 10:15:00.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1351595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135175708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:59.785" endtime="20201112 10:15:00.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1351595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135175708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:00.154" endtime="20201112 10:15:00.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.173" endtime="20201112 10:15:00.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.775" endtime="20201112 10:15:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.771" endtime="20201112 10:15:00.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.190" level="INFO">${RESULT} = [{'time': 0.135175708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6208000000017542e-05, 'source_diff': 1.6208000000017542e-05}, {'time': 0.135201972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.181" endtime="20201112 10:15:00.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:00.192" endtime="20201112 10:15:00.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.232" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.230" endtime="20201112 10:15:00.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.237" level="INFO">VALUE: [1.6208000000017542e-05, 1.5929999999997335e-05, 1.6041999999993894e-05, 1.6055000000014807e-05, 1.581900000000025e-05, 1.6375000000012907e-05, 1.5889000000018916e-05, 1.5985999999995615e-05, 1.5708000000003164e-05, 1.6318999999986872e-05, 1.588899999999116e-05, 1.6389000000005538e-05, 1.587499999999853e-05, 1.6486000000009993e-05, 1.619499999999663e-05, 1.5694000000010533e-05, 1.636099999999252e-05, 1.634699999999989e-05, 1.630499999999424e-05, 1.5694000000010533e-05, 1.5847999999984985e-05, 1.5750000000008813e-05, 1.5721999999995795e-05, 1.636099999999252e-05, 1.5847999999984985e-05, 1.6028000000001263e-05, 1.588899999999116e-05, 1.5903000000011547e-05, 1.5653000000004358e-05, 1.6361999999991994e-05, 1.604099999999442e-05, 1.6000000000016e-05, 1.584699999998551e-05, 1.5708000000003164e-05, 1.6041999999993894e-05, 1.5708000000003164e-05, 1.5708000000003164e-05, 1.588899999999116e-05, 1.6028000000001263e-05, 1.5707999999975408e-05, 1.5861000000005898e-05, 1.619499999999663e-05, 1.6111000000013087e-05, 1.65410000000088e-05, 1.655500000000143e-05, 1.620899999998926e-05, 1.5862000000005372e-05, 1.634699999999989e-05, 1.602700000000179e-05, 1.65410000000088e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.234" endtime="20201112 10:15:00.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.222" endtime="20201112 10:15:00.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.246" endtime="20201112 10:15:00.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.254" endtime="20201112 10:15:00.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.250" endtime="20201112 10:15:00.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.241" endtime="20201112 10:15:00.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.716" endtime="20201112 10:15:00.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.715" endtime="20201112 10:15:00.280"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.302" endtime="20201112 10:15:00.316"></status>
</kw>
<msg timestamp="20201112 10:15:00.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.299" endtime="20201112 10:15:00.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.320" endtime="20201112 10:15:00.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.326" endtime="20201112 10:15:00.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.291" endtime="20201112 10:15:00.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.286" endtime="20201112 10:15:00.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.348" endtime="20201112 10:15:00.688"></status>
</kw>
<msg timestamp="20201112 10:15:00.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039408486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039424194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.345" endtime="20201112 10:15:00.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039408486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039424194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.697" endtime="20201112 10:15:00.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.716" endtime="20201112 10:15:00.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.338" endtime="20201112 10:15:00.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.334" endtime="20201112 10:15:00.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.733" level="INFO">${RESULT} = [{'time': 0.039424194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5708000000003164e-05, 'source_diff': 1.5708000000003164e-05}, {'time': 0.039450236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.724" endtime="20201112 10:15:00.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:00.736" endtime="20201112 10:15:00.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.776" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.774" endtime="20201112 10:15:00.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.782" level="INFO">VALUE: [1.5708000000003164e-05, 1.6042000000000833e-05, 1.605500000000093e-05, 1.5736000000002304e-05, 1.652700000000229e-05, 1.6459000000003388e-05, 1.5736000000002304e-05, 1.6028000000001263e-05, 1.63889999999986e-05, 1.655500000000143e-05, 1.654100000000186e-05, 1.5709000000002638e-05, 1.6028000000001263e-05, 1.583299999999982e-05, 1.5986000000002554e-05, 1.6679999999998085e-05, 1.6528000000001764e-05, 1.6042000000000833e-05, 1.6527999999994825e-05, 1.6429999999997835e-05, 1.6028000000001263e-05, 1.5736000000002304e-05, 1.63889999999986e-05, 1.6207999999996725e-05, 1.6542000000001333e-05, 1.636099999999946e-05, 1.587499999999853e-05, 1.6707999999997225e-05, 1.6179999999997585e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.586099999999896e-05, 1.6207999999996725e-05, 1.6222000000003234e-05, 1.587499999999853e-05, 1.6694000000004594e-05, 1.581900000000025e-05, 1.6387999999999125e-05, 1.637499999999903e-05, 1.6528000000001764e-05, 1.6695000000004068e-05, 1.6207999999996725e-05, 1.6209000000003138e-05, 1.6389000000005538e-05, 1.5721999999995795e-05, 1.5861000000005898e-05, 1.6236000000002804e-05, 1.5681000000003498e-05, 1.619499999999663e-05, 1.57089999999957e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.779" endtime="20201112 10:15:00.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.767" endtime="20201112 10:15:00.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.790" endtime="20201112 10:15:00.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.799" endtime="20201112 10:15:00.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.794" endtime="20201112 10:15:00.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.786" endtime="20201112 10:15:00.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.282" endtime="20201112 10:15:00.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.281" endtime="20201112 10:15:00.824"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.847" endtime="20201112 10:15:00.861"></status>
</kw>
<msg timestamp="20201112 10:15:00.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.843" endtime="20201112 10:15:00.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.864" endtime="20201112 10:15:00.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.871" endtime="20201112 10:15:00.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.836" endtime="20201112 10:15:00.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.831" endtime="20201112 10:15:00.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.894" endtime="20201112 10:15:01.231"></status>
</kw>
<msg timestamp="20201112 10:15:01.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039829806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.890" endtime="20201112 10:15:01.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039829806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.241" endtime="20201112 10:15:01.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.259" endtime="20201112 10:15:01.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.883" endtime="20201112 10:15:01.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.879" endtime="20201112 10:15:01.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.279" level="INFO">${RESULT} = [{'time': 0.039829806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6361999999998933e-05, 'source_diff': 1.6361999999998933e-05}, {'time': 0.039855889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.270" endtime="20201112 10:15:01.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.309" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:01.281" endtime="20201112 10:15:01.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.320" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.318" endtime="20201112 10:15:01.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.325" level="INFO">VALUE: [1.6361999999998933e-05, 1.63889999999986e-05, 1.6014000000001694e-05, 1.6541999999994395e-05, 1.587499999999853e-05, 1.6722000000003734e-05, 1.5847999999998863e-05, 1.5679999999997085e-05, 1.5889000000005038e-05, 1.631900000000075e-05, 1.656899999999406e-05, 1.6042000000000833e-05, 1.6193999999997155e-05, 1.5693999999996655e-05, 1.6443999999997405e-05, 1.5750000000001874e-05, 1.6541999999994395e-05, 1.636099999999946e-05, 1.6028000000001263e-05, 1.6195000000003568e-05, 1.611099999999921e-05, 1.669499999999713e-05, 1.630499999999424e-05, 1.6042000000000833e-05, 1.636099999999946e-05, 1.5695000000003068e-05, 1.6208000000003664e-05, 1.586099999999896e-05, 1.636099999999946e-05, 1.5875000000005468e-05, 1.654100000000186e-05, 1.5889000000005038e-05, 1.6208000000003664e-05, 1.636099999999946e-05, 1.5861000000005898e-05, 1.586099999999896e-05, 1.6028000000001263e-05, 1.631900000000075e-05, 1.5693999999996655e-05, 1.6028000000001263e-05, 1.584699999999939e-05, 1.584699999999939e-05, 1.5695000000003068e-05, 1.6028000000001263e-05, 1.6541999999994395e-05, 1.6513999999995255e-05, 1.60690000000005e-05, 1.618099999999706e-05, 1.6514000000002194e-05, 1.602699999999485e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.322" endtime="20201112 10:15:01.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.311" endtime="20201112 10:15:01.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.334" endtime="20201112 10:15:01.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.342" endtime="20201112 10:15:01.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.338" endtime="20201112 10:15:01.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.330" endtime="20201112 10:15:01.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.826" endtime="20201112 10:15:01.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.825" endtime="20201112 10:15:01.368"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.390" endtime="20201112 10:15:01.404"></status>
</kw>
<msg timestamp="20201112 10:15:01.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.387" endtime="20201112 10:15:01.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.408" endtime="20201112 10:15:01.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.414" endtime="20201112 10:15:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.380" endtime="20201112 10:15:01.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.374" endtime="20201112 10:15:01.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.442" endtime="20201112 10:15:01.789"></status>
</kw>
<msg timestamp="20201112 10:15:01.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039584722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.438" endtime="20201112 10:15:01.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039584722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.799" endtime="20201112 10:15:01.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.818" endtime="20201112 10:15:01.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.430" endtime="20201112 10:15:01.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.424" endtime="20201112 10:15:01.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.837" level="INFO">${RESULT} = [{'time': 0.039584722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5875000000005468e-05, 'source_diff': 1.5875000000005468e-05}, {'time': 0.039609806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.828" endtime="20201112 10:15:01.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:01.839" endtime="20201112 10:15:01.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.878" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.876" endtime="20201112 10:15:01.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.883" level="INFO">VALUE: [1.5875000000005468e-05, 1.6527999999994825e-05, 1.63889999999986e-05, 1.63889999999986e-05, 1.605500000000093e-05, 1.6542000000001333e-05, 1.5750000000001874e-05, 1.5709000000002638e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.6028000000001263e-05, 1.637499999999903e-05, 1.591699999999724e-05, 1.5861000000005898e-05, 1.636099999999946e-05, 1.586099999999896e-05, 1.587499999999853e-05, 1.636099999999946e-05, 1.5708000000003164e-05, 1.5709000000002638e-05, 1.5722000000002734e-05, 1.6528000000001764e-05, 1.586099999999896e-05, 1.586099999999896e-05, 1.5722000000002734e-05, 1.6208000000003664e-05, 1.563899999999785e-05, 1.604100000000136e-05, 1.5695000000003068e-05, 1.58889999999981e-05, 1.6542000000001333e-05, 1.6528000000001764e-05, 1.5764000000001444e-05, 1.5679999999997085e-05, 1.6584000000000043e-05, 1.636099999999946e-05, 1.5848000000005802e-05, 1.6542000000001333e-05, 1.604100000000136e-05, 1.6193999999997155e-05, 1.602700000000179e-05, 1.6542000000001333e-05, 1.5721999999995795e-05, 1.6042000000000833e-05, 1.6348000000006302e-05, 1.586099999999896e-05, 1.6721999999996795e-05, 1.604099999999442e-05, 1.658300000000057e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.880" endtime="20201112 10:15:01.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.869" endtime="20201112 10:15:01.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.892" endtime="20201112 10:15:01.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.900" endtime="20201112 10:15:01.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.896" endtime="20201112 10:15:01.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.888" endtime="20201112 10:15:01.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.370" endtime="20201112 10:15:01.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.369" endtime="20201112 10:15:01.926"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.949" endtime="20201112 10:15:01.963"></status>
</kw>
<msg timestamp="20201112 10:15:01.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.945" endtime="20201112 10:15:01.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.966" endtime="20201112 10:15:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.973" endtime="20201112 10:15:01.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.938" endtime="20201112 10:15:01.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.933" endtime="20201112 10:15:01.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.997" endtime="20201112 10:15:02.334"></status>
</kw>
<msg timestamp="20201112 10:15:02.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039793514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039809875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.994" endtime="20201112 10:15:02.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039793514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039809875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.344" endtime="20201112 10:15:02.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.362" endtime="20201112 10:15:02.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.985" endtime="20201112 10:15:02.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.981" endtime="20201112 10:15:02.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.381" level="INFO">${RESULT} = [{'time': 0.039809875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.636099999999946e-05, 'source_diff': 1.636099999999946e-05}, {'time': 0.039832819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:02.372" endtime="20201112 10:15:02.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:02.383" endtime="20201112 10:15:02.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.422" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.420" endtime="20201112 10:15:02.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.427" level="INFO">VALUE: [1.636099999999946e-05, 1.60690000000005e-05, 1.6028000000001263e-05, 1.6528000000001764e-05, 1.581900000000025e-05, 1.5679999999997085e-05, 1.5708000000003164e-05, 1.5707999999996225e-05, 1.57089999999957e-05, 1.5709000000002638e-05, 1.6222000000003234e-05, 1.5707999999996225e-05, 1.637499999999903e-05, 1.5694000000003594e-05, 1.6542000000001333e-05, 1.6528000000001764e-05, 1.5875000000005468e-05, 1.5958000000003414e-05, 1.6195000000003568e-05, 1.6429999999997835e-05, 1.5693999999996655e-05, 1.6207999999996725e-05, 1.63889999999986e-05, 1.6542000000001333e-05, 1.6000000000002124e-05, 1.637499999999903e-05, 1.658300000000057e-05, 1.669499999999713e-05, 1.5679999999997085e-05, 1.5708000000003164e-05, 1.63889999999986e-05, 1.6207999999996725e-05, 1.637499999999903e-05, 1.6292000000001083e-05, 1.5709000000002638e-05, 1.6207999999996725e-05, 1.6389000000005538e-05, 1.58889999999981e-05, 1.5708000000003164e-05, 1.6306000000000653e-05, 1.5750000000001874e-05, 1.6735999999996365e-05, 1.586099999999896e-05, 1.6195000000003568e-05, 1.5708000000003164e-05, 1.6014000000001694e-05, 1.6708000000004164e-05, 1.6221999999996295e-05, 1.6361999999998933e-05, 1.6056000000000403e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.424" endtime="20201112 10:15:02.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.413" endtime="20201112 10:15:02.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.436" endtime="20201112 10:15:02.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.444" endtime="20201112 10:15:02.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.440" endtime="20201112 10:15:02.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.431" endtime="20201112 10:15:02.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.928" endtime="20201112 10:15:02.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.927" endtime="20201112 10:15:02.470"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.492" endtime="20201112 10:15:02.506"></status>
</kw>
<msg timestamp="20201112 10:15:02.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.489" endtime="20201112 10:15:02.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.510" endtime="20201112 10:15:02.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.516" endtime="20201112 10:15:02.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.482" endtime="20201112 10:15:02.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.476" endtime="20201112 10:15:02.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.540" endtime="20201112 10:15:02.876"></status>
</kw>
<msg timestamp="20201112 10:15:02.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03984425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.536" endtime="20201112 10:15:02.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03984425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:02.886" endtime="20201112 10:15:02.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.904" endtime="20201112 10:15:02.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.530" endtime="20201112 10:15:02.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.525" endtime="20201112 10:15:02.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.923" level="INFO">${RESULT} = [{'time': 0.039860444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6194000000004094e-05, 'source_diff': 1.6194000000004094e-05}, {'time': 0.039882389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.914" endtime="20201112 10:15:02.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:02.925" endtime="20201112 10:15:02.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.965" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.963" endtime="20201112 10:15:02.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.971" level="INFO">VALUE: [1.6194000000004094e-05, 1.590299999999767e-05, 1.6042000000000833e-05, 1.6013999999994755e-05, 1.605500000000093e-05, 1.5708000000003164e-05, 1.587499999999853e-05, 1.6542000000001333e-05, 1.586099999999896e-05, 1.654100000000186e-05, 1.6528000000001764e-05, 1.6542000000001333e-05, 1.5693999999996655e-05, 1.6208000000003664e-05, 1.6347999999999363e-05, 1.586099999999896e-05, 1.6221999999996295e-05, 1.5679999999997085e-05, 1.6056000000000403e-05, 1.587499999999853e-05, 1.6042000000000833e-05, 1.6209000000003138e-05, 1.5695000000003068e-05, 1.5875000000005468e-05, 1.636099999999946e-05, 1.6042000000000833e-05, 1.587499999999853e-05, 1.5709000000002638e-05, 1.5875000000005468e-05, 1.6708000000004164e-05, 1.590299999999767e-05, 1.5875000000005468e-05, 1.6042000000000833e-05, 1.655500000000143e-05, 1.6208000000003664e-05, 1.6402000000005634e-05, 1.6207999999996725e-05, 1.5707999999996225e-05, 1.6292000000001083e-05, 1.6042000000000833e-05, 1.590299999999767e-05, 1.5693999999996655e-05, 1.5721999999995795e-05, 1.6527999999994825e-05, 1.659700000000014e-05, 1.6207999999996725e-05, 1.619499999999663e-05, 1.587499999999853e-05, 1.6223000000002707e-05, 1.637499999999903e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.968" endtime="20201112 10:15:02.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.956" endtime="20201112 10:15:02.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.980" endtime="20201112 10:15:02.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.988" endtime="20201112 10:15:03.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.983" endtime="20201112 10:15:03.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.975" endtime="20201112 10:15:03.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.472" endtime="20201112 10:15:03.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.471" endtime="20201112 10:15:03.014"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.038" endtime="20201112 10:15:03.055"></status>
</kw>
<msg timestamp="20201112 10:15:03.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.034" endtime="20201112 10:15:03.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.058" endtime="20201112 10:15:03.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.064" endtime="20201112 10:15:03.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.027" endtime="20201112 10:15:03.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.021" endtime="20201112 10:15:03.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.087" endtime="20201112 10:15:03.437"></status>
</kw>
<msg timestamp="20201112 10:15:03.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042355681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.084" endtime="20201112 10:15:03.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042355681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.447" endtime="20201112 10:15:03.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.465" endtime="20201112 10:15:03.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.077" endtime="20201112 10:15:03.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.072" endtime="20201112 10:15:03.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.482" level="INFO">${RESULT} = [{'time': 0.042372222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.654100000000186e-05, 'source_diff': 1.654100000000186e-05}, {'time': 0.042400208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.473" endtime="20201112 10:15:03.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.514" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:03.484" endtime="20201112 10:15:03.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.525" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.522" endtime="20201112 10:15:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.530" level="INFO">VALUE: [1.654100000000186e-05, 1.6208000000003664e-05, 1.6028000000001263e-05, 1.5861000000005898e-05, 1.6193999999997155e-05, 1.6528000000001764e-05, 1.605500000000093e-05, 1.6223000000002707e-05, 1.619499999999663e-05, 1.6221999999996295e-05, 1.5708000000003164e-05, 1.5693999999996655e-05, 1.651300000000272e-05, 1.6431000000004248e-05, 1.6528000000001764e-05, 1.6193999999997155e-05, 1.6208000000003664e-05, 1.586099999999896e-05, 1.586099999999896e-05, 1.619499999999663e-05, 1.6389000000005538e-05, 1.586099999999896e-05, 1.586099999999896e-05, 1.63889999999986e-05, 1.6028000000001263e-05, 1.652700000000229e-05, 1.586099999999896e-05, 1.5694000000003594e-05, 1.6167000000004428e-05, 1.587499999999853e-05, 1.5707999999996225e-05, 1.637499999999903e-05, 1.587499999999853e-05, 1.654100000000186e-05, 1.5958000000003414e-05, 1.6208000000003664e-05, 1.637499999999903e-05, 1.6207999999996725e-05, 1.6207999999996725e-05, 1.602700000000179e-05, 1.565299999999742e-05, 1.6236000000002804e-05, 1.652700000000229e-05, 1.658300000000057e-05, 1.604100000000136e-05, 1.5694000000003594e-05, 1.6542000000001333e-05, 1.6527999999994825e-05, 1.6167000000004428e-05, 1.5861000000005898e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.527" endtime="20201112 10:15:03.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.516" endtime="20201112 10:15:03.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.539" endtime="20201112 10:15:03.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.547" endtime="20201112 10:15:03.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.543" endtime="20201112 10:15:03.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.534" endtime="20201112 10:15:03.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.016" endtime="20201112 10:15:03.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.015" endtime="20201112 10:15:03.573"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.596" endtime="20201112 10:15:03.612"></status>
</kw>
<msg timestamp="20201112 10:15:03.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.593" endtime="20201112 10:15:03.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.616" endtime="20201112 10:15:03.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.622" endtime="20201112 10:15:03.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.586" endtime="20201112 10:15:03.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.580" endtime="20201112 10:15:03.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.645" endtime="20201112 10:15:03.990"></status>
</kw>
<msg timestamp="20201112 10:15:03.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040722931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040746597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.641" endtime="20201112 10:15:03.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040722931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040746597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.000" endtime="20201112 10:15:04.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.019" endtime="20201112 10:15:04.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.634" endtime="20201112 10:15:04.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.630" endtime="20201112 10:15:04.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.036" level="INFO">${RESULT} = [{'time': 0.040746597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3666000000005516e-05, 'source_diff': 2.3666000000005516e-05}, {'time': 0.040777681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:04.027" endtime="20201112 10:15:04.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.069" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:04.038" endtime="20201112 10:15:04.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.080" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.078" endtime="20201112 10:15:04.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.086" level="INFO">VALUE: [2.3666000000005516e-05, 2.3320000000000285e-05, 2.265299999999748e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.336099999999952e-05, 2.3513999999995316e-05, 2.283299999999988e-05, 2.3514000000002255e-05, 2.318100000000406e-05, 2.283299999999988e-05, 2.2929999999997397e-05, 2.263899999999791e-05, 2.3499999999995747e-05, 2.3500000000002685e-05, 2.313899999999841e-05, 2.2986000000002615e-05, 2.263900000000485e-05, 2.334699999999995e-05, 2.2861999999998495e-05, 2.3013999999994816e-05, 2.29169999999973e-05, 2.3528000000001825e-05, 2.3166000000005016e-05, 2.2943999999996967e-05, 2.3179999999997647e-05, 2.2792000000000645e-05, 2.283299999999988e-05, 2.3486000000003115e-05, 2.362499999999934e-05, 2.266699999999705e-05, 2.3000000000002185e-05, 2.315299999999798e-05, 2.2680000000004086e-05, 2.3014000000001755e-05, 2.3028000000001325e-05, 2.2999999999995246e-05, 2.3013999999994816e-05, 2.2665999999997577e-05, 2.2833999999999355e-05, 2.3320000000000285e-05, 2.3028000000001325e-05, 2.316699999999755e-05, 2.333300000000038e-05, 2.3528000000001825e-05, 2.366699999999805e-05, 2.318100000000406e-05, 2.3514000000002255e-05, 2.3512999999995843e-05, 2.263900000000485e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.082" endtime="20201112 10:15:04.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.070" endtime="20201112 10:15:04.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.095" endtime="20201112 10:15:04.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.104" endtime="20201112 10:15:04.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.099" endtime="20201112 10:15:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.090" endtime="20201112 10:15:04.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.575" endtime="20201112 10:15:04.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.574" endtime="20201112 10:15:04.130"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.152" endtime="20201112 10:15:04.167"></status>
</kw>
<msg timestamp="20201112 10:15:04.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.149" endtime="20201112 10:15:04.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.170" endtime="20201112 10:15:04.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.177" endtime="20201112 10:15:04.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.142" endtime="20201112 10:15:04.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.136" endtime="20201112 10:15:04.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.200" endtime="20201112 10:15:04.547"></status>
</kw>
<msg timestamp="20201112 10:15:04.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040194569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.196" endtime="20201112 10:15:04.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040194569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.556" endtime="20201112 10:15:04.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.575" endtime="20201112 10:15:04.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.189" endtime="20201112 10:15:04.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.185" endtime="20201112 10:15:04.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.592" level="INFO">${RESULT} = [{'time': 0.040217556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.298700000000209e-05, 'source_diff': 2.298700000000209e-05}, {'time': 0.040245583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.583" endtime="20201112 10:15:04.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:04.594" endtime="20201112 10:15:04.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.634" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.632" endtime="20201112 10:15:04.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.640" level="INFO">VALUE: [2.298700000000209e-05, 2.283299999999988e-05, 2.315300000000492e-05, 2.315299999999798e-05, 2.316699999999755e-05, 2.315299999999798e-05, 2.3056000000000465e-05, 2.3180000000004586e-05, 2.2735999999995427e-05, 2.315299999999798e-05, 2.2985999999995677e-05, 2.266700000000399e-05, 2.3499999999995747e-05, 2.2806000000000215e-05, 2.283299999999988e-05, 2.2792000000000645e-05, 2.2833999999999355e-05, 2.281900000000031e-05, 2.283299999999988e-05, 2.3500000000002685e-05, 2.3320000000000285e-05, 2.284700000000639e-05, 2.3000000000002185e-05, 2.286099999999902e-05, 2.3540999999994983e-05, 2.3208000000003726e-05, 2.313900000000535e-05, 2.3013999999994816e-05, 2.3486000000003115e-05, 2.3180000000004586e-05, 2.2819999999999785e-05, 2.3306000000000715e-05, 2.3347999999999425e-05, 2.330500000000124e-05, 2.3500000000002685e-05, 2.3000000000002185e-05, 2.312500000000578e-05, 2.2999999999995246e-05, 2.334699999999995e-05, 2.318099999999712e-05, 2.3499999999995747e-05, 2.268099999999662e-05, 2.316700000000449e-05, 2.3348000000006364e-05, 2.3000000000002185e-05, 2.368099999999762e-05, 2.2847999999998925e-05, 2.3514000000002255e-05, 2.351300000000278e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.637" endtime="20201112 10:15:04.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.625" endtime="20201112 10:15:04.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.655" endtime="20201112 10:15:04.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.663" endtime="20201112 10:15:04.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.659" endtime="20201112 10:15:04.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.651" endtime="20201112 10:15:04.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.132" endtime="20201112 10:15:04.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.131" endtime="20201112 10:15:04.689"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.711" endtime="20201112 10:15:04.728"></status>
</kw>
<msg timestamp="20201112 10:15:04.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.708" endtime="20201112 10:15:04.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.731" endtime="20201112 10:15:04.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.737" endtime="20201112 10:15:04.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.701" endtime="20201112 10:15:04.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.695" endtime="20201112 10:15:04.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.760" endtime="20201112 10:15:05.110"></status>
</kw>
<msg timestamp="20201112 10:15:05.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039598278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039621444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.757" endtime="20201112 10:15:05.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039598278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039621444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.120" endtime="20201112 10:15:05.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.138" endtime="20201112 10:15:05.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.750" endtime="20201112 10:15:05.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.745" endtime="20201112 10:15:05.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.156" level="INFO">${RESULT} = [{'time': 0.039621444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3165999999998077e-05, 'source_diff': 2.3165999999998077e-05}, {'time': 0.039650597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:05.147" endtime="20201112 10:15:05.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.186" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:05.158" endtime="20201112 10:15:05.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.200" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.195" endtime="20201112 10:15:05.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.205" level="INFO">VALUE: [2.3165999999998077e-05, 2.3000000000002185e-05, 2.3014000000001755e-05, 2.3707999999997287e-05, 2.2834000000006294e-05, 2.318100000000406e-05, 2.316699999999755e-05, 2.284699999999945e-05, 2.3472000000003546e-05, 2.315299999999798e-05, 2.333300000000038e-05, 2.316700000000449e-05, 2.2986000000002615e-05, 2.3193999999997217e-05, 2.336100000000646e-05, 2.283299999999988e-05, 2.30969999999997e-05, 2.3320000000000285e-05, 2.3193999999997217e-05, 2.368099999999762e-05, 2.283299999999988e-05, 2.2999999999995246e-05, 2.3500000000002685e-05, 2.3333999999999855e-05, 2.287500000000553e-05, 2.366699999999805e-05, 2.283299999999988e-05, 2.334699999999995e-05, 2.348699999999565e-05, 2.3513999999995316e-05, 2.3165999999998077e-05, 2.2680000000004086e-05, 2.318100000000406e-05, 2.3444000000004406e-05, 2.313899999999841e-05, 2.2679999999997147e-05, 2.3013999999994816e-05, 2.354100000000192e-05, 2.2999999999995246e-05, 2.3347999999999425e-05, 2.3486000000003115e-05, 2.3486000000003115e-05, 2.2847999999998925e-05, 2.2792000000000645e-05, 2.331900000000081e-05, 2.3137999999998937e-05, 2.33890000000056e-05, 2.3651999999999007e-05, 2.336099999999952e-05, 2.3333999999999855e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.202" endtime="20201112 10:15:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.188" endtime="20201112 10:15:05.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.215" endtime="20201112 10:15:05.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.223" endtime="20201112 10:15:05.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.219" endtime="20201112 10:15:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.210" endtime="20201112 10:15:05.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.691" endtime="20201112 10:15:05.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.690" endtime="20201112 10:15:05.249"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.271" endtime="20201112 10:15:05.288"></status>
</kw>
<msg timestamp="20201112 10:15:05.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.268" endtime="20201112 10:15:05.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.291" endtime="20201112 10:15:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.297" endtime="20201112 10:15:05.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.261" endtime="20201112 10:15:05.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.255" endtime="20201112 10:15:05.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.320" endtime="20201112 10:15:05.668"></status>
</kw>
<msg timestamp="20201112 10:15:05.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.317" endtime="20201112 10:15:05.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.677" endtime="20201112 10:15:05.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.696" endtime="20201112 10:15:05.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.310" endtime="20201112 10:15:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.305" endtime="20201112 10:15:05.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.713" level="INFO">${RESULT} = [{'time': 0.039761194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.302700000000185e-05, 'source_diff': 2.302700000000185e-05}, {'time': 0.039795208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.704" endtime="20201112 10:15:05.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:05.715" endtime="20201112 10:15:05.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.755" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.753" endtime="20201112 10:15:05.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.760" level="INFO">VALUE: [2.302700000000185e-05, 2.3179999999997647e-05, 2.268100000000356e-05, 2.3528000000001825e-05, 2.283299999999988e-05, 2.3570000000000535e-05, 2.368099999999762e-05, 2.3027999999994386e-05, 2.3014000000001755e-05, 2.3014000000001755e-05, 2.284699999999945e-05, 2.319500000000363e-05, 2.2764000000001505e-05, 2.286099999999902e-05, 2.3500000000002685e-05, 2.3000000000002185e-05, 2.284699999999945e-05, 2.3000000000002185e-05, 2.3486000000003115e-05, 2.3513999999995316e-05, 2.366699999999805e-05, 2.2819999999999785e-05, 2.3665999999998577e-05, 2.2708000000003226e-05, 2.280500000000074e-05, 2.333300000000038e-05, 2.319499999999669e-05, 2.3012999999995343e-05, 2.333300000000038e-05, 2.3014000000001755e-05, 2.3514000000002255e-05, 2.334699999999995e-05, 2.3665999999998577e-05, 2.2679999999997147e-05, 2.284699999999945e-05, 2.334699999999995e-05, 2.2847999999998925e-05, 2.369500000000413e-05, 2.320899999999626e-05, 2.3000000000002185e-05, 2.286099999999902e-05, 2.3486000000003115e-05, 2.3722000000003796e-05, 2.3500000000002685e-05, 2.3763999999995566e-05, 2.334699999999995e-05, 2.268100000000356e-05, 2.284699999999945e-05, 2.3485999999996177e-05, 2.283299999999988e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.757" endtime="20201112 10:15:05.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.746" endtime="20201112 10:15:05.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.769" endtime="20201112 10:15:05.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.779" endtime="20201112 10:15:05.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.773" endtime="20201112 10:15:05.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.765" endtime="20201112 10:15:05.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.251" endtime="20201112 10:15:05.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.250" endtime="20201112 10:15:05.805"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.827" endtime="20201112 10:15:05.844"></status>
</kw>
<msg timestamp="20201112 10:15:05.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.824" endtime="20201112 10:15:05.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.847" endtime="20201112 10:15:05.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.853" endtime="20201112 10:15:05.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.817" endtime="20201112 10:15:05.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.811" endtime="20201112 10:15:05.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.876" endtime="20201112 10:15:06.223"></status>
</kw>
<msg timestamp="20201112 10:15:06.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.873" endtime="20201112 10:15:06.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.233" endtime="20201112 10:15:06.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.251" endtime="20201112 10:15:06.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.866" endtime="20201112 10:15:06.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.861" endtime="20201112 10:15:06.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.268" level="INFO">${RESULT} = [{'time': 0.039860458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3665999999998577e-05, 'source_diff': 2.3665999999998577e-05}, {'time': 0.039893556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:06.260" endtime="20201112 10:15:06.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:06.270" endtime="20201112 10:15:06.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.310" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.307" endtime="20201112 10:15:06.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.315" level="INFO">VALUE: [2.3665999999998577e-05, 2.3499999999995747e-05, 2.331900000000081e-05, 2.2833999999999355e-05, 2.315299999999798e-05, 2.286099999999902e-05, 2.337499999999909e-05, 2.266699999999705e-05, 2.3000000000002185e-05, 2.2833999999999355e-05, 2.365299999999848e-05, 2.315299999999798e-05, 2.2986000000002615e-05, 2.3514000000002255e-05, 2.266699999999705e-05, 2.3500000000002685e-05, 2.2819999999999785e-05, 2.2819999999999785e-05, 2.318100000000406e-05, 2.318099999999712e-05, 2.318099999999712e-05, 2.284699999999945e-05, 2.266699999999705e-05, 2.3665999999998577e-05, 2.283299999999988e-05, 2.3084000000006544e-05, 2.298700000000209e-05, 2.3527999999994886e-05, 2.3485999999996177e-05, 2.2819999999999785e-05, 2.368100000000456e-05, 2.3318999999993872e-05, 2.3000000000002185e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.318099999999712e-05, 2.3499999999995747e-05, 2.318099999999712e-05, 2.3665999999998577e-05, 2.284700000000639e-05, 2.2665999999997577e-05, 2.3361999999998995e-05, 2.363899999999891e-05, 2.2999999999995246e-05, 2.333300000000038e-05, 2.3500000000002685e-05, 2.2680000000004086e-05, 2.334699999999995e-05, 2.283299999999988e-05, 2.283299999999988e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.312" endtime="20201112 10:15:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.301" endtime="20201112 10:15:06.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.324" endtime="20201112 10:15:06.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.332" endtime="20201112 10:15:06.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.328" endtime="20201112 10:15:06.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.320" endtime="20201112 10:15:06.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.807" endtime="20201112 10:15:06.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.806" endtime="20201112 10:15:06.360"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.382" endtime="20201112 10:15:06.399"></status>
</kw>
<msg timestamp="20201112 10:15:06.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.379" endtime="20201112 10:15:06.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.402" endtime="20201112 10:15:06.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.408" endtime="20201112 10:15:06.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.372" endtime="20201112 10:15:06.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.366" endtime="20201112 10:15:06.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.431" endtime="20201112 10:15:06.780"></status>
</kw>
<msg timestamp="20201112 10:15:06.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040217625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.428" endtime="20201112 10:15:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040217625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.790" endtime="20201112 10:15:06.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.808" endtime="20201112 10:15:06.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.421" endtime="20201112 10:15:06.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.416" endtime="20201112 10:15:06.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.825" level="INFO">${RESULT} = [{'time': 0.040240611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2986000000002615e-05, 'source_diff': 2.2986000000002615e-05}, {'time': 0.040269806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:06.816" endtime="20201112 10:15:06.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:06.827" endtime="20201112 10:15:06.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.866" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.864" endtime="20201112 10:15:06.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.871" level="INFO">VALUE: [2.2986000000002615e-05, 2.320899999999626e-05, 2.334699999999995e-05, 2.286099999999902e-05, 2.3513999999995316e-05, 2.2750000000001935e-05, 2.3527999999994886e-05, 2.318099999999712e-05, 2.3014000000001755e-05, 2.316699999999755e-05, 2.3193999999997217e-05, 2.337499999999909e-05, 2.334699999999995e-05, 2.3221999999996357e-05, 2.3499999999995747e-05, 2.287499999999859e-05, 2.2680000000004086e-05, 2.283299999999988e-05, 2.3208000000003726e-05, 2.288899999999816e-05, 2.3014000000001755e-05, 2.3707999999997287e-05, 2.3693999999997717e-05, 2.3028000000001325e-05, 2.286099999999902e-05, 2.368099999999762e-05, 2.3014000000001755e-05, 2.279100000000117e-05, 2.268100000000356e-05, 2.306900000000056e-05, 2.3679999999998147e-05, 2.370899999999676e-05, 2.286099999999902e-05, 2.3180000000004586e-05, 2.268099999999662e-05, 2.266700000000399e-05, 2.284700000000639e-05, 2.284699999999945e-05, 2.336099999999952e-05, 2.2847999999998925e-05, 2.2847999999998925e-05, 2.3500000000002685e-05, 2.284699999999945e-05, 2.281900000000031e-05, 2.336099999999952e-05, 2.266699999999705e-05, 2.297300000000252e-05, 2.315300000000492e-05, 2.2861999999998495e-05, 2.340300000000517e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.868" endtime="20201112 10:15:06.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.857" endtime="20201112 10:15:06.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.881" endtime="20201112 10:15:06.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.889" endtime="20201112 10:15:06.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.885" endtime="20201112 10:15:06.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.876" endtime="20201112 10:15:06.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.362" endtime="20201112 10:15:06.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.361" endtime="20201112 10:15:06.915"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.940" endtime="20201112 10:15:06.956"></status>
</kw>
<msg timestamp="20201112 10:15:06.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.936" endtime="20201112 10:15:06.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.960" endtime="20201112 10:15:06.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.966" endtime="20201112 10:15:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.929" endtime="20201112 10:15:06.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.922" endtime="20201112 10:15:06.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.989" endtime="20201112 10:15:07.336"></status>
</kw>
<msg timestamp="20201112 10:15:07.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.985" endtime="20201112 10:15:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.346" endtime="20201112 10:15:07.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.364" endtime="20201112 10:15:07.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.978" endtime="20201112 10:15:07.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.974" endtime="20201112 10:15:07.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.381" level="INFO">${RESULT} = [{'time': 0.041825069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3221999999996357e-05, 'source_diff': 2.3221999999996357e-05}, {'time': 0.041858083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.373" endtime="20201112 10:15:07.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:07.383" endtime="20201112 10:15:07.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.422" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.420" endtime="20201112 10:15:07.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.428" level="INFO">VALUE: [2.3221999999996357e-05, 2.281900000000031e-05, 2.3179999999997647e-05, 2.3028000000001325e-05, 2.3194000000004156e-05, 2.3500000000002685e-05, 2.347300000000302e-05, 2.3014000000001755e-05, 2.2847999999998925e-05, 2.306900000000056e-05, 2.268099999999662e-05, 2.3165999999998077e-05, 2.366700000000499e-05, 2.3680000000005086e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3180000000004586e-05, 2.334699999999995e-05, 2.290299999999773e-05, 2.337499999999909e-05, 2.315300000000492e-05, 2.3514000000002255e-05, 2.2693999999996717e-05, 2.32090000000032e-05, 2.2847999999998925e-05, 2.333300000000038e-05, 2.2665999999997577e-05, 2.268099999999662e-05, 2.3070000000000035e-05, 2.3513999999995316e-05, 2.284700000000639e-05, 2.354100000000192e-05, 2.290299999999773e-05, 2.3014000000001755e-05, 2.3070000000000035e-05, 2.3514000000002255e-05, 2.2999999999995246e-05, 2.284699999999945e-05, 2.272300000000227e-05, 2.3165999999998077e-05, 2.269499999999619e-05, 2.3306000000000715e-05, 2.3500000000002685e-05, 2.3193999999997217e-05, 2.336099999999952e-05, 2.330500000000124e-05, 2.3513999999995316e-05, 2.318099999999712e-05, 2.284699999999945e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.424" endtime="20201112 10:15:07.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.413" endtime="20201112 10:15:07.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.437" endtime="20201112 10:15:07.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.445" endtime="20201112 10:15:07.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.441" endtime="20201112 10:15:07.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.432" endtime="20201112 10:15:07.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.917" endtime="20201112 10:15:07.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.916" endtime="20201112 10:15:07.471"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.493" endtime="20201112 10:15:07.512"></status>
</kw>
<msg timestamp="20201112 10:15:07.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.490" endtime="20201112 10:15:07.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.516" endtime="20201112 10:15:07.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.522" endtime="20201112 10:15:07.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.483" endtime="20201112 10:15:07.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.477" endtime="20201112 10:15:07.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.545" endtime="20201112 10:15:07.894"></status>
</kw>
<msg timestamp="20201112 10:15:07.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.542" endtime="20201112 10:15:07.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.903" endtime="20201112 10:15:07.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.922" endtime="20201112 10:15:07.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.535" endtime="20201112 10:15:07.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.530" endtime="20201112 10:15:07.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.939" level="INFO">${RESULT} = [{'time': 0.039883375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0166999999997612e-05, 'source_diff': 3.0166999999997612e-05}, {'time': 0.039920514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.930" endtime="20201112 10:15:07.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:07.941" endtime="20201112 10:15:07.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.980" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.978" endtime="20201112 10:15:07.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.985" level="INFO">VALUE: [3.0166999999997612e-05, 3.0096999999999763e-05, 2.9791000000001233e-05, 3.0333000000000443e-05, 2.997300000000258e-05, 2.9874999999998653e-05, 3.065299999999854e-05, 3.0486000000003177e-05, 3.0333000000000443e-05, 3.065299999999854e-05, 3.0430999999997432e-05, 2.9819000000000373e-05, 3.0166999999997612e-05, 3.0333000000000443e-05, 2.9819000000000373e-05, 2.9985999999995738e-05, 3.048599999999624e-05, 3.0137999999999e-05, 3.0152999999998042e-05, 2.9986999999995212e-05, 2.9819000000000373e-05, 3.0236000000002927e-05, 3.0137999999999e-05, 3.0278000000001637e-05, 3.015300000000498e-05, 3.020799999999685e-05, 2.963900000000491e-05, 3.0305000000001303e-05, 3.015199999999857e-05, 3.0333999999999917e-05, 2.9638999999997973e-05, 3.04579999999971e-05, 2.9958999999996072e-05, 3.065299999999854e-05, 2.9972000000003107e-05, 2.9805000000000803e-05, 3.066699999999811e-05, 2.9805000000000803e-05, 3.0500000000002747e-05, 3.0000000000002247e-05, 3.063899999999897e-05, 2.9819999999999847e-05, 3.063899999999897e-05, 3.0306000000000777e-05, 3.0320000000000347e-05, 3.0000000000002247e-05, 2.9624999999998403e-05, 2.9652999999997542e-05, 3.0416999999997862e-05, 3.0000000000002247e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.982" endtime="20201112 10:15:07.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.971" endtime="20201112 10:15:07.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.995" endtime="20201112 10:15:07.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.003" endtime="20201112 10:15:08.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.999" endtime="20201112 10:15:08.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.990" endtime="20201112 10:15:08.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.473" endtime="20201112 10:15:08.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.472" endtime="20201112 10:15:08.029"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.052" endtime="20201112 10:15:08.067"></status>
</kw>
<msg timestamp="20201112 10:15:08.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.048" endtime="20201112 10:15:08.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.070" endtime="20201112 10:15:08.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.076" endtime="20201112 10:15:08.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.041" endtime="20201112 10:15:08.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.035" endtime="20201112 10:15:08.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.101" endtime="20201112 10:15:08.437"></status>
</kw>
<msg timestamp="20201112 10:15:08.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040144236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.098" endtime="20201112 10:15:08.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040144236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.447" endtime="20201112 10:15:08.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.466" endtime="20201112 10:15:08.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.089" endtime="20201112 10:15:08.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.084" endtime="20201112 10:15:08.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.483" level="INFO">${RESULT} = [{'time': 0.040144236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.040180347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:08.474" endtime="20201112 10:15:08.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:08.485" endtime="20201112 10:15:08.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.524" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.522" endtime="20201112 10:15:08.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.529" level="INFO">VALUE: [3.0138999999998473e-05, 3.048599999999624e-05, 3.0305999999993838e-05, 3.055500000000155e-05, 2.9819000000000373e-05, 2.9985999999995738e-05, 3.0458000000004037e-05, 3.0472000000003607e-05, 3.06249999999994e-05, 3.063900000000591e-05, 3.0138999999998473e-05, 3.0292000000001207e-05, 2.997300000000258e-05, 3.0166000000005078e-05, 2.9874999999998653e-05, 2.9762999999995154e-05, 2.9791000000001233e-05, 3.013900000000541e-05, 2.9819000000000373e-05, 3.065299999999854e-05, 3.0278000000001637e-05, 2.9958000000003537e-05, 2.997199999999617e-05, 3.0472000000003607e-05, 2.9806000000000277e-05, 3.0166999999997612e-05, 2.9777999999994198e-05, 2.9832999999999943e-05, 2.963900000000491e-05, 3.0124999999998903e-05, 2.9805000000000803e-05, 3.0306000000000777e-05, 2.9846999999999513e-05, 2.9972999999995642e-05, 3.065199999999907e-05, 3.019399999999728e-05, 3.063899999999897e-05, 3.016700000000455e-05, 3.016599999999814e-05, 3.0499999999995808e-05, 3.0320000000000347e-05, 3.065199999999907e-05, 2.9986000000002677e-05, 3.066599999999864e-05, 2.9652999999997542e-05, 3.044500000000394e-05, 3.0166999999997612e-05, 3.0124999999998903e-05, 2.963900000000491e-05, 3.0347000000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.526" endtime="20201112 10:15:08.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.515" endtime="20201112 10:15:08.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.538" endtime="20201112 10:15:08.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.547" endtime="20201112 10:15:08.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.542" endtime="20201112 10:15:08.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.534" endtime="20201112 10:15:08.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.031" endtime="20201112 10:15:08.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.030" endtime="20201112 10:15:08.573"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.595" endtime="20201112 10:15:08.611"></status>
</kw>
<msg timestamp="20201112 10:15:08.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.592" endtime="20201112 10:15:08.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.614" endtime="20201112 10:15:08.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.620" endtime="20201112 10:15:08.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.585" endtime="20201112 10:15:08.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.579" endtime="20201112 10:15:08.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.643" endtime="20201112 10:15:09.005"></status>
</kw>
<msg timestamp="20201112 10:15:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.640" endtime="20201112 10:15:09.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.016" endtime="20201112 10:15:09.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.036" endtime="20201112 10:15:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.632" endtime="20201112 10:15:09.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.628" endtime="20201112 10:15:09.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.053" level="INFO">${RESULT} = [{'time': 0.039815778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0486000000003177e-05, 'source_diff': 3.0486000000003177e-05}, {'time': 0.039853889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:09.044" endtime="20201112 10:15:09.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.085" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:09.056" endtime="20201112 10:15:09.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.096" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.093" endtime="20201112 10:15:09.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.101" level="INFO">VALUE: [3.0486000000003177e-05, 3.0000000000002247e-05, 3.0500000000002747e-05, 3.066599999999864e-05, 2.9806000000000277e-05, 2.9805000000000803e-05, 2.9792000000000707e-05, 3.0306000000000777e-05, 3.066699999999811e-05, 3.0138999999998473e-05, 3.0194000000004217e-05, 3.0347999999999486e-05, 2.9652999999997542e-05, 3.016599999999814e-05, 3.054100000000198e-05, 3.0138999999998473e-05, 2.9805000000000803e-05, 2.9958999999996072e-05, 3.044399999999753e-05, 3.037500000000609e-05, 3.056900000000112e-05, 2.997300000000258e-05, 2.99579999999966e-05, 2.9694999999996252e-05, 2.997199999999617e-05, 2.997300000000258e-05, 2.9638999999997973e-05, 3.06249999999994e-05, 3.065299999999854e-05, 3.065199999999907e-05, 2.9805000000000803e-05, 2.9819999999999847e-05, 2.992999999999746e-05, 2.997199999999617e-05, 3.047199999999667e-05, 3.0486000000003177e-05, 3.0152999999998042e-05, 3.0458000000004037e-05, 2.9986000000002677e-05, 3.0277000000002163e-05, 2.970799999999635e-05, 3.063899999999897e-05, 2.965199999999807e-05, 2.9958000000003537e-05, 3.0320000000000347e-05, 2.9610999999998833e-05, 2.9986000000002677e-05, 3.059700000000026e-05, 3.0152999999998042e-05, 2.9805000000000803e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.098" endtime="20201112 10:15:09.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.086" endtime="20201112 10:15:09.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.111" endtime="20201112 10:15:09.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.119" endtime="20201112 10:15:09.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.115" endtime="20201112 10:15:09.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.106" endtime="20201112 10:15:09.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.575" endtime="20201112 10:15:09.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.574" endtime="20201112 10:15:09.146"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.171" endtime="20201112 10:15:09.189"></status>
</kw>
<msg timestamp="20201112 10:15:09.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.167" endtime="20201112 10:15:09.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.193" endtime="20201112 10:15:09.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.199" endtime="20201112 10:15:09.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.159" endtime="20201112 10:15:09.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.152" endtime="20201112 10:15:09.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.230" endtime="20201112 10:15:09.569"></status>
</kw>
<msg timestamp="20201112 10:15:09.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.219" endtime="20201112 10:15:09.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.579" endtime="20201112 10:15:09.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.597" endtime="20201112 10:15:09.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.212" endtime="20201112 10:15:09.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.207" endtime="20201112 10:15:09.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.615" level="INFO">${RESULT} = [{'time': 0.043581264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0236000000002927e-05, 'source_diff': 3.0236000000002927e-05}, {'time': 0.043619347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:09.606" endtime="20201112 10:15:09.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.644" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:09.617" endtime="20201112 10:15:09.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.655" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.653" endtime="20201112 10:15:09.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.661" level="INFO">VALUE: [3.0236000000002927e-05, 3.0458000000004037e-05, 3.0319000000000873e-05, 3.0292000000001207e-05, 2.9972000000003107e-05, 2.9778000000001137e-05, 3.061099999999983e-05, 3.05700000000006e-05, 2.9624999999998403e-05, 2.998700000000215e-05, 2.963900000000491e-05, 3.0472000000003607e-05, 3.063900000000591e-05, 3.0319000000000873e-05, 3.0320000000000347e-05, 2.9972000000003107e-05, 3.0333999999999917e-05, 2.9819000000000373e-05, 3.0499999999995808e-05, 2.9652999999997542e-05, 3.0306000000000777e-05, 3.065299999999854e-05, 3.0180999999997182e-05, 2.9806000000000277e-05, 3.0138999999998473e-05, 3.065299999999854e-05, 3.0318999999993934e-05, 3.0138999999998473e-05, 3.0306000000000777e-05, 2.9874999999998653e-05, 2.9652999999997542e-05, 3.0096999999999763e-05, 3.047199999999667e-05, 3.0486000000003177e-05, 3.0000000000002247e-05, 2.9569000000000123e-05, 3.066600000000558e-05, 3.015199999999857e-05, 3.0333000000000443e-05, 3.017999999999771e-05, 3.04579999999971e-05, 2.9972000000003107e-05, 3.013900000000541e-05, 3.0152999999998042e-05, 3.0166000000005078e-05, 2.9819000000000373e-05, 3.044399999999753e-05, 3.0486000000003177e-05, 2.987500000000559e-05, 2.9819000000000373e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.658" endtime="20201112 10:15:09.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.646" endtime="20201112 10:15:09.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.677" endtime="20201112 10:15:09.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.685" endtime="20201112 10:15:09.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.681" endtime="20201112 10:15:09.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.672" endtime="20201112 10:15:09.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.148" endtime="20201112 10:15:09.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.146" endtime="20201112 10:15:09.711"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.733" endtime="20201112 10:15:09.748"></status>
</kw>
<msg timestamp="20201112 10:15:09.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.730" endtime="20201112 10:15:09.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.752" endtime="20201112 10:15:09.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.758" endtime="20201112 10:15:09.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.723" endtime="20201112 10:15:09.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.717" endtime="20201112 10:15:09.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.781" endtime="20201112 10:15:10.116"></status>
</kw>
<msg timestamp="20201112 10:15:10.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039716347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039746653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.778" endtime="20201112 10:15:10.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039716347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039746653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.126" endtime="20201112 10:15:10.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.144" endtime="20201112 10:15:10.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.771" endtime="20201112 10:15:10.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.766" endtime="20201112 10:15:10.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.165" level="INFO">${RESULT} = [{'time': 0.039746653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0306000000000777e-05, 'source_diff': 3.0306000000000777e-05}, {'time': 0.039788708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:10.156" endtime="20201112 10:15:10.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.194" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:10.167" endtime="20201112 10:15:10.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.205" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.203" endtime="20201112 10:15:10.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.211" level="INFO">VALUE: [3.0306000000000777e-05, 3.048599999999624e-05, 3.0319000000000873e-05, 3.0305000000001303e-05, 3.0305000000001303e-05, 2.9638999999997973e-05, 3.0486000000003177e-05, 3.0152999999998042e-05, 3.0333000000000443e-05, 2.9652999999997542e-05, 2.9806000000000277e-05, 3.0486000000003177e-05, 2.9624999999998403e-05, 3.059700000000026e-05, 3.054199999999452e-05, 3.0137999999999e-05, 3.063900000000591e-05, 3.0152999999998042e-05, 3.0124999999998903e-05, 3.0278000000001637e-05, 3.0347000000000013e-05, 3.0472000000003607e-05, 3.0333000000000443e-05, 2.997300000000258e-05, 2.9985999999995738e-05, 3.015300000000498e-05, 2.9819999999999847e-05, 3.0292000000001207e-05, 3.0138999999998473e-05, 3.052700000000241e-05, 3.047199999999667e-05, 2.997300000000258e-05, 3.0292000000001207e-05, 3.066700000000505e-05, 3.047300000000308e-05, 2.9874999999998653e-05, 3.065300000000548e-05, 3.0486000000003177e-05, 3.066700000000505e-05, 2.9722000000002857e-05, 3.063899999999897e-05, 2.962500000000534e-05, 3.038900000000566e-05, 2.99579999999966e-05, 2.9805000000000803e-05, 2.9791000000001233e-05, 2.997199999999617e-05, 3.0320000000000347e-05, 3.066700000000505e-05, 3.0333999999999917e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.208" endtime="20201112 10:15:10.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.196" endtime="20201112 10:15:10.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.220" endtime="20201112 10:15:10.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.228" endtime="20201112 10:15:10.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.224" endtime="20201112 10:15:10.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.216" endtime="20201112 10:15:10.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.713" endtime="20201112 10:15:10.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.711" endtime="20201112 10:15:10.254"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.278" endtime="20201112 10:15:10.293"></status>
</kw>
<msg timestamp="20201112 10:15:10.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.274" endtime="20201112 10:15:10.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.297" endtime="20201112 10:15:10.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.303" endtime="20201112 10:15:10.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.267" endtime="20201112 10:15:10.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.261" endtime="20201112 10:15:10.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.326" endtime="20201112 10:15:10.660"></status>
</kw>
<msg timestamp="20201112 10:15:10.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041273153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.322" endtime="20201112 10:15:10.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041273153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.670" endtime="20201112 10:15:10.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.688" endtime="20201112 10:15:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.315" endtime="20201112 10:15:10.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.311" endtime="20201112 10:15:10.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.707" level="INFO">${RESULT} = [{'time': 0.041302958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9805000000000803e-05, 'source_diff': 2.9805000000000803e-05}, {'time': 0.041342153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:10.698" endtime="20201112 10:15:10.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.737" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:10.709" endtime="20201112 10:15:10.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.748" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.745" endtime="20201112 10:15:10.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.753" level="INFO">VALUE: [2.9805000000000803e-05, 2.9792000000000707e-05, 2.9999999999995308e-05, 3.0388999999998723e-05, 3.048599999999624e-05, 3.0320000000000347e-05, 2.9832999999999943e-05, 3.0444999999997002e-05, 3.0486000000003177e-05, 3.066699999999811e-05, 2.965300000000448e-05, 2.9805000000000803e-05, 2.997300000000258e-05, 3.065299999999854e-05, 2.992999999999746e-05, 3.0305000000001303e-05, 2.96379999999985e-05, 2.9819000000000373e-05, 3.0319000000000873e-05, 3.065199999999907e-05, 2.9819000000000373e-05, 3.0319000000000873e-05, 2.9958000000003537e-05, 3.065299999999854e-05, 2.9805000000000803e-05, 2.9958000000003537e-05, 3.0291999999994268e-05, 3.0028000000001387e-05, 3.044500000000394e-05, 3.048700000000265e-05, 2.9819999999999847e-05, 3.0320000000000347e-05, 2.9819000000000373e-05, 3.061099999999983e-05, 3.0306000000000777e-05, 3.0333000000000443e-05, 3.0514000000002317e-05, 3.0305000000001303e-05, 2.9986000000002677e-05, 2.9832999999999943e-05, 3.0152999999998042e-05, 3.0292000000001207e-05, 2.9804999999993864e-05, 2.9652999999997542e-05, 3.063899999999897e-05, 2.9806000000000277e-05, 3.0333000000000443e-05, 2.9806000000000277e-05, 3.0333000000000443e-05, 3.0166999999997612e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.750" endtime="20201112 10:15:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.739" endtime="20201112 10:15:10.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.762" endtime="20201112 10:15:10.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.770" endtime="20201112 10:15:10.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.766" endtime="20201112 10:15:10.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.758" endtime="20201112 10:15:10.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.256" endtime="20201112 10:15:10.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.255" endtime="20201112 10:15:10.796"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.818" endtime="20201112 10:15:10.833"></status>
</kw>
<msg timestamp="20201112 10:15:10.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.815" endtime="20201112 10:15:10.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.837" endtime="20201112 10:15:10.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.843" endtime="20201112 10:15:10.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.808" endtime="20201112 10:15:10.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.802" endtime="20201112 10:15:10.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.866" endtime="20201112 10:15:11.200"></status>
</kw>
<msg timestamp="20201112 10:15:11.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039562611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039592431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.862" endtime="20201112 10:15:11.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039562611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039592431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.210" endtime="20201112 10:15:11.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.229" endtime="20201112 10:15:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.855" endtime="20201112 10:15:11.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.851" endtime="20201112 10:15:11.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.247" level="INFO">${RESULT} = [{'time': 0.039592431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9819999999999847e-05, 'source_diff': 2.9819999999999847e-05}, {'time': 0.039628375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:11.239" endtime="20201112 10:15:11.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:11.250" endtime="20201112 10:15:11.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.288" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.286" endtime="20201112 10:15:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.294" level="INFO">VALUE: [2.9819999999999847e-05, 3.0306000000000777e-05, 2.99579999999966e-05, 3.0292000000001207e-05, 2.9985999999995738e-05, 3.0333000000000443e-05, 3.0486000000003177e-05, 2.9874999999998653e-05, 3.0333999999999917e-05, 3.0458000000004037e-05, 2.9986000000002677e-05, 3.0486000000003177e-05, 3.0333000000000443e-05, 2.9972000000003107e-05, 2.9986999999995212e-05, 2.9806000000000277e-05, 2.9985999999995738e-05, 3.0055000000001053e-05, 3.063899999999897e-05, 3.0152999999998042e-05, 3.0333000000000443e-05, 3.0320000000000347e-05, 3.0486000000003177e-05, 3.0486000000003177e-05, 2.9806000000000277e-05, 3.047199999999667e-05, 2.9638999999997973e-05, 2.9832999999999943e-05, 2.9791000000001233e-05, 2.9819999999999847e-05, 2.997199999999617e-05, 3.065199999999907e-05, 3.0500000000002747e-05, 3.0305000000001303e-05, 3.063899999999897e-05, 2.9819999999999847e-05, 2.997300000000258e-05, 3.0320000000000347e-05, 3.048599999999624e-05, 3.0500000000002747e-05, 2.997199999999617e-05, 3.0318999999993934e-05, 3.0472000000003607e-05, 3.016700000000455e-05, 2.966700000000405e-05, 2.9832999999999943e-05, 3.0472000000003607e-05, 2.9805000000000803e-05, 2.9819999999999847e-05, 3.0166999999997612e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.291" endtime="20201112 10:15:11.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.279" endtime="20201112 10:15:11.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.304" endtime="20201112 10:15:11.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.312" endtime="20201112 10:15:11.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.308" endtime="20201112 10:15:11.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.299" endtime="20201112 10:15:11.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.798" endtime="20201112 10:15:11.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.797" endtime="20201112 10:15:11.338"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.361" endtime="20201112 10:15:11.376"></status>
</kw>
<msg timestamp="20201112 10:15:11.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.357" endtime="20201112 10:15:11.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.380" endtime="20201112 10:15:11.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.386" endtime="20201112 10:15:11.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.350" endtime="20201112 10:15:11.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.345" endtime="20201112 10:15:11.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.408" endtime="20201112 10:15:11.743"></status>
</kw>
<msg timestamp="20201112 10:15:11.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039874889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.405" endtime="20201112 10:15:11.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039874889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.753" endtime="20201112 10:15:11.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.771" endtime="20201112 10:15:11.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.398" endtime="20201112 10:15:11.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.394" endtime="20201112 10:15:11.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.790" level="INFO">${RESULT} = [{'time': 0.039912194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7305000000001365e-05, 'source_diff': 3.7305000000001365e-05}, {'time': 0.039959181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:11.781" endtime="20201112 10:15:11.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:11.792" endtime="20201112 10:15:11.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.831" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.829" endtime="20201112 10:15:11.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.836" level="INFO">VALUE: [3.7305000000001365e-05, 3.669500000000325e-05, 3.72780000000017e-05, 3.679200000000077e-05, 3.69580000000036e-05, 3.743100000000443e-05, 3.679200000000077e-05, 3.716600000000514e-05, 3.7652999999998604e-05, 3.675000000000206e-05, 3.745799999999716e-05, 3.6958999999996134e-05, 3.686199999999862e-05, 3.677799999999426e-05, 3.7624999999999464e-05, 3.729200000000127e-05, 3.6763000000002155e-05, 3.7611000000006833e-05, 3.747199999999673e-05, 3.71250000000059e-05, 3.718100000000418e-05, 3.7291000000001795e-05, 3.71250000000059e-05, 3.7652999999998604e-05, 3.69450000000035e-05, 3.694399999999709e-05, 3.673600000000249e-05, 3.7277000000002225e-05, 3.694400000000403e-05, 3.7610999999999895e-05, 3.69580000000036e-05, 3.7638999999999034e-05, 3.680600000000034e-05, 3.729200000000127e-05, 3.7624999999999464e-05, 3.7110999999999394e-05, 3.7445000000004e-05, 3.750000000000281e-05, 3.6930999999996994e-05, 3.695799999999666e-05, 3.679200000000077e-05, 3.730600000000084e-05, 3.7305000000001365e-05, 3.729200000000127e-05, 3.697199999999623e-05, 3.67780000000012e-05, 3.680600000000034e-05, 3.745799999999716e-05, 3.7277000000002225e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.833" endtime="20201112 10:15:11.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.822" endtime="20201112 10:15:11.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.845" endtime="20201112 10:15:11.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.853" endtime="20201112 10:15:11.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.849" endtime="20201112 10:15:11.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.841" endtime="20201112 10:15:11.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.341" endtime="20201112 10:15:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.339" endtime="20201112 10:15:11.879"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.901" endtime="20201112 10:15:11.917"></status>
</kw>
<msg timestamp="20201112 10:15:11.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.898" endtime="20201112 10:15:11.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.920" endtime="20201112 10:15:11.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.926" endtime="20201112 10:15:11.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.891" endtime="20201112 10:15:11.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.885" endtime="20201112 10:15:11.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.949" endtime="20201112 10:15:12.285"></status>
</kw>
<msg timestamp="20201112 10:15:12.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039585958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.946" endtime="20201112 10:15:12.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039585958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.294" endtime="20201112 10:15:12.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.313" endtime="20201112 10:15:12.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.939" endtime="20201112 10:15:12.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.934" endtime="20201112 10:15:12.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.334" level="INFO">${RESULT} = [{'time': 0.039623236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.72780000000017e-05, 'source_diff': 3.72780000000017e-05}, {'time': 0.039672444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:12.325" endtime="20201112 10:15:12.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.364" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:12.336" endtime="20201112 10:15:12.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.375" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.373" endtime="20201112 10:15:12.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.381" level="INFO">VALUE: [3.72780000000017e-05, 3.7610999999999895e-05, 3.7638999999999034e-05, 3.695900000000307e-05, 3.744399999999759e-05, 3.67780000000012e-05, 3.7096999999999825e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.747200000000367e-05, 3.7445000000004e-05, 3.6805000000000865e-05, 3.7638999999999034e-05, 3.7445000000004e-05, 3.676400000000163e-05, 3.6944999999996564e-05, 3.7597000000000325e-05, 3.673600000000249e-05, 3.6638999999998034e-05, 3.6874999999998714e-05, 3.69580000000036e-05, 3.6833000000000005e-05, 3.7291000000001795e-05, 3.74580000000041e-05, 3.75979999999998e-05, 3.7597000000000325e-05, 3.747199999999673e-05, 3.7624999999999464e-05, 3.747199999999673e-05, 3.72780000000017e-05, 3.695799999999666e-05, 3.7638999999999034e-05, 3.727799999999476e-05, 3.694399999999709e-05, 3.73059999999939e-05, 3.73059999999939e-05, 3.679200000000077e-05, 3.6791000000001295e-05, 3.67780000000012e-05, 3.67780000000012e-05, 3.729200000000127e-05, 3.71659999999982e-05, 3.741599999999845e-05, 3.6638999999998034e-05, 3.679200000000077e-05, 3.7486999999995774e-05, 3.694400000000403e-05, 3.6777000000001725e-05, 3.691700000000436e-05, 3.74580000000041e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.378" endtime="20201112 10:15:12.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.366" endtime="20201112 10:15:12.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.390" endtime="20201112 10:15:12.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.398" endtime="20201112 10:15:12.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.394" endtime="20201112 10:15:12.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.386" endtime="20201112 10:15:12.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.881" endtime="20201112 10:15:12.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.880" endtime="20201112 10:15:12.424"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.446" endtime="20201112 10:15:12.462"></status>
</kw>
<msg timestamp="20201112 10:15:12.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.443" endtime="20201112 10:15:12.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.465" endtime="20201112 10:15:12.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.471" endtime="20201112 10:15:12.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.436" endtime="20201112 10:15:12.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.430" endtime="20201112 10:15:12.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.494" endtime="20201112 10:15:12.830"></status>
</kw>
<msg timestamp="20201112 10:15:12.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039607903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.491" endtime="20201112 10:15:12.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039607903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.839" endtime="20201112 10:15:12.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.858" endtime="20201112 10:15:12.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.484" endtime="20201112 10:15:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.479" endtime="20201112 10:15:12.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.876" level="INFO">${RESULT} = [{'time': 0.039645375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.747199999999673e-05, 'source_diff': 3.747199999999673e-05}, {'time': 0.039687472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.867" endtime="20201112 10:15:12.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:12.878" endtime="20201112 10:15:12.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.917" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.915" endtime="20201112 10:15:12.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.923" level="INFO">VALUE: [3.747199999999673e-05, 3.6791000000001295e-05, 3.6777000000001725e-05, 3.761199999999937e-05, 3.69580000000036e-05, 3.745799999999716e-05, 3.69450000000035e-05, 3.74580000000041e-05, 3.67780000000012e-05, 3.742999999999802e-05, 3.672199999999598e-05, 3.7610999999999895e-05, 3.679200000000077e-05, 3.729200000000127e-05, 3.7638999999999034e-05, 3.6791000000001295e-05, 3.7110999999999394e-05, 3.713900000000547e-05, 3.6944999999996564e-05, 3.730600000000084e-05, 3.680600000000034e-05, 3.6624999999998464e-05, 3.7624999999999464e-05, 3.761199999999937e-05, 3.677799999999426e-05, 3.7110999999999394e-05, 3.695799999999666e-05, 3.71250000000059e-05, 3.6860999999999144e-05, 3.694400000000403e-05, 3.679200000000077e-05, 3.6944999999996564e-05, 3.723600000000299e-05, 3.695799999999666e-05, 3.7124999999998964e-05, 3.72780000000017e-05, 3.7402999999998354e-05, 3.744399999999759e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.69450000000035e-05, 3.7597000000000325e-05, 3.7096999999999825e-05, 3.67780000000012e-05, 3.695799999999666e-05, 3.6846999999999575e-05, 3.676400000000163e-05, 3.76250000000064e-05, 3.693000000000446e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.919" endtime="20201112 10:15:12.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.908" endtime="20201112 10:15:12.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.932" endtime="20201112 10:15:12.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.940" endtime="20201112 10:15:12.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.936" endtime="20201112 10:15:12.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.927" endtime="20201112 10:15:12.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.426" endtime="20201112 10:15:12.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.425" endtime="20201112 10:15:12.966"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.988" endtime="20201112 10:15:13.004"></status>
</kw>
<msg timestamp="20201112 10:15:13.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.985" endtime="20201112 10:15:13.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.007" endtime="20201112 10:15:13.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.013" endtime="20201112 10:15:13.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.978" endtime="20201112 10:15:13.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.972" endtime="20201112 10:15:13.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.036" endtime="20201112 10:15:13.371"></status>
</kw>
<msg timestamp="20201112 10:15:13.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039840347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039877208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.033" endtime="20201112 10:15:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039840347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039877208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.381" endtime="20201112 10:15:13.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.400" endtime="20201112 10:15:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.026" endtime="20201112 10:15:13.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.021" endtime="20201112 10:15:13.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.419" level="INFO">${RESULT} = [{'time': 0.039877208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6860999999999144e-05, 'source_diff': 3.6860999999999144e-05}, {'time': 0.039922333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:13.410" endtime="20201112 10:15:13.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:13.421" endtime="20201112 10:15:13.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.460" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.457" endtime="20201112 10:15:13.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.465" level="INFO">VALUE: [3.6860999999999144e-05, 3.7597000000000325e-05, 3.7597000000000325e-05, 3.69580000000036e-05, 3.7290999999994856e-05, 3.679200000000077e-05, 3.7624999999999464e-05, 3.676400000000163e-05, 3.744399999999759e-05, 3.730600000000084e-05, 3.743100000000443e-05, 3.730600000000084e-05, 3.7624999999999464e-05, 3.679200000000077e-05, 3.7430999999997494e-05, 3.747200000000367e-05, 3.7055000000001115e-05, 3.749999999999587e-05, 3.697300000000264e-05, 3.7666999999998174e-05, 3.7305000000001365e-05, 3.745799999999716e-05, 3.679200000000077e-05, 3.70979999999993e-05, 3.744400000000453e-05, 3.750000000000281e-05, 3.726400000000213e-05, 3.7124999999998964e-05, 3.747200000000367e-05, 3.693100000000393e-05, 3.7124999999998964e-05, 3.729200000000127e-05, 3.6624999999998464e-05, 3.74580000000041e-05, 3.67780000000012e-05, 3.695799999999666e-05, 3.750000000000281e-05, 3.697199999999623e-05, 3.729200000000127e-05, 3.7110999999999394e-05, 3.69580000000036e-05, 3.717999999999777e-05, 3.679200000000077e-05, 3.729200000000127e-05, 3.6944999999996564e-05, 3.729199999999433e-05, 3.723600000000299e-05, 3.747200000000367e-05, 3.7374999999999214e-05, 3.7624999999999464e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.462" endtime="20201112 10:15:13.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.451" endtime="20201112 10:15:13.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.474" endtime="20201112 10:15:13.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.482" endtime="20201112 10:15:13.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.478" endtime="20201112 10:15:13.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.470" endtime="20201112 10:15:13.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.968" endtime="20201112 10:15:13.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.966" endtime="20201112 10:15:13.508"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.530" endtime="20201112 10:15:13.546"></status>
</kw>
<msg timestamp="20201112 10:15:13.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.527" endtime="20201112 10:15:13.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.549" endtime="20201112 10:15:13.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.555" endtime="20201112 10:15:13.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.520" endtime="20201112 10:15:13.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.514" endtime="20201112 10:15:13.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.578" endtime="20201112 10:15:13.914"></status>
</kw>
<msg timestamp="20201112 10:15:13.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039649597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.575" endtime="20201112 10:15:13.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039649597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.923" endtime="20201112 10:15:13.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.942" endtime="20201112 10:15:13.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.568" endtime="20201112 10:15:13.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.563" endtime="20201112 10:15:13.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.960" level="INFO">${RESULT} = [{'time': 0.039649597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7138999999998534e-05, 'source_diff': 3.7138999999998534e-05}, {'time': 0.039697722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:13.951" endtime="20201112 10:15:13.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:13.962" endtime="20201112 10:15:13.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.001" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.999" endtime="20201112 10:15:14.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.006" level="INFO">VALUE: [3.7138999999998534e-05, 3.7610999999999895e-05, 3.7124999999998964e-05, 3.7444999999997064e-05, 3.763900000000597e-05, 3.744399999999759e-05, 3.726399999999519e-05, 3.7624999999999464e-05, 3.723600000000299e-05, 3.676400000000163e-05, 3.7110999999999394e-05, 3.727799999999476e-05, 3.7083000000000255e-05, 3.7110999999999394e-05, 3.6610999999998894e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.69580000000036e-05, 3.7347000000000075e-05, 3.7305000000001365e-05, 3.745900000000357e-05, 3.7096999999999825e-05, 3.727799999999476e-05, 3.69450000000035e-05, 3.695799999999666e-05, 3.74580000000041e-05, 3.7430999999997494e-05, 3.693100000000393e-05, 3.72780000000017e-05, 3.758400000000023e-05, 3.7624999999999464e-05, 3.6930999999996994e-05, 3.72780000000017e-05, 3.7083000000000255e-05, 3.7610999999999895e-05, 3.7583000000000755e-05, 3.71250000000059e-05, 3.711200000000581e-05, 3.729200000000127e-05, 3.74580000000041e-05, 3.72780000000017e-05, 3.729199999999433e-05, 3.7388999999998784e-05, 3.726400000000213e-05, 3.7694999999997314e-05, 3.6944999999996564e-05, 3.747199999999673e-05, 3.69580000000036e-05, 3.7110999999999394e-05, 3.719399999999734e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.003" endtime="20201112 10:15:14.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.992" endtime="20201112 10:15:14.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.016" endtime="20201112 10:15:14.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.024" endtime="20201112 10:15:14.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.020" endtime="20201112 10:15:14.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.011" endtime="20201112 10:15:14.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.510" endtime="20201112 10:15:14.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.509" endtime="20201112 10:15:14.050"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.072" endtime="20201112 10:15:14.090"></status>
</kw>
<msg timestamp="20201112 10:15:14.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.069" endtime="20201112 10:15:14.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.093" endtime="20201112 10:15:14.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.099" endtime="20201112 10:15:14.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.062" endtime="20201112 10:15:14.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.056" endtime="20201112 10:15:14.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.122" endtime="20201112 10:15:14.470"></status>
</kw>
<msg timestamp="20201112 10:15:14.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.119" endtime="20201112 10:15:14.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.479" endtime="20201112 10:15:14.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.498" endtime="20201112 10:15:14.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.111" endtime="20201112 10:15:14.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.107" endtime="20201112 10:15:14.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.519" level="INFO">${RESULT} = [{'time': 0.039868069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695799999999666e-05, 'source_diff': 3.695799999999666e-05}, {'time': 0.039911083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.510" endtime="20201112 10:15:14.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:14.521" endtime="20201112 10:15:14.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.559" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.557" endtime="20201112 10:15:14.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.564" level="INFO">VALUE: [3.695799999999666e-05, 3.7610999999999895e-05, 3.742999999999802e-05, 3.67780000000012e-05, 3.724999999999562e-05, 3.757000000000066e-05, 3.729199999999433e-05, 3.7444999999997064e-05, 3.7138999999998534e-05, 3.698700000000221e-05, 3.752799999999501e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7445000000004e-05, 3.676400000000163e-05, 3.679199999999383e-05, 3.74580000000041e-05, 3.695799999999666e-05, 3.7110999999999394e-05, 3.7083000000000255e-05, 3.713900000000547e-05, 3.6860999999999144e-05, 3.745799999999716e-05, 3.729200000000127e-05, 3.679200000000077e-05, 3.7624999999999464e-05, 3.7083000000000255e-05, 3.7291000000001795e-05, 3.7624999999999464e-05, 3.754199999999458e-05, 3.679200000000077e-05, 3.74580000000041e-05, 3.7597000000000325e-05, 3.7638999999999034e-05, 3.744400000000453e-05, 3.7124999999998964e-05, 3.741700000000486e-05, 3.6958999999996134e-05, 3.726400000000213e-05, 3.74859999999963e-05, 3.67780000000012e-05, 3.7277000000002225e-05, 3.7624999999999464e-05, 3.6944999999996564e-05, 3.6972999999995704e-05, 3.748600000000324e-05, 3.7444999999997064e-05, 3.7638999999999034e-05, 3.695900000000307e-05, 3.7610999999999895e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.561" endtime="20201112 10:15:14.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.550" endtime="20201112 10:15:14.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.574" endtime="20201112 10:15:14.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.582" endtime="20201112 10:15:14.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.578" endtime="20201112 10:15:14.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.569" endtime="20201112 10:15:14.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.052" endtime="20201112 10:15:14.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.051" endtime="20201112 10:15:14.608"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.630" endtime="20201112 10:15:14.647"></status>
</kw>
<msg timestamp="20201112 10:15:14.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.627" endtime="20201112 10:15:14.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.650" endtime="20201112 10:15:14.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.657" endtime="20201112 10:15:14.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.620" endtime="20201112 10:15:14.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.614" endtime="20201112 10:15:14.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.680" endtime="20201112 10:15:15.028"></status>
</kw>
<msg timestamp="20201112 10:15:15.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039779417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.676" endtime="20201112 10:15:15.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039779417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.037" endtime="20201112 10:15:15.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.056" endtime="20201112 10:15:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.669" endtime="20201112 10:15:15.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.664" endtime="20201112 10:15:15.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.074" level="INFO">${RESULT} = [{'time': 0.039779417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7124999999998964e-05, 'source_diff': 3.7124999999998964e-05}, {'time': 0.039822403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.065" endtime="20201112 10:15:15.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:15.076" endtime="20201112 10:15:15.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.115" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.113" endtime="20201112 10:15:15.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.120" level="INFO">VALUE: [3.7124999999998964e-05, 3.723599999999605e-05, 3.747200000000367e-05, 3.7083000000000255e-05, 3.7360999999999644e-05, 3.694399999999709e-05, 3.725000000000256e-05, 3.7610999999999895e-05, 3.7610999999999895e-05, 3.7610999999999895e-05, 3.7124999999998964e-05, 3.695799999999666e-05, 3.7096999999999825e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.679199999999383e-05, 3.676399999999469e-05, 3.75979999999998e-05, 3.7124999999998964e-05, 3.6610999999998894e-05, 3.725000000000256e-05, 3.694400000000403e-05, 3.741599999999845e-05, 3.747200000000367e-05, 3.727799999999476e-05, 3.724999999999562e-05, 3.7444999999997064e-05, 3.729200000000127e-05, 3.695799999999666e-05, 3.7096999999999825e-05, 3.674999999999512e-05, 3.7416999999997924e-05, 3.6819000000000435e-05, 3.729200000000127e-05, 3.694400000000403e-05, 3.694399999999709e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.676399999999469e-05, 3.6805000000000865e-05, 3.692999999999752e-05, 3.74580000000041e-05, 3.726400000000213e-05, 3.743100000000443e-05, 3.6916999999997424e-05, 3.6819000000000435e-05, 3.67780000000012e-05, 3.7083000000000255e-05, 3.7096999999999825e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.117" endtime="20201112 10:15:15.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.106" endtime="20201112 10:15:15.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.130" endtime="20201112 10:15:15.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.138" endtime="20201112 10:15:15.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.133" endtime="20201112 10:15:15.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.125" endtime="20201112 10:15:15.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.610" endtime="20201112 10:15:15.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.609" endtime="20201112 10:15:15.164"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.186" endtime="20201112 10:15:15.204"></status>
</kw>
<msg timestamp="20201112 10:15:15.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.183" endtime="20201112 10:15:15.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.207" endtime="20201112 10:15:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.213" endtime="20201112 10:15:15.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.176" endtime="20201112 10:15:15.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.170" endtime="20201112 10:15:15.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.236" endtime="20201112 10:15:15.584"></status>
</kw>
<msg timestamp="20201112 10:15:15.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.233" endtime="20201112 10:15:15.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.593" endtime="20201112 10:15:15.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.612" endtime="20201112 10:15:15.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.226" endtime="20201112 10:15:15.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.221" endtime="20201112 10:15:15.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.631" level="INFO">${RESULT} = [{'time': 0.039912917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4208999999996446e-05, 'source_diff': 4.4208999999996446e-05}, {'time': 0.039964056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.622" endtime="20201112 10:15:15.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:15.633" endtime="20201112 10:15:15.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.671" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.669" endtime="20201112 10:15:15.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.676" level="INFO">VALUE: [4.4208999999996446e-05, 4.405600000000065e-05, 4.420800000000391e-05, 4.440199999999894e-05, 4.456899999999431e-05, 4.3902999999997916e-05, 4.442999999999808e-05, 4.4569000000001247e-05, 4.4583000000000816e-05, 4.3916999999997486e-05, 4.393000000000452e-05, 4.444400000000459e-05, 4.474999999999618e-05, 4.3737000000002024e-05, 4.4083000000000316e-05, 4.440199999999894e-05, 4.4555000000001677e-05, 4.3902999999997916e-05, 4.4583000000000816e-05, 4.4055000000001177e-05, 4.3723000000002454e-05, 4.390199999999844e-05, 4.4638999999999096e-05, 4.373599999999561e-05, 4.390199999999844e-05, 4.4069000000000746e-05, 4.4069000000000746e-05, 4.4597000000000386e-05, 4.456899999999431e-05, 4.425000000000262e-05, 4.4096999999999886e-05, 4.436199999999918e-05, 4.444400000000459e-05, 4.4583000000000816e-05, 4.4083000000000316e-05, 4.405600000000065e-05, 4.4417000000004925e-05, 4.4402999999998416e-05, 4.3860999999999206e-05, 4.4083000000000316e-05, 4.441599999999851e-05, 4.407000000000022e-05, 4.4388999999998846e-05, 4.3902999999997916e-05, 4.4110999999999456e-05, 4.423599999999611e-05, 4.397200000000323e-05, 4.423599999999611e-05, 4.376400000000169e-05, 4.4403000000005355e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.673" endtime="20201112 10:15:15.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.662" endtime="20201112 10:15:15.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.686" endtime="20201112 10:15:15.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.694" endtime="20201112 10:15:15.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.689" endtime="20201112 10:15:15.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.681" endtime="20201112 10:15:15.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.166" endtime="20201112 10:15:15.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.165" endtime="20201112 10:15:15.720"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.742" endtime="20201112 10:15:15.761"></status>
</kw>
<msg timestamp="20201112 10:15:15.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.739" endtime="20201112 10:15:15.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.764" endtime="20201112 10:15:15.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.770" endtime="20201112 10:15:15.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.732" endtime="20201112 10:15:15.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.726" endtime="20201112 10:15:15.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.793" endtime="20201112 10:15:16.141"></status>
</kw>
<msg timestamp="20201112 10:15:16.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.789" endtime="20201112 10:15:16.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.150" endtime="20201112 10:15:16.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.169" endtime="20201112 10:15:16.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.782" endtime="20201112 10:15:16.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.778" endtime="20201112 10:15:16.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.187" level="INFO">${RESULT} = [{'time': 0.040160764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8875000000003777e-05, 'source_diff': 4.8875000000003777e-05}, {'time': 0.040227847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:16.178" endtime="20201112 10:15:16.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:16.189" endtime="20201112 10:15:16.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.228" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.226" endtime="20201112 10:15:16.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.233" level="INFO">VALUE: [4.8875000000003777e-05, 4.8957999999994783e-05, 4.8889000000003346e-05, 4.881899999999856e-05, 4.891699999999555e-05, 4.932000000000547e-05, 4.8931000000002056e-05, 4.955499999999974e-05, 4.926300000000078e-05, 4.909699999999795e-05, 4.918000000000283e-05, 4.876399999999975e-05, 4.905599999999871e-05, 4.91669999999958e-05, 4.943099999999562e-05, 4.875000000000018e-05, 4.8915999999996074e-05, 4.930499999999949e-05, 4.8889000000003346e-05, 4.8931000000002056e-05, 4.958299999999888e-05, 4.88469999999977e-05, 4.954199999999964e-05, 4.898600000000086e-05, 4.926300000000078e-05, 4.872200000000104e-05, 4.8707999999994533e-05, 4.950000000000093e-05, 4.913899999999666e-05, 4.948599999999442e-05, 4.9153000000003166e-05, 4.923600000000111e-05, 4.968099999999587e-05, 4.9651999999997254e-05, 4.965200000000419e-05, 4.902799999999957e-05, 4.970800000000247e-05, 4.883299999999813e-05, 4.936100000000471e-05, 4.9681000000002806e-05, 4.952800000000007e-05, 4.952800000000007e-05, 4.950000000000093e-05, 4.86669999999953e-05, 4.954100000000017e-05, 4.882000000000497e-05, 4.9401999999997004e-05, 4.955499999999974e-05, 4.95140000000005e-05, 4.9695000000002376e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.230" endtime="20201112 10:15:16.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.219" endtime="20201112 10:15:16.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.243" endtime="20201112 10:15:16.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.251" endtime="20201112 10:15:16.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.246" endtime="20201112 10:15:16.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.238" endtime="20201112 10:15:16.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.722" endtime="20201112 10:15:16.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.721" endtime="20201112 10:15:16.277"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.299" endtime="20201112 10:15:16.316"></status>
</kw>
<msg timestamp="20201112 10:15:16.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.295" endtime="20201112 10:15:16.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.319" endtime="20201112 10:15:16.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.325" endtime="20201112 10:15:16.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.289" endtime="20201112 10:15:16.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.283" endtime="20201112 10:15:16.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.348" endtime="20201112 10:15:16.683"></status>
</kw>
<msg timestamp="20201112 10:15:16.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03987325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039923889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:16.345" endtime="20201112 10:15:16.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03987325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039923889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:16.692" endtime="20201112 10:15:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.711" endtime="20201112 10:15:16.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.338" endtime="20201112 10:15:16.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.333" endtime="20201112 10:15:16.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.731" level="INFO">${RESULT} = [{'time': 0.039923889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.063899999999816e-05, 'source_diff': 5.063899999999816e-05}, {'time': 0.039994, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:15:16.722" endtime="20201112 10:15:16.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.761" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:16.733" endtime="20201112 10:15:16.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.772" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.770" endtime="20201112 10:15:16.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.777" level="INFO">VALUE: [5.063899999999816e-05, 5.061099999999902e-05, 4.994400000000315e-05, 5.023600000000211e-05, 5.054200000000064e-05, 4.979199999999989e-05, 4.997299999999483e-05, 5.052799999999413e-05, 5.031900000000006e-05, 5.0681000000003806e-05, 5.0207999999996034e-05, 5.000000000000143e-05, 5.0153000000004166e-05, 4.9709000000001946e-05, 5.0651999999998254e-05, 4.98469999999987e-05, 5.026400000000125e-05, 5.040299999999748e-05, 4.995800000000272e-05, 5.068099999999687e-05, 5.0165999999997324e-05, 5.063899999999816e-05, 5.054200000000064e-05, 5.061099999999902e-05, 5.055600000000021e-05, 4.9987000000001336e-05, 4.976400000000075e-05, 5.000000000000143e-05, 5.004200000000014e-05, 4.995800000000272e-05, 5.0639000000005097e-05, 5.063899999999816e-05, 5.050000000000193e-05, 5.070899999999601e-05, 5.009699999999895e-05, 5.0695000000003376e-05, 4.973600000000161e-05, 5.009699999999895e-05, 5.061099999999902e-05, 5.031999999999953e-05, 5.054100000000117e-05, 5.029100000000092e-05, 5.055500000000074e-05, 5.011099999999852e-05, 5.052800000000107e-05, 4.973600000000161e-05, 5.012499999999809e-05, 5.022200000000254e-05, 4.979199999999989e-05, 4.9917000000003486e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.774" endtime="20201112 10:15:16.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.763" endtime="20201112 10:15:16.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.786" endtime="20201112 10:15:16.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.794" endtime="20201112 10:15:16.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.790" endtime="20201112 10:15:16.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.782" endtime="20201112 10:15:16.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.279" endtime="20201112 10:15:16.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.278" endtime="20201112 10:15:16.820"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.842" endtime="20201112 10:15:16.861"></status>
</kw>
<msg timestamp="20201112 10:15:16.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.839" endtime="20201112 10:15:16.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.864" endtime="20201112 10:15:16.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.870" endtime="20201112 10:15:16.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.832" endtime="20201112 10:15:16.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.826" endtime="20201112 10:15:16.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.893" endtime="20201112 10:15:17.242"></status>
</kw>
<msg timestamp="20201112 10:15:17.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039528097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.890" endtime="20201112 10:15:17.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039528097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.251" endtime="20201112 10:15:17.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.270" endtime="20201112 10:15:17.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.883" endtime="20201112 10:15:17.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.878" endtime="20201112 10:15:17.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.288" level="INFO">${RESULT} = [{'time': 0.039528097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.126399999999531e-05, 'source_diff': 5.126399999999531e-05}, {'time': 0.039601319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.279" endtime="20201112 10:15:17.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:17.290" endtime="20201112 10:15:17.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.329" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.327" endtime="20201112 10:15:17.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.334" level="INFO">VALUE: [5.126399999999531e-05, 5.125000000000268e-05, 5.152799999999513e-05, 5.1207999999997034e-05, 5.0693999999996964e-05, 5.100000000000243e-05, 5.11940000000044e-05, 5.0957999999996784e-05, 5.080500000000099e-05, 5.159700000000045e-05, 5.1221999999996604e-05, 5.159700000000045e-05, 5.083300000000013e-05, 5.155600000000121e-05, 5.0723000000002516e-05, 5.162499999999959e-05, 5.130600000000096e-05, 5.161100000000002e-05, 5.136099999999977e-05, 5.132000000000053e-05, 5.075000000000218e-05, 5.11669999999978e-05, 5.0693999999996964e-05, 5.075000000000218e-05, 5.06940000000039e-05, 5.115299999999823e-05, 5.087499999999884e-05, 5.109699999999995e-05, 5.136199999999924e-05, 5.151399999999556e-05, 5.147299999999633e-05, 5.093099999999712e-05, 5.088899999999841e-05, 5.076400000000175e-05, 5.086099999999927e-05, 5.162499999999959e-05, 5.1499999999995993e-05, 5.112499999999909e-05, 5.155600000000121e-05, 5.08339999999996e-05, 5.109699999999995e-05, 5.087500000000578e-05, 5.087500000000578e-05, 5.095899999999626e-05, 5.138900000000585e-05, 5.122299999999608e-05, 5.095899999999626e-05, 5.1179999999997894e-05, 5.159700000000045e-05, 5.095800000000372e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.331" endtime="20201112 10:15:17.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.320" endtime="20201112 10:15:17.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.344" endtime="20201112 10:15:17.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.352" endtime="20201112 10:15:17.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.348" endtime="20201112 10:15:17.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.339" endtime="20201112 10:15:17.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.822" endtime="20201112 10:15:17.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.821" endtime="20201112 10:15:17.378"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.400" endtime="20201112 10:15:17.417"></status>
</kw>
<msg timestamp="20201112 10:15:17.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.396" endtime="20201112 10:15:17.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.420" endtime="20201112 10:15:17.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.426" endtime="20201112 10:15:17.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.389" endtime="20201112 10:15:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.384" endtime="20201112 10:15:17.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.449" endtime="20201112 10:15:17.784"></status>
</kw>
<msg timestamp="20201112 10:15:17.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039469472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039521889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.446" endtime="20201112 10:15:17.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039469472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039521889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.793" endtime="20201112 10:15:17.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.812" endtime="20201112 10:15:17.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.439" endtime="20201112 10:15:17.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.434" endtime="20201112 10:15:17.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.831" level="INFO">${RESULT} = [{'time': 0.039521889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.241699999999905e-05, 'source_diff': 5.241699999999905e-05}, {'time': 0.039592097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.822" endtime="20201112 10:15:17.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.860" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:17.833" endtime="20201112 10:15:17.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.871" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.869" endtime="20201112 10:15:17.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.876" level="INFO">VALUE: [5.241699999999905e-05, 5.1929999999998644e-05, 5.2207999999998034e-05, 5.252800000000307e-05, 5.229199999999545e-05, 5.1709000000003946e-05, 5.219499999999794e-05, 5.232000000000153e-05, 5.193000000000558e-05, 5.211100000000052e-05, 5.186100000000027e-05, 5.173600000000361e-05, 5.222200000000454e-05, 5.244499999999819e-05, 5.268000000000633e-05, 5.258300000000188e-05, 5.205600000000171e-05, 5.232000000000153e-05, 5.263900000000016e-05, 5.186100000000027e-05, 5.2445000000005126e-05, 5.275000000000418e-05, 5.191699999999855e-05, 5.262500000000059e-05, 5.180600000000146e-05, 5.181999999999409e-05, 5.202800000000257e-05, 5.208400000000085e-05, 5.262499999999365e-05, 5.256899999999537e-05, 5.244400000000565e-05, 5.2138000000000184e-05, 5.255600000000221e-05, 5.25140000000035e-05, 5.201399999999606e-05, 5.227799999999588e-05, 5.23470000000012e-05, 5.1985999999996924e-05, 5.208400000000085e-05, 5.237500000000034e-05, 5.229199999999545e-05, 5.238899999999991e-05, 5.2249999999996743e-05, 5.179199999999495e-05, 5.182000000000103e-05, 5.1735999999996674e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.241699999999905e-05, 5.179100000000242e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.873" endtime="20201112 10:15:17.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.862" endtime="20201112 10:15:17.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.886" endtime="20201112 10:15:17.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.894" endtime="20201112 10:15:17.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.890" endtime="20201112 10:15:17.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.881" endtime="20201112 10:15:17.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.380" endtime="20201112 10:15:17.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.378" endtime="20201112 10:15:17.920"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.942" endtime="20201112 10:15:17.959"></status>
</kw>
<msg timestamp="20201112 10:15:17.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.939" endtime="20201112 10:15:17.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.962" endtime="20201112 10:15:17.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.968" endtime="20201112 10:15:17.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.932" endtime="20201112 10:15:17.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.926" endtime="20201112 10:15:17.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.991" endtime="20201112 10:15:18.328"></status>
</kw>
<msg timestamp="20201112 10:15:18.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039607861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.988" endtime="20201112 10:15:18.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039607861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.337" endtime="20201112 10:15:18.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.356" endtime="20201112 10:15:18.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.981" endtime="20201112 10:15:18.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.976" endtime="20201112 10:15:18.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.374" level="INFO">${RESULT} = [{'time': 0.039607861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3707999999999534e-05, 'source_diff': 5.3707999999999534e-05}, {'time': 0.039677931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:18.366" endtime="20201112 10:15:18.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:18.376" endtime="20201112 10:15:18.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.415" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.413" endtime="20201112 10:15:18.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.421" level="INFO">VALUE: [5.3707999999999534e-05, 5.279200000000289e-05, 5.338900000000091e-05, 5.327700000000435e-05, 5.312500000000109e-05, 5.286099999999433e-05, 5.291699999999955e-05, 5.3680000000000394e-05, 5.336100000000177e-05, 5.280500000000299e-05, 5.288900000000041e-05, 5.3485999999998424e-05, 5.3707999999999534e-05, 5.265299999999973e-05, 5.368099999999987e-05, 5.2695000000005376e-05, 5.3277999999996883e-05, 5.3416000000000574e-05, 5.333299999999569e-05, 5.3471999999998854e-05, 5.304100000000367e-05, 5.288900000000041e-05, 5.356900000000331e-05, 5.309700000000195e-05, 5.2916000000000074e-05, 5.363900000000116e-05, 5.361100000000202e-05, 5.3193999999999464e-05, 5.2957999999998784e-05, 5.3249999999997744e-05, 5.277700000000385e-05, 5.336100000000177e-05, 5.2749999999997244e-05, 5.3471999999998854e-05, 5.3249999999997744e-05, 5.3014000000004e-05, 5.362500000000159e-05, 5.286100000000127e-05, 5.31940000000064e-05, 5.3443999999999714e-05, 5.313900000000066e-05, 5.2971999999998354e-05, 5.293000000000658e-05, 5.358400000000235e-05, 5.35549999999968e-05, 5.2985999999997924e-05, 5.330600000000296e-05, 5.2709000000004946e-05, 5.3527999999997133e-05, 5.280599999999552e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.418" endtime="20201112 10:15:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.406" endtime="20201112 10:15:18.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.430" endtime="20201112 10:15:18.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.438" endtime="20201112 10:15:18.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.434" endtime="20201112 10:15:18.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.425" endtime="20201112 10:15:18.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.922" endtime="20201112 10:15:18.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.921" endtime="20201112 10:15:18.464"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.486" endtime="20201112 10:15:18.503"></status>
</kw>
<msg timestamp="20201112 10:15:18.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.483" endtime="20201112 10:15:18.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.507" endtime="20201112 10:15:18.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.513" endtime="20201112 10:15:18.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.476" endtime="20201112 10:15:18.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.470" endtime="20201112 10:15:18.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.537" endtime="20201112 10:15:18.871"></status>
</kw>
<msg timestamp="20201112 10:15:18.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.533" endtime="20201112 10:15:18.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.881" endtime="20201112 10:15:18.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.899" endtime="20201112 10:15:18.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.526" endtime="20201112 10:15:18.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.521" endtime="20201112 10:15:18.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.920" level="INFO">${RESULT} = [{'time': 0.039728875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3999999999998494e-05, 'source_diff': 5.3999999999998494e-05}, {'time': 0.039805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:18.911" endtime="20201112 10:15:18.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.950" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:18.922" endtime="20201112 10:15:18.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.960" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.958" endtime="20201112 10:15:18.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.966" level="INFO">VALUE: [5.3999999999998494e-05, 5.4027999999997633e-05, 5.438900000000191e-05, 5.45140000000055e-05, 5.444500000000019e-05, 5.40419999999972e-05, 5.415300000000123e-05, 5.413899999999472e-05, 5.461200000000249e-05, 5.438900000000191e-05, 5.408400000000285e-05, 5.4499999999998994e-05, 5.3957999999999784e-05, 5.38470000000027e-05, 5.376400000000475e-05, 5.370899999999901e-05, 5.455599999999727e-05, 5.3709000000005946e-05, 5.3973000000005766e-05, 5.379199999999695e-05, 5.384800000000217e-05, 5.4402000000002004e-05, 5.4652000000002254e-05, 5.3915999999994135e-05, 5.397200000000629e-05, 5.381899999999662e-05, 5.388900000000141e-05, 5.45549999999978e-05, 5.3707999999999534e-05, 5.4415999999994635e-05, 5.4471999999999854e-05, 5.413900000000166e-05, 5.440299999999454e-05, 5.4237000000005586e-05, 5.38340000000026e-05, 5.411099999999558e-05, 5.395899999999926e-05, 5.41670000000008e-05, 5.390299999999404e-05, 5.4416000000001574e-05, 5.4471999999999854e-05, 5.388900000000141e-05, 5.3735999999998674e-05, 5.4221999999999604e-05, 5.462500000000259e-05, 5.436100000000277e-05, 5.430499999999755e-05, 5.381999999999609e-05, 5.4513999999998564e-05, 5.404100000000467e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.963" endtime="20201112 10:15:18.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.951" endtime="20201112 10:15:18.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.975" endtime="20201112 10:15:18.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.983" endtime="20201112 10:15:19.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.979" endtime="20201112 10:15:19.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.970" endtime="20201112 10:15:19.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.466" endtime="20201112 10:15:19.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.465" endtime="20201112 10:15:19.009"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.031" endtime="20201112 10:15:19.048"></status>
</kw>
<msg timestamp="20201112 10:15:19.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.028" endtime="20201112 10:15:19.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.051" endtime="20201112 10:15:19.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.057" endtime="20201112 10:15:19.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.021" endtime="20201112 10:15:19.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.015" endtime="20201112 10:15:19.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.080" endtime="20201112 10:15:19.416"></status>
</kw>
<msg timestamp="20201112 10:15:19.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.077" endtime="20201112 10:15:19.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.425" endtime="20201112 10:15:19.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.444" endtime="20201112 10:15:19.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.070" endtime="20201112 10:15:19.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.065" endtime="20201112 10:15:19.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.463" level="INFO">${RESULT} = [{'time': 0.039745417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.497299999999983e-05, 'source_diff': 5.497299999999983e-05}, {'time': 0.039820569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.454" endtime="20201112 10:15:19.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.493" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:19.465" endtime="20201112 10:15:19.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.503" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.501" endtime="20201112 10:15:19.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.509" level="INFO">VALUE: [5.497299999999983e-05, 5.5249999999999744e-05, 5.481999999999709e-05, 5.5249999999999744e-05, 5.4694000000000964e-05, 5.4930000000001644e-05, 5.505599999999777e-05, 5.533399999999716e-05, 5.5472000000000854e-05, 5.468100000000087e-05, 5.536100000000377e-05, 5.544499999999425e-05, 5.491700000000155e-05, 5.541699999999511e-05, 5.533299999999769e-05, 5.568100000000187e-05, 5.5165999999995385e-05, 5.536100000000377e-05, 5.4791999999997953e-05, 5.5305999999998023e-05, 5.5263999999999314e-05, 5.519500000000094e-05, 5.5722000000001104e-05, 5.4902000000002504e-05, 5.5305999999998023e-05, 5.520900000000051e-05, 5.515299999999529e-05, 5.494500000000069e-05, 5.4902000000002504e-05, 5.4888000000002934e-05, 5.561100000000402e-05, 5.5388000000003434e-05, 5.4763999999998814e-05, 5.547300000000033e-05, 5.4777999999998384e-05, 5.479100000000542e-05, 5.541699999999511e-05, 5.4985999999999924e-05, 5.516699999999486e-05, 5.513900000000266e-05, 5.483300000000413e-05, 5.5694000000001964e-05, 5.504099999999873e-05, 5.488899999999547e-05, 5.4708000000000534e-05, 5.5208000000001034e-05, 5.508299999999744e-05, 5.512500000000309e-05, 5.55549999999988e-05, 5.5486000000000424e-05]</msg>
<status status="PASS" starttime="20201112 10:15:19.506" endtime="20201112 10:15:19.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.494" endtime="20201112 10:15:19.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.518" endtime="20201112 10:15:19.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.526" endtime="20201112 10:15:19.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.522" endtime="20201112 10:15:19.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.514" endtime="20201112 10:15:19.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.011" endtime="20201112 10:15:19.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.010" endtime="20201112 10:15:19.552"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.575" endtime="20201112 10:15:19.593"></status>
</kw>
<msg timestamp="20201112 10:15:19.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.572" endtime="20201112 10:15:19.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.596" endtime="20201112 10:15:19.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.603" endtime="20201112 10:15:19.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.565" endtime="20201112 10:15:19.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.558" endtime="20201112 10:15:19.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.625" endtime="20201112 10:15:19.963"></status>
</kw>
<msg timestamp="20201112 10:15:19.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.622" endtime="20201112 10:15:19.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.973" endtime="20201112 10:15:19.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.991" endtime="20201112 10:15:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.615" endtime="20201112 10:15:19.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.611" endtime="20201112 10:15:19.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.010" level="INFO">${RESULT} = [{'time': 0.041154722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6485999999994485e-05, 'source_diff': 5.6485999999994485e-05}, {'time': 0.041228819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:20.001" endtime="20201112 10:15:20.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.040" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:20.012" endtime="20201112 10:15:20.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.051" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.048" endtime="20201112 10:15:20.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.056" level="INFO">VALUE: [5.6485999999994485e-05, 5.5901999999996566e-05, 5.663900000000416e-05, 5.6291999999999454e-05, 5.5958000000001784e-05, 5.577699999999991e-05, 5.5750000000000244e-05, 5.6277999999999884e-05, 5.615300000000323e-05, 5.584800000000417e-05, 5.584799999999723e-05, 5.58619999999968e-05, 5.6541999999999704e-05, 5.633299999999869e-05, 5.638900000000391e-05, 5.668100000000287e-05, 5.6291999999999454e-05, 5.638899999999697e-05, 5.6694000000002964e-05, 5.6264000000000314e-05, 5.6443999999995775e-05, 5.58470000000047e-05, 5.6514000000000564e-05, 5.5763999999999814e-05, 5.6180000000002894e-05, 5.6750000000001244e-05, 5.6486000000001424e-05, 5.668100000000287e-05, 5.6499999999994055e-05, 5.6528000000000134e-05, 5.588900000000341e-05, 5.588899999999647e-05, 5.612500000000409e-05, 5.6319999999998593e-05, 5.60549999999993e-05, 5.6472000000001854e-05, 5.579099999999948e-05, 5.630499999999955e-05, 5.6472000000001854e-05, 5.613899999999672e-05, 5.659699999999851e-05, 5.6514000000000564e-05, 5.663899999999722e-05, 5.612500000000409e-05, 5.638899999999697e-05, 5.633299999999869e-05, 5.631900000000606e-05, 5.5944000000002214e-05, 5.5902000000003504e-05, 5.637500000000434e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.053" endtime="20201112 10:15:20.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.042" endtime="20201112 10:15:20.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.065" endtime="20201112 10:15:20.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.073" endtime="20201112 10:15:20.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.069" endtime="20201112 10:15:20.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.061" endtime="20201112 10:15:20.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.554" endtime="20201112 10:15:20.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.553" endtime="20201112 10:15:20.099"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.122" endtime="20201112 10:15:20.139"></status>
</kw>
<msg timestamp="20201112 10:15:20.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.118" endtime="20201112 10:15:20.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.142" endtime="20201112 10:15:20.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.148" endtime="20201112 10:15:20.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.111" endtime="20201112 10:15:20.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.105" endtime="20201112 10:15:20.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.171" endtime="20201112 10:15:20.506"></status>
</kw>
<msg timestamp="20201112 10:15:20.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039830972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.168" endtime="20201112 10:15:20.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039830972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.515" endtime="20201112 10:15:20.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.534" endtime="20201112 10:15:20.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.161" endtime="20201112 10:15:20.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.156" endtime="20201112 10:15:20.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.552" level="INFO">${RESULT} = [{'time': 0.039830972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.763899999999822e-05, 'source_diff': 5.763899999999822e-05}, {'time': 0.039908111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:20.543" endtime="20201112 10:15:20.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:20.554" endtime="20201112 10:15:20.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.593" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.591" endtime="20201112 10:15:20.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.599" level="INFO">VALUE: [5.763899999999822e-05, 5.733299999999969e-05, 5.688900000000441e-05, 5.7278000000000884e-05, 5.6971999999995415e-05, 5.681899999999962e-05, 5.6778000000000384e-05, 5.7485999999995485e-05, 5.7042000000000204e-05, 5.73749999999984e-05, 5.6944000000003214e-05, 5.6958000000002784e-05, 5.7500000000001994e-05, 5.6778000000000384e-05, 5.7236000000002174e-05, 5.7542000000000704e-05, 5.738900000000491e-05, 5.691700000000355e-05, 5.711099999999858e-05, 5.7028000000000634e-05, 5.7556000000000274e-05, 5.7694000000003964e-05, 5.6778000000000384e-05, 5.770899999999607e-05, 5.7542000000000704e-05, 5.690300000000398e-05, 5.756900000000037e-05, 5.7638000000005685e-05, 5.73749999999984e-05, 5.6750000000001244e-05, 5.702700000000116e-05, 5.7500000000001994e-05, 5.676300000000134e-05, 5.690299999999704e-05, 5.7292000000000454e-05, 5.7500000000001994e-05, 5.6958000000002784e-05, 5.695900000000226e-05, 5.763899999999822e-05, 5.670900000000201e-05, 5.7222000000002604e-05, 5.6750000000001244e-05, 5.7444000000003714e-05, 5.688899999999747e-05, 5.7430000000004144e-05, 5.688899999999747e-05, 5.708299999999944e-05, 5.7319999999999593e-05, 5.713899999999772e-05, 5.740299999999754e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.595" endtime="20201112 10:15:20.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.584" endtime="20201112 10:15:20.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.615" endtime="20201112 10:15:20.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.623" endtime="20201112 10:15:20.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.619" endtime="20201112 10:15:20.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.610" endtime="20201112 10:15:20.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.101" endtime="20201112 10:15:20.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.100" endtime="20201112 10:15:20.649"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.672" endtime="20201112 10:15:20.689"></status>
</kw>
<msg timestamp="20201112 10:15:20.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.668" endtime="20201112 10:15:20.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.692" endtime="20201112 10:15:20.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.698" endtime="20201112 10:15:20.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.661" endtime="20201112 10:15:20.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.656" endtime="20201112 10:15:20.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.721" endtime="20201112 10:15:21.057"></status>
</kw>
<msg timestamp="20201112 10:15:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.718" endtime="20201112 10:15:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039885667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.066" endtime="20201112 10:15:21.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.084" endtime="20201112 10:15:21.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.711" endtime="20201112 10:15:21.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.706" endtime="20201112 10:15:21.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.105" level="INFO">${RESULT} = [{'time': 0.039943764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.809700000000001e-05, 'source_diff': 5.809700000000001e-05}, {'time': 0.040021875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:21.096" endtime="20201112 10:15:21.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.135" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:21.107" endtime="20201112 10:15:21.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.146" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.143" endtime="20201112 10:15:21.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.151" level="INFO">VALUE: [5.809700000000001e-05, 5.793099999999718e-05, 5.788900000000541e-05, 5.8083999999999913e-05, 5.863899999999922e-05, 5.840299999999854e-05, 5.841699999999811e-05, 5.78749999999989e-05, 5.8056000000000774e-05, 5.76949999999965e-05, 5.819500000000394e-05, 5.795900000000326e-05, 5.7792000000000954e-05, 5.8513999999995625e-05, 5.85550000000018e-05, 5.7901999999998566e-05, 5.836099999999983e-05, 5.7764000000001814e-05, 5.809700000000001e-05, 5.806900000000087e-05, 5.8472000000003854e-05, 5.7792000000000954e-05, 5.7820000000000094e-05, 5.7736000000002674e-05, 5.859700000000051e-05, 5.7735999999995735e-05, 5.865299999999879e-05, 5.836099999999983e-05, 5.7707999999996595e-05, 5.8207999999997095e-05, 5.858300000000094e-05, 5.8528000000002134e-05, 5.812499999999915e-05, 5.7944000000004214e-05, 5.862500000000659e-05, 5.865299999999879e-05, 5.8070000000000344e-05, 5.859700000000051e-05, 5.7985999999995985e-05, 5.784699999999976e-05, 5.790299999999804e-05, 5.81670000000048e-05, 5.7777999999994445e-05, 5.8291999999994515e-05, 5.858300000000094e-05, 5.838899999999897e-05, 5.795900000000326e-05, 5.7750000000002244e-05, 5.866699999999836e-05, 5.820900000000351e-05]</msg>
<status status="PASS" starttime="20201112 10:15:21.148" endtime="20201112 10:15:21.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.137" endtime="20201112 10:15:21.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.160" endtime="20201112 10:15:21.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.168" endtime="20201112 10:15:21.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.164" endtime="20201112 10:15:21.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.156" endtime="20201112 10:15:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.651" endtime="20201112 10:15:21.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.650" endtime="20201112 10:15:21.194"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.216" endtime="20201112 10:15:21.234"></status>
</kw>
<msg timestamp="20201112 10:15:21.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.213" endtime="20201112 10:15:21.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.237" endtime="20201112 10:15:21.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.243" endtime="20201112 10:15:21.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.206" endtime="20201112 10:15:21.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.201" endtime="20201112 10:15:21.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.266" endtime="20201112 10:15:21.602"></status>
</kw>
<msg timestamp="20201112 10:15:21.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03951025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039569264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:21.262" endtime="20201112 10:15:21.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03951025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039569264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:21.611" endtime="20201112 10:15:21.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.630" endtime="20201112 10:15:21.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.255" endtime="20201112 10:15:21.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.251" endtime="20201112 10:15:21.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.650" level="INFO">${RESULT} = [{'time': 0.039569264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9014000000003064e-05, 'source_diff': 5.9014000000003064e-05}, {'time': 0.039649389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:21.640" endtime="20201112 10:15:21.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:21.652" endtime="20201112 10:15:21.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.691" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.689" endtime="20201112 10:15:21.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.696" level="INFO">VALUE: [5.9014000000003064e-05, 5.908300000000144e-05, 5.913899999999972e-05, 5.936100000000083e-05, 5.88619999999998e-05, 5.8736000000003674e-05, 5.9013999999996125e-05, 5.8985999999996985e-05, 5.888899999999947e-05, 5.966699999999936e-05, 5.9222000000004604e-05, 5.938899999999997e-05, 5.9514000000003564e-05, 5.9264000000003314e-05, 5.938899999999997e-05, 5.948699999999696e-05, 5.8929999999998706e-05, 5.8971999999997415e-05, 5.9263999999996375e-05, 5.913899999999972e-05, 5.8957999999997845e-05, 5.96949999999985e-05, 5.8735999999996735e-05, 5.9042000000002204e-05, 5.951300000000409e-05, 5.911100000000058e-05, 5.943099999999868e-05, 5.8806000000001524e-05, 5.9041999999995265e-05, 5.920900000000451e-05, 5.920899999999757e-05, 5.9235999999997235e-05, 5.8736000000003674e-05, 5.863899999999922e-05, 5.93750000000004e-05, 5.872299999999664e-05, 5.9263999999996375e-05, 5.938899999999997e-05, 5.944499999999825e-05, 5.884700000000076e-05, 5.940299999999954e-05, 5.9513999999996625e-05, 5.8806000000001524e-05, 5.9084000000000914e-05, 5.938899999999997e-05, 5.9179999999998956e-05, 5.9416000000006575e-05, 5.961100000000108e-05, 5.8792000000001954e-05, 5.944499999999825e-05]</msg>
<status status="PASS" starttime="20201112 10:15:21.693" endtime="20201112 10:15:21.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.682" endtime="20201112 10:15:21.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.705" endtime="20201112 10:15:21.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.714" endtime="20201112 10:15:21.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.709" endtime="20201112 10:15:21.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.701" endtime="20201112 10:15:21.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.196" endtime="20201112 10:15:21.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.195" endtime="20201112 10:15:21.739"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.762" endtime="20201112 10:15:21.779"></status>
</kw>
<msg timestamp="20201112 10:15:21.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.758" endtime="20201112 10:15:21.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.782" endtime="20201112 10:15:21.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.788" endtime="20201112 10:15:21.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.751" endtime="20201112 10:15:21.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.746" endtime="20201112 10:15:21.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.811" endtime="20201112 10:15:22.147"></status>
</kw>
<msg timestamp="20201112 10:15:22.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039625139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.808" endtime="20201112 10:15:22.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039625139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.157" endtime="20201112 10:15:22.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.175" endtime="20201112 10:15:22.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.801" endtime="20201112 10:15:22.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.796" endtime="20201112 10:15:22.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.194" level="INFO">${RESULT} = [{'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013900000000072e-05, 'source_diff': 6.013900000000072e-05}, {'time': 0.039768347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:22.185" endtime="20201112 10:15:22.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.224" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:22.196" endtime="20201112 10:15:22.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.235" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.233" endtime="20201112 10:15:22.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.240" level="INFO">VALUE: [6.013900000000072e-05, 6.034700000000226e-05, 5.986100000000133e-05, 6.041700000000011e-05, 6.006900000000287e-05, 5.991699999999961e-05, 6.0069999999995405e-05, 6.015300000000029e-05, 5.96949999999985e-05, 6.0486000000005424e-05, 6.0014000000004064e-05, 5.9764000000003814e-05, 5.9985999999997985e-05, 6.0014000000004064e-05, 6.045899999999882e-05, 6.0028000000003634e-05, 5.9792000000002954e-05, 5.988900000000047e-05, 6.016699999999986e-05, 5.9805999999995585e-05, 6.0528000000004134e-05, 6.063900000000122e-05, 6.034700000000226e-05, 6.058300000000294e-05, 5.9777999999996445e-05, 6.0499999999998055e-05, 6.0278000000003884e-05, 6.0570000000002844e-05, 6.062500000000165e-05, 6.0443999999999776e-05, 6.0306000000003024e-05, 6.059699999999557e-05, 6.0264000000004314e-05, 6.044499999999925e-05, 5.9721999999998165e-05, 5.9957999999998846e-05, 6.033299999999575e-05, 6.0028000000003634e-05, 6.0319999999995655e-05, 6.036099999999489e-05, 6.0443999999999776e-05, 5.966699999999936e-05, 6.062500000000165e-05, 6.0570000000002844e-05, 6.018099999999943e-05, 6.0680000000000456e-05, 5.9806000000002524e-05, 6.066700000000036e-05, 6.058300000000294e-05, 6.043099999999968e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.237" endtime="20201112 10:15:22.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.226" endtime="20201112 10:15:22.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.250" endtime="20201112 10:15:22.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.258" endtime="20201112 10:15:22.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.253" endtime="20201112 10:15:22.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.245" endtime="20201112 10:15:22.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.741" endtime="20201112 10:15:22.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.740" endtime="20201112 10:15:22.283"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.305" endtime="20201112 10:15:22.323"></status>
</kw>
<msg timestamp="20201112 10:15:22.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.302" endtime="20201112 10:15:22.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.326" endtime="20201112 10:15:22.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.333" endtime="20201112 10:15:22.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.295" endtime="20201112 10:15:22.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.290" endtime="20201112 10:15:22.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.355" endtime="20201112 10:15:22.690"></status>
</kw>
<msg timestamp="20201112 10:15:22.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039600222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.352" endtime="20201112 10:15:22.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039600222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.700" endtime="20201112 10:15:22.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.719" endtime="20201112 10:15:22.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.345" endtime="20201112 10:15:22.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.341" endtime="20201112 10:15:22.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.737" level="INFO">${RESULT} = [{'time': 0.039661583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.136100000000283e-05, 'source_diff': 6.136100000000283e-05}, {'time': 0.039745708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:22.728" endtime="20201112 10:15:22.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.767" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:22.739" endtime="20201112 10:15:22.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.778" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.776" endtime="20201112 10:15:22.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.784" level="INFO">VALUE: [6.136100000000283e-05, 6.137499999999546e-05, 6.111099999999564e-05, 6.0707999999999596e-05, 6.162499999999571e-05, 6.145899999999982e-05, 6.0985999999998985e-05, 6.0749999999998305e-05, 6.145899999999982e-05, 6.068099999999993e-05, 6.162499999999571e-05, 6.13750000000024e-05, 6.080500000000405e-05, 6.106899999999693e-05, 6.0763999999997875e-05, 6.161099999999614e-05, 6.163900000000222e-05, 6.086100000000233e-05, 6.161100000000308e-05, 6.102699999999822e-05, 6.109699999999607e-05, 6.134700000000326e-05, 6.149999999999906e-05, 6.156900000000437e-05, 6.159700000000351e-05, 6.130599999999709e-05, 6.134699999999632e-05, 6.157000000000384e-05, 6.111200000000205e-05, 6.0999999999998555e-05, 6.113900000000172e-05, 6.0721999999999166e-05, 6.127800000000488e-05, 6.115299999999435e-05, 6.10420000000042e-05, 6.155599999999734e-05, 6.0820000000003094e-05, 6.145899999999982e-05, 6.0707999999999596e-05, 6.084700000000276e-05, 6.113900000000172e-05, 6.147199999999992e-05, 6.115300000000129e-05, 6.094499999999975e-05, 6.156900000000437e-05, 6.115300000000129e-05, 6.118100000000043e-05, 6.151299999999915e-05, 6.08750000000019e-05, 6.084700000000276e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.780" endtime="20201112 10:15:22.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.769" endtime="20201112 10:15:22.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.793" endtime="20201112 10:15:22.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.801" endtime="20201112 10:15:22.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.797" endtime="20201112 10:15:22.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.788" endtime="20201112 10:15:22.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.285" endtime="20201112 10:15:22.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.284" endtime="20201112 10:15:22.827"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.849" endtime="20201112 10:15:22.867"></status>
</kw>
<msg timestamp="20201112 10:15:22.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.846" endtime="20201112 10:15:22.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.870" endtime="20201112 10:15:22.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.876" endtime="20201112 10:15:22.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.839" endtime="20201112 10:15:22.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.833" endtime="20201112 10:15:22.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.899" endtime="20201112 10:15:23.234"></status>
</kw>
<msg timestamp="20201112 10:15:23.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.896" endtime="20201112 10:15:23.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.243" endtime="20201112 10:15:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.262" endtime="20201112 10:15:23.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.889" endtime="20201112 10:15:23.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.884" endtime="20201112 10:15:23.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.283" level="INFO">${RESULT} = [{'time': 0.039867792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.244500000000125e-05, 'source_diff': 6.244500000000125e-05}, {'time': 0.039947889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.274" endtime="20201112 10:15:23.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:23.285" endtime="20201112 10:15:23.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.398" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.396" endtime="20201112 10:15:23.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.404" level="INFO">VALUE: [6.244500000000125e-05, 6.234699999999732e-05, 6.230600000000502e-05, 6.245900000000082e-05, 6.20699999999974e-05, 6.215300000000229e-05, 6.212500000000315e-05, 6.247200000000092e-05, 6.22499999999998e-05, 6.237499999999646e-05, 6.266600000000289e-05, 6.263900000000322e-05, 6.19300000000017e-05, 6.19159999999952e-05, 6.25279999999992e-05, 6.233299999999775e-05, 6.263900000000322e-05, 6.191700000000161e-05, 6.180599999999759e-05, 6.176399999999888e-05, 6.234699999999732e-05, 6.226399999999938e-05, 6.263900000000322e-05, 6.219499999999406e-05, 6.173699999999921e-05, 6.199999999999956e-05, 6.215299999999535e-05, 6.25279999999992e-05, 6.211100000000358e-05, 6.255599999999834e-05, 6.172200000000017e-05, 6.184800000000323e-05, 6.177799999999845e-05, 6.186100000000333e-05, 6.247200000000092e-05, 6.229099999999904e-05, 6.226399999999938e-05, 6.187499999999596e-05, 6.251399999999963e-05, 6.197200000000042e-05, 6.245800000000135e-05, 6.259699999999757e-05, 6.186100000000333e-05, 6.229099999999904e-05, 6.27080000000016e-05, 6.191700000000161e-05, 6.263899999999628e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.258400000000441e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.401" endtime="20201112 10:15:23.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.389" endtime="20201112 10:15:23.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.413" endtime="20201112 10:15:23.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.421" endtime="20201112 10:15:23.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.417" endtime="20201112 10:15:23.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.408" endtime="20201112 10:15:23.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.829" endtime="20201112 10:15:23.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.828" endtime="20201112 10:15:23.447"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.470" endtime="20201112 10:15:23.487"></status>
</kw>
<msg timestamp="20201112 10:15:23.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.465" endtime="20201112 10:15:23.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.491" endtime="20201112 10:15:23.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.497" endtime="20201112 10:15:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.458" endtime="20201112 10:15:23.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.453" endtime="20201112 10:15:23.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.520" endtime="20201112 10:15:23.856"></status>
</kw>
<msg timestamp="20201112 10:15:23.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040734764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.516" endtime="20201112 10:15:23.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040734764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.865" endtime="20201112 10:15:23.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.884" endtime="20201112 10:15:23.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.509" endtime="20201112 10:15:23.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.505" endtime="20201112 10:15:23.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.901" level="INFO">${RESULT} = [{'time': 0.040798403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.363899999999728e-05, 'source_diff': 6.363899999999728e-05}, {'time': 0.040880542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.892" endtime="20201112 10:15:23.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.931" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:23.903" endtime="20201112 10:15:23.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.942" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.940" endtime="20201112 10:15:23.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.947" level="INFO">VALUE: [6.363899999999728e-05, 6.327799999999995e-05, 6.281899999999868e-05, 6.309700000000501e-05, 6.313899999999678e-05, 6.297200000000142e-05, 6.301400000000013e-05, 6.363800000000475e-05, 6.337499999999746e-05, 6.361100000000508e-05, 6.365299999999685e-05, 6.281999999999816e-05, 6.281899999999868e-05, 6.30279999999997e-05, 6.362499999999771e-05, 6.291600000000314e-05, 6.32500000000008e-05, 6.30279999999997e-05, 6.351400000000063e-05, 6.313799999999731e-05, 6.27500000000003e-05, 6.348600000000149e-05, 6.288899999999653e-05, 6.34029999999966e-05, 6.288899999999653e-05, 6.351400000000063e-05, 6.312499999999721e-05, 6.361099999999814e-05, 6.337499999999746e-05, 6.329200000000645e-05, 6.333299999999875e-05, 6.323600000000124e-05, 6.32080000000021e-05, 6.359800000000498e-05, 6.3582999999999e-05, 6.334699999999832e-05, 6.288899999999653e-05, 6.359699999999857e-05, 6.300000000000056e-05, 6.369499999999556e-05, 6.270799999999466e-05, 6.337499999999746e-05, 6.294400000000228e-05, 6.301400000000013e-05, 6.366700000000336e-05, 6.313799999999731e-05, 6.279099999999954e-05, 6.336100000000483e-05, 6.318099999999549e-05, 6.28750000000039e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.944" endtime="20201112 10:15:23.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.933" endtime="20201112 10:15:23.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.956" endtime="20201112 10:15:23.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.964" endtime="20201112 10:15:23.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.960" endtime="20201112 10:15:23.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.952" endtime="20201112 10:15:23.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.449" endtime="20201112 10:15:23.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.448" endtime="20201112 10:15:23.990"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.012" endtime="20201112 10:15:24.031"></status>
</kw>
<msg timestamp="20201112 10:15:24.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.009" endtime="20201112 10:15:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.034" endtime="20201112 10:15:24.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.041" endtime="20201112 10:15:24.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.002" endtime="20201112 10:15:24.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.996" endtime="20201112 10:15:24.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.064" endtime="20201112 10:15:24.399"></status>
</kw>
<msg timestamp="20201112 10:15:24.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040962097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.060" endtime="20201112 10:15:24.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040962097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.408" endtime="20201112 10:15:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.427" endtime="20201112 10:15:24.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.053" endtime="20201112 10:15:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.049" endtime="20201112 10:15:24.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.444" level="INFO">${RESULT} = [{'time': 0.040962097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.372200000000217e-05, 'source_diff': 6.372200000000217e-05}, {'time': 0.041044236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.435" endtime="20201112 10:15:24.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:24.446" endtime="20201112 10:15:24.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.485" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.482" endtime="20201112 10:15:24.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.490" level="INFO">VALUE: [6.372200000000217e-05, 6.388899999999753e-05, 6.445799999999641e-05, 6.418100000000343e-05, 6.424999999999487e-05, 6.459799999999905e-05, 6.462499999999871e-05, 6.390199999999763e-05, 6.447200000000292e-05, 6.449999999999512e-05, 6.391699999999667e-05, 6.436099999999889e-05, 6.42500000000018e-05, 6.393099999999624e-05, 6.43479999999988e-05, 6.405500000000036e-05, 6.447199999999598e-05, 6.413900000000472e-05, 6.45280000000012e-05, 6.37359999999948e-05, 6.406900000000687e-05, 6.451400000000163e-05, 6.476399999999494e-05, 6.384700000000576e-05, 6.404100000000079e-05, 6.377800000000045e-05, 6.459699999999957e-05, 6.444400000000378e-05, 6.376400000000088e-05, 6.388899999999753e-05, 6.420900000000257e-05, 6.465200000000532e-05, 6.400000000000156e-05, 6.427800000000095e-05, 6.426400000000138e-05, 6.434699999999932e-05, 6.422200000000267e-05, 6.377800000000045e-05, 6.437499999999846e-05, 6.450000000000206e-05, 6.37500000000013e-05, 6.402700000000122e-05, 6.376400000000088e-05, 6.38479999999983e-05, 6.386199999999786e-05, 6.406899999999993e-05, 6.423600000000224e-05, 6.377800000000045e-05, 6.370799999999566e-05, 6.456900000000043e-05]</msg>
<status status="PASS" starttime="20201112 10:15:24.487" endtime="20201112 10:15:24.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.476" endtime="20201112 10:15:24.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.499" endtime="20201112 10:15:24.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.507" endtime="20201112 10:15:24.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.503" endtime="20201112 10:15:24.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.495" endtime="20201112 10:15:24.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.992" endtime="20201112 10:15:24.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.991" endtime="20201112 10:15:24.533"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.555" endtime="20201112 10:15:24.573"></status>
</kw>
<msg timestamp="20201112 10:15:24.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.552" endtime="20201112 10:15:24.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.576" endtime="20201112 10:15:24.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.582" endtime="20201112 10:15:24.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.545" endtime="20201112 10:15:24.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.539" endtime="20201112 10:15:24.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.607" endtime="20201112 10:15:24.942"></status>
</kw>
<msg timestamp="20201112 10:15:24.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039408153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039473389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.603" endtime="20201112 10:15:24.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039408153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039473389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.951" endtime="20201112 10:15:24.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.970" endtime="20201112 10:15:24.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.595" endtime="20201112 10:15:24.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.590" endtime="20201112 10:15:24.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.987" level="INFO">${RESULT} = [{'time': 0.039473389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52359999999963e-05, 'source_diff': 6.52359999999963e-05}, {'time': 0.039557542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:24.978" endtime="20201112 10:15:24.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:24.989" endtime="20201112 10:15:25.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.028" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.025" endtime="20201112 10:15:25.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.033" level="INFO">VALUE: [6.52359999999963e-05, 6.498600000000299e-05, 6.57359999999968e-05, 6.505600000000084e-05, 6.491700000000461e-05, 6.513799999999931e-05, 6.540199999999913e-05, 6.523600000000324e-05, 6.548599999999655e-05, 6.562499999999971e-05, 6.548599999999655e-05, 6.55700000000009e-05, 6.526400000000238e-05, 6.513900000000572e-05, 6.470799999999666e-05, 6.561100000000014e-05, 6.526400000000238e-05, 6.5583000000001e-05, 6.511099999999964e-05, 6.523600000000324e-05, 6.476400000000188e-05, 6.562499999999971e-05, 6.518099999999749e-05, 6.511099999999964e-05, 6.520799999999716e-05, 6.554199999999483e-05, 6.481900000000068e-05, 6.47080000000036e-05, 6.509700000000007e-05, 6.473700000000221e-05, 6.558299999999406e-05, 6.492999999999777e-05, 6.534700000000032e-05, 6.509700000000007e-05, 6.505500000000136e-05, 6.547199999999698e-05, 6.47500000000023e-05, 6.522199999999673e-05, 6.520899999999663e-05, 6.518099999999749e-05, 6.548599999999655e-05, 6.49029999999981e-05, 6.548600000000349e-05, 6.484699999999982e-05, 6.481900000000068e-05, 6.561100000000014e-05, 6.55700000000009e-05, 6.519399999999759e-05, 6.47779999999945e-05, 6.554200000000177e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.030" endtime="20201112 10:15:25.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.019" endtime="20201112 10:15:25.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.042" endtime="20201112 10:15:25.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.050" endtime="20201112 10:15:25.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.046" endtime="20201112 10:15:25.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.038" endtime="20201112 10:15:25.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.535" endtime="20201112 10:15:25.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.534" endtime="20201112 10:15:25.076"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.098" endtime="20201112 10:15:25.116"></status>
</kw>
<msg timestamp="20201112 10:15:25.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.095" endtime="20201112 10:15:25.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.119" endtime="20201112 10:15:25.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.126" endtime="20201112 10:15:25.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.088" endtime="20201112 10:15:25.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.083" endtime="20201112 10:15:25.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.148" endtime="20201112 10:15:25.486"></status>
</kw>
<msg timestamp="20201112 10:15:25.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03975325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:25.145" endtime="20201112 10:15:25.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03975325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:25.496" endtime="20201112 10:15:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.514" endtime="20201112 10:15:25.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.138" endtime="20201112 10:15:25.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.133" endtime="20201112 10:15:25.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.532" level="INFO">${RESULT} = [{'time': 0.03975325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652799999999626e-05, 'source_diff': 6.652799999999626e-05}, {'time': 0.039840444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:25.523" endtime="20201112 10:15:25.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.563" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:25.534" endtime="20201112 10:15:25.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.574" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.572" endtime="20201112 10:15:25.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.579" level="INFO">VALUE: [6.652799999999626e-05, 6.666599999999995e-05, 6.597199999999748e-05, 6.624999999999687e-05, 6.643099999999874e-05, 6.648600000000449e-05, 6.642999999999927e-05, 6.663900000000028e-05, 6.594499999999781e-05, 6.57359999999968e-05, 6.642999999999927e-05, 6.668099999999899e-05, 6.659699999999463e-05, 6.57500000000033e-05, 6.631900000000218e-05, 6.572199999999723e-05, 6.604200000000227e-05, 6.630600000000209e-05, 6.595899999999738e-05, 6.611100000000064e-05, 6.600000000000356e-05, 6.583300000000125e-05, 6.587499999999996e-05, 6.655499999999592e-05, 6.584700000000082e-05, 6.633300000000175e-05, 6.619399999999859e-05, 6.6583000000002e-05, 6.641699999999917e-05, 6.616599999999945e-05, 6.59029999999991e-05, 6.638900000000003e-05, 6.569399999999809e-05, 6.668099999999899e-05, 6.598599999999705e-05, 6.594399999999834e-05, 6.608400000000098e-05, 6.636100000000089e-05, 6.591699999999867e-05, 6.633400000000123e-05, 6.594399999999834e-05, 6.645800000000535e-05, 6.655600000000234e-05, 6.618100000000543e-05, 6.670799999999866e-05, 6.654200000000277e-05, 6.651299999999721e-05, 6.59159999999992e-05, 6.624999999999687e-05, 6.630600000000209e-05]</msg>
<status status="PASS" starttime="20201112 10:15:25.576" endtime="20201112 10:15:25.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.565" endtime="20201112 10:15:25.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.589" endtime="20201112 10:15:25.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.597" endtime="20201112 10:15:25.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.593" endtime="20201112 10:15:25.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.584" endtime="20201112 10:15:25.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.078" endtime="20201112 10:15:25.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.077" endtime="20201112 10:15:25.623"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.645" endtime="20201112 10:15:25.662"></status>
</kw>
<msg timestamp="20201112 10:15:25.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.641" endtime="20201112 10:15:25.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.666" endtime="20201112 10:15:25.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.672" endtime="20201112 10:15:25.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.634" endtime="20201112 10:15:25.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.629" endtime="20201112 10:15:25.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.694" endtime="20201112 10:15:26.031"></status>
</kw>
<msg timestamp="20201112 10:15:26.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.691" endtime="20201112 10:15:26.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.040" endtime="20201112 10:15:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.058" endtime="20201112 10:15:26.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.684" endtime="20201112 10:15:26.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.680" endtime="20201112 10:15:26.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.077" level="INFO">${RESULT} = [{'time': 0.039552556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.718099999999949e-05, 'source_diff': 6.718099999999949e-05}, {'time': 0.039642708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:26.068" endtime="20201112 10:15:26.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:26.079" endtime="20201112 10:15:26.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.118" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.115" endtime="20201112 10:15:26.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.123" level="INFO">VALUE: [6.718099999999949e-05, 6.765200000000138e-05, 6.766700000000042e-05, 6.75280000000042e-05, 6.705500000000336e-05, 6.768000000000052e-05, 6.723700000000471e-05, 6.709700000000207e-05, 6.701300000000465e-05, 6.731899999999624e-05, 6.715300000000035e-05, 6.741700000000017e-05, 6.680499999999617e-05, 6.727800000000395e-05, 6.719399999999959e-05, 6.747199999999898e-05, 6.762500000000171e-05, 6.698599999999805e-05, 6.736100000000189e-05, 6.770799999999966e-05, 6.731999999999572e-05, 6.69030000000001e-05, 6.709800000000155e-05, 6.723600000000524e-05, 6.751399999999769e-05, 6.673700000000421e-05, 6.7583000000003e-05, 6.683400000000173e-05, 6.67909999999966e-05, 6.749999999999812e-05, 6.741700000000017e-05, 6.720799999999916e-05, 6.751399999999769e-05, 6.67359999999978e-05, 6.687500000000096e-05, 6.761100000000214e-05, 6.70830000000025e-05, 6.758399999999554e-05, 6.676400000000388e-05, 6.733400000000223e-05, 6.75700000000029e-05, 6.706899999999599e-05, 6.694499999999881e-05, 6.745899999999888e-05, 6.718099999999949e-05, 6.723600000000524e-05, 6.694500000000575e-05, 6.768099999999999e-05, 6.70700000000024e-05, 6.695899999999838e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.120" endtime="20201112 10:15:26.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.109" endtime="20201112 10:15:26.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.132" endtime="20201112 10:15:26.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.140" endtime="20201112 10:15:26.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.136" endtime="20201112 10:15:26.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.128" endtime="20201112 10:15:26.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.625" endtime="20201112 10:15:26.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.623" endtime="20201112 10:15:26.166"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.188" endtime="20201112 10:15:26.206"></status>
</kw>
<msg timestamp="20201112 10:15:26.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.185" endtime="20201112 10:15:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.209" endtime="20201112 10:15:26.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.215" endtime="20201112 10:15:26.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.178" endtime="20201112 10:15:26.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.172" endtime="20201112 10:15:26.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.238" endtime="20201112 10:15:26.573"></status>
</kw>
<msg timestamp="20201112 10:15:26.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039587806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039655736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.235" endtime="20201112 10:15:26.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039587806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039655736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.582" endtime="20201112 10:15:26.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.600" endtime="20201112 10:15:26.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.228" endtime="20201112 10:15:26.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.223" endtime="20201112 10:15:26.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.619" level="INFO">${RESULT} = [{'time': 0.039655736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.792999999999383e-05, 'source_diff': 6.792999999999383e-05}, {'time': 0.039744875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:26.610" endtime="20201112 10:15:26.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.649" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:26.621" endtime="20201112 10:15:26.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.660" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.657" endtime="20201112 10:15:26.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.665" level="INFO">VALUE: [6.792999999999383e-05, 6.776399999999794e-05, 6.869400000000109e-05, 6.786099999999545e-05, 6.855499999999792e-05, 6.861100000000314e-05, 6.812500000000221e-05, 6.781900000000368e-05, 6.865300000000185e-05, 6.823699999999877e-05, 6.837500000000246e-05, 6.84160000000017e-05, 6.858399999999654e-05, 6.870800000000066e-05, 6.86109999999962e-05, 6.805500000000436e-05, 6.791599999999426e-05, 6.841700000000117e-05, 6.86109999999962e-05, 6.848600000000649e-05, 6.844400000000084e-05, 6.816600000000145e-05, 6.818100000000049e-05, 6.815300000000135e-05, 6.783300000000325e-05, 6.859699999999663e-05, 6.82229999999992e-05, 6.838899999999509e-05, 6.855499999999792e-05, 6.804099999999785e-05, 6.805600000000384e-05, 6.77359999999988e-05, 6.823699999999877e-05, 6.77359999999988e-05, 6.808299999999656e-05, 6.868100000000099e-05, 6.841700000000117e-05, 6.838899999999509e-05, 6.859700000000357e-05, 6.836100000000289e-05, 6.788900000000153e-05, 6.790199999999469e-05, 6.863900000000228e-05, 6.795899999999938e-05, 6.787500000000196e-05, 6.788899999999459e-05, 6.809700000000307e-05, 6.791700000000067e-05, 6.779200000000402e-05, 6.805499999999742e-05]</msg>
<status status="PASS" starttime="20201112 10:15:26.662" endtime="20201112 10:15:26.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.651" endtime="20201112 10:15:26.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.674" endtime="20201112 10:15:26.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.682" endtime="20201112 10:15:26.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.678" endtime="20201112 10:15:26.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.670" endtime="20201112 10:15:26.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.168" endtime="20201112 10:15:26.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.167" endtime="20201112 10:15:26.708"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.730" endtime="20201112 10:15:26.748"></status>
</kw>
<msg timestamp="20201112 10:15:26.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.727" endtime="20201112 10:15:26.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.751" endtime="20201112 10:15:26.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.757" endtime="20201112 10:15:26.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.720" endtime="20201112 10:15:26.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.714" endtime="20201112 10:15:26.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.780" endtime="20201112 10:15:27.115"></status>
</kw>
<msg timestamp="20201112 10:15:27.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039593792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.777" endtime="20201112 10:15:27.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039593792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.125" endtime="20201112 10:15:27.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.143" endtime="20201112 10:15:27.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.770" endtime="20201112 10:15:27.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.765" endtime="20201112 10:15:27.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.162" level="INFO">${RESULT} = [{'time': 0.039593792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.936100000000389e-05, 'source_diff': 6.936100000000389e-05}, {'time': 0.039685958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:27.153" endtime="20201112 10:15:27.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:27.164" endtime="20201112 10:15:27.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.203" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.200" endtime="20201112 10:15:27.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.208" level="INFO">VALUE: [6.936100000000389e-05, 6.904099999999885e-05, 6.930500000000561e-05, 6.915300000000235e-05, 6.893100000000124e-05, 6.913899999999584e-05, 6.965300000000285e-05, 6.904099999999885e-05, 6.897200000000048e-05, 6.936099999999695e-05, 6.962499999999677e-05, 6.880500000000511e-05, 6.956899999999849e-05, 6.936099999999695e-05, 6.952799999999926e-05, 6.901400000000613e-05, 6.970900000000113e-05, 6.913899999999584e-05, 6.948600000000055e-05, 6.929199999999858e-05, 6.933299999999781e-05, 6.920800000000116e-05, 6.890199999999569e-05, 6.880599999999765e-05, 6.895900000000038e-05, 6.97360000000008e-05, 6.902799999999876e-05, 6.906999999999747e-05, 6.905600000000484e-05, 6.895900000000038e-05, 6.908299999999756e-05, 6.898600000000005e-05, 6.962499999999677e-05, 6.954199999999883e-05, 6.924999999999987e-05, 6.876400000000588e-05, 6.948600000000055e-05, 6.886100000000339e-05, 6.891700000000167e-05, 6.943100000000174e-05, 6.89030000000021e-05, 6.890200000000263e-05, 6.922200000000073e-05, 6.874999999999937e-05, 6.948599999999361e-05, 6.901399999999919e-05, 6.874999999999937e-05, 6.933300000000475e-05, 6.956899999999849e-05, 6.888900000000253e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.205" endtime="20201112 10:15:27.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.194" endtime="20201112 10:15:27.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.217" endtime="20201112 10:15:27.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.225" endtime="20201112 10:15:27.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.221" endtime="20201112 10:15:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.213" endtime="20201112 10:15:27.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.710" endtime="20201112 10:15:27.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.709" endtime="20201112 10:15:27.251"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.273" endtime="20201112 10:15:27.291"></status>
</kw>
<msg timestamp="20201112 10:15:27.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.270" endtime="20201112 10:15:27.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.294" endtime="20201112 10:15:27.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.300" endtime="20201112 10:15:27.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.263" endtime="20201112 10:15:27.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.257" endtime="20201112 10:15:27.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.323" endtime="20201112 10:15:27.657"></status>
</kw>
<msg timestamp="20201112 10:15:27.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039589125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039659069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.320" endtime="20201112 10:15:27.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039589125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039659069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.667" endtime="20201112 10:15:27.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.685" endtime="20201112 10:15:27.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.313" endtime="20201112 10:15:27.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.308" endtime="20201112 10:15:27.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.704" level="INFO">${RESULT} = [{'time': 0.039659069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.99439999999954e-05, 'source_diff': 6.99439999999954e-05}, {'time': 0.039752194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:27.695" endtime="20201112 10:15:27.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:27.706" endtime="20201112 10:15:27.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.747" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.744" endtime="20201112 10:15:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.752" level="INFO">VALUE: [6.99439999999954e-05, 6.977700000000003e-05, 7.012500000000421e-05, 6.979199999999908e-05, 7.027800000000001e-05, 7.070799999999572e-05, 6.993100000000224e-05, 7.002799999999976e-05, 7.06109999999982e-05, 7.036099999999795e-05, 7.044500000000231e-05, 7.013899999999684e-05, 7.054100000000035e-05, 7.005499999999942e-05, 7.069500000000256e-05, 7.050000000000112e-05, 7.016699999999598e-05, 7.06109999999982e-05, 6.968000000000252e-05, 7.041699999999623e-05, 7.038799999999762e-05, 7.020800000000216e-05, 7.04160000000037e-05, 7.019399999999565e-05, 7.019400000000259e-05, 7.033300000000575e-05, 7.040299999999666e-05, 7.045799999999547e-05, 7.022200000000173e-05, 7.029199999999958e-05, 7.002799999999976e-05, 7.015299999999641e-05, 7.065199999999744e-05, 7.038899999999709e-05, 7.033299999999881e-05, 7.068100000000299e-05, 7.047200000000198e-05, 7.001400000000019e-05, 7.033299999999881e-05, 7.063899999999734e-05, 6.977700000000003e-05, 7.000000000000062e-05, 7.04030000000036e-05, 7.067999999999658e-05, 7.059699999999863e-05, 7.065300000000385e-05, 7.069499999999562e-05, 7.063900000000428e-05, 7.004100000000679e-05, 6.988899999999659e-05]</msg>
<status status="PASS" starttime="20201112 10:15:27.749" endtime="20201112 10:15:27.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.738" endtime="20201112 10:15:27.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.761" endtime="20201112 10:15:27.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.769" endtime="20201112 10:15:27.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.765" endtime="20201112 10:15:27.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.757" endtime="20201112 10:15:27.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.253" endtime="20201112 10:15:27.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.252" endtime="20201112 10:15:27.795"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.817" endtime="20201112 10:15:27.835"></status>
</kw>
<msg timestamp="20201112 10:15:27.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.814" endtime="20201112 10:15:27.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.839" endtime="20201112 10:15:27.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.845" endtime="20201112 10:15:27.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.807" endtime="20201112 10:15:27.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.802" endtime="20201112 10:15:27.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.869" endtime="20201112 10:15:28.204"></status>
</kw>
<msg timestamp="20201112 10:15:28.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039710736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039782236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.866" endtime="20201112 10:15:28.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039710736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039782236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.213" endtime="20201112 10:15:28.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.232" endtime="20201112 10:15:28.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.859" endtime="20201112 10:15:28.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.854" endtime="20201112 10:15:28.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.249" level="INFO">${RESULT} = [{'time': 0.039782236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.149999999999518e-05, 'source_diff': 7.149999999999518e-05}, {'time': 0.039877403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:28.240" endtime="20201112 10:15:28.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.280" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:28.251" endtime="20201112 10:15:28.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.291" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.289" endtime="20201112 10:15:28.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.296" level="INFO">VALUE: [7.149999999999518e-05, 7.163899999999834e-05, 7.09160000000042e-05, 7.102700000000128e-05, 7.133299999999981e-05, 7.122199999999579e-05, 7.115299999999741e-05, 7.109800000000555e-05, 7.120800000000316e-05, 7.138900000000503e-05, 7.159699999999963e-05, 7.147300000000245e-05, 7.151300000000221e-05, 7.136099999999895e-05, 7.072199999999529e-05, 7.084699999999888e-05, 7.133399999999929e-05, 7.16109999999992e-05, 7.126400000000144e-05, 7.122200000000273e-05, 7.150000000000212e-05, 7.102700000000128e-05, 7.125000000000187e-05, 7.073599999999486e-05, 7.169500000000356e-05, 7.14160000000047e-05, 7.131900000000024e-05, 7.079200000000008e-05, 7.087499999999802e-05, 7.166700000000442e-05, 7.165199999999844e-05, 7.094400000000334e-05, 7.07360000000018e-05, 7.087499999999802e-05, 7.159699999999963e-05, 7.170799999999672e-05, 7.15560000000004e-05, 7.144499999999637e-05, 7.100000000000162e-05, 7.086099999999845e-05, 7.122199999999579e-05, 7.124999999999493e-05, 7.163899999999834e-05, 7.087499999999802e-05, 7.142999999999733e-05, 7.151300000000221e-05, 7.172200000000323e-05, 7.151399999999475e-05, 7.136099999999895e-05, 7.111100000000564e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.293" endtime="20201112 10:15:28.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.282" endtime="20201112 10:15:28.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.306" endtime="20201112 10:15:28.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.314" endtime="20201112 10:15:28.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.310" endtime="20201112 10:15:28.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.301" endtime="20201112 10:15:28.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.797" endtime="20201112 10:15:28.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.796" endtime="20201112 10:15:28.340"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.362" endtime="20201112 10:15:28.380"></status>
</kw>
<msg timestamp="20201112 10:15:28.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.359" endtime="20201112 10:15:28.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.383" endtime="20201112 10:15:28.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.389" endtime="20201112 10:15:28.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.352" endtime="20201112 10:15:28.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.346" endtime="20201112 10:15:28.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.412" endtime="20201112 10:15:28.745"></status>
</kw>
<msg timestamp="20201112 10:15:28.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039573097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.409" endtime="20201112 10:15:28.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039573097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.755" endtime="20201112 10:15:28.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.773" endtime="20201112 10:15:28.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.402" endtime="20201112 10:15:28.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.397" endtime="20201112 10:15:28.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.791" level="INFO">${RESULT} = [{'time': 0.039645694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.259700000000063e-05, 'source_diff': 7.259700000000063e-05}, {'time': 0.039735861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:28.782" endtime="20201112 10:15:28.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:28.793" endtime="20201112 10:15:28.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.835" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.832" endtime="20201112 10:15:28.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.840" level="INFO">VALUE: [7.259700000000063e-05, 7.215299999999841e-05, 7.244499999999737e-05, 7.175000000000237e-05, 7.244400000000484e-05, 7.22360000000033e-05, 7.190299999999816e-05, 7.270799999999772e-05, 7.19439999999974e-05, 7.19439999999974e-05, 7.194400000000434e-05, 7.231900000000124e-05, 7.177799999999457e-05, 7.237500000000646e-05, 7.216699999999798e-05, 7.200000000000262e-05, 7.230599999999421e-05, 7.17910000000016e-05, 7.200000000000262e-05, 7.204200000000133e-05, 7.25560000000014e-05, 7.216599999999851e-05, 7.184699999999988e-05, 7.230599999999421e-05, 7.22360000000033e-05, 7.22360000000033e-05, 7.236099999999995e-05, 7.188899999999859e-05, 7.262499999999977e-05, 7.219500000000406e-05, 7.245799999999747e-05, 7.229099999999516e-05, 7.194500000000381e-05, 7.237499999999952e-05, 7.265300000000585e-05, 7.265299999999891e-05, 7.202799999999482e-05, 7.175000000000237e-05, 7.251400000000269e-05, 7.19439999999974e-05, 7.211199999999918e-05, 7.186099999999945e-05, 7.22360000000033e-05, 7.177800000000151e-05, 7.216700000000492e-05, 7.227800000000201e-05, 7.245899999999694e-05, 7.25690000000015e-05, 7.188899999999859e-05, 7.238899999999909e-05]</msg>
<status status="PASS" starttime="20201112 10:15:28.837" endtime="20201112 10:15:28.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.825" endtime="20201112 10:15:28.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.850" endtime="20201112 10:15:28.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.858" endtime="20201112 10:15:28.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.854" endtime="20201112 10:15:28.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.845" endtime="20201112 10:15:28.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.342" endtime="20201112 10:15:28.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.341" endtime="20201112 10:15:28.884"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.907" endtime="20201112 10:15:28.927"></status>
</kw>
<msg timestamp="20201112 10:15:28.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.904" endtime="20201112 10:15:28.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.930" endtime="20201112 10:15:28.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.936" endtime="20201112 10:15:28.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.897" endtime="20201112 10:15:28.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.891" endtime="20201112 10:15:28.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.959" endtime="20201112 10:15:29.311"></status>
</kw>
<msg timestamp="20201112 10:15:29.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.956" endtime="20201112 10:15:29.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.320" endtime="20201112 10:15:29.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.339" endtime="20201112 10:15:29.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.949" endtime="20201112 10:15:29.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.944" endtime="20201112 10:15:29.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.356" level="INFO">${RESULT} = [{'time': 0.041035111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.329200000000258e-05, 'source_diff': 7.329200000000258e-05}, {'time': 0.041129264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.347" endtime="20201112 10:15:29.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:29.358" endtime="20201112 10:15:29.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.398" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.396" endtime="20201112 10:15:29.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.404" level="INFO">VALUE: [7.329200000000258e-05, 7.279200000000208e-05, 7.354200000000283e-05, 7.295799999999797e-05, 7.365299999999991e-05, 7.354100000000335e-05, 7.284700000000088e-05, 7.32769999999966e-05, 7.29309999999983e-05, 7.369499999999862e-05, 7.336100000000095e-05, 7.334700000000138e-05, 7.29309999999983e-05, 7.34439999999989e-05, 7.301400000000319e-05, 7.309800000000061e-05, 7.359700000000163e-05, 7.354200000000283e-05, 7.287500000000002e-05, 7.292999999999883e-05, 7.345799999999847e-05, 7.320799999999822e-05, 7.375000000000437e-05, 7.322199999999779e-05, 7.362500000000077e-05, 7.334800000000086e-05, 7.349999999999718e-05, 7.313899999999984e-05, 7.277800000000251e-05, 7.354100000000335e-05, 7.290299999999916e-05, 7.344499999999837e-05, 7.312500000000027e-05, 7.37230000000047e-05, 7.366600000000001e-05, 7.347199999999804e-05, 7.347200000000498e-05, 7.330600000000215e-05, 7.279200000000208e-05, 7.341599999999976e-05, 7.312500000000027e-05, 7.304200000000233e-05, 7.336100000000095e-05, 7.35690000000025e-05, 7.347199999999804e-05, 7.362500000000077e-05, 7.309700000000113e-05, 7.334700000000138e-05, 7.297199999999754e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.401" endtime="20201112 10:15:29.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.390" endtime="20201112 10:15:29.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.413" endtime="20201112 10:15:29.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.421" endtime="20201112 10:15:29.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.417" endtime="20201112 10:15:29.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.409" endtime="20201112 10:15:29.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.887" endtime="20201112 10:15:29.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.885" endtime="20201112 10:15:29.447"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.469" endtime="20201112 10:15:29.489"></status>
</kw>
<msg timestamp="20201112 10:15:29.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.466" endtime="20201112 10:15:29.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.492" endtime="20201112 10:15:29.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.499" endtime="20201112 10:15:29.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.459" endtime="20201112 10:15:29.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.453" endtime="20201112 10:15:29.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.522" endtime="20201112 10:15:29.870"></status>
</kw>
<msg timestamp="20201112 10:15:29.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039760431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.519" endtime="20201112 10:15:29.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039760431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.879" endtime="20201112 10:15:29.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.898" endtime="20201112 10:15:29.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.512" endtime="20201112 10:15:29.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.507" endtime="20201112 10:15:29.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.916" level="INFO">${RESULT} = [{'time': 0.039834653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422199999999879e-05, 'source_diff': 7.422199999999879e-05}, {'time': 0.039930875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.907" endtime="20201112 10:15:29.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:29.918" endtime="20201112 10:15:29.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.960" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.958" endtime="20201112 10:15:29.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.966" level="INFO">VALUE: [7.422199999999879e-05, 7.433299999999587e-05, 7.447199999999904e-05, 7.437500000000152e-05, 7.405500000000342e-05, 7.37360000000048e-05, 7.45690000000035e-05, 7.447199999999904e-05, 7.46110000000022e-05, 7.46110000000022e-05, 7.415300000000041e-05, 7.416699999999998e-05, 7.407000000000247e-05, 7.401400000000419e-05, 7.407000000000247e-05, 7.436100000000195e-05, 7.395799999999897e-05, 7.432000000000272e-05, 7.384700000000188e-05, 7.459700000000263e-05, 7.374999999999743e-05, 7.380500000000317e-05, 7.427799999999707e-05, 7.419499999999912e-05, 7.409700000000213e-05, 7.399999999999768e-05, 7.413900000000084e-05, 7.397199999999854e-05, 7.391699999999973e-05, 7.454099999999741e-05, 7.46389999999944e-05, 7.377800000000351e-05, 7.394499999999887e-05, 7.390200000000069e-05, 7.390300000000016e-05, 7.42910000000041e-05, 7.418000000000008e-05, 7.402799999999682e-05, 7.383399999999485e-05, 7.381999999999528e-05, 7.413900000000084e-05, 7.409700000000213e-05, 7.468000000000058e-05, 7.422199999999879e-05, 7.39439999999994e-05, 7.429199999999664e-05, 7.420799999999922e-05, 7.437500000000152e-05, 7.391600000000026e-05, 7.454100000000435e-05]</msg>
<status status="PASS" starttime="20201112 10:15:29.963" endtime="20201112 10:15:29.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.951" endtime="20201112 10:15:29.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.975" endtime="20201112 10:15:29.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.983" endtime="20201112 10:15:30.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.979" endtime="20201112 10:15:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.971" endtime="20201112 10:15:30.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.449" endtime="20201112 10:15:30.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.448" endtime="20201112 10:15:30.009"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.031" endtime="20201112 10:15:30.049"></status>
</kw>
<msg timestamp="20201112 10:15:30.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.028" endtime="20201112 10:15:30.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.053" endtime="20201112 10:15:30.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.059" endtime="20201112 10:15:30.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.021" endtime="20201112 10:15:30.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.015" endtime="20201112 10:15:30.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.081" endtime="20201112 10:15:30.415"></status>
</kw>
<msg timestamp="20201112 10:15:30.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039750903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.078" endtime="20201112 10:15:30.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039750903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.425" endtime="20201112 10:15:30.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.443" endtime="20201112 10:15:30.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.071" endtime="20201112 10:15:30.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.066" endtime="20201112 10:15:30.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.461" level="INFO">${RESULT} = [{'time': 0.039750903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554199999999789e-05, 'source_diff': 7.554199999999789e-05}, {'time': 0.039847069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.452" endtime="20201112 10:15:30.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.491" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:30.463" endtime="20201112 10:15:30.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.503" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.500" endtime="20201112 10:15:30.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.509" level="INFO">VALUE: [7.554199999999789e-05, 7.516600000000151e-05, 7.534700000000338e-05, 7.519500000000012e-05, 7.563900000000234e-05, 7.545800000000047e-05, 7.555499999999798e-05, 7.551300000000621e-05, 7.565299999999497e-05, 7.548599999999961e-05, 7.520799999999328e-05, 7.569400000000115e-05, 7.479199999999714e-05, 7.523700000000577e-05, 7.486200000000193e-05, 7.501399999999825e-05, 7.563900000000234e-05, 7.479200000000408e-05, 7.523599999999936e-05, 7.488899999999465e-05, 7.540200000000219e-05, 7.479200000000408e-05, 7.556899999999755e-05, 7.507000000000347e-05, 7.487500000000202e-05, 7.495799999999997e-05, 7.56110000000032e-05, 7.504199999999739e-05, 7.49169999999938e-05, 7.541700000000123e-05, 7.473599999999886e-05, 7.505500000000442e-05, 7.504199999999739e-05, 7.474999999999843e-05, 7.518000000000108e-05, 7.559700000000363e-05, 7.556899999999755e-05, 7.534700000000338e-05, 7.509700000000313e-05, 7.4763999999998e-05, 7.520800000000022e-05, 7.558299999999712e-05, 7.498599999999911e-05, 7.566600000000201e-05, 7.50969999999962e-05, 7.56389999999954e-05, 7.490200000000169e-05, 7.490300000000116e-05, 7.502799999999782e-05, 7.570800000000072e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.505" endtime="20201112 10:15:30.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.493" endtime="20201112 10:15:30.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.518" endtime="20201112 10:15:30.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.526" endtime="20201112 10:15:30.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.522" endtime="20201112 10:15:30.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.513" endtime="20201112 10:15:30.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.011" endtime="20201112 10:15:30.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.010" endtime="20201112 10:15:30.552"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.574" endtime="20201112 10:15:30.592"></status>
</kw>
<msg timestamp="20201112 10:15:30.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.571" endtime="20201112 10:15:30.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.595" endtime="20201112 10:15:30.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.601" endtime="20201112 10:15:30.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.564" endtime="20201112 10:15:30.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.558" endtime="20201112 10:15:30.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.624" endtime="20201112 10:15:30.960"></status>
</kw>
<msg timestamp="20201112 10:15:30.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039455903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039532333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.621" endtime="20201112 10:15:30.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039455903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039532333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.970" endtime="20201112 10:15:30.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.989" endtime="20201112 10:15:30.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.614" endtime="20201112 10:15:30.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.609" endtime="20201112 10:15:30.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.006" level="INFO">${RESULT} = [{'time': 0.039532333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.643000000000233e-05, 'source_diff': 7.643000000000233e-05}, {'time': 0.039632472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.997" endtime="20201112 10:15:31.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:31.008" endtime="20201112 10:15:31.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.047" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.045" endtime="20201112 10:15:31.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.053" level="INFO">VALUE: [7.643000000000233e-05, 7.648600000000061e-05, 7.61110000000037e-05, 7.637500000000352e-05, 7.572200000000029e-05, 7.623600000000036e-05, 7.645799999999453e-05, 7.64310000000018e-05, 7.645800000000147e-05, 7.645800000000147e-05, 7.654199999999889e-05, 7.602699999999935e-05, 7.593000000000183e-05, 7.623600000000036e-05, 7.612500000000327e-05, 7.629200000000558e-05, 7.609799999999667e-05, 7.58890000000026e-05, 7.580599999999771e-05, 7.648600000000061e-05, 7.652799999999932e-05, 7.590199999999575e-05, 7.615300000000241e-05, 7.624999999999993e-05, 7.679199999999914e-05, 7.644500000000137e-05, 7.673600000000086e-05, 7.593099999999436e-05, 7.622200000000079e-05, 7.587500000000302e-05, 7.651399999999975e-05, 7.630599999999821e-05, 7.60969999999972e-05, 7.597300000000001e-05, 7.602800000000576e-05, 7.672300000000076e-05, 7.641600000000276e-05, 7.59440000000014e-05, 7.586099999999651e-05, 7.673600000000086e-05, 7.587500000000302e-05, 7.638800000000362e-05, 7.624999999999993e-05, 7.593099999999436e-05, 7.6764e-05, 7.640300000000266e-05, 7.668100000000205e-05, 7.595800000000097e-05, 7.573599999999986e-05, 7.59310000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.050" endtime="20201112 10:15:31.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.038" endtime="20201112 10:15:31.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.063" endtime="20201112 10:15:31.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.071" endtime="20201112 10:15:31.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.067" endtime="20201112 10:15:31.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.059" endtime="20201112 10:15:31.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.554" endtime="20201112 10:15:31.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.553" endtime="20201112 10:15:31.097"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.119" endtime="20201112 10:15:31.139"></status>
</kw>
<msg timestamp="20201112 10:15:31.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.116" endtime="20201112 10:15:31.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.142" endtime="20201112 10:15:31.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.149" endtime="20201112 10:15:31.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.109" endtime="20201112 10:15:31.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.103" endtime="20201112 10:15:31.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.171" endtime="20201112 10:15:31.509"></status>
</kw>
<msg timestamp="20201112 10:15:31.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039750653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039828347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.168" endtime="20201112 10:15:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039750653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039828347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.518" endtime="20201112 10:15:31.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.537" endtime="20201112 10:15:31.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.161" endtime="20201112 10:15:31.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.157" endtime="20201112 10:15:31.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.554" level="INFO">${RESULT} = [{'time': 0.039828347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.769400000000315e-05, 'source_diff': 7.769400000000315e-05}, {'time': 0.039927569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:31.546" endtime="20201112 10:15:31.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:31.556" endtime="20201112 10:15:31.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.595" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.593" endtime="20201112 10:15:31.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.601" level="INFO">VALUE: [7.769400000000315e-05, 7.702700000000035e-05, 7.743099999999586e-05, 7.727800000000007e-05, 7.68890000000036e-05, 7.697200000000154e-05, 7.742999999999639e-05, 7.690300000000316e-05, 7.734700000000538e-05, 7.700000000000068e-05, 7.750000000000118e-05, 7.692999999999589e-05, 7.697200000000154e-05, 7.740199999999725e-05, 7.751399999999381e-05, 7.731999999999878e-05, 7.679099999999967e-05, 7.701400000000025e-05, 7.734699999999844e-05, 7.733299999999887e-05, 7.736099999999801e-05, 7.76519999999975e-05, 7.715200000000394e-05, 7.729100000000017e-05, 7.75969999999987e-05, 7.701400000000025e-05, 7.686100000000445e-05, 7.719500000000212e-05, 7.718000000000308e-05, 7.765299999999697e-05, 7.737499999999758e-05, 7.683299999999837e-05, 7.732000000000572e-05, 7.751300000000128e-05, 7.76110000000052e-05, 7.727800000000007e-05, 7.702799999999982e-05, 7.768100000000305e-05, 7.686200000000393e-05, 7.704199999999939e-05, 7.723600000000136e-05, 7.67770000000001e-05, 7.686099999999751e-05, 7.702799999999982e-05, 7.765299999999697e-05, 7.75969999999987e-05, 7.719399999999571e-05, 7.68189999999988e-05, 7.752800000000032e-05, 7.755599999999946e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.598" endtime="20201112 10:15:31.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.587" endtime="20201112 10:15:31.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.616" endtime="20201112 10:15:31.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.625" endtime="20201112 10:15:31.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.621" endtime="20201112 10:15:31.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.611" endtime="20201112 10:15:31.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.099" endtime="20201112 10:15:31.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.098" endtime="20201112 10:15:31.651"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.673" endtime="20201112 10:15:31.691"></status>
</kw>
<msg timestamp="20201112 10:15:31.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.670" endtime="20201112 10:15:31.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.694" endtime="20201112 10:15:31.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.701" endtime="20201112 10:15:31.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.663" endtime="20201112 10:15:31.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.657" endtime="20201112 10:15:31.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.723" endtime="20201112 10:15:32.063"></status>
</kw>
<msg timestamp="20201112 10:15:32.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039430431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039508319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.720" endtime="20201112 10:15:32.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039430431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039508319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.072" endtime="20201112 10:15:32.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.091" endtime="20201112 10:15:32.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.713" endtime="20201112 10:15:32.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.708" endtime="20201112 10:15:32.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.108" level="INFO">${RESULT} = [{'time': 0.039508319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.788799999999818e-05, 'source_diff': 7.788799999999818e-05}, {'time': 0.039605514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.099" endtime="20201112 10:15:32.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:32.110" endtime="20201112 10:15:32.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.151" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.149" endtime="20201112 10:15:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.156" level="INFO">VALUE: [7.788799999999818e-05, 7.78890000000046e-05, 7.862499999999883e-05, 7.78189999999998e-05, 7.84440000000039e-05, 7.855600000000046e-05, 7.795800000000297e-05, 7.85839999999996e-05, 7.855500000000099e-05, 7.830600000000021e-05, 7.808299999999962e-05, 7.779100000000067e-05, 7.816699999999704e-05, 7.84719999999961e-05, 7.784800000000536e-05, 7.825000000000193e-05, 7.85839999999996e-05, 7.858300000000012e-05, 7.784799999999842e-05, 7.779099999999373e-05, 7.788899999999765e-05, 7.797200000000254e-05, 7.815299999999747e-05, 7.847299999999557e-05, 7.818099999999661e-05, 7.823599999999542e-05, 7.779100000000067e-05, 7.822200000000279e-05, 7.859799999999917e-05, 7.820800000000322e-05, 7.865299999999797e-05, 7.812500000000527e-05, 7.850000000000218e-05, 7.850000000000218e-05, 7.868099999999711e-05, 7.770800000000272e-05, 7.818100000000355e-05, 7.826399999999456e-05, 7.780500000000024e-05, 7.869500000000362e-05, 7.838899999999815e-05, 7.866699999999754e-05, 7.79310000000033e-05, 7.850000000000218e-05, 7.875000000000243e-05, 7.801400000000125e-05, 7.801400000000125e-05, 7.851399999999481e-05, 7.830600000000021e-05, 7.858300000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.153" endtime="20201112 10:15:32.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.142" endtime="20201112 10:15:32.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.165" endtime="20201112 10:15:32.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.174" endtime="20201112 10:15:32.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.169" endtime="20201112 10:15:32.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.161" endtime="20201112 10:15:32.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.653" endtime="20201112 10:15:32.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.652" endtime="20201112 10:15:32.201"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.223" endtime="20201112 10:15:32.243"></status>
</kw>
<msg timestamp="20201112 10:15:32.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.220" endtime="20201112 10:15:32.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.246" endtime="20201112 10:15:32.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.252" endtime="20201112 10:15:32.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.213" endtime="20201112 10:15:32.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.207" endtime="20201112 10:15:32.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.275" endtime="20201112 10:15:32.622"></status>
</kw>
<msg timestamp="20201112 10:15:32.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040909444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040988639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.272" endtime="20201112 10:15:32.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040909444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040988639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.631" endtime="20201112 10:15:32.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.650" endtime="20201112 10:15:32.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.265" endtime="20201112 10:15:32.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.260" endtime="20201112 10:15:32.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.667" level="INFO">${RESULT} = [{'time': 0.040988639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.919499999999718e-05, 'source_diff': 7.919499999999718e-05}, {'time': 0.041086833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.658" endtime="20201112 10:15:32.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.697" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:32.669" endtime="20201112 10:15:32.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.707" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.705" endtime="20201112 10:15:32.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.713" level="INFO">VALUE: [7.919499999999718e-05, 7.966600000000601e-05, 7.882000000000028e-05, 7.941599999999882e-05, 7.943099999999786e-05, 7.883300000000037e-05, 7.923600000000336e-05, 7.879100000000167e-05, 7.895800000000397e-05, 7.919400000000465e-05, 7.893099999999736e-05, 7.902800000000182e-05, 7.965300000000591e-05, 7.936100000000001e-05, 7.933300000000088e-05, 7.955500000000199e-05, 7.879200000000114e-05, 7.872299999999582e-05, 7.930500000000174e-05, 7.879200000000114e-05, 7.922200000000379e-05, 7.962499999999983e-05, 7.951400000000275e-05, 7.952800000000232e-05, 7.879200000000114e-05, 7.94719999999971e-05, 7.941599999999882e-05, 7.973600000000386e-05, 7.877800000000157e-05, 7.88190000000008e-05, 7.943099999999786e-05, 7.88190000000008e-05, 7.965299999999897e-05, 7.930600000000121e-05, 7.886099999999951e-05, 7.918099999999761e-05, 7.951399999999581e-05, 7.952800000000232e-05, 7.920800000000422e-05, 7.90840000000001e-05, 7.887499999999908e-05, 7.888899999999865e-05, 7.874999999999549e-05, 7.965299999999897e-05, 7.941700000000523e-05, 7.908299999999369e-05, 7.905599999999402e-05, 7.886099999999951e-05, 7.894500000000387e-05, 7.938799999999968e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.710" endtime="20201112 10:15:32.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.699" endtime="20201112 10:15:32.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.722" endtime="20201112 10:15:32.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.730" endtime="20201112 10:15:32.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.726" endtime="20201112 10:15:32.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.717" endtime="20201112 10:15:32.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.203" endtime="20201112 10:15:32.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.202" endtime="20201112 10:15:32.756"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.780" endtime="20201112 10:15:32.800"></status>
</kw>
<msg timestamp="20201112 10:15:32.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.777" endtime="20201112 10:15:32.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.803" endtime="20201112 10:15:32.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.809" endtime="20201112 10:15:32.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.770" endtime="20201112 10:15:32.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.763" endtime="20201112 10:15:32.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.832" endtime="20201112 10:15:33.180"></status>
</kw>
<msg timestamp="20201112 10:15:33.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.829" endtime="20201112 10:15:33.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.189" endtime="20201112 10:15:33.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.208" endtime="20201112 10:15:33.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.822" endtime="20201112 10:15:33.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.817" endtime="20201112 10:15:33.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.225" level="INFO">${RESULT} = [{'time': 0.041519431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.065299999999997e-05, 'source_diff': 8.065299999999997e-05}, {'time': 0.041617611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:33.216" endtime="20201112 10:15:33.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:33.227" endtime="20201112 10:15:33.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.266" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.264" endtime="20201112 10:15:33.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.271" level="INFO">VALUE: [8.065299999999997e-05, 8.026399999999656e-05, 8.020900000000469e-05, 8.05970000000017e-05, 7.994500000000487e-05, 8.045799999999853e-05, 8.019499999999818e-05, 8.037500000000058e-05, 8.041599999999982e-05, 8.048599999999767e-05, 7.980500000000224e-05, 8.04719999999981e-05, 8.011100000000076e-05, 8.024999999999699e-05, 8.036100000000101e-05, 8.033300000000188e-05, 8.070899999999825e-05, 8.052799999999638e-05, 7.976399999999606e-05, 7.991599999999932e-05, 8.040299999999972e-05, 8.012500000000033e-05, 8.043099999999886e-05, 7.982000000000128e-05, 8.06119999999938e-05, 8.016699999999904e-05, 7.9764000000003e-05, 8.048699999999714e-05, 8.005599999999502e-05, 8.011100000000076e-05, 7.9764000000003e-05, 8.070799999999878e-05, 7.988899999999965e-05, 7.999999999999674e-05, 8.041599999999982e-05, 7.984700000000094e-05, 8.044399999999896e-05, 8.002800000000282e-05, 8.022299999999732e-05, 8.061100000000126e-05, 8.062500000000083e-05, 8.04169999999993e-05, 8.054200000000289e-05, 8.04169999999993e-05, 8.012500000000033e-05, 7.998600000000411e-05, 7.980599999999477e-05, 8.015299999999947e-05, 8.023599999999742e-05, 8.069399999999921e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.268" endtime="20201112 10:15:33.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.257" endtime="20201112 10:15:33.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.280" endtime="20201112 10:15:33.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.289" endtime="20201112 10:15:33.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.284" endtime="20201112 10:15:33.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.276" endtime="20201112 10:15:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.758" endtime="20201112 10:15:33.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.757" endtime="20201112 10:15:33.315"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.337" endtime="20201112 10:15:33.356"></status>
</kw>
<msg timestamp="20201112 10:15:33.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.334" endtime="20201112 10:15:33.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.359" endtime="20201112 10:15:33.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.365" endtime="20201112 10:15:33.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.327" endtime="20201112 10:15:33.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.321" endtime="20201112 10:15:33.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.390" endtime="20201112 10:15:33.724"></status>
</kw>
<msg timestamp="20201112 10:15:33.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.386" endtime="20201112 10:15:33.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040557125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.733" endtime="20201112 10:15:33.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.752" endtime="20201112 10:15:33.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.380" endtime="20201112 10:15:33.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.375" endtime="20201112 10:15:33.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.769" level="INFO">${RESULT} = [{'time': 0.040638694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.156900000000356e-05, 'source_diff': 8.156900000000356e-05}, {'time': 0.040737833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:33.760" endtime="20201112 10:15:33.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.799" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:33.771" endtime="20201112 10:15:33.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.810" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.808" endtime="20201112 10:15:33.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.815" level="INFO">VALUE: [8.156900000000356e-05, 8.102700000000435e-05, 8.119399999999971e-05, 8.14170000000003e-05, 8.151299999999834e-05, 8.115300000000047e-05, 8.079200000000314e-05, 8.137500000000158e-05, 8.119499999999918e-05, 8.158299999999619e-05, 8.102800000000382e-05, 8.09589999999985e-05, 8.14719999999991e-05, 8.107000000000253e-05, 8.165300000000097e-05, 8.123599999999842e-05, 8.123599999999842e-05, 8.102800000000382e-05, 8.165300000000097e-05, 8.173599999999892e-05, 8.138900000000115e-05, 8.148599999999867e-05, 8.130599999999627e-05, 8.107000000000253e-05, 8.142999999999345e-05, 8.168100000000011e-05, 8.159699999999576e-05, 8.136100000000202e-05, 8.138900000000115e-05, 8.116700000000004e-05, 8.137500000000158e-05, 8.144399999999996e-05, 8.098600000000511e-05, 8.086099999999458e-05, 8.09169999999998e-05, 8.11390000000009e-05, 8.149999999999824e-05, 8.156899999999662e-05, 8.136100000000202e-05, 8.086099999999458e-05, 8.14719999999991e-05, 8.138900000000115e-05, 8.111100000000177e-05, 8.162500000000183e-05, 8.122299999999832e-05, 8.141599999999388e-05, 8.157000000000303e-05, 8.151299999999834e-05, 8.080600000000271e-05, 8.076399999999706e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.812" endtime="20201112 10:15:33.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.801" endtime="20201112 10:15:33.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.825" endtime="20201112 10:15:33.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.833" endtime="20201112 10:15:33.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.828" endtime="20201112 10:15:33.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.820" endtime="20201112 10:15:33.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.317" endtime="20201112 10:15:33.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.315" endtime="20201112 10:15:33.858"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.880" endtime="20201112 10:15:33.899"></status>
</kw>
<msg timestamp="20201112 10:15:33.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.877" endtime="20201112 10:15:33.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.902" endtime="20201112 10:15:33.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.908" endtime="20201112 10:15:33.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.870" endtime="20201112 10:15:33.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.865" endtime="20201112 10:15:33.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.933" endtime="20201112 10:15:34.269"></status>
</kw>
<msg timestamp="20201112 10:15:34.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039377083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039459097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.930" endtime="20201112 10:15:34.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039377083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039459097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.278" endtime="20201112 10:15:34.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.297" endtime="20201112 10:15:34.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.921" endtime="20201112 10:15:34.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.916" endtime="20201112 10:15:34.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.314" level="INFO">${RESULT} = [{'time': 0.039459097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.201399999999831e-05, 'source_diff': 8.201399999999831e-05}, {'time': 0.039559278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:34.305" endtime="20201112 10:15:34.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:34.316" endtime="20201112 10:15:34.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.357" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.355" endtime="20201112 10:15:34.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.362" level="INFO">VALUE: [8.201399999999831e-05, 8.254200000000489e-05, 8.255500000000499e-05, 8.256999999999709e-05, 8.255600000000446e-05, 8.270900000000025e-05, 8.274999999999949e-05, 8.20840000000031e-05, 8.258300000000413e-05, 8.227800000000507e-05, 8.244500000000043e-05, 8.26520000000025e-05, 8.24170000000013e-05, 8.270799999999384e-05, 8.19170000000008e-05, 8.193000000000089e-05, 8.206999999999659e-05, 8.227800000000507e-05, 8.249999999999924e-05, 8.252799999999838e-05, 8.262500000000284e-05, 8.226399999999856e-05, 8.191600000000132e-05, 8.198599999999917e-05, 8.270800000000078e-05, 8.244500000000043e-05, 8.26390000000024e-05, 8.243099999999393e-05, 8.254099999999848e-05, 8.251399999999881e-05, 8.243100000000086e-05, 8.220800000000028e-05, 8.174999999999849e-05, 8.240300000000172e-05, 8.215299999999454e-05, 8.237499999999565e-05, 8.183299999999644e-05, 8.1764000000005e-05, 8.230500000000474e-05, 8.25970000000037e-05, 8.191599999999438e-05, 8.26669999999946e-05, 8.231999999999684e-05, 8.268100000000111e-05, 8.263799999999599e-05, 8.195800000000003e-05, 8.249999999999924e-05, 8.186099999999558e-05, 8.248599999999967e-05, 8.245800000000053e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.359" endtime="20201112 10:15:34.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.348" endtime="20201112 10:15:34.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.372" endtime="20201112 10:15:34.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.380" endtime="20201112 10:15:34.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.375" endtime="20201112 10:15:34.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.367" endtime="20201112 10:15:34.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.860" endtime="20201112 10:15:34.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.859" endtime="20201112 10:15:34.405"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.428" endtime="20201112 10:15:34.446"></status>
</kw>
<msg timestamp="20201112 10:15:34.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.424" endtime="20201112 10:15:34.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.449" endtime="20201112 10:15:34.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.456" endtime="20201112 10:15:34.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.417" endtime="20201112 10:15:34.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.412" endtime="20201112 10:15:34.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.478" endtime="20201112 10:15:34.816"></status>
</kw>
<msg timestamp="20201112 10:15:34.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039602347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.475" endtime="20201112 10:15:34.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039602347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.826" endtime="20201112 10:15:34.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.844" endtime="20201112 10:15:34.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.468" endtime="20201112 10:15:34.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.463" endtime="20201112 10:15:34.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.862" level="INFO">${RESULT} = [{'time': 0.039685278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.293099999999443e-05, 'source_diff': 8.293099999999443e-05}, {'time': 0.039786444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:34.853" endtime="20201112 10:15:34.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.891" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:34.864" endtime="20201112 10:15:34.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.902" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.900" endtime="20201112 10:15:34.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.908" level="INFO">VALUE: [8.293099999999443e-05, 8.276299999999959e-05, 8.351399999999981e-05, 8.341699999999536e-05, 8.301399999999931e-05, 8.348600000000067e-05, 8.370900000000125e-05, 8.340199999999631e-05, 8.280600000000471e-05, 8.363899999999647e-05, 8.274999999999949e-05, 8.348600000000067e-05, 8.372300000000082e-05, 8.344400000000196e-05, 8.274999999999949e-05, 8.284799999999648e-05, 8.34720000000011e-05, 8.29590000000005e-05, 8.30970000000042e-05, 8.295800000000103e-05, 8.309699999999726e-05, 8.320900000000075e-05, 8.293000000000189e-05, 8.304199999999845e-05, 8.284700000000395e-05, 8.276399999999906e-05, 8.369400000000221e-05, 8.361100000000427e-05, 8.302799999999888e-05, 8.315300000000247e-05, 8.322200000000085e-05, 8.284700000000395e-05, 8.311099999999683e-05, 8.29170000000018e-05, 8.313899999999597e-05, 8.293100000000136e-05, 8.368100000000211e-05, 8.373600000000092e-05, 8.34170000000023e-05, 8.340299999999579e-05, 8.323600000000042e-05, 8.276399999999906e-05, 8.344400000000196e-05, 8.293099999999443e-05, 8.345800000000153e-05, 8.322200000000085e-05, 8.298600000000017e-05, 8.366700000000254e-05, 8.32919999999987e-05, 8.355499999999905e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.905" endtime="20201112 10:15:34.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.893" endtime="20201112 10:15:34.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.917" endtime="20201112 10:15:34.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.925" endtime="20201112 10:15:34.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.921" endtime="20201112 10:15:34.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.912" endtime="20201112 10:15:34.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.408" endtime="20201112 10:15:34.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.406" endtime="20201112 10:15:34.951"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.973" endtime="20201112 10:15:34.991"></status>
</kw>
<msg timestamp="20201112 10:15:34.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.970" endtime="20201112 10:15:34.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.995" endtime="20201112 10:15:34.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.001" endtime="20201112 10:15:35.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.963" endtime="20201112 10:15:35.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.957" endtime="20201112 10:15:35.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.024" endtime="20201112 10:15:35.362"></status>
</kw>
<msg timestamp="20201112 10:15:35.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039548028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.021" endtime="20201112 10:15:35.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039548028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.371" endtime="20201112 10:15:35.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.390" endtime="20201112 10:15:35.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.014" endtime="20201112 10:15:35.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.009" endtime="20201112 10:15:35.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.407" level="INFO">${RESULT} = [{'time': 0.039631833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.38049999999993e-05, 'source_diff': 8.38049999999993e-05}, {'time': 0.039737014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:35.398" endtime="20201112 10:15:35.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.437" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:35.409" endtime="20201112 10:15:35.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.447" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.445" endtime="20201112 10:15:35.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.453" level="INFO">VALUE: [8.38049999999993e-05, 8.44170000000033e-05, 8.437500000000459e-05, 8.440299999999679e-05, 8.420800000000228e-05, 8.400000000000074e-05, 8.415299999999654e-05, 8.390300000000323e-05, 8.402799999999988e-05, 8.427800000000013e-05, 8.437499999999765e-05, 8.394400000000246e-05, 8.383300000000538e-05, 8.448599999999473e-05, 8.373600000000092e-05, 8.386099999999758e-05, 8.394400000000246e-05, 8.42919999999997e-05, 8.459699999999876e-05, 8.456999999999909e-05, 8.461099999999833e-05, 8.395800000000203e-05, 8.412500000000434e-05, 8.379200000000614e-05, 8.46249999999979e-05, 8.376400000000006e-05, 8.443100000000286e-05, 8.454100000000048e-05, 8.3846999999998e-05, 8.408399999999816e-05, 8.466599999999713e-05, 8.433399999999841e-05, 8.420900000000175e-05, 8.438899999999722e-05, 8.418100000000261e-05, 8.395800000000203e-05, 8.444400000000296e-05, 8.400000000000074e-05, 8.452700000000091e-05, 8.468100000000311e-05, 8.41249999999974e-05, 8.44720000000021e-05, 8.372200000000135e-05, 8.445899999999507e-05, 8.388799999999724e-05, 8.438900000000416e-05, 8.41249999999974e-05, 8.444500000000243e-05, 8.425000000000099e-05, 8.429100000000023e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.450" endtime="20201112 10:15:35.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.438" endtime="20201112 10:15:35.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.462" endtime="20201112 10:15:35.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.470" endtime="20201112 10:15:35.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.466" endtime="20201112 10:15:35.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.458" endtime="20201112 10:15:35.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.953" endtime="20201112 10:15:35.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.952" endtime="20201112 10:15:35.496"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.518" endtime="20201112 10:15:35.537"></status>
</kw>
<msg timestamp="20201112 10:15:35.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.515" endtime="20201112 10:15:35.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.540" endtime="20201112 10:15:35.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.546" endtime="20201112 10:15:35.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.508" endtime="20201112 10:15:35.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.502" endtime="20201112 10:15:35.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.569" endtime="20201112 10:15:35.905"></status>
</kw>
<msg timestamp="20201112 10:15:35.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039753778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039839111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.566" endtime="20201112 10:15:35.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039753778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039839111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.914" endtime="20201112 10:15:35.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.933" endtime="20201112 10:15:35.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.559" endtime="20201112 10:15:35.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.554" endtime="20201112 10:15:35.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.951" level="INFO">${RESULT} = [{'time': 0.039839111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.533300000000688e-05, 'source_diff': 8.533300000000688e-05}, {'time': 0.039942264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:35.943" endtime="20201112 10:15:35.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.981" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:35.953" endtime="20201112 10:15:35.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.992" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.990" endtime="20201112 10:15:35.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.997" level="INFO">VALUE: [8.533300000000688e-05, 8.475000000000149e-05, 8.573599999999598e-05, 8.552800000000138e-05, 8.557000000000009e-05, 8.550000000000224e-05, 8.550000000000224e-05, 8.481899999999987e-05, 8.527800000000113e-05, 8.544500000000343e-05, 8.572199999999641e-05, 8.555600000000052e-05, 8.4944999999996e-05, 8.561099999999933e-05, 8.555600000000052e-05, 8.543099999999693e-05, 8.525000000000199e-05, 8.557000000000009e-05, 8.526399999999462e-05, 8.572300000000282e-05, 8.511099999999883e-05, 8.4944999999996e-05, 8.504200000000045e-05, 8.533399999999941e-05, 8.565300000000498e-05, 8.508299999999969e-05, 8.502800000000088e-05, 8.545800000000353e-05, 8.515299999999754e-05, 8.551400000000181e-05, 8.524999999999505e-05, 8.501400000000131e-05, 8.509699999999926e-05, 8.506999999999959e-05, 8.538899999999822e-05, 8.520799999999634e-05, 8.483399999999891e-05, 8.477800000000063e-05, 8.520900000000275e-05, 8.522199999999591e-05, 8.501400000000131e-05, 8.498599999999523e-05, 8.495899999999557e-05, 8.495800000000303e-05, 8.572299999999589e-05, 8.51249999999984e-05, 8.554200000000095e-05, 8.568099999999718e-05, 8.476400000000106e-05, 8.518000000000414e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.994" endtime="20201112 10:15:35.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.983" endtime="20201112 10:15:36.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.007" endtime="20201112 10:15:36.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.015" endtime="20201112 10:15:36.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.011" endtime="20201112 10:15:36.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.002" endtime="20201112 10:15:36.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.498" endtime="20201112 10:15:36.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.497" endtime="20201112 10:15:36.041"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.063" endtime="20201112 10:15:36.081"></status>
</kw>
<msg timestamp="20201112 10:15:36.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.060" endtime="20201112 10:15:36.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.085" endtime="20201112 10:15:36.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.091" endtime="20201112 10:15:36.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.052" endtime="20201112 10:15:36.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.047" endtime="20201112 10:15:36.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.115" endtime="20201112 10:15:36.450"></status>
</kw>
<msg timestamp="20201112 10:15:36.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.112" endtime="20201112 10:15:36.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.459" endtime="20201112 10:15:36.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.478" endtime="20201112 10:15:36.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.104" endtime="20201112 10:15:36.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.099" endtime="20201112 10:15:36.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.497" level="INFO">${RESULT} = [{'time': 0.039516028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.616700000000505e-05, 'source_diff': 8.616700000000505e-05}, {'time': 0.039625222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:36.488" endtime="20201112 10:15:36.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.529" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:36.499" endtime="20201112 10:15:36.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.540" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.538" endtime="20201112 10:15:36.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.545" level="INFO">VALUE: [8.616700000000505e-05, 8.586099999999958e-05, 8.593099999999743e-05, 8.5847e-05, 8.618100000000462e-05, 8.59720000000036e-05, 8.580600000000077e-05, 8.582000000000034e-05, 8.598600000000317e-05, 8.59170000000048e-05, 8.586100000000652e-05, 8.633400000000041e-05, 8.622200000000385e-05, 8.619499999999725e-05, 8.64999999999963e-05, 8.584799999999948e-05, 8.600000000000274e-05, 8.577800000000163e-05, 8.605500000000155e-05, 8.615299999999854e-05, 8.588899999999872e-05, 8.597300000000307e-05, 8.597199999999666e-05, 8.605500000000155e-05, 8.634799999999998e-05, 8.595800000000403e-05, 8.61249999999994e-05, 8.629100000000223e-05, 8.598600000000317e-05, 8.602800000000188e-05, 8.631900000000137e-05, 8.627800000000213e-05, 8.643099999999793e-05, 8.630499999999486e-05, 8.598599999999623e-05, 8.586099999999958e-05, 8.577800000000163e-05, 8.583399999999991e-05, 8.661100000000033e-05, 8.588799999999924e-05, 8.620799999999734e-05, 8.668100000000512e-05, 8.658300000000119e-05, 8.602799999999494e-05, 8.602800000000188e-05, 8.619499999999725e-05, 8.618099999999768e-05, 8.577800000000163e-05, 8.648600000000367e-05, 8.611099999999983e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.542" endtime="20201112 10:15:36.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.531" endtime="20201112 10:15:36.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.554" endtime="20201112 10:15:36.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.563" endtime="20201112 10:15:36.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.558" endtime="20201112 10:15:36.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.550" endtime="20201112 10:15:36.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.043" endtime="20201112 10:15:36.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.042" endtime="20201112 10:15:36.588"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.610" endtime="20201112 10:15:36.629"></status>
</kw>
<msg timestamp="20201112 10:15:36.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.607" endtime="20201112 10:15:36.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.632" endtime="20201112 10:15:36.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.639" endtime="20201112 10:15:36.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.600" endtime="20201112 10:15:36.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.594" endtime="20201112 10:15:36.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.661" endtime="20201112 10:15:36.996"></status>
</kw>
<msg timestamp="20201112 10:15:37.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039472083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.658" endtime="20201112 10:15:37.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039472083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.005" endtime="20201112 10:15:37.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.024" endtime="20201112 10:15:37.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.651" endtime="20201112 10:15:37.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.646" endtime="20201112 10:15:37.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.041" level="INFO">${RESULT} = [{'time': 0.039559389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.730600000000227e-05, 'source_diff': 8.730600000000227e-05}, {'time': 0.039669569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:37.032" endtime="20201112 10:15:37.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:37.043" endtime="20201112 10:15:37.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.083" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.081" endtime="20201112 10:15:37.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.089" level="INFO">VALUE: [8.730600000000227e-05, 8.720799999999834e-05, 8.759699999999482e-05, 8.758300000000219e-05, 8.698599999999723e-05, 8.733300000000194e-05, 8.71250000000004e-05, 8.71669999999991e-05, 8.690299999999929e-05, 8.729199999999576e-05, 8.729100000000323e-05, 8.69999999999968e-05, 8.736100000000108e-05, 8.690299999999929e-05, 8.759700000000176e-05, 8.727799999999619e-05, 8.709699999999432e-05, 8.722199999999791e-05, 8.684799999999354e-05, 8.71669999999991e-05, 8.759800000000123e-05, 8.765300000000004e-05, 8.727799999999619e-05, 8.676400000000306e-05, 8.6944999999998e-05, 8.701400000000331e-05, 8.754099999999654e-05, 8.704199999999551e-05, 8.76799999999997e-05, 8.73050000000028e-05, 8.688899999999972e-05, 8.708400000000116e-05, 8.708300000000169e-05, 8.677699999999622e-05, 8.676400000000306e-05, 8.73470000000015e-05, 8.675000000000349e-05, 8.729199999999576e-05, 8.690299999999929e-05, 8.724999999999705e-05, 8.688800000000024e-05, 8.691699999999886e-05, 8.687500000000015e-05, 8.752800000000338e-05, 8.773599999999798e-05, 8.715200000000006e-05, 8.724999999999705e-05, 8.758400000000166e-05, 8.729099999999629e-05, 8.709700000000126e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.086" endtime="20201112 10:15:37.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.074" endtime="20201112 10:15:37.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.102" endtime="20201112 10:15:37.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.110" endtime="20201112 10:15:37.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.106" endtime="20201112 10:15:37.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.097" endtime="20201112 10:15:37.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.590" endtime="20201112 10:15:37.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.589" endtime="20201112 10:15:37.136"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.159" endtime="20201112 10:15:37.178"></status>
</kw>
<msg timestamp="20201112 10:15:37.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.156" endtime="20201112 10:15:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.182" endtime="20201112 10:15:37.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.188" endtime="20201112 10:15:37.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.149" endtime="20201112 10:15:37.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.143" endtime="20201112 10:15:37.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.211" endtime="20201112 10:15:37.544"></status>
</kw>
<msg timestamp="20201112 10:15:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041212167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041300681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.207" endtime="20201112 10:15:37.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041212167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041300681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.554" endtime="20201112 10:15:37.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.572" endtime="20201112 10:15:37.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.200" endtime="20201112 10:15:37.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.196" endtime="20201112 10:15:37.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.590" level="INFO">${RESULT} = [{'time': 0.041300681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.851399999999787e-05, 'source_diff': 8.851399999999787e-05}, {'time': 0.041410875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:37.581" endtime="20201112 10:15:37.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:37.592" endtime="20201112 10:15:37.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.632" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.630" endtime="20201112 10:15:37.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.637" level="INFO">VALUE: [8.851399999999787e-05, 8.852799999999744e-05, 8.872199999999941e-05, 8.788899999999378e-05, 8.812499999999446e-05, 8.787499999999421e-05, 8.862499999999496e-05, 8.863900000000147e-05, 8.863900000000147e-05, 8.834800000000198e-05, 8.848599999999873e-05, 8.791600000000038e-05, 8.813899999999403e-05, 8.805500000000355e-05, 8.823699999999796e-05, 8.776400000000406e-05, 8.808300000000269e-05, 8.868100000000018e-05, 8.84999999999983e-05, 8.790200000000081e-05, 8.795799999999909e-05, 8.794399999999952e-05, 8.7944999999999e-05, 8.786099999999464e-05, 8.826399999999762e-05, 8.813899999999403e-05, 8.805600000000302e-05, 8.876399999999812e-05, 8.804200000000345e-05, 8.811099999999489e-05, 8.832000000000284e-05, 8.798600000000517e-05, 8.805499999999661e-05, 8.823599999999848e-05, 8.776399999999712e-05, 8.838900000000122e-05, 8.815200000000106e-05, 8.791600000000038e-05, 8.869400000000027e-05, 8.840300000000079e-05, 8.792999999999995e-05, 8.863900000000147e-05, 8.791699999999986e-05, 8.843000000000045e-05, 8.84999999999983e-05, 8.813900000000097e-05, 8.820899999999882e-05, 8.77920000000032e-05, 8.791699999999986e-05, 8.861100000000233e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.634" endtime="20201112 10:15:37.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.623" endtime="20201112 10:15:37.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.646" endtime="20201112 10:15:37.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.654" endtime="20201112 10:15:37.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.650" endtime="20201112 10:15:37.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.642" endtime="20201112 10:15:37.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.138" endtime="20201112 10:15:37.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.137" endtime="20201112 10:15:37.680"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.702" endtime="20201112 10:15:37.721"></status>
</kw>
<msg timestamp="20201112 10:15:37.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.699" endtime="20201112 10:15:37.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.724" endtime="20201112 10:15:37.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.730" endtime="20201112 10:15:37.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.692" endtime="20201112 10:15:37.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.686" endtime="20201112 10:15:37.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.753" endtime="20201112 10:15:38.087"></status>
</kw>
<msg timestamp="20201112 10:15:38.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039471139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03956025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:37.750" endtime="20201112 10:15:38.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039471139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03956025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:38.097" endtime="20201112 10:15:38.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.115" endtime="20201112 10:15:38.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.743" endtime="20201112 10:15:38.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.738" endtime="20201112 10:15:38.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.132" level="INFO">${RESULT} = [{'time': 0.03956025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.911099999999589e-05, 'source_diff': 8.911099999999589e-05}, {'time': 0.039669431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:38.123" endtime="20201112 10:15:38.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:38.134" endtime="20201112 10:15:38.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.175" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.173" endtime="20201112 10:15:38.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.181" level="INFO">VALUE: [8.911099999999589e-05, 8.876399999999812e-05, 8.941700000000136e-05, 8.955499999999811e-05, 8.956999999999715e-05, 8.883300000000344e-05, 8.919500000000025e-05, 8.877800000000463e-05, 8.969500000000075e-05, 8.925000000000599e-05, 8.934700000000351e-05, 8.974999999999955e-05, 8.91670000000011e-05, 8.956899999999768e-05, 8.940300000000179e-05, 8.931900000000437e-05, 8.927799999999819e-05, 8.961100000000333e-05, 8.913899999999503e-05, 8.906899999999718e-05, 8.89999999999988e-05, 8.893100000000043e-05, 8.974999999999955e-05, 8.88199999999964e-05, 8.955499999999811e-05, 8.922299999999939e-05, 8.947299999999964e-05, 8.974999999999955e-05, 8.89999999999988e-05, 8.959699999999682e-05, 8.91529999999946e-05, 8.897199999999966e-05, 8.948600000000667e-05, 8.948599999999973e-05, 8.972200000000041e-05, 8.959699999999682e-05, 8.927799999999819e-05, 8.974999999999955e-05, 8.96670000000016e-05, 8.893100000000043e-05, 8.940200000000231e-05, 8.958399999999672e-05, 8.87920000000042e-05, 8.916600000000163e-05, 8.930599999999733e-05, 8.961100000000333e-05, 8.926399999999862e-05, 8.930600000000427e-05, 8.945900000000007e-05, 8.874999999999855e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.178" endtime="20201112 10:15:38.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.166" endtime="20201112 10:15:38.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.191" endtime="20201112 10:15:38.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.199" endtime="20201112 10:15:38.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.195" endtime="20201112 10:15:38.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.186" endtime="20201112 10:15:38.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.682" endtime="20201112 10:15:38.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.681" endtime="20201112 10:15:38.225"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.247" endtime="20201112 10:15:38.266"></status>
</kw>
<msg timestamp="20201112 10:15:38.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.244" endtime="20201112 10:15:38.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.269" endtime="20201112 10:15:38.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.275" endtime="20201112 10:15:38.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.237" endtime="20201112 10:15:38.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.231" endtime="20201112 10:15:38.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.299" endtime="20201112 10:15:38.631"></status>
</kw>
<msg timestamp="20201112 10:15:38.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.295" endtime="20201112 10:15:38.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.641" endtime="20201112 10:15:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.659" endtime="20201112 10:15:38.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.288" endtime="20201112 10:15:38.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.284" endtime="20201112 10:15:38.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.676" level="INFO">${RESULT} = [{'time': 0.039834542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.033399999999747e-05, 'source_diff': 9.033399999999747e-05}, {'time': 0.039943722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:38.668" endtime="20201112 10:15:38.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:38.679" endtime="20201112 10:15:38.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.720" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.718" endtime="20201112 10:15:38.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.725" level="INFO">VALUE: [9.033399999999747e-05, 8.977799999999869e-05, 9.047200000000116e-05, 8.998600000000023e-05, 9.054199999999901e-05, 8.977799999999869e-05, 9.011099999999689e-05, 8.980599999999783e-05, 9.065300000000304e-05, 8.983399999999697e-05, 9.031900000000537e-05, 9.03199999999979e-05, 9.029099999999929e-05, 9.048600000000073e-05, 9.020900000000082e-05, 9.043000000000245e-05, 8.990299999999535e-05, 9.06529999999961e-05, 9.036100000000408e-05, 9.01250000000034e-05, 9.044400000000202e-05, 9.025000000000005e-05, 9.072199999999447e-05, 9.044400000000202e-05, 9.059700000000476e-05, 9.063900000000347e-05, 9.018100000000168e-05, 8.995800000000109e-05, 9.040300000000279e-05, 9.05000000000003e-05, 9.004099999999904e-05, 9.013899999999603e-05, 8.990300000000229e-05, 8.979199999999826e-05, 9.069499999999481e-05, 9.041599999999594e-05, 8.979100000000573e-05, 9.022200000000091e-05, 9.056899999999868e-05, 9.041700000000236e-05, 8.977800000000563e-05, 8.997200000000066e-05, 9.030499999999886e-05, 9.008299999999775e-05, 9.025000000000005e-05, 9.06250000000039e-05, 9.029199999999876e-05, 8.995900000000057e-05, 9.004099999999904e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.722" endtime="20201112 10:15:38.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.711" endtime="20201112 10:15:38.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.735" endtime="20201112 10:15:38.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.743" endtime="20201112 10:15:38.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.739" endtime="20201112 10:15:38.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.730" endtime="20201112 10:15:38.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.227" endtime="20201112 10:15:38.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.226" endtime="20201112 10:15:38.769"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.791" endtime="20201112 10:15:38.810"></status>
</kw>
<msg timestamp="20201112 10:15:38.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.787" endtime="20201112 10:15:38.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.813" endtime="20201112 10:15:38.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.819" endtime="20201112 10:15:38.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.780" endtime="20201112 10:15:38.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.775" endtime="20201112 10:15:38.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.842" endtime="20201112 10:15:39.176"></status>
</kw>
<msg timestamp="20201112 10:15:39.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039632403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.839" endtime="20201112 10:15:39.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039632403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.186" endtime="20201112 10:15:39.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.205" endtime="20201112 10:15:39.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.832" endtime="20201112 10:15:39.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.827" endtime="20201112 10:15:39.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.223" level="INFO">${RESULT} = [{'time': 0.039632403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.143099999999599e-05, 'source_diff': 9.143099999999599e-05}, {'time': 0.039746597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:39.214" endtime="20201112 10:15:39.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:39.254" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:39.225" endtime="20201112 10:15:39.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.266" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:39.262" endtime="20201112 10:15:39.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.271" level="INFO">VALUE: [9.143099999999599e-05, 9.170800000000284e-05, 9.126399999999368e-05, 9.106999999999865e-05, 9.137500000000465e-05, 9.105599999999908e-05, 9.098600000000123e-05, 9.122200000000191e-05, 9.127700000000072e-05, 9.11670000000031e-05, 9.08329999999985e-05, 9.165300000000404e-05, 9.130599999999933e-05, 9.144399999999608e-05, 9.147300000000164e-05, 9.106999999999865e-05, 9.141599999999694e-05, 9.168100000000318e-05, 9.177799999999375e-05, 9.116699999999617e-05, 9.11670000000031e-05, 9.086099999999764e-05, 9.109799999999779e-05, 9.174999999999461e-05, 9.092999999999601e-05, 9.138899999999728e-05, 9.145799999999565e-05, 9.120900000000182e-05, 9.116699999999617e-05, 9.109699999999832e-05, 9.123600000000148e-05, 9.116600000000363e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.104100000000004e-05, 9.102799999999994e-05, 9.076400000000012e-05, 9.152800000000044e-05, 9.090299999999635e-05, 9.088800000000424e-05, 9.141699999999642e-05, 9.138900000000422e-05, 9.154200000000001e-05, 9.093099999999549e-05, 9.159799999999829e-05, 9.168100000000318e-05, 9.145800000000259e-05, 9.163899999999753e-05, 9.101400000000037e-05, 9.158399999999872e-05]</msg>
<status status="PASS" starttime="20201112 10:15:39.268" endtime="20201112 10:15:39.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.256" endtime="20201112 10:15:39.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.281" endtime="20201112 10:15:39.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.289" endtime="20201112 10:15:39.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.284" endtime="20201112 10:15:39.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.276" endtime="20201112 10:15:39.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.771" endtime="20201112 10:15:39.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.770" endtime="20201112 10:15:39.315"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.337" endtime="20201112 10:15:39.356"></status>
</kw>
<msg timestamp="20201112 10:15:39.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.334" endtime="20201112 10:15:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.359" endtime="20201112 10:15:39.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.365" endtime="20201112 10:15:39.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.327" endtime="20201112 10:15:39.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.321" endtime="20201112 10:15:39.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.388" endtime="20201112 10:15:39.722"></status>
</kw>
<msg timestamp="20201112 10:15:39.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040034986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.385" endtime="20201112 10:15:39.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040034986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.732" endtime="20201112 10:15:39.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.751" endtime="20201112 10:15:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.378" endtime="20201112 10:15:39.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.373" endtime="20201112 10:15:39.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.768" level="INFO">${RESULT} = [{'time': 0.040034986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.176400000000112e-05, 'source_diff': 9.176400000000112e-05}, {'time': 0.040146181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:39.759" endtime="20201112 10:15:39.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:39.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:39.770" endtime="20201112 10:15:39.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.809" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:39.807" endtime="20201112 10:15:39.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.814" level="INFO">VALUE: [9.176400000000112e-05, 9.191700000000386e-05, 9.204200000000051e-05, 9.179100000000079e-05, 9.187499999999821e-05, 9.194400000000352e-05, 9.2333e-05, 9.255600000000058e-05, 9.223599999999554e-05, 9.184799999999854e-05, 9.273600000000298e-05, 9.244399999999708e-05, 9.227700000000172e-05, 9.191699999999692e-05, 9.234699999999957e-05, 9.280500000000136e-05, 9.258399999999972e-05, 9.190299999999735e-05, 9.195799999999615e-05, 9.181899999999993e-05, 9.202700000000147e-05, 9.229200000000076e-05, 9.261099999999939e-05, 9.204200000000051e-05, 9.219400000000377e-05, 9.229200000000076e-05, 9.223600000000248e-05, 9.259799999999929e-05, 9.243000000000445e-05, 9.211099999999889e-05, 9.254200000000101e-05, 9.269399999999733e-05, 9.226400000000162e-05, 9.215300000000454e-05, 9.19859999999953e-05, 9.261099999999939e-05, 9.26800000000047e-05, 9.193100000000343e-05, 9.234699999999957e-05, 9.275000000000255e-05, 9.243000000000445e-05, 9.252800000000144e-05, 9.255500000000111e-05, 9.206999999999965e-05, 9.213900000000497e-05, 9.229200000000076e-05, 9.240300000000479e-05, 9.21670000000041e-05, 9.172199999999547e-05, 9.238899999999828e-05]</msg>
<status status="PASS" starttime="20201112 10:15:39.811" endtime="20201112 10:15:39.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.800" endtime="20201112 10:15:39.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.825" endtime="20201112 10:15:39.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.833" endtime="20201112 10:15:39.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.829" endtime="20201112 10:15:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.820" endtime="20201112 10:15:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.317" endtime="20201112 10:15:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.316" endtime="20201112 10:15:39.859"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.881" endtime="20201112 10:15:39.900"></status>
</kw>
<msg timestamp="20201112 10:15:39.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.878" endtime="20201112 10:15:39.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.903" endtime="20201112 10:15:39.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.909" endtime="20201112 10:15:39.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.871" endtime="20201112 10:15:39.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.865" endtime="20201112 10:15:39.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.932" endtime="20201112 10:15:40.266"></status>
</kw>
<msg timestamp="20201112 10:15:40.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039608514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039702222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.929" endtime="20201112 10:15:40.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039608514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039702222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.276" endtime="20201112 10:15:40.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.295" endtime="20201112 10:15:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.922" endtime="20201112 10:15:40.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.917" endtime="20201112 10:15:40.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.312" level="INFO">${RESULT} = [{'time': 0.039702222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.370800000000484e-05, 'source_diff': 9.370800000000484e-05}, {'time': 0.039819472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:40.303" endtime="20201112 10:15:40.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.342" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:40.314" endtime="20201112 10:15:40.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.353" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.351" endtime="20201112 10:15:40.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.359" level="INFO">VALUE: [9.370800000000484e-05, 9.354100000000254e-05, 9.299999999999586e-05, 9.323700000000296e-05, 9.351399999999593e-05, 9.281900000000093e-05, 9.368099999999824e-05, 9.306999999999371e-05, 9.31529999999986e-05, 9.305599999999414e-05, 9.326400000000262e-05, 9.281900000000093e-05, 9.323599999999654e-05, 9.324999999999611e-05, 9.343099999999799e-05, 9.326400000000262e-05, 9.36529999999991e-05, 9.281900000000093e-05, 9.361100000000039e-05, 9.373599999999704e-05, 9.304100000000204e-05, 9.36529999999991e-05, 9.280600000000083e-05, 9.297200000000366e-05, 9.295899999999663e-05, 9.329200000000176e-05, 9.323600000000348e-05, 9.338899999999928e-05, 9.345900000000407e-05, 9.309700000000032e-05, 9.334800000000004e-05, 9.29859999999963e-05, 9.318100000000468e-05, 9.361100000000039e-05, 9.324999999999611e-05, 9.317999999999826e-05, 9.331900000000143e-05, 9.336100000000014e-05, 9.275000000000255e-05, 9.287499999999921e-05, 9.302800000000194e-05, 9.288899999999878e-05, 9.370899999999738e-05, 9.366700000000561e-05, 9.342999999999851e-05, 9.308400000000022e-05, 9.294499999999706e-05, 9.355500000000211e-05, 9.349999999999636e-05, 9.290299999999835e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.355" endtime="20201112 10:15:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.344" endtime="20201112 10:15:40.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.368" endtime="20201112 10:15:40.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.377" endtime="20201112 10:15:40.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.373" endtime="20201112 10:15:40.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.363" endtime="20201112 10:15:40.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.861" endtime="20201112 10:15:40.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.860" endtime="20201112 10:15:40.403"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.425" endtime="20201112 10:15:40.444"></status>
</kw>
<msg timestamp="20201112 10:15:40.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.422" endtime="20201112 10:15:40.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.448" endtime="20201112 10:15:40.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.454" endtime="20201112 10:15:40.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.415" endtime="20201112 10:15:40.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.409" endtime="20201112 10:15:40.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.476" endtime="20201112 10:15:40.810"></status>
</kw>
<msg timestamp="20201112 10:15:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039512389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039606194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.473" endtime="20201112 10:15:40.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039512389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039606194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.819" endtime="20201112 10:15:40.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.838" endtime="20201112 10:15:40.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.466" endtime="20201112 10:15:40.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.462" endtime="20201112 10:15:40.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.855" level="INFO">${RESULT} = [{'time': 0.039606194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.380499999999542e-05, 'source_diff': 9.380499999999542e-05}, {'time': 0.039719375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:40.846" endtime="20201112 10:15:40.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.885" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:40.857" endtime="20201112 10:15:40.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.896" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.893" endtime="20201112 10:15:40.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.901" level="INFO">VALUE: [9.380499999999542e-05, 9.425000000000405e-05, 9.472199999999847e-05, 9.438900000000028e-05, 9.437500000000071e-05, 9.44859999999978e-05, 9.444399999999908e-05, 9.472199999999847e-05, 9.381900000000193e-05, 9.418099999999874e-05, 9.402700000000347e-05, 9.38200000000014e-05, 9.391599999999944e-05, 9.391699999999892e-05, 9.461100000000139e-05, 9.470900000000532e-05, 9.445799999999865e-05, 9.459800000000129e-05, 9.440299999999985e-05, 9.399999999999686e-05, 9.465200000000062e-05, 9.398600000000423e-05, 9.411099999999395e-05, 9.454100000000354e-05, 9.407000000000165e-05, 9.377800000000269e-05, 9.424999999999711e-05, 9.413800000000055e-05, 9.429200000000276e-05, 9.47079999999989e-05, 9.406900000000218e-05, 9.386100000000064e-05, 9.434699999999463e-05, 9.42079999999984e-05, 9.448600000000473e-05, 9.407000000000165e-05, 9.473599999999804e-05, 9.457000000000215e-05, 9.38200000000014e-05, 9.402800000000294e-05, 9.480500000000336e-05, 9.427800000000319e-05, 9.38330000000015e-05, 9.392999999999901e-05, 9.395799999999815e-05, 9.405500000000261e-05, 9.466699999999967e-05, 9.394499999999806e-05, 9.380600000000183e-05, 9.445799999999865e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.898" endtime="20201112 10:15:40.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.887" endtime="20201112 10:15:40.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.910" endtime="20201112 10:15:40.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.919" endtime="20201112 10:15:40.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.914" endtime="20201112 10:15:40.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.906" endtime="20201112 10:15:40.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.405" endtime="20201112 10:15:40.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.404" endtime="20201112 10:15:40.948"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.970" endtime="20201112 10:15:40.989"></status>
</kw>
<msg timestamp="20201112 10:15:40.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.966" endtime="20201112 10:15:40.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.992" endtime="20201112 10:15:40.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.998" endtime="20201112 10:15:41.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.959" endtime="20201112 10:15:41.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.954" endtime="20201112 10:15:41.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.021" endtime="20201112 10:15:41.355"></status>
</kw>
<msg timestamp="20201112 10:15:41.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039667931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039763403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.018" endtime="20201112 10:15:41.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039667931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039763403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.365" endtime="20201112 10:15:41.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.384" endtime="20201112 10:15:41.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.011" endtime="20201112 10:15:41.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.006" endtime="20201112 10:15:41.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.401" level="INFO">${RESULT} = [{'time': 0.039763403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.547200000000616e-05, 'source_diff': 9.547200000000616e-05}, {'time': 0.039877653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:41.392" endtime="20201112 10:15:41.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:41.403" endtime="20201112 10:15:41.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.442" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.440" endtime="20201112 10:15:41.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.447" level="INFO">VALUE: [9.547200000000616e-05, 9.541700000000042e-05, 9.519499999999931e-05, 9.526399999999768e-05, 9.522200000000591e-05, 9.530600000000333e-05, 9.476399999999718e-05, 9.55000000000053e-05, 9.529199999999682e-05, 9.488900000000078e-05, 9.541700000000042e-05, 9.562500000000196e-05, 9.523600000000548e-05, 9.554200000000401e-05, 9.519399999999983e-05, 9.544400000000008e-05, 9.509700000000232e-05, 9.506900000000318e-05, 9.543000000000051e-05, 9.530600000000333e-05, 9.555599999999664e-05, 9.554199999999707e-05, 9.48609999999947e-05, 9.554200000000401e-05, 9.57079999999999e-05, 9.558400000000272e-05, 9.477799999999675e-05, 9.493000000000001e-05, 9.555600000000358e-05, 9.495800000000609e-05, 9.555599999999664e-05, 9.529099999999735e-05, 9.483400000000197e-05, 9.527699999999778e-05, 9.534699999999563e-05, 9.51530000000006e-05, 9.513800000000155e-05, 9.559700000000282e-05, 9.547200000000616e-05, 9.505600000000308e-05, 9.511100000000189e-05, 9.55279999999975e-05, 9.547199999999922e-05, 9.498699999999777e-05, 9.491699999999992e-05, 9.48479999999946e-05, 9.562499999999502e-05, 9.534700000000257e-05, 9.490300000000035e-05, 9.563900000000153e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.444" endtime="20201112 10:15:41.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.433" endtime="20201112 10:15:41.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.456" endtime="20201112 10:15:41.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.464" endtime="20201112 10:15:41.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.460" endtime="20201112 10:15:41.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.452" endtime="20201112 10:15:41.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.950" endtime="20201112 10:15:41.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.948" endtime="20201112 10:15:41.490"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.514" endtime="20201112 10:15:41.533"></status>
</kw>
<msg timestamp="20201112 10:15:41.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.511" endtime="20201112 10:15:41.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.536" endtime="20201112 10:15:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.543" endtime="20201112 10:15:41.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.504" endtime="20201112 10:15:41.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.496" endtime="20201112 10:15:41.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.565" endtime="20201112 10:15:41.900"></status>
</kw>
<msg timestamp="20201112 10:15:41.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.562" endtime="20201112 10:15:41.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.909" endtime="20201112 10:15:41.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.928" endtime="20201112 10:15:41.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.555" endtime="20201112 10:15:41.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.551" endtime="20201112 10:15:41.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.945" level="INFO">${RESULT} = [{'time': 0.041228819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.587500000000221e-05, 'source_diff': 9.587500000000221e-05}, {'time': 0.041345028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:41.936" endtime="20201112 10:15:41.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:41.947" endtime="20201112 10:15:41.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.986" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.984" endtime="20201112 10:15:41.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.991" level="INFO">VALUE: [9.587500000000221e-05, 9.590300000000135e-05, 9.63059999999974e-05, 9.636100000000314e-05, 9.613900000000203e-05, 9.634700000000357e-05, 9.586100000000264e-05, 9.604100000000504e-05, 9.609799999999585e-05, 9.588799999999537e-05, 9.67080000000009e-05, 9.604199999999757e-05, 9.597199999999972e-05, 9.657000000000415e-05, 9.661099999999645e-05, 9.606900000000418e-05, 9.623599999999954e-05, 9.62080000000004e-05, 9.663799999999612e-05, 9.583299999999656e-05, 9.669500000000081e-05, 9.673600000000004e-05, 9.619400000000083e-05, 9.613900000000203e-05, 9.637500000000271e-05, 9.58200000000034e-05, 9.668100000000124e-05, 9.583299999999656e-05, 9.666700000000167e-05, 9.577799999999775e-05, 9.612500000000246e-05, 9.627799999999825e-05, 9.599999999999886e-05, 9.62080000000004e-05, 9.64859999999998e-05, 9.66809999999943e-05, 9.612500000000246e-05, 9.601399999999843e-05, 9.590199999999494e-05, 9.661099999999645e-05, 9.649999999999936e-05, 9.651399999999893e-05, 9.616700000000117e-05, 9.674999999999961e-05, 9.631899999999749e-05, 9.633399999999653e-05, 9.6027999999998e-05, 9.605599999999714e-05, 9.656899999999774e-05, 9.674999999999961e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.988" endtime="20201112 10:15:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.977" endtime="20201112 10:15:41.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.000" endtime="20201112 10:15:42.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.009" endtime="20201112 10:15:42.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.004" endtime="20201112 10:15:42.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.996" endtime="20201112 10:15:42.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.492" endtime="20201112 10:15:42.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.491" endtime="20201112 10:15:42.035"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.057" endtime="20201112 10:15:42.076"></status>
</kw>
<msg timestamp="20201112 10:15:42.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.053" endtime="20201112 10:15:42.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.079" endtime="20201112 10:15:42.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.085" endtime="20201112 10:15:42.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.046" endtime="20201112 10:15:42.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.041" endtime="20201112 10:15:42.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.110" endtime="20201112 10:15:42.444"></status>
</kw>
<msg timestamp="20201112 10:15:42.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039650292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.107" endtime="20201112 10:15:42.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039650292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.454" endtime="20201112 10:15:42.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.473" endtime="20201112 10:15:42.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.100" endtime="20201112 10:15:42.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.095" endtime="20201112 10:15:42.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.490" level="INFO">${RESULT} = [{'time': 0.039650292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.687499999999627e-05, 'source_diff': 9.687499999999627e-05}, {'time': 0.039769528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.481" endtime="20201112 10:15:42.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:42.492" endtime="20201112 10:15:42.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.531" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.528" endtime="20201112 10:15:42.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.536" level="INFO">VALUE: [9.687499999999627e-05, 9.761099999999745e-05, 9.776300000000071e-05, 9.697200000000072e-05, 9.747199999999429e-05, 9.740200000000337e-05, 9.702800000000594e-05, 9.741600000000294e-05, 9.758300000000525e-05, 9.69860000000003e-05, 9.727699999999978e-05, 9.716699999999523e-05, 9.731899999999849e-05, 9.743100000000199e-05, 9.76660000000032e-05, 9.701399999999943e-05, 9.740299999999591e-05, 9.715199999999619e-05, 9.69730000000002e-05, 9.68059999999979e-05, 9.72080000000014e-05, 9.730499999999892e-05, 9.69860000000003e-05, 9.762500000000396e-05, 9.743000000000251e-05, 9.68059999999979e-05, 9.722200000000097e-05, 9.701399999999943e-05, 9.767999999999583e-05, 9.693100000000149e-05, 9.7415999999996e-05, 9.747200000000122e-05, 9.702800000000594e-05, 9.716700000000217e-05, 9.679099999999885e-05, 9.688900000000278e-05, 9.727799999999925e-05, 9.725000000000011e-05, 9.719500000000131e-05, 9.744500000000156e-05, 9.693100000000149e-05, 9.772200000000147e-05, 9.684699999999713e-05, 9.727799999999925e-05, 9.736100000000414e-05, 9.744500000000156e-05, 9.779199999999932e-05, 9.766699999999573e-05, 9.744500000000156e-05, 9.755499999999917e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.533" endtime="20201112 10:15:42.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.522" endtime="20201112 10:15:42.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.549" endtime="20201112 10:15:42.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.557" endtime="20201112 10:15:42.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.553" endtime="20201112 10:15:42.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.545" endtime="20201112 10:15:42.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.037" endtime="20201112 10:15:42.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.035" endtime="20201112 10:15:42.583"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.605" endtime="20201112 10:15:42.624"></status>
</kw>
<msg timestamp="20201112 10:15:42.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.602" endtime="20201112 10:15:42.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.628" endtime="20201112 10:15:42.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.634" endtime="20201112 10:15:42.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.595" endtime="20201112 10:15:42.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.589" endtime="20201112 10:15:42.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.658" endtime="20201112 10:15:42.993"></status>
</kw>
<msg timestamp="20201112 10:15:43.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039805611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.655" endtime="20201112 10:15:43.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039805611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.002" endtime="20201112 10:15:43.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.021" endtime="20201112 10:15:43.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.646" endtime="20201112 10:15:43.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.642" endtime="20201112 10:15:43.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.038" level="INFO">${RESULT} = [{'time': 0.039805611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833299999999906e-05, 'source_diff': 9.833299999999906e-05}, {'time': 0.039922819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:43.029" endtime="20201112 10:15:43.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:43.040" endtime="20201112 10:15:43.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.079" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.077" endtime="20201112 10:15:43.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.084" level="INFO">VALUE: [9.833299999999906e-05, 9.817999999999633e-05, 9.781899999999899e-05, 9.827800000000025e-05, 9.790200000000387e-05, 9.827800000000025e-05, 9.80410000000001e-05, 9.81530000000036e-05, 9.876400000000118e-05, 9.777700000000028e-05, 9.873600000000204e-05, 9.843000000000351e-05, 9.812499999999752e-05, 9.858299999999931e-05, 9.787499999999727e-05, 9.787499999999727e-05, 9.800000000000086e-05, 9.873600000000204e-05, 9.840300000000385e-05, 9.831999999999896e-05, 9.81939999999959e-05, 9.851400000000093e-05, 9.81660000000037e-05, 9.787500000000421e-05, 9.87080000000029e-05, 9.830499999999992e-05, 9.815299999999666e-05, 9.813800000000455e-05, 9.775000000000061e-05, 9.848599999999486e-05, 9.812499999999752e-05, 9.831899999999949e-05, 9.791700000000292e-05, 9.854200000000007e-05, 9.834700000000557e-05, 9.805599999999914e-05, 9.851400000000093e-05, 9.827800000000025e-05, 9.8415999999997e-05, 9.84860000000018e-05, 9.861100000000539e-05, 9.822300000000145e-05, 9.808299999999881e-05, 9.787500000000421e-05, 9.824999999999418e-05, 9.784699999999813e-05, 9.77080000000019e-05, 9.859700000000582e-05, 9.870900000000238e-05, 9.808299999999881e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.081" endtime="20201112 10:15:43.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.070" endtime="20201112 10:15:43.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.094" endtime="20201112 10:15:43.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.102" endtime="20201112 10:15:43.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.097" endtime="20201112 10:15:43.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.089" endtime="20201112 10:15:43.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.585" endtime="20201112 10:15:43.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.584" endtime="20201112 10:15:43.127"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.150" endtime="20201112 10:15:43.169"></status>
</kw>
<msg timestamp="20201112 10:15:43.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.146" endtime="20201112 10:15:43.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.172" endtime="20201112 10:15:43.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.178" endtime="20201112 10:15:43.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.139" endtime="20201112 10:15:43.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.134" endtime="20201112 10:15:43.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.201" endtime="20201112 10:15:43.541"></status>
</kw>
<msg timestamp="20201112 10:15:43.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039498458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.198" endtime="20201112 10:15:43.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039498458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.551" endtime="20201112 10:15:43.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.569" endtime="20201112 10:15:43.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.191" endtime="20201112 10:15:43.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.186" endtime="20201112 10:15:43.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.587" level="INFO">${RESULT} = [{'time': 0.039597681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.922300000000245e-05, 'source_diff': 9.922300000000245e-05}, {'time': 0.039718847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:43.578" endtime="20201112 10:15:43.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.616" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:43.589" endtime="20201112 10:15:43.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.627" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.625" endtime="20201112 10:15:43.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.633" level="INFO">VALUE: [9.922300000000245e-05, 9.944400000000408e-05, 9.881999999999946e-05, 9.965299999999816e-05, 9.912499999999852e-05, 9.952799999999457e-05, 9.937499999999877e-05, 9.90139999999945e-05, 9.879200000000032e-05, 9.938799999999887e-05, 9.887500000000521e-05, 9.967999999999783e-05, 9.93609999999992e-05, 9.947199999999629e-05, 9.944499999999662e-05, 9.894399999999665e-05, 9.941699999999748e-05, 9.90410000000011e-05, 9.900000000000186e-05, 9.926400000000168e-05, 9.875000000000161e-05, 9.972199999999654e-05, 9.879100000000085e-05, 9.894500000000306e-05, 9.892999999999708e-05, 9.961099999999945e-05, 9.927699999999484e-05, 9.933399999999953e-05, 9.88059999999999e-05, 9.894399999999665e-05, 9.955600000000064e-05, 9.97080000000039e-05, 9.884699999999913e-05, 9.877800000000075e-05, 9.93060000000004e-05, 9.900000000000186e-05, 9.91939999999969e-05, 9.938900000000528e-05, 9.96660000000052e-05, 9.879200000000032e-05, 9.969400000000433e-05, 9.955600000000064e-05, 9.91939999999969e-05, 9.963900000000553e-05, 9.95280000000015e-05, 9.905600000000014e-05, 9.90139999999945e-05, 9.916699999999723e-05, 9.958300000000031e-05, 9.915199999999819e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.630" endtime="20201112 10:15:43.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.618" endtime="20201112 10:15:43.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.642" endtime="20201112 10:15:43.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.650" endtime="20201112 10:15:43.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.646" endtime="20201112 10:15:43.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.637" endtime="20201112 10:15:43.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.129" endtime="20201112 10:15:43.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.128" endtime="20201112 10:15:43.676"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.698" endtime="20201112 10:15:43.717"></status>
</kw>
<msg timestamp="20201112 10:15:43.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.695" endtime="20201112 10:15:43.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.721" endtime="20201112 10:15:43.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.727" endtime="20201112 10:15:43.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.688" endtime="20201112 10:15:43.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.682" endtime="20201112 10:15:43.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.750" endtime="20201112 10:15:44.087"></status>
</kw>
<msg timestamp="20201112 10:15:44.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.746" endtime="20201112 10:15:44.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.096" endtime="20201112 10:15:44.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.115" endtime="20201112 10:15:44.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.739" endtime="20201112 10:15:44.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.735" endtime="20201112 10:15:44.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.132" level="INFO">${RESULT} = [{'time': 0.039628778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010011099999999995, 'source_diff': 0.00010011099999999995}, {'time': 0.039749, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:44.123" endtime="20201112 10:15:44.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:44.134" endtime="20201112 10:15:44.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.172" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.170" endtime="20201112 10:15:44.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.177" level="INFO">VALUE: [0.00010011099999999995, 9.984700000000013e-05, 9.99730000000032e-05, 0.00010034700000000063, 9.981900000000099e-05, 9.98060000000009e-05, 9.999999999999593e-05, 9.990299999999841e-05, 0.00010066599999999926, 0.00010045800000000465, 0.00010026400000000268, 0.00010029199999999489, 0.00010031900000000149, 0.00010044400000000508, 9.977700000000228e-05, 0.00010016700000000517, 9.998599999999636e-05, 0.00010056999999999428, 0.00010008300000000081, 9.981899999999405e-05, 0.00010019499999999737, 0.00010001400000000243, 9.988799999999937e-05, 0.00010011099999999995, 0.00010061100000000045, 0.00010045899999999719, 9.977800000000175e-05, 0.00010062500000000002, 0.000100513999999996, 9.990200000000587e-05, 9.997199999999679e-05, 0.00010062500000000002, 9.988899999999884e-05, 0.00010063899999999959, 9.980500000000142e-05, 0.0001001809999999978, 0.00010061100000000045, 0.00010020900000000388, 0.000100028000000002, 9.999999999999593e-05, 0.00010009700000000038, 0.00010076400000000318, 9.991699999999798e-05, 9.980500000000142e-05, 0.00010011099999999995, 0.00010045799999999772, 0.00010068100000000524, 9.995900000000363e-05, 0.00010025000000000311, 0.00010012499999999952]</msg>
<status status="PASS" starttime="20201112 10:15:44.174" endtime="20201112 10:15:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.163" endtime="20201112 10:15:44.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.187" endtime="20201112 10:15:44.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.195" endtime="20201112 10:15:44.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.191" endtime="20201112 10:15:44.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.182" endtime="20201112 10:15:44.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.678" endtime="20201112 10:15:44.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.677" endtime="20201112 10:15:44.220"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.243" endtime="20201112 10:15:44.262"></status>
</kw>
<msg timestamp="20201112 10:15:44.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.239" endtime="20201112 10:15:44.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.265" endtime="20201112 10:15:44.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.272" endtime="20201112 10:15:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.232" endtime="20201112 10:15:44.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.227" endtime="20201112 10:15:44.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.294" endtime="20201112 10:15:44.630"></status>
</kw>
<msg timestamp="20201112 10:15:44.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:44.291" endtime="20201112 10:15:44.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:44.639" endtime="20201112 10:15:44.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.657" endtime="20201112 10:15:44.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.284" endtime="20201112 10:15:44.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.279" endtime="20201112 10:15:44.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.676" level="INFO">${RESULT} = [{'time': 0.039594042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010129200000000282, 'source_diff': 0.00010129200000000282}, {'time': 0.039717236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:44.667" endtime="20201112 10:15:44.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.705" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:44.678" endtime="20201112 10:15:44.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.716" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.713" endtime="20201112 10:15:44.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.721" level="INFO">VALUE: [0.00010129200000000282, 0.0001009860000000043, 0.00010105500000000267, 0.0001008060000000019, 0.00010147199999999829, 0.00010116599999999976, 0.00010122199999999804, 0.00010169499999999887, 0.00010094399999999865, 0.00010154199999999614, 0.00010155600000000264, 0.00010134700000000163, 0.00010111100000000095, 0.00010159700000000188, 0.00010144499999999862, 0.00010151400000000393, 0.00010154199999999614, 0.00010170799999999897, 0.0001016809999999993, 0.00010080500000000242, 0.00010159700000000188, 0.00010165300000000016, 0.00010137500000000077, 0.00010170799999999897, 0.00010111100000000095, 0.00010092999999999908, 0.00010115299999999966, 0.00010172199999999854, 0.00010080499999999548, 0.00010122199999999804, 0.0001016809999999993, 0.000101028000000003, 0.00010087500000000027, 0.00010158299999999537, 0.00010165300000000016, 0.0001013610000000012, 0.00010097199999999779, 0.00010144399999999915, 0.000101513999999997, 0.0001013610000000012, 0.00010161100000000145, 0.00010084700000000113, 0.00010147199999999829, 0.00010149999999999743, 0.0001008480000000006, 0.0001010410000000031, 0.00010172199999999854, 0.0001015410000000036, 0.00010131900000000249, 0.00010122199999999804]</msg>
<status status="PASS" starttime="20201112 10:15:44.718" endtime="20201112 10:15:44.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.707" endtime="20201112 10:15:44.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.730" endtime="20201112 10:15:44.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.738" endtime="20201112 10:15:44.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.734" endtime="20201112 10:15:44.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.726" endtime="20201112 10:15:44.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.222" endtime="20201112 10:15:44.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.221" endtime="20201112 10:15:44.764"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.786" endtime="20201112 10:15:44.806"></status>
</kw>
<msg timestamp="20201112 10:15:44.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.783" endtime="20201112 10:15:44.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.809" endtime="20201112 10:15:44.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.815" endtime="20201112 10:15:44.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.776" endtime="20201112 10:15:44.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.771" endtime="20201112 10:15:44.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.838" endtime="20201112 10:15:45.174"></status>
</kw>
<msg timestamp="20201112 10:15:45.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.835" endtime="20201112 10:15:45.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.183" endtime="20201112 10:15:45.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.201" endtime="20201112 10:15:45.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.828" endtime="20201112 10:15:45.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.823" endtime="20201112 10:15:45.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.219" level="INFO">${RESULT} = [{'time': 0.039694569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010234699999999569, 'source_diff': 0.00010234699999999569}, {'time': 0.039817806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:45.211" endtime="20201112 10:15:45.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:45.221" endtime="20201112 10:15:45.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.259" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.257" endtime="20201112 10:15:45.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.265" level="INFO">VALUE: [0.00010234699999999569, 0.00010244499999999962, 0.00010250000000000536, 0.00010241700000000048, 0.00010200000000000486, 0.00010261100000000245, 0.00010204200000000357, 0.0001020559999999962, 0.00010194399999999965, 0.0001018889999999939, 0.00010182000000000246, 0.00010255499999999723, 0.00010218100000000674, 0.0001018610000000017, 0.00010263900000000159, 0.00010279199999999739, 0.00010259700000000288, 0.00010215300000000066, 0.00010245799999999972, 0.00010204200000000357, 0.00010270799999999997, 0.00010256999999999628, 0.000102513999999998, 0.00010243100000000005, 0.00010230500000000392, 0.00010222199999999904, 0.0001018610000000017, 0.00010261100000000245, 0.00010186199999999423, 0.0001026940000000004, 0.00010274999999999868, 0.00010218000000000033, 0.00010231999999999603, 0.00010266700000000073, 0.00010259800000000235, 0.00010227800000000425, 0.00010262500000000202, 0.00010272299999999901, 0.00010279199999999739, 0.00010279199999999739, 0.00010277799999999782, 0.00010272299999999901, 0.00010219499999999937, 0.00010237499999999483, 0.00010277799999999782, 0.00010195899999999869, 0.00010231900000000349, 0.00010267999999999389, 0.00010272199999999954, 0.00010245799999999972]</msg>
<status status="PASS" starttime="20201112 10:15:45.262" endtime="20201112 10:15:45.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.250" endtime="20201112 10:15:45.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.274" endtime="20201112 10:15:45.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.282" endtime="20201112 10:15:45.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.278" endtime="20201112 10:15:45.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.269" endtime="20201112 10:15:45.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.766" endtime="20201112 10:15:45.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.765" endtime="20201112 10:15:45.308"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.330" endtime="20201112 10:15:45.351"></status>
</kw>
<msg timestamp="20201112 10:15:45.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.327" endtime="20201112 10:15:45.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.354" endtime="20201112 10:15:45.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.361" endtime="20201112 10:15:45.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.320" endtime="20201112 10:15:45.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.314" endtime="20201112 10:15:45.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.383" endtime="20201112 10:15:45.731"></status>
</kw>
<msg timestamp="20201112 10:15:45.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039791431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.380" endtime="20201112 10:15:45.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039791431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.741" endtime="20201112 10:15:45.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.759" endtime="20201112 10:15:45.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.373" endtime="20201112 10:15:45.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.368" endtime="20201112 10:15:45.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.779" level="INFO">${RESULT} = [{'time': 0.039791431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010357000000000421, 'source_diff': 0.00010357000000000421}, {'time': 0.039917653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:45.771" endtime="20201112 10:15:45.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:45.782" endtime="20201112 10:15:45.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.819" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.817" endtime="20201112 10:15:45.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.824" level="INFO">VALUE: [0.00010357000000000421, 0.00010304199999999764, 0.00010366700000000173, 0.00010281899999999705, 0.00010334699999999669, 0.00010361100000000345, 0.00010372200000000054, 0.00010372200000000054, 0.00010374999999999968, 0.00010286200000000217, 0.00010282000000000346, 0.00010295800000000022, 0.00010333299999999712, 0.00010337500000000277, 0.00010293100000000055, 0.00010286099999999576, 0.00010359699999999694, 0.00010354099999999866, 0.00010282000000000346, 0.00010347199999999335, 0.00010340300000000191, 0.00010336099999999626, 0.000103416000000002, 0.00010277800000000475, 0.00010297299999999926, 0.00010295800000000022, 0.00010279200000000432, 0.00010349999999999943, 0.00010372200000000054, 0.00010356999999999728, 0.00010315300000000166, 0.00010344399999999421, 0.00010282000000000346, 0.00010302699999999859, 0.00010293000000000108, 0.00010315300000000166, 0.00010316600000000176, 0.00010312499999999558, 0.00010370800000000097, 0.0001035689999999978, 0.00010366700000000173, 0.00010327799999999832, 0.00010319500000000037, 0.0001030559999999972, 0.00010284700000000313, 0.00010376399999999925, 0.00010284700000000313, 0.00010331999999999703, 0.0001036940000000014, 0.00010293000000000108]</msg>
<status status="PASS" starttime="20201112 10:15:45.822" endtime="20201112 10:15:45.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.811" endtime="20201112 10:15:45.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.834" endtime="20201112 10:15:45.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.842" endtime="20201112 10:15:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.838" endtime="20201112 10:15:45.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.829" endtime="20201112 10:15:45.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.310" endtime="20201112 10:15:45.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.309" endtime="20201112 10:15:45.868"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.890" endtime="20201112 10:15:45.911"></status>
</kw>
<msg timestamp="20201112 10:15:45.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.887" endtime="20201112 10:15:45.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.915" endtime="20201112 10:15:45.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.921" endtime="20201112 10:15:45.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.880" endtime="20201112 10:15:45.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.874" endtime="20201112 10:15:45.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.944" endtime="20201112 10:15:46.290"></status>
</kw>
<msg timestamp="20201112 10:15:46.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039925611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040030306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.940" endtime="20201112 10:15:46.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039925611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040030306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.299" endtime="20201112 10:15:46.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.318" endtime="20201112 10:15:46.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.933" endtime="20201112 10:15:46.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.929" endtime="20201112 10:15:46.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.336" level="INFO">${RESULT} = [{'time': 0.040030306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010469500000000187, 'source_diff': 0.00010469500000000187}, {'time': 0.040157528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:46.327" endtime="20201112 10:15:46.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.365" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:46.338" endtime="20201112 10:15:46.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.376" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.374" endtime="20201112 10:15:46.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.381" level="INFO">VALUE: [0.00010469500000000187, 0.00010441699999999554, 0.0001046810000000023, 0.00010465299999999622, 0.00010433299999999812, 0.00010436199999999674, 0.00010438900000000334, 0.00010448599999999392, 0.0001040689999999983, 0.0001038610000000037, 0.00010456999999999828, 0.00010427799999999932, 0.00010427799999999932, 0.00010405500000000567, 0.00010447200000000129, 0.00010404099999999916, 0.00010384699999999719, 0.0001042360000000006, 0.00010408299999999787, 0.00010409700000000438, 0.00010455600000000564, 0.00010436099999999726, 0.00010462500000000402, 0.00010408300000000481, 0.00010431899999999855, 0.00010444500000000162, 0.00010388900000000284, 0.0001038060000000049, 0.00010397300000000026, 0.00010458299999999837, 0.00010422200000000104, 0.00010447199999999435, 0.00010454199999999914, 0.00010475000000000068, 0.00010454099999999966, 0.00010429200000000582, 0.00010469500000000187, 0.00010427799999999932, 0.00010397200000000079, 0.0001040139999999995, 0.00010431999999999803, 0.00010475000000000068, 0.00010412500000000352, 0.00010409699999999744, 0.00010432000000000496, 0.00010436099999999726, 0.00010437500000000377, 0.00010402799999999907, 0.00010427799999999932, 0.00010476300000000077]</msg>
<status status="PASS" starttime="20201112 10:15:46.378" endtime="20201112 10:15:46.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.367" endtime="20201112 10:15:46.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.391" endtime="20201112 10:15:46.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.399" endtime="20201112 10:15:46.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.394" endtime="20201112 10:15:46.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.386" endtime="20201112 10:15:46.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.870" endtime="20201112 10:15:46.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.869" endtime="20201112 10:15:46.425"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.448" endtime="20201112 10:15:46.468"></status>
</kw>
<msg timestamp="20201112 10:15:46.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.445" endtime="20201112 10:15:46.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.472" endtime="20201112 10:15:46.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.478" endtime="20201112 10:15:46.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.437" endtime="20201112 10:15:46.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.432" endtime="20201112 10:15:46.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.501" endtime="20201112 10:15:46.836"></status>
</kw>
<msg timestamp="20201112 10:15:46.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.497" endtime="20201112 10:15:46.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.845" endtime="20201112 10:15:46.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.863" endtime="20201112 10:15:46.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.490" endtime="20201112 10:15:46.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.486" endtime="20201112 10:15:46.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.881" level="INFO">${RESULT} = [{'time': 0.041642472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010554100000000066, 'source_diff': 0.00010554100000000066}, {'time': 0.041768708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:46.873" endtime="20201112 10:15:46.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:46.883" endtime="20201112 10:15:46.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.921" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.919" endtime="20201112 10:15:46.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.927" level="INFO">VALUE: [0.00010554100000000066, 0.00010509699999999844, 0.0001048610000000047, 0.00010491700000000298, 0.00010484700000000513, 0.00010526400000000075, 0.00010533299999999912, 0.00010527800000000032, 0.0001050140000000005, 0.00010522299999999457, 0.00010512499999999758, 0.00010563900000000459, 0.00010495799999999528, 0.0001048889999999969, 0.00010506999999999878, 0.00010504199999999964, 0.0001048610000000047, 0.00010522200000000204, 0.00010529100000000041, 0.00010555500000000023, 0.00010577700000000134, 0.00010515300000000366, 0.00010566599999999732, 0.00010552700000000109, 0.00010563900000000459, 0.00010534799999999817, 0.00010526300000000127, 0.00010484699999999819, 0.00010545799999999578, 0.0001056940000000034, 0.00010534699999999869, 0.00010577800000000082, 0.00010579200000000039, 0.00010575000000000168, 0.0001052360000000016, 0.00010565299999999722, 0.00010497200000000179, 0.00010495800000000222, 0.00010547200000000229, 0.00010526400000000075, 0.00010484700000000513, 0.00010486099999999776, 0.00010565199999999775, 0.00010559800000000535, 0.00010544500000000262, 0.00010480499999999948, 0.00010550000000000143, 0.00010534700000000563, 0.00010480599999999896, 0.0001050559999999992]</msg>
<status status="PASS" starttime="20201112 10:15:46.924" endtime="20201112 10:15:46.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.912" endtime="20201112 10:15:46.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.936" endtime="20201112 10:15:46.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.944" endtime="20201112 10:15:46.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.940" endtime="20201112 10:15:46.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.932" endtime="20201112 10:15:46.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.427" endtime="20201112 10:15:46.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.426" endtime="20201112 10:15:46.970"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.992" endtime="20201112 10:15:47.012"></status>
</kw>
<msg timestamp="20201112 10:15:47.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.989" endtime="20201112 10:15:47.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.015" endtime="20201112 10:15:47.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.021" endtime="20201112 10:15:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.982" endtime="20201112 10:15:47.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.976" endtime="20201112 10:15:47.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.044" endtime="20201112 10:15:47.380"></status>
</kw>
<msg timestamp="20201112 10:15:47.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039579097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.041" endtime="20201112 10:15:47.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039579097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039685667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.389" endtime="20201112 10:15:47.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.407" endtime="20201112 10:15:47.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.034" endtime="20201112 10:15:47.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.029" endtime="20201112 10:15:47.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.426" level="INFO">${RESULT} = [{'time': 0.039685667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010657000000000028, 'source_diff': 0.00010657000000000028}, {'time': 0.039810875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:47.417" endtime="20201112 10:15:47.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:47.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:47.428" endtime="20201112 10:15:47.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.466" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:47.464" endtime="20201112 10:15:47.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.472" level="INFO">VALUE: [0.00010657000000000028, 0.00010661099999999951, 0.00010593100000000355, 0.000106208999999996, 0.00010587500000000527, 0.00010609699999999944, 0.00010615300000000466, 0.00010644400000000415, 0.0001063889999999984, 0.00010661099999999951, 0.00010604200000000064, 0.00010679200000000139, 0.00010662499999999908, 0.0001065690000000008, 0.00010598600000000236, 0.00010584799999999867, 0.00010658399999999985, 0.00010645799999999678, 0.00010630500000000098, 0.00010662499999999908, 0.00010665199999999875, 0.00010677800000000182, 0.00010665299999999822, 0.00010592999999999714, 0.00010593100000000355, 0.00010661099999999951, 0.000106208999999996, 0.00010590299999999747, 0.00010594399999999671, 0.00010675000000000268, 0.00010623700000000208, 0.00010647199999999635, 0.00010661099999999951, 0.00010627799999999438, 0.00010626400000000175, 0.00010622200000000304, 0.00010661099999999951, 0.0001060690000000003, 0.00010673700000000258, 0.00010629200000000089, 0.00010624999999999524, 0.00010645900000000319, 0.00010609799999999892, 0.0001063889999999984, 0.00010633300000000012, 0.00010648599999999592, 0.00010608299999999987, 0.00010581999999999953, 0.00010576400000000125, 0.00010593000000000408]</msg>
<status status="PASS" starttime="20201112 10:15:47.469" endtime="20201112 10:15:47.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.457" endtime="20201112 10:15:47.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.482" endtime="20201112 10:15:47.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:47.490" endtime="20201112 10:15:47.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.486" endtime="20201112 10:15:47.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.477" endtime="20201112 10:15:47.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.972" endtime="20201112 10:15:47.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.971" endtime="20201112 10:15:47.516"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.538" endtime="20201112 10:15:47.558"></status>
</kw>
<msg timestamp="20201112 10:15:47.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.535" endtime="20201112 10:15:47.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.562" endtime="20201112 10:15:47.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.568" endtime="20201112 10:15:47.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.528" endtime="20201112 10:15:47.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.522" endtime="20201112 10:15:47.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.591" endtime="20201112 10:15:47.925"></status>
</kw>
<msg timestamp="20201112 10:15:47.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:47.587" endtime="20201112 10:15:47.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:47.935" endtime="20201112 10:15:47.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.953" endtime="20201112 10:15:47.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.580" endtime="20201112 10:15:47.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.576" endtime="20201112 10:15:47.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.973" level="INFO">${RESULT} = [{'time': 0.0400425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001071940000000049, 'source_diff': 0.0001071940000000049}, {'time': 0.040167708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:47.965" endtime="20201112 10:15:47.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:47.975" endtime="20201112 10:15:48.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.013" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.011" endtime="20201112 10:15:48.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.019" level="INFO">VALUE: [0.0001071940000000049, 0.00010745800000000472, 0.0001070560000000012, 0.00010769500000000487, 0.00010736100000000026, 0.00010774999999999674, 0.00010763899999999965, 0.00010745799999999778, 0.00010759700000000094, 0.00010752800000000257, 0.00010718000000000533, 0.00010712499999999958, 0.00010765299999999922, 0.00010769500000000487, 0.00010774999999999674, 0.0001070419999999947, 0.00010734700000000069, 0.00010690299999999847, 0.00010691699999999804, 0.0001068889999999989, 0.00010731900000000155, 0.00010765299999999922, 0.00010726400000000275, 0.00010733299999999418, 0.00010680600000000096, 0.00010747200000000429, 0.00010709700000000044, 0.00010766599999999932, 0.00010744499999999768, 0.0001077089999999975, 0.00010723599999999667, 0.00010704099999999522, 0.00010684799999999967, 0.00010687499999999933, 0.00010766699999999879, 0.00010767999999999889, 0.00010704200000000164, 0.00010763899999999965, 0.0001070419999999947, 0.00010688900000000584, 0.00010750000000000343, 0.00010720799999999753, 0.00010762500000000008, 0.00010712499999999958, 0.00010713799999999968, 0.00010732000000000103, 0.00010697200000000379, 0.00010762500000000008, 0.00010697199999999685, 0.00010679100000000191]</msg>
<status status="PASS" starttime="20201112 10:15:48.016" endtime="20201112 10:15:48.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.004" endtime="20201112 10:15:48.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.034" endtime="20201112 10:15:48.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.042" endtime="20201112 10:15:48.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.038" endtime="20201112 10:15:48.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.030" endtime="20201112 10:15:48.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.518" endtime="20201112 10:15:48.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.517" endtime="20201112 10:15:48.068"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.090" endtime="20201112 10:15:48.110"></status>
</kw>
<msg timestamp="20201112 10:15:48.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.087" endtime="20201112 10:15:48.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.113" endtime="20201112 10:15:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.119" endtime="20201112 10:15:48.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.080" endtime="20201112 10:15:48.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.074" endtime="20201112 10:15:48.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.142" endtime="20201112 10:15:48.476"></status>
</kw>
<msg timestamp="20201112 10:15:48.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0395835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:48.139" endtime="20201112 10:15:48.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0395835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:48.485" endtime="20201112 10:15:48.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.504" endtime="20201112 10:15:48.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.132" endtime="20201112 10:15:48.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.127" endtime="20201112 10:15:48.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.523" level="INFO">${RESULT} = [{'time': 0.0395835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010852800000000357, 'source_diff': 0.00010852800000000357}, {'time': 0.039711694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:48.514" endtime="20201112 10:15:48.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.552" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:48.525" endtime="20201112 10:15:48.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.563" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.561" endtime="20201112 10:15:48.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.568" level="INFO">VALUE: [0.00010852800000000357, 0.00010862500000000108, 0.00010830599999999552, 0.00010859700000000194, 0.00010800000000000393, 0.000108514000000004, 0.00010851300000000452, 0.00010851399999999706, 0.00010786100000000076, 0.00010830500000000298, 0.00010799999999999699, 0.00010834700000000169, 0.00010859800000000142, 0.00010867999999999989, 0.00010813800000000068, 0.00010784700000000119, 0.00010815299999999972, 0.00010862500000000108, 0.00010777799999999588, 0.00010798699999999689, 0.00010827800000000332, 0.00010787500000000033, 0.00010874999999999774, 0.00010858400000000185, 0.00010827799999999638, 0.00010847199999999835, 0.00010792999999999914, 0.00010844499999999868, 0.00010805599999999527, 0.00010849999999999749, 0.00010865300000000022, 0.00010852800000000357, 0.00010787500000000033, 0.00010804099999999622, 0.00010822299999999757, 0.0001080690000000023, 0.00010850000000000443, 0.00010793100000000555, 0.00010867999999999989, 0.0001082360000000046, 0.0001081810000000058, 0.0001085419999999962, 0.00010863900000000065, 0.00010866600000000032, 0.00010813899999999321, 0.0001077769999999964, 0.00010782000000000153, 0.00010784699999999425, 0.00010849999999999749, 0.00010790299999999947]</msg>
<status status="PASS" starttime="20201112 10:15:48.565" endtime="20201112 10:15:48.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.554" endtime="20201112 10:15:48.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.578" endtime="20201112 10:15:48.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.586" endtime="20201112 10:15:48.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.582" endtime="20201112 10:15:48.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.573" endtime="20201112 10:15:48.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.070" endtime="20201112 10:15:48.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.069" endtime="20201112 10:15:48.612"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.634" endtime="20201112 10:15:48.654"></status>
</kw>
<msg timestamp="20201112 10:15:48.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.631" endtime="20201112 10:15:48.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.657" endtime="20201112 10:15:48.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.663" endtime="20201112 10:15:48.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.624" endtime="20201112 10:15:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.618" endtime="20201112 10:15:48.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.687" endtime="20201112 10:15:49.023"></status>
</kw>
<msg timestamp="20201112 10:15:49.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039510167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039619472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.683" endtime="20201112 10:15:49.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039510167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039619472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.032" endtime="20201112 10:15:49.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.051" endtime="20201112 10:15:49.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.676" endtime="20201112 10:15:49.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.671" endtime="20201112 10:15:49.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.069" level="INFO">${RESULT} = [{'time': 0.039619472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010930500000000398, 'source_diff': 0.00010930500000000398}, {'time': 0.039748764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:49.061" endtime="20201112 10:15:49.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.099" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:49.071" endtime="20201112 10:15:49.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.110" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.108" endtime="20201112 10:15:49.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.115" level="INFO">VALUE: [0.00010930500000000398, 0.00010899999999999799, 0.00010929200000000389, 0.00010909800000000192, 0.00010891700000000004, 0.00010957000000000328, 0.00010962500000000208, 0.00010912500000000158, 0.00010926400000000475, 0.00010912500000000158, 0.00010916700000000029, 0.00010923599999999867, 0.00010899999999999799, 0.00010951399999999806, 0.00010933399999999566, 0.00010900000000000493, 0.00010931899999999661, 0.00010920799999999953, 0.00010913900000000115, 0.00010943000000000064, 0.00010912500000000158, 0.00010961100000000251, 0.00010961099999999557, 0.00010895800000000622, 0.00010977800000000482, 0.00010961100000000251, 0.00010893099999999961, 0.00010877800000000382, 0.00010923599999999867, 0.00010886100000000176, 0.00010965300000000122, 0.00010970800000000003, 0.00010923599999999867, 0.00010873699999999764, 0.0001095419999999972, 0.00010961100000000251, 0.00010965200000000175, 0.00010962500000000208, 0.00010884700000000219, 0.00010961100000000251, 0.00010931899999999661, 0.00010899999999999799, 0.0001095560000000037, 0.00010929199999999695, 0.0001095560000000037, 0.00010911199999999455, 0.00010963900000000165, 0.00010961100000000251, 0.00010906899999999636, 0.00010962499999999514]</msg>
<status status="PASS" starttime="20201112 10:15:49.112" endtime="20201112 10:15:49.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.101" endtime="20201112 10:15:49.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.125" endtime="20201112 10:15:49.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.133" endtime="20201112 10:15:49.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.129" endtime="20201112 10:15:49.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.120" endtime="20201112 10:15:49.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.614" endtime="20201112 10:15:49.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.613" endtime="20201112 10:15:49.159"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.181" endtime="20201112 10:15:49.201"></status>
</kw>
<msg timestamp="20201112 10:15:49.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.178" endtime="20201112 10:15:49.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.204" endtime="20201112 10:15:49.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.211" endtime="20201112 10:15:49.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.171" endtime="20201112 10:15:49.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.165" endtime="20201112 10:15:49.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.234" endtime="20201112 10:15:49.570"></status>
</kw>
<msg timestamp="20201112 10:15:49.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.230" endtime="20201112 10:15:49.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.579" endtime="20201112 10:15:49.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.598" endtime="20201112 10:15:49.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.223" endtime="20201112 10:15:49.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.219" endtime="20201112 10:15:49.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.616" level="INFO">${RESULT} = [{'time': 0.039955569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011018000000000139, 'source_diff': 0.00011018000000000139}, {'time': 0.040085806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:49.608" endtime="20201112 10:15:49.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:49.618" endtime="20201112 10:15:49.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.656" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.654" endtime="20201112 10:15:49.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.661" level="INFO">VALUE: [0.00011018000000000139, 0.00011034800000000317, 0.00010984699999999625, 0.00011049999999999949, 0.00011018100000000086, 0.00011068100000000136, 0.00011008299999999693, 0.00011009700000000344, 0.00011011100000000301, 0.00011052799999999863, 0.00011034800000000317, 0.00010999999999999899, 0.00010973700000000558, 0.00010990199999999506, 0.00010982000000000353, 0.00011066700000000179, 0.00011075000000000668, 0.0001098890000000019, 0.00011066599999999538, 0.00010986100000000276, 0.00011051399999999906, 0.00011033300000000412, 0.00010998600000000636, 0.00011023699999999914, 0.00011043099999999417, 0.00011069500000000093, 0.00011041600000000207, 0.00011043000000000164, 0.00011015200000000225, 0.00011023699999999914, 0.0001100549999999978, 0.00011066699999999485, 0.00010981999999999659, 0.00011026399999999881, 0.00010995800000000028, 0.00011080499999999854, 0.00011081900000000505, 0.00011073600000000017, 0.00011001399999999856, 0.00011033300000000412, 0.0001099169999999941, 0.00011012500000000258, 0.00011045900000000025, 0.00011047200000000035, 0.00010986099999999582, 0.00011077799999999888, 0.00010994400000000071, 0.00010984700000000319, 0.00011033299999999718, 0.00010994400000000071]</msg>
<status status="PASS" starttime="20201112 10:15:49.659" endtime="20201112 10:15:49.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.647" endtime="20201112 10:15:49.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.671" endtime="20201112 10:15:49.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.679" endtime="20201112 10:15:49.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.675" endtime="20201112 10:15:49.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.666" endtime="20201112 10:15:49.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.161" endtime="20201112 10:15:49.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.160" endtime="20201112 10:15:49.705"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.728" endtime="20201112 10:15:49.748"></status>
</kw>
<msg timestamp="20201112 10:15:49.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.724" endtime="20201112 10:15:49.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.751" endtime="20201112 10:15:49.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.757" endtime="20201112 10:15:49.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.717" endtime="20201112 10:15:49.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.711" endtime="20201112 10:15:49.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.780" endtime="20201112 10:15:50.113"></status>
</kw>
<msg timestamp="20201112 10:15:50.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.776" endtime="20201112 10:15:50.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.123" endtime="20201112 10:15:50.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.141" endtime="20201112 10:15:50.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.770" endtime="20201112 10:15:50.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.765" endtime="20201112 10:15:50.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.162" level="INFO">${RESULT} = [{'time': 0.040500375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011129199999999895, 'source_diff': 0.00011129199999999895}, {'time': 0.040632611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:50.153" endtime="20201112 10:15:50.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:50.164" endtime="20201112 10:15:50.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.201" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.199" endtime="20201112 10:15:50.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.206" level="INFO">VALUE: [0.00011129199999999895, 0.00011119400000000196, 0.00011113900000000315, 0.0001115549999999993, 0.00011145800000000178, 0.00011130499999999904, 0.00011105599999999827, 0.00011108300000000487, 0.00011125000000000024, 0.00011108300000000487, 0.00011148700000000039, 0.00011127799999999938, 0.00011163800000000418, 0.00011175000000000074, 0.0001108890000000029, 0.0001108890000000029, 0.00011083300000000462, 0.00011156899999999886, 0.00011119399999999502, 0.00011093100000000161, 0.000111596999999998, 0.00011155599999999877, 0.00011148600000000092, 0.00011095800000000128, 0.00011179099999999997, 0.00011161099999999757, 0.00011130499999999904, 0.00011125000000000024, 0.00011126399999999981, 0.00011141700000000254, 0.00011107000000000478, 0.00011163900000000365, 0.0001113890000000034, 0.00011152799999999963, 0.00011175000000000074, 0.00011111099999999707, 0.00011156999999999834, 0.00011155599999999877, 0.00011156899999999886, 0.00011087500000000333, 0.00011079099999999897, 0.00011155599999999877, 0.00011113900000000315, 0.00011095800000000128, 0.00011159799999999748, 0.00011101399999999956, 0.00011137499999999689, 0.00011086099999999682, 0.00011123600000000067, 0.0001110419999999987]</msg>
<status status="PASS" starttime="20201112 10:15:50.204" endtime="20201112 10:15:50.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.192" endtime="20201112 10:15:50.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.216" endtime="20201112 10:15:50.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.224" endtime="20201112 10:15:50.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.220" endtime="20201112 10:15:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.211" endtime="20201112 10:15:50.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.707" endtime="20201112 10:15:50.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.706" endtime="20201112 10:15:50.250"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.272" endtime="20201112 10:15:50.292"></status>
</kw>
<msg timestamp="20201112 10:15:50.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.269" endtime="20201112 10:15:50.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.295" endtime="20201112 10:15:50.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.301" endtime="20201112 10:15:50.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.261" endtime="20201112 10:15:50.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.256" endtime="20201112 10:15:50.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.324" endtime="20201112 10:15:50.660"></status>
</kw>
<msg timestamp="20201112 10:15:50.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039648653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.321" endtime="20201112 10:15:50.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039648653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.670" endtime="20201112 10:15:50.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.688" endtime="20201112 10:15:50.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.314" endtime="20201112 10:15:50.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.309" endtime="20201112 10:15:50.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.706" level="INFO">${RESULT} = [{'time': 0.039648653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011187499999999739, 'source_diff': 0.00011187499999999739}, {'time': 0.039783889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:50.697" endtime="20201112 10:15:50.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:50.708" endtime="20201112 10:15:50.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.746" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.744" endtime="20201112 10:15:50.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.751" level="INFO">VALUE: [0.00011187499999999739, 0.00011237500000000483, 0.00011212500000000458, 0.0001127499999999948, 0.0001120969999999985, 0.00011230500000000004, 0.00011202800000000013, 0.00011230500000000004, 0.00011215299999999678, 0.00011226400000000081, 0.00011216699999999635, 0.00011265300000000422, 0.00011231999999999909, 0.00011234699999999875, 0.00011279200000000045, 0.000112596999999999, 0.0001120419999999997, 0.00011256899999999986, 0.00011190300000000347, 0.000112596999999999, 0.00011213900000000415, 0.0001123890000000044, 0.00011269499999999599, 0.00011222199999999516, 0.00011186100000000476, 0.00011180599999999902, 0.00011234699999999875, 0.00011256899999999986, 0.00011251399999999412, 0.00011238899999999746, 0.00011250000000000149, 0.00011232000000000603, 0.00011190299999999653, 0.00011276400000000131, 0.00011244399999999627, 0.00011226400000000081, 0.0001125550000000003, 0.00011187499999999739, 0.00011194500000000218, 0.00011232000000000603, 0.00011231899999999961, 0.00011195800000000228, 0.00011201400000000056, 0.00011275000000000174, 0.0001120549999999998, 0.00011251400000000106, 0.0001125560000000067, 0.00011187500000000433, 0.00011258399999999891, 0.00011247200000000235]</msg>
<status status="PASS" starttime="20201112 10:15:50.748" endtime="20201112 10:15:50.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.737" endtime="20201112 10:15:50.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.761" endtime="20201112 10:15:50.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.769" endtime="20201112 10:15:50.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.765" endtime="20201112 10:15:50.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.756" endtime="20201112 10:15:50.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.252" endtime="20201112 10:15:50.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.250" endtime="20201112 10:15:50.795"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.817" endtime="20201112 10:15:50.839"></status>
</kw>
<msg timestamp="20201112 10:15:50.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.814" endtime="20201112 10:15:50.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.842" endtime="20201112 10:15:50.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.848" endtime="20201112 10:15:50.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.807" endtime="20201112 10:15:50.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.801" endtime="20201112 10:15:50.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.871" endtime="20201112 10:15:51.206"></status>
</kw>
<msg timestamp="20201112 10:15:51.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.868" endtime="20201112 10:15:51.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.216" endtime="20201112 10:15:51.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.234" endtime="20201112 10:15:51.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.861" endtime="20201112 10:15:51.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.856" endtime="20201112 10:15:51.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.252" level="INFO">${RESULT} = [{'time': 0.039856611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011363899999999871, 'source_diff': 0.00011363899999999871}, {'time': 0.039989875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:51.244" endtime="20201112 10:15:51.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:51.254" endtime="20201112 10:15:51.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.292" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.290" endtime="20201112 10:15:51.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.298" level="INFO">VALUE: [0.00011363899999999871, 0.00011340299999999803, 0.0001135420000000012, 0.00011300000000000199, 0.0001128890000000049, 0.00011293099999999667, 0.00011290299999999753, 0.0001134299999999977, 0.00011352699999999522, 0.00011283299999999968, 0.00011298600000000242, 0.00011343099999999717, 0.00011366700000000479, 0.00011329200000000095, 0.00011377799999999494, 0.0001130420000000007, 0.00011344400000000421, 0.0001130969999999995, 0.00011297200000000285, 0.00011347200000000335, 0.00011351400000000206, 0.0001135699999999934, 0.00011312499999999864, 0.00011302700000000165, 0.00011362499999999914, 0.00011345800000000378, 0.00011323599999999573, 0.000113597, 0.00011362499999999914, 0.00011290199999999806, 0.00011280600000000002, 0.00011322199999999616, 0.0001133749999999989, 0.000113597, 0.00011355600000000077, 0.00011313899999999821, 0.00011365299999999828, 0.00011354199999999426, 0.00011363899999999871, 0.00011283299999999968, 0.00011365199999999881, 0.00011332000000000009, 0.00011288899999999796, 0.00011293099999999667, 0.00011352800000000163, 0.00011345799999999684, 0.00011294400000000371, 0.00011316599999999788, 0.00011369399999999752, 0.00011344400000000421]</msg>
<status status="PASS" starttime="20201112 10:15:51.295" endtime="20201112 10:15:51.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.283" endtime="20201112 10:15:51.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.307" endtime="20201112 10:15:51.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.315" endtime="20201112 10:15:51.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.311" endtime="20201112 10:15:51.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.303" endtime="20201112 10:15:51.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.797" endtime="20201112 10:15:51.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.796" endtime="20201112 10:15:51.341"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.363" endtime="20201112 10:15:51.385"></status>
</kw>
<msg timestamp="20201112 10:15:51.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.360" endtime="20201112 10:15:51.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.388" endtime="20201112 10:15:51.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.395" endtime="20201112 10:15:51.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.353" endtime="20201112 10:15:51.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.348" endtime="20201112 10:15:51.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.417" endtime="20201112 10:15:51.765"></status>
</kw>
<msg timestamp="20201112 10:15:51.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039962903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.414" endtime="20201112 10:15:51.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039962903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.774" endtime="20201112 10:15:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.792" endtime="20201112 10:15:51.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.407" endtime="20201112 10:15:51.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.403" endtime="20201112 10:15:51.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.811" level="INFO">${RESULT} = [{'time': 0.040076972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011406900000000136, 'source_diff': 0.00011406900000000136}, {'time': 0.040213139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:51.802" endtime="20201112 10:15:51.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.840" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:51.813" endtime="20201112 10:15:51.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.851" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.849" endtime="20201112 10:15:51.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.856" level="INFO">VALUE: [0.00011406900000000136, 0.00011430600000000152, 0.00011473599999999723, 0.0001140420000000017, 0.0001139169999999981, 0.00011408300000000093, 0.00011377800000000188, 0.00011386099999999982, 0.00011434700000000075, 0.00011416699999999835, 0.00011388799999999949, 0.00011418099999999792, 0.00011413900000000615, 0.00011419399999999802, 0.00011429100000000247, 0.0001138749999999994, 0.00011462500000000014, 0.00011388899999999896, 0.00011472299999999713, 0.00011380600000000102, 0.00011422299999999663, 0.00011431900000000161, 0.0001140550000000018, 0.00011473599999999723, 0.00011413899999999921, 0.00011438899999999946, 0.00011444399999999827, 0.00011469499999999799, 0.00011457000000000134, 0.00011395900000000375, 0.000114082999999994, 0.00011465299999999928, 0.000114597000000001, 0.00011411199999999955, 0.00011412499999999964, 0.00011383300000000068, 0.00011433300000000118, 0.00011411100000000007, 0.0001146379999999933, 0.00011387500000000633, 0.00011451399999999612, 0.00011463899999999971, 0.00011381900000000111, 0.00011390299999999853, 0.00011423600000000367, 0.00011405600000000127, 0.0001139169999999981, 0.00011465299999999928, 0.00011383400000000016, 0.00011476399999999637]</msg>
<status status="PASS" starttime="20201112 10:15:51.853" endtime="20201112 10:15:51.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.842" endtime="20201112 10:15:51.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.866" endtime="20201112 10:15:51.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.874" endtime="20201112 10:15:51.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.869" endtime="20201112 10:15:51.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.861" endtime="20201112 10:15:51.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.343" endtime="20201112 10:15:51.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.342" endtime="20201112 10:15:51.899"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.922" endtime="20201112 10:15:51.942"></status>
</kw>
<msg timestamp="20201112 10:15:51.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.918" endtime="20201112 10:15:51.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.945" endtime="20201112 10:15:51.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.951" endtime="20201112 10:15:51.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.911" endtime="20201112 10:15:51.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.906" endtime="20201112 10:15:51.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.974" endtime="20201112 10:15:52.308"></status>
</kw>
<msg timestamp="20201112 10:15:52.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.971" endtime="20201112 10:15:52.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.317" endtime="20201112 10:15:52.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.335" endtime="20201112 10:15:52.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.964" endtime="20201112 10:15:52.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.959" endtime="20201112 10:15:52.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.356" level="INFO">${RESULT} = [{'time': 0.040004903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011543099999999917, 'source_diff': 0.00011543099999999917}, {'time': 0.040137083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:52.347" endtime="20201112 10:15:52.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:52.358" endtime="20201112 10:15:52.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.396" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.394" endtime="20201112 10:15:52.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.401" level="INFO">VALUE: [0.00011543099999999917, 0.00011502699999999672, 0.00011515299999999978, 0.00011512500000000064, 0.00011483400000000116, 0.00011566699999999985, 0.00011501400000000356, 0.00011494399999999877, 0.00011570799999999909, 0.00011545799999999884, 0.0001154169999999996, 0.00011515299999999978, 0.00011481899999999517, 0.00011568099999999942, 0.00011498599999999748, 0.00011502700000000365, 0.00011491599999999963, 0.00011545900000000525, 0.00011502799999999619, 0.00011552800000000363, 0.00011486100000000082, 0.00011490300000000647, 0.00011573600000000517, 0.00011549999999999755, 0.00011566699999999985, 0.0001148750000000004, 0.00011477800000000288, 0.00011483300000000168, 0.00011520899999999806, 0.00011568099999999942, 0.00011551399999999712, 0.00011555600000000277, 0.00011483300000000168, 0.00011479100000000297, 0.00011533400000000166, 0.00011488899999999996, 0.0001155420000000032, 0.00011531900000000261, 0.0001154169999999996, 0.0001148750000000004, 0.00011565300000000028, 0.00011545799999999884, 0.00011552799999999669, 0.00011513900000000021, 0.00011483300000000168, 0.00011501400000000356, 0.00011572199999999866, 0.00011531900000000261, 0.00011513900000000021, 0.00011559800000000148]</msg>
<status status="PASS" starttime="20201112 10:15:52.398" endtime="20201112 10:15:52.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.387" endtime="20201112 10:15:52.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.410" endtime="20201112 10:15:52.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.419" endtime="20201112 10:15:52.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.414" endtime="20201112 10:15:52.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.406" endtime="20201112 10:15:52.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.902" endtime="20201112 10:15:52.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.900" endtime="20201112 10:15:52.444"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.466" endtime="20201112 10:15:52.487"></status>
</kw>
<msg timestamp="20201112 10:15:52.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.463" endtime="20201112 10:15:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.490" endtime="20201112 10:15:52.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.496" endtime="20201112 10:15:52.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.456" endtime="20201112 10:15:52.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.451" endtime="20201112 10:15:52.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.519" endtime="20201112 10:15:52.858"></status>
</kw>
<msg timestamp="20201112 10:15:52.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039601306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.516" endtime="20201112 10:15:52.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039601306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.867" endtime="20201112 10:15:52.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.886" endtime="20201112 10:15:52.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.509" endtime="20201112 10:15:52.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.504" endtime="20201112 10:15:52.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.904" level="INFO">${RESULT} = [{'time': 0.039717986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011667999999999401, 'source_diff': 0.00011667999999999401}, {'time': 0.039856236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:52.896" endtime="20201112 10:15:52.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.934" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:52.906" endtime="20201112 10:15:52.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.944" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.942" endtime="20201112 10:15:52.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.950" level="INFO">VALUE: [0.00011667999999999401, 0.00011606900000000336, 0.00011623599999999873, 0.00011597199999999891, 0.00011633300000000318, 0.00011590300000000053, 0.00011629199999999701, 0.00011659699999999606, 0.00011661100000000257, 0.00011616600000000088, 0.0001167499999999988, 0.00011640300000000103, 0.00011590300000000053, 0.00011656900000000386, 0.00011586100000000182, 0.00011594399999999977, 0.00011605599999999633, 0.00011665300000000128, 0.00011590300000000053, 0.00011640300000000103, 0.00011608400000000241, 0.00011616600000000088, 0.0001162770000000049, 0.00011619499999999949, 0.00011631899999999668, 0.00011640200000000156, 0.0001167770000000054, 0.00011584700000000225, 0.00011583300000000268, 0.00011679099999999804, 0.00011627799999999744, 0.00011641699999999366, 0.00011627800000000438, 0.00011647199999999941, 0.00011648599999999898, 0.0001165829999999965, 0.00011627799999999744, 0.00011652700000000515, 0.00011668000000000095, 0.00011658300000000343, 0.00011583400000000216, 0.00011649999999999855, 0.00011657000000000334, 0.00011581899999999618, 0.00011654199999999726, 0.00011583299999999574, 0.00011652699999999822, 0.00011598600000000542, 0.00011673599999999923, 0.00011591599999999369]</msg>
<status status="PASS" starttime="20201112 10:15:52.947" endtime="20201112 10:15:52.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.935" endtime="20201112 10:15:52.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.959" endtime="20201112 10:15:52.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.967" endtime="20201112 10:15:52.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.963" endtime="20201112 10:15:52.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.954" endtime="20201112 10:15:52.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.446" endtime="20201112 10:15:52.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.445" endtime="20201112 10:15:52.993"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.015" endtime="20201112 10:15:53.035"></status>
</kw>
<msg timestamp="20201112 10:15:53.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.012" endtime="20201112 10:15:53.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.039" endtime="20201112 10:15:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.045" endtime="20201112 10:15:53.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.005" endtime="20201112 10:15:53.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.999" endtime="20201112 10:15:53.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.068" endtime="20201112 10:15:53.402"></status>
</kw>
<msg timestamp="20201112 10:15:53.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039859972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.064" endtime="20201112 10:15:53.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039859972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.412" endtime="20201112 10:15:53.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.430" endtime="20201112 10:15:53.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.057" endtime="20201112 10:15:53.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.053" endtime="20201112 10:15:53.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.448" level="INFO">${RESULT} = [{'time': 0.039859972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011695800000000034, 'source_diff': 0.00011695800000000034}, {'time': 0.040000222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:53.440" endtime="20201112 10:15:53.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:53.478" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:53.450" endtime="20201112 10:15:53.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.489" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:53.486" endtime="20201112 10:15:53.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.494" level="INFO">VALUE: [0.00011695800000000034, 0.00011731900000000461, 0.0001177499999999998, 0.00011695899999999981, 0.00011772200000000066, 0.00011679099999999804, 0.00011701399999999862, 0.00011770799999999415, 0.00011725000000000624, 0.00011766699999999491, 0.00011745800000000084, 0.00011763899999999577, 0.00011755599999999783, 0.00011686099999999588, 0.0001176249999999962, 0.00011712500000000264, 0.00011763900000000271, 0.00011704199999999776, 0.00011756900000000486, 0.00011683300000000368, 0.00011780500000000554, 0.00011688900000000196, 0.00011715300000000178, 0.00011744500000000074, 0.00011688900000000196, 0.00011727799999999844, 0.00011756899999999793, 0.0001169300000000012, 0.00011715299999999484, 0.00011777799999999894, 0.00011736100000000332, 0.00011697199999999991, 0.0001169170000000011, 0.00011752799999999869, 0.00011727699999999897, 0.00011716600000000188, 0.00011748599999999998, 0.0001177499999999998, 0.00011748599999999998, 0.00011726399999999887, 0.00011751399999999912, 0.00011694400000000077, 0.00011702699999999872, 0.00011767999999999501, 0.00011701399999999862, 0.0001172499999999993, 0.00011733299999999725, 0.00011733400000000366, 0.00011694400000000077, 0.00011782000000000459]</msg>
<status status="PASS" starttime="20201112 10:15:53.491" endtime="20201112 10:15:53.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.479" endtime="20201112 10:15:53.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.509" endtime="20201112 10:15:53.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:53.517" endtime="20201112 10:15:53.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.512" endtime="20201112 10:15:53.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.504" endtime="20201112 10:15:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.995" endtime="20201112 10:15:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.994" endtime="20201112 10:15:53.543"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.565" endtime="20201112 10:15:53.585"></status>
</kw>
<msg timestamp="20201112 10:15:53.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.562" endtime="20201112 10:15:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.589" endtime="20201112 10:15:53.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.595" endtime="20201112 10:15:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.555" endtime="20201112 10:15:53.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.549" endtime="20201112 10:15:53.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.618" endtime="20201112 10:15:53.953"></status>
</kw>
<msg timestamp="20201112 10:15:53.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.615" endtime="20201112 10:15:53.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.962" endtime="20201112 10:15:53.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.980" endtime="20201112 10:15:53.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.608" endtime="20201112 10:15:53.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.603" endtime="20201112 10:15:53.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.999" level="INFO">${RESULT} = [{'time': 0.039761458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011855499999999936, 'source_diff': 0.00011855499999999936}, {'time': 0.039901694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:53.990" endtime="20201112 10:15:53.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.028" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:54.001" endtime="20201112 10:15:54.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.039" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.036" endtime="20201112 10:15:54.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.044" level="INFO">VALUE: [0.00011855499999999936, 0.00011788800000000349, 0.00011852700000000022, 0.0001181950000000015, 0.00011843100000000217, 0.0001182500000000003, 0.00011865300000000328, 0.00011804199999999876, 0.00011793100000000167, 0.0001187500000000008, 0.00011847300000000088, 0.00011788899999999602, 0.00011829200000000595, 0.00011855499999999936, 0.00011793100000000167, 0.00011879199999999951, 0.00011851400000000012, 0.00011797200000000091, 0.00011783299999999775, 0.00011794399999999483, 0.00011816600000000288, 0.00011822199999999422, 0.00011868000000000295, 0.00011830600000000552, 0.0001182500000000003, 0.00011836099999999738, 0.00011877799999999994, 0.0001180970000000045, 0.00011820800000000159, 0.00011800000000000005, 0.00011855599999999883, 0.00011804199999999876, 0.00011847199999999447, 0.00011818100000000192, 0.00011855599999999883, 0.00011859699999999807, 0.00011854099999999979, 0.00011798600000000048, 0.00011823600000000073, 0.00011804100000000622, 0.00011781900000000511, 0.00011836100000000432, 0.00011847200000000141, 0.00011834700000000475, 0.0001181249999999967, 0.00011781999999999765, 0.00011868100000000242, 0.0001183750000000039, 0.00011827799999999944, 0.00011811100000000407]</msg>
<status status="PASS" starttime="20201112 10:15:54.041" endtime="20201112 10:15:54.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.030" endtime="20201112 10:15:54.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.054" endtime="20201112 10:15:54.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.062" endtime="20201112 10:15:54.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.057" endtime="20201112 10:15:54.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.049" endtime="20201112 10:15:54.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.545" endtime="20201112 10:15:54.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.544" endtime="20201112 10:15:54.087"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.110" endtime="20201112 10:15:54.130"></status>
</kw>
<msg timestamp="20201112 10:15:54.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.106" endtime="20201112 10:15:54.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.133" endtime="20201112 10:15:54.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.140" endtime="20201112 10:15:54.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.099" endtime="20201112 10:15:54.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.094" endtime="20201112 10:15:54.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.163" endtime="20201112 10:15:54.497"></status>
</kw>
<msg timestamp="20201112 10:15:54.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039788681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.159" endtime="20201112 10:15:54.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039788681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.506" endtime="20201112 10:15:54.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.524" endtime="20201112 10:15:54.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.152" endtime="20201112 10:15:54.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.148" endtime="20201112 10:15:54.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.545" level="INFO">${RESULT} = [{'time': 0.039907833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011915199999999737, 'source_diff': 0.00011915199999999737}, {'time': 0.040051069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:54.536" endtime="20201112 10:15:54.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:54.547" endtime="20201112 10:15:54.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.585" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.583" endtime="20201112 10:15:54.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.590" level="INFO">VALUE: [0.00011915199999999737, 0.00011959699999999907, 0.00011965200000000481, 0.00011951400000000112, 0.00011890300000000353, 0.00011945800000000284, 0.00011891699999999616, 0.00011920899999999512, 0.00011947200000000241, 0.00011900000000000105, 0.00011970799999999615, 0.00011908300000000593, 0.00011929100000000054, 0.00011890200000000406, 0.00011895800000000234, 0.0001197500000000018, 0.00011895899999999487, 0.00011884800000000473, 0.00011926400000000087, 0.0001193750000000049, 0.00011961099999999864, 0.00011913899999999727, 0.0001189029999999966, 0.00011961199999999811, 0.00011890300000000353, 0.00011922300000000163, 0.00011961099999999864, 0.00011943100000000317, 0.00011962500000000514, 0.00011884700000000525, 0.00011941599999999719, 0.00011973600000000223, 0.00011955500000000036, 0.0001188750000000044, 0.00011961099999999864, 0.00011879199999999951, 0.00011973600000000223, 0.00011979200000000051, 0.00011880599999999908, 0.00011904100000000029, 0.00011944400000000327, 0.00011905499999999986, 0.0001197500000000018, 0.00011898599999999454, 0.00011917999999999651, 0.00011906899999999943, 0.00011894400000000277, 0.0001195829999999995, 0.000119082999999999, 0.00011956899999999993]</msg>
<status status="PASS" starttime="20201112 10:15:54.587" endtime="20201112 10:15:54.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.576" endtime="20201112 10:15:54.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.599" endtime="20201112 10:15:54.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.607" endtime="20201112 10:15:54.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.603" endtime="20201112 10:15:54.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.595" endtime="20201112 10:15:54.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.089" endtime="20201112 10:15:54.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.088" endtime="20201112 10:15:54.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.713" endtime="20201112 10:15:54.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.644" endtime="20201112 10:15:54.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.640" endtime="20201112 10:15:54.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.637" endtime="20201112 10:15:54.668"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:59.579" endtime="20201112 10:15:54.669" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.686" endtime="20201112 10:15:54.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.683" endtime="20201112 10:15:54.710"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.745" endtime="20201112 10:15:54.767"></status>
</kw>
<msg timestamp="20201112 10:15:54.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.740" endtime="20201112 10:15:54.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.771" endtime="20201112 10:15:54.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:54.777" endtime="20201112 10:15:54.782"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:54.732" endtime="20201112 10:15:54.784"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:54.726" endtime="20201112 10:15:54.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.724" endtime="20201112 10:15:54.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:54.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:54.792" endtime="20201112 10:15:54.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.788" endtime="20201112 10:15:54.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.722" endtime="20201112 10:15:54.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.720" endtime="20201112 10:15:54.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.797" endtime="20201112 10:15:54.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.716" endtime="20201112 10:15:54.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.712" endtime="20201112 10:15:54.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.680" endtime="20201112 10:15:54.804"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.830" endtime="20201112 10:15:54.845"></status>
</kw>
<msg timestamp="20201112 10:15:54.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.827" endtime="20201112 10:15:54.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.848" endtime="20201112 10:15:54.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.854" endtime="20201112 10:15:54.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.819" endtime="20201112 10:15:54.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.813" endtime="20201112 10:15:54.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.877" endtime="20201112 10:15:55.225"></status>
</kw>
<msg timestamp="20201112 10:15:55.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13507675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135097236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:54.874" endtime="20201112 10:15:55.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13507675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135097236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:55.235" endtime="20201112 10:15:55.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.253" endtime="20201112 10:15:55.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.867" endtime="20201112 10:15:55.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.862" endtime="20201112 10:15:55.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.271" level="INFO">${RESULT} = [{'time': 0.135097236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0486000000013993e-05, 'source_diff': 2.0486000000013993e-05}, {'time': 0.13512625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:15:55.262" endtime="20201112 10:15:55.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.302" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:55.273" endtime="20201112 10:15:55.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.313" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.311" endtime="20201112 10:15:55.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.318" level="INFO">VALUE: [2.0486000000013993e-05, 2.065300000000936e-05, 2.097199999998023e-05, 2.113900000000335e-05, 2.1167000000016367e-05, 2.1151999999996507e-05, 2.062499999999634e-05, 2.030499999999824e-05, 2.0764000000006444e-05, 2.0639000000016727e-05, 2.0695000000015007e-05, 2.0237000000006278e-05, 2.081900000000525e-05, 2.0805999999984337e-05, 2.0833999999997355e-05, 2.113900000000335e-05, 2.0249999999999435e-05, 2.061100000000371e-05, 2.0638999999988972e-05, 2.0458000000000975e-05, 2.097199999998023e-05, 2.0820000000004724e-05, 2.115299999999598e-05, 2.030499999999824e-05, 2.0820000000004724e-05, 2.034700000000389e-05, 2.0638000000017254e-05, 2.080500000001262e-05, 2.0513999999999255e-05, 2.0472000000021362e-05, 2.062499999999634e-05, 2.0500000000006624e-05, 2.115299999999598e-05, 2.0415999999995327e-05, 2.10969999999977e-05, 2.0638999999988972e-05, 2.1180000000009525e-05, 2.062499999999634e-05, 2.0957999999987598e-05, 2.0972999999979702e-05, 2.0820000000004724e-05, 2.065300000000936e-05, 2.1165999999989138e-05, 2.115299999999598e-05, 2.102799999997851e-05, 2.0542000000012273e-05, 2.0318999999990872e-05, 2.0305999999997715e-05, 2.0804999999984863e-05, 2.098700000000009e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.315" endtime="20201112 10:15:55.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.304" endtime="20201112 10:15:55.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.327" endtime="20201112 10:15:55.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.335" endtime="20201112 10:15:55.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.331" endtime="20201112 10:15:55.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.323" endtime="20201112 10:15:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.809" endtime="20201112 10:15:55.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.808" endtime="20201112 10:15:55.361"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.384" endtime="20201112 10:15:55.398"></status>
</kw>
<msg timestamp="20201112 10:15:55.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.381" endtime="20201112 10:15:55.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.402" endtime="20201112 10:15:55.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.408" endtime="20201112 10:15:55.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.373" endtime="20201112 10:15:55.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.368" endtime="20201112 10:15:55.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.431" endtime="20201112 10:15:55.766"></status>
</kw>
<msg timestamp="20201112 10:15:55.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040271028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0402915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:55.427" endtime="20201112 10:15:55.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040271028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0402915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:55.775" endtime="20201112 10:15:55.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.794" endtime="20201112 10:15:55.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.420" endtime="20201112 10:15:55.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.416" endtime="20201112 10:15:55.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.811" level="INFO">${RESULT} = [{'time': 0.0402915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0472000000000545e-05, 'source_diff': 2.0472000000000545e-05}, {'time': 0.040320681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:55.802" endtime="20201112 10:15:55.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:55.813" endtime="20201112 10:15:55.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.854" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.851" endtime="20201112 10:15:55.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.859" level="INFO">VALUE: [2.0472000000000545e-05, 2.1319999999998285e-05, 2.0791999999998645e-05, 2.115300000000292e-05, 2.036099999999652e-05, 2.031900000000475e-05, 2.0235999999999865e-05, 2.0291999999998145e-05, 2.0971999999994106e-05, 2.030499999999824e-05, 2.0333999999996855e-05, 2.031900000000475e-05, 2.030499999999824e-05, 2.030500000000518e-05, 2.0986000000000615e-05, 2.0986000000000615e-05, 2.0833999999997355e-05, 2.093100000000181e-05, 2.112499999999684e-05, 2.081899999999831e-05, 2.115300000000292e-05, 2.1166000000003016e-05, 2.0305999999997715e-05, 2.0612000000003183e-05, 2.0652000000002946e-05, 2.065299999999548e-05, 2.0472000000000545e-05, 2.066700000000199e-05, 2.1291999999999145e-05, 2.0597999999996675e-05, 2.029099999999867e-05, 2.0971999999994106e-05, 2.118100000000206e-05, 2.0972000000001045e-05, 2.0458000000000975e-05, 2.0637999999996437e-05, 2.0320000000004224e-05, 2.0319999999997285e-05, 2.0986000000000615e-05, 2.0320000000004224e-05, 2.1319999999998285e-05, 2.1041999999998895e-05, 2.1166000000003016e-05, 2.0458000000000975e-05, 2.0430000000001836e-05, 2.068100000000156e-05, 2.0805999999998215e-05, 2.079099999999917e-05, 2.087500000000353e-05, 2.0291999999998145e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.856" endtime="20201112 10:15:55.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.845" endtime="20201112 10:15:55.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.868" endtime="20201112 10:15:55.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.876" endtime="20201112 10:15:55.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.872" endtime="20201112 10:15:55.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.864" endtime="20201112 10:15:55.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.364" endtime="20201112 10:15:55.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.362" endtime="20201112 10:15:55.902"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.924" endtime="20201112 10:15:55.939"></status>
</kw>
<msg timestamp="20201112 10:15:55.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.921" endtime="20201112 10:15:55.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.943" endtime="20201112 10:15:55.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.949" endtime="20201112 10:15:55.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.914" endtime="20201112 10:15:55.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.909" endtime="20201112 10:15:55.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.972" endtime="20201112 10:15:56.306"></status>
</kw>
<msg timestamp="20201112 10:15:56.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039740222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039760708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.969" endtime="20201112 10:15:56.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039740222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039760708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.316" endtime="20201112 10:15:56.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.335" endtime="20201112 10:15:56.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.962" endtime="20201112 10:15:56.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.957" endtime="20201112 10:15:56.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.352" level="INFO">${RESULT} = [{'time': 0.039760708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.039787722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:56.343" endtime="20201112 10:15:56.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:56.354" endtime="20201112 10:15:56.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.397" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.394" endtime="20201112 10:15:56.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.402" level="INFO">VALUE: [2.0486000000000115e-05, 2.030499999999824e-05, 2.0556000000004904e-05, 2.0319999999997285e-05, 2.1165999999996077e-05, 2.080499999999874e-05, 2.134699999999795e-05, 2.0666000000002516e-05, 2.030499999999824e-05, 2.112500000000378e-05, 2.0401999999995757e-05, 2.0986000000000615e-05, 2.113899999999641e-05, 2.066700000000199e-05, 2.098700000000009e-05, 2.0486000000000115e-05, 2.030499999999824e-05, 2.0457999999994037e-05, 2.0319999999997285e-05, 2.037499999999609e-05, 2.0972000000001045e-05, 2.0791999999998645e-05, 2.0666000000002516e-05, 2.1291999999999145e-05, 2.1166000000003016e-05, 2.065300000000242e-05, 2.113900000000335e-05, 2.063899999999591e-05, 2.0319999999997285e-05, 2.0791999999998645e-05, 2.065300000000242e-05, 2.066700000000199e-05, 2.113899999999641e-05, 2.113899999999641e-05, 2.080499999999874e-05, 2.0722000000000795e-05, 2.0986000000000615e-05, 2.0486000000000115e-05, 2.113900000000335e-05, 2.097300000000052e-05, 2.065300000000242e-05, 2.0972000000001045e-05, 2.115299999999598e-05, 2.0486000000000115e-05, 2.095900000000095e-05, 2.087500000000353e-05, 2.113900000000335e-05, 2.062499999999634e-05, 2.086099999999702e-05, 2.0958000000001475e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.399" endtime="20201112 10:15:56.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.384" endtime="20201112 10:15:56.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.411" endtime="20201112 10:15:56.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.419" endtime="20201112 10:15:56.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.415" endtime="20201112 10:15:56.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.407" endtime="20201112 10:15:56.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.904" endtime="20201112 10:15:56.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.903" endtime="20201112 10:15:56.445"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.468" endtime="20201112 10:15:56.482"></status>
</kw>
<msg timestamp="20201112 10:15:56.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.464" endtime="20201112 10:15:56.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.486" endtime="20201112 10:15:56.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.492" endtime="20201112 10:15:56.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.457" endtime="20201112 10:15:56.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.452" endtime="20201112 10:15:56.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.515" endtime="20201112 10:15:56.849"></status>
</kw>
<msg timestamp="20201112 10:15:56.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039842917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039863569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.511" endtime="20201112 10:15:56.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039842917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039863569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.859" endtime="20201112 10:15:56.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.878" endtime="20201112 10:15:56.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.504" endtime="20201112 10:15:56.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.500" endtime="20201112 10:15:56.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.895" level="INFO">${RESULT} = [{'time': 0.039863569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0652000000002946e-05, 'source_diff': 2.0652000000002946e-05}, {'time': 0.039889556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:56.886" endtime="20201112 10:15:56.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:56.897" endtime="20201112 10:15:56.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.936" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.934" endtime="20201112 10:15:56.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.941" level="INFO">VALUE: [2.0652000000002946e-05, 2.0305999999997715e-05, 2.065300000000242e-05, 2.0320000000004224e-05, 2.0499999999999685e-05, 2.113899999999641e-05, 2.0805999999998215e-05, 2.0819999999997785e-05, 2.030500000000518e-05, 2.0319999999997285e-05, 2.112500000000378e-05, 2.0651999999996007e-05, 2.0486000000000115e-05, 2.0986000000000615e-05, 2.0820000000004724e-05, 2.0499999999999685e-05, 2.0763999999999505e-05, 2.113900000000335e-05, 2.031899999999781e-05, 2.1013999999999755e-05, 2.0319999999997285e-05, 2.0944000000001906e-05, 2.0972000000001045e-05, 2.113900000000335e-05, 2.113900000000335e-05, 2.097300000000052e-05, 2.098700000000009e-05, 2.0305999999997715e-05, 2.083299999999788e-05, 2.098700000000009e-05, 2.080499999999874e-05, 2.136099999999752e-05, 2.1334000000004794e-05, 2.062499999999634e-05, 2.0986000000000615e-05, 2.0972000000001045e-05, 2.081899999999831e-05, 2.0985999999993676e-05, 2.0472000000000545e-05, 2.080499999999874e-05, 2.0320000000004224e-05, 2.0986000000000615e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.0806000000005154e-05, 2.0958000000001475e-05, 2.0986000000000615e-05, 2.0306000000004654e-05, 2.084699999999745e-05, 2.113899999999641e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.938" endtime="20201112 10:15:56.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.927" endtime="20201112 10:15:56.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.951" endtime="20201112 10:15:56.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.960" endtime="20201112 10:15:56.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.956" endtime="20201112 10:15:56.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.946" endtime="20201112 10:15:56.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.447" endtime="20201112 10:15:56.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.446" endtime="20201112 10:15:56.986"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.009" endtime="20201112 10:15:57.023"></status>
</kw>
<msg timestamp="20201112 10:15:57.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.005" endtime="20201112 10:15:57.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.027" endtime="20201112 10:15:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.033" endtime="20201112 10:15:57.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.998" endtime="20201112 10:15:57.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.992" endtime="20201112 10:15:57.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.056" endtime="20201112 10:15:57.391"></status>
</kw>
<msg timestamp="20201112 10:15:57.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.052" endtime="20201112 10:15:57.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040182736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040203389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.400" endtime="20201112 10:15:57.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.419" endtime="20201112 10:15:57.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.045" endtime="20201112 10:15:57.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.041" endtime="20201112 10:15:57.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.436" level="INFO">${RESULT} = [{'time': 0.040203389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.065300000000242e-05, 'source_diff': 2.065300000000242e-05}, {'time': 0.040229472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:57.427" endtime="20201112 10:15:57.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:57.466" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:57.438" endtime="20201112 10:15:57.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.477" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:15:57.475" endtime="20201112 10:15:57.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.482" level="INFO">VALUE: [2.065300000000242e-05, 2.030500000000518e-05, 2.063899999999591e-05, 2.0527999999998825e-05, 2.036100000000346e-05, 2.047300000000002e-05, 2.062500000000328e-05, 2.1000000000000185e-05, 2.113900000000335e-05, 2.031899999999781e-05, 2.0749999999999935e-05, 2.115299999999598e-05, 2.0486000000000115e-05, 2.116700000000249e-05, 2.0819999999997785e-05, 2.0486000000000115e-05, 2.1013999999999755e-05, 2.0319999999997285e-05, 2.0792000000005584e-05, 2.0736000000000365e-05, 2.033300000000432e-05, 2.0806000000005154e-05, 2.065299999999548e-05, 2.113899999999641e-05, 2.031900000000475e-05, 2.115300000000292e-05, 2.083300000000482e-05, 2.080499999999874e-05, 2.115300000000292e-05, 2.0819999999997785e-05, 2.0458000000000975e-05, 2.030499999999824e-05, 2.033300000000432e-05, 2.090300000000267e-05, 2.115300000000292e-05, 2.0277999999998575e-05, 2.0986000000000615e-05, 2.083300000000482e-05, 2.065300000000242e-05, 2.1000000000000185e-05, 2.0986000000000615e-05, 2.065300000000242e-05, 2.045900000000045e-05, 2.0972000000001045e-05, 2.1152000000003446e-05, 2.030499999999824e-05, 2.1291999999999145e-05, 2.0805999999998215e-05, 2.080499999999874e-05, 2.0486000000000115e-05]</msg>
<status status="PASS" starttime="20201112 10:15:57.479" endtime="20201112 10:15:57.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.468" endtime="20201112 10:15:57.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.492" endtime="20201112 10:15:57.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.500" endtime="20201112 10:15:57.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.495" endtime="20201112 10:15:57.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.487" endtime="20201112 10:15:57.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.988" endtime="20201112 10:15:57.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.987" endtime="20201112 10:15:57.526"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.549" endtime="20201112 10:15:57.564"></status>
</kw>
<msg timestamp="20201112 10:15:57.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.546" endtime="20201112 10:15:57.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.567" endtime="20201112 10:15:57.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.574" endtime="20201112 10:15:57.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.539" endtime="20201112 10:15:57.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.532" endtime="20201112 10:15:57.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.597" endtime="20201112 10:15:57.933"></status>
</kw>
<msg timestamp="20201112 10:15:57.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041252597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041273389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.593" endtime="20201112 10:15:57.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041252597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041273389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.942" endtime="20201112 10:15:57.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.961" endtime="20201112 10:15:57.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.586" endtime="20201112 10:15:57.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.582" endtime="20201112 10:15:57.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.978" level="INFO">${RESULT} = [{'time': 0.041273389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0791999999998645e-05, 'source_diff': 2.0791999999998645e-05}, {'time': 0.041300444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:57.969" endtime="20201112 10:15:57.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:57.980" endtime="20201112 10:15:58.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.019" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.017" endtime="20201112 10:15:58.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.024" level="INFO">VALUE: [2.0791999999998645e-05, 2.0637999999996437e-05, 2.0820000000004724e-05, 2.031899999999781e-05, 2.0320000000004224e-05, 2.0833999999997355e-05, 2.1000000000000185e-05, 2.113900000000335e-05, 2.113900000000335e-05, 2.0986000000000615e-05, 2.1027999999999325e-05, 2.079099999999917e-05, 2.1000000000000185e-05, 2.112500000000378e-05, 2.0820000000004724e-05, 2.065300000000242e-05, 2.0820000000004724e-05, 2.0499999999999685e-05, 2.0472000000000545e-05, 2.0972000000001045e-05, 2.1166000000003016e-05, 2.1165999999996077e-05, 2.0958000000001475e-05, 2.080499999999874e-05, 2.0652000000002946e-05, 2.083299999999788e-05, 2.0986000000000615e-05, 2.066699999999505e-05, 2.0305999999997715e-05, 2.112499999999684e-05, 2.048699999999959e-05, 2.115300000000292e-05, 2.0472000000000545e-05, 2.0666000000002516e-05, 2.058299999999763e-05, 2.0986000000000615e-05, 2.065299999999548e-05, 2.0986000000000615e-05, 2.104099999999942e-05, 2.031899999999781e-05, 2.0820000000004724e-05, 2.031899999999781e-05, 2.079099999999917e-05, 2.1083999999997605e-05, 2.065300000000242e-05, 2.083300000000482e-05, 2.0986000000000615e-05, 2.0736000000000365e-05, 2.0986000000000615e-05, 2.0986000000000615e-05]</msg>
<status status="PASS" starttime="20201112 10:15:58.021" endtime="20201112 10:15:58.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.010" endtime="20201112 10:15:58.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.034" endtime="20201112 10:15:58.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.042" endtime="20201112 10:15:58.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.038" endtime="20201112 10:15:58.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.029" endtime="20201112 10:15:58.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.528" endtime="20201112 10:15:58.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.527" endtime="20201112 10:15:58.068"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.090" endtime="20201112 10:15:58.106"></status>
</kw>
<msg timestamp="20201112 10:15:58.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.087" endtime="20201112 10:15:58.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.110" endtime="20201112 10:15:58.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.116" endtime="20201112 10:15:58.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.080" endtime="20201112 10:15:58.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.074" endtime="20201112 10:15:58.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.139" endtime="20201112 10:15:58.473"></status>
</kw>
<msg timestamp="20201112 10:15:58.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.135" endtime="20201112 10:15:58.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.482" endtime="20201112 10:15:58.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.501" endtime="20201112 10:15:58.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.128" endtime="20201112 10:15:58.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.124" endtime="20201112 10:15:58.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.518" level="INFO">${RESULT} = [{'time': 0.041139125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0472000000000545e-05, 'source_diff': 2.0472000000000545e-05}, {'time': 0.041168194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:58.509" endtime="20201112 10:15:58.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:58.520" endtime="20201112 10:15:58.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.559" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.557" endtime="20201112 10:15:58.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.564" level="INFO">VALUE: [2.0472000000000545e-05, 2.0429999999994897e-05, 2.0887999999996687e-05, 2.081899999999831e-05, 2.0472000000000545e-05, 2.062500000000328e-05, 2.115299999999598e-05, 2.0986000000000615e-05, 2.065300000000242e-05, 2.1236000000000865e-05, 2.0985999999993676e-05, 2.1166000000003016e-05, 2.0986000000000615e-05, 2.097300000000052e-05, 2.0806000000005154e-05, 2.098700000000009e-05, 2.113899999999641e-05, 2.033300000000432e-05, 2.0806000000005154e-05, 2.065300000000242e-05, 2.0791999999998645e-05, 2.115300000000292e-05, 2.0472000000000545e-05, 2.0305999999997715e-05, 2.031899999999781e-05, 2.062500000000328e-05, 2.087499999999659e-05, 2.0805999999998215e-05, 2.1152000000003446e-05, 2.063900000000285e-05, 2.081899999999831e-05, 2.030499999999824e-05, 2.0806000000005154e-05, 2.1221999999994356e-05, 2.0291999999998145e-05, 2.0820000000004724e-05, 2.062500000000328e-05, 2.063900000000285e-05, 2.116699999999555e-05, 2.065300000000242e-05, 2.0306000000004654e-05, 2.0652000000002946e-05, 2.0472000000000545e-05, 2.052699999999935e-05, 2.0486000000000115e-05, 2.031900000000475e-05, 2.0958000000001475e-05, 2.113899999999641e-05, 2.0277999999998575e-05, 2.0292000000005084e-05]</msg>
<status status="PASS" starttime="20201112 10:15:58.561" endtime="20201112 10:15:58.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.550" endtime="20201112 10:15:58.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.578" endtime="20201112 10:15:58.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.586" endtime="20201112 10:15:58.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.582" endtime="20201112 10:15:58.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.574" endtime="20201112 10:15:58.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.070" endtime="20201112 10:15:58.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.069" endtime="20201112 10:15:58.612"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.634" endtime="20201112 10:15:58.649"></status>
</kw>
<msg timestamp="20201112 10:15:58.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.631" endtime="20201112 10:15:58.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.652" endtime="20201112 10:15:58.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.659" endtime="20201112 10:15:58.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.624" endtime="20201112 10:15:58.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.618" endtime="20201112 10:15:58.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.685" endtime="20201112 10:15:59.020"></status>
</kw>
<msg timestamp="20201112 10:15:59.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.681" endtime="20201112 10:15:59.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.030" endtime="20201112 10:15:59.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.049" endtime="20201112 10:15:59.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.671" endtime="20201112 10:15:59.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.666" endtime="20201112 10:15:59.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.066" level="INFO">${RESULT} = [{'time': 0.039554167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.795900000000101e-05, 'source_diff': 2.795900000000101e-05}, {'time': 0.039591167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:59.057" endtime="20201112 10:15:59.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.096" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:59.068" endtime="20201112 10:15:59.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.107" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.105" endtime="20201112 10:15:59.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.112" level="INFO">VALUE: [2.795900000000101e-05, 2.7777999999999137e-05, 2.8291999999999207e-05, 2.7624999999996402e-05, 2.7790999999999233e-05, 2.7776999999999663e-05, 2.7777999999999137e-05, 2.7291999999998207e-05, 2.7596999999997263e-05, 2.8250000000000497e-05, 2.8110999999997333e-05, 2.7972000000001107e-05, 2.8138999999996472e-05, 2.7611999999996306e-05, 2.8112000000003745e-05, 2.762500000000334e-05, 2.745900000000051e-05, 2.8124999999996902e-05, 2.794500000000144e-05, 2.8096999999997763e-05, 2.762500000000334e-05, 2.75970000000042e-05, 2.8250000000000497e-05, 2.7790999999999233e-05, 2.7986000000000677e-05, 2.7958000000001537e-05, 2.7458000000001037e-05, 2.7277999999998637e-05, 2.7458000000001037e-05, 2.812500000000384e-05, 2.8124999999996902e-05, 2.7972000000001107e-05, 2.7318999999997873e-05, 2.7722000000000857e-05, 2.8290999999999733e-05, 2.816700000000255e-05, 2.7792000000005646e-05, 2.745900000000051e-05, 2.74170000000018e-05, 2.7277999999998637e-05, 2.7444000000001467e-05, 2.8110999999997333e-05, 2.762500000000334e-05, 2.7833999999997416e-05, 2.744399999999453e-05, 2.8070000000005035e-05, 2.762500000000334e-05, 2.793100000000187e-05, 2.8152999999996042e-05, 2.745900000000051e-05]</msg>
<status status="PASS" starttime="20201112 10:15:59.109" endtime="20201112 10:15:59.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.098" endtime="20201112 10:15:59.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.122" endtime="20201112 10:15:59.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.130" endtime="20201112 10:15:59.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.125" endtime="20201112 10:15:59.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.117" endtime="20201112 10:15:59.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.614" endtime="20201112 10:15:59.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.613" endtime="20201112 10:15:59.156"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.178" endtime="20201112 10:15:59.193"></status>
</kw>
<msg timestamp="20201112 10:15:59.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.174" endtime="20201112 10:15:59.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.196" endtime="20201112 10:15:59.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.202" endtime="20201112 10:15:59.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.168" endtime="20201112 10:15:59.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.162" endtime="20201112 10:15:59.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.225" endtime="20201112 10:15:59.562"></status>
</kw>
<msg timestamp="20201112 10:15:59.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.222" endtime="20201112 10:15:59.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.572" endtime="20201112 10:15:59.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.590" endtime="20201112 10:15:59.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.215" endtime="20201112 10:15:59.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.210" endtime="20201112 10:15:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.607" level="INFO">${RESULT} = [{'time': 0.039834708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277000000000163e-05, 'source_diff': 2.8277000000000163e-05}, {'time': 0.039867722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:59.598" endtime="20201112 10:15:59.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:15:59.609" endtime="20201112 10:15:59.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.648" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.646" endtime="20201112 10:15:59.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.654" level="INFO">VALUE: [2.8277000000000163e-05, 2.7972000000001107e-05, 2.768100000000162e-05, 2.8082999999998193e-05, 2.7596999999997263e-05, 2.7596999999997263e-05, 2.7304999999998303e-05, 2.7444000000001467e-05, 2.7290999999998733e-05, 2.811100000000427e-05, 2.8124999999996902e-05, 2.765300000000248e-05, 2.8096999999997763e-05, 2.80970000000047e-05, 2.7596999999997263e-05, 2.745900000000051e-05, 2.7958000000001537e-05, 2.7416000000002327e-05, 2.7291999999998207e-05, 2.7583999999997166e-05, 2.744500000000094e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.793100000000187e-05, 2.7778000000006076e-05, 2.7763999999999567e-05, 2.7291999999998207e-05, 2.7958000000001537e-05, 2.7958000000001537e-05, 2.794500000000144e-05, 2.7277999999998637e-05, 2.7430000000001897e-05, 2.8152999999996042e-05, 2.8124999999996902e-05, 2.794500000000144e-05, 2.7610999999996833e-05, 2.7290999999998733e-05, 2.7958000000001537e-05, 2.7610999999996833e-05, 2.7791999999998707e-05, 2.8083999999997666e-05, 2.7610999999996833e-05, 2.812500000000384e-05, 2.7778000000006076e-05, 2.8290999999999733e-05, 2.7276999999999163e-05, 2.8250000000000497e-05, 2.7472999999993142e-05, 2.8291999999999207e-05, 2.794500000000144e-05]</msg>
<status status="PASS" starttime="20201112 10:15:59.650" endtime="20201112 10:15:59.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.639" endtime="20201112 10:15:59.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.663" endtime="20201112 10:15:59.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.671" endtime="20201112 10:15:59.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.667" endtime="20201112 10:15:59.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.658" endtime="20201112 10:15:59.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.158" endtime="20201112 10:15:59.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.156" endtime="20201112 10:15:59.697"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.719" endtime="20201112 10:15:59.735"></status>
</kw>
<msg timestamp="20201112 10:15:59.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.716" endtime="20201112 10:15:59.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.738" endtime="20201112 10:15:59.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.744" endtime="20201112 10:15:59.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.709" endtime="20201112 10:15:59.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.703" endtime="20201112 10:15:59.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.767" endtime="20201112 10:16:00.104"></status>
</kw>
<msg timestamp="20201112 10:16:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040242528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.764" endtime="20201112 10:16:00.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040242528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.114" endtime="20201112 10:16:00.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.133" endtime="20201112 10:16:00.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.757" endtime="20201112 10:16:00.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.752" endtime="20201112 10:16:00.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.150" level="INFO">${RESULT} = [{'time': 0.040269833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7304999999998303e-05, 'source_diff': 2.7304999999998303e-05}, {'time': 0.040306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:00.141" endtime="20201112 10:16:00.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:00.152" endtime="20201112 10:16:00.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.191" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.189" endtime="20201112 10:16:00.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.196" level="INFO">VALUE: [2.7304999999998303e-05, 2.812500000000384e-05, 2.811100000000427e-05, 2.794399999999503e-05, 2.763900000000291e-05, 2.762500000000334e-05, 2.7764000000006506e-05, 2.8110999999997333e-05, 2.7972000000001107e-05, 2.811100000000427e-05, 2.7596999999997263e-05, 2.813900000000341e-05, 2.7791999999998707e-05, 2.74170000000018e-05, 2.8110999999997333e-05, 2.763900000000291e-05, 2.7778000000006076e-05, 2.792999999999546e-05, 2.7763999999999567e-05, 2.769500000000119e-05, 2.745900000000051e-05, 2.761100000000377e-05, 2.7624999999996402e-05, 2.8124999999996902e-05, 2.792999999999546e-05, 2.7944000000001967e-05, 2.7624999999996402e-05, 2.8124999999996902e-05, 2.761100000000377e-05, 2.8110999999997333e-05, 2.7806000000005215e-05, 2.7971999999994168e-05, 2.8124999999996902e-05, 2.7610999999996833e-05, 2.8042000000005896e-05, 2.8110999999997333e-05, 2.7277999999998637e-05, 2.8110999999997333e-05, 2.7458000000001037e-05, 2.7472000000000607e-05, 2.7763999999999567e-05, 2.7416000000002327e-05, 2.8112000000003745e-05, 2.815300000000298e-05, 2.8305999999998777e-05, 2.7610999999996833e-05, 2.761100000000377e-05, 2.7458000000001037e-05, 2.7805999999998277e-05, 2.82370000000004e-05]</msg>
<status status="PASS" starttime="20201112 10:16:00.193" endtime="20201112 10:16:00.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.182" endtime="20201112 10:16:00.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.206" endtime="20201112 10:16:00.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.214" endtime="20201112 10:16:00.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.209" endtime="20201112 10:16:00.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.201" endtime="20201112 10:16:00.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.699" endtime="20201112 10:16:00.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.698" endtime="20201112 10:16:00.239"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.262" endtime="20201112 10:16:00.277"></status>
</kw>
<msg timestamp="20201112 10:16:00.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.258" endtime="20201112 10:16:00.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.280" endtime="20201112 10:16:00.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.286" endtime="20201112 10:16:00.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.251" endtime="20201112 10:16:00.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.246" endtime="20201112 10:16:00.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.309" endtime="20201112 10:16:00.643"></status>
</kw>
<msg timestamp="20201112 10:16:00.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039796611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.306" endtime="20201112 10:16:00.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039796611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.653" endtime="20201112 10:16:00.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.671" endtime="20201112 10:16:00.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.299" endtime="20201112 10:16:00.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.294" endtime="20201112 10:16:00.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.690" level="INFO">${RESULT} = [{'time': 0.039796611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.74170000000018e-05, 'source_diff': 2.74170000000018e-05}, {'time': 0.039829625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:16:00.681" endtime="20201112 10:16:00.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.720" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:00.692" endtime="20201112 10:16:00.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.730" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.728" endtime="20201112 10:16:00.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.736" level="INFO">VALUE: [2.74170000000018e-05, 2.7763999999999567e-05, 2.7598000000003675e-05, 2.8027999999999387e-05, 2.7958000000001537e-05, 2.811100000000427e-05, 2.8290999999999733e-05, 2.7930000000002397e-05, 2.8277999999999637e-05, 2.7596999999997263e-05, 2.762500000000334e-05, 2.7777999999999137e-05, 2.762500000000334e-05, 2.7612000000003245e-05, 2.7554999999998553e-05, 2.8110999999997333e-05, 2.8290999999999733e-05, 2.8124999999996902e-05, 2.7610999999996833e-05, 2.811100000000427e-05, 2.745900000000051e-05, 2.7513999999999317e-05, 2.794500000000144e-05, 2.813900000000341e-05, 2.8096999999997763e-05, 2.7276999999999163e-05, 2.744500000000094e-05, 2.7568999999998123e-05, 2.8110999999997333e-05, 2.7610999999996833e-05, 2.812500000000384e-05, 2.7666999999995112e-05, 2.8124999999996902e-05, 2.761100000000377e-05, 2.7652999999995542e-05, 2.762500000000334e-05, 2.7749999999999997e-05, 2.7638999999995972e-05, 2.761100000000377e-05, 2.8098000000004175e-05, 2.7763999999999567e-05, 2.761100000000377e-05, 2.744500000000094e-05, 2.8096999999997763e-05, 2.793100000000187e-05, 2.736100000000352e-05, 2.744399999999453e-05, 2.74170000000018e-05, 2.811100000000427e-05, 2.7777999999999137e-05]</msg>
<status status="PASS" starttime="20201112 10:16:00.733" endtime="20201112 10:16:00.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.721" endtime="20201112 10:16:00.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.745" endtime="20201112 10:16:00.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.753" endtime="20201112 10:16:00.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.749" endtime="20201112 10:16:00.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.741" endtime="20201112 10:16:00.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.242" endtime="20201112 10:16:00.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.240" endtime="20201112 10:16:00.779"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.801" endtime="20201112 10:16:00.816"></status>
</kw>
<msg timestamp="20201112 10:16:00.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.798" endtime="20201112 10:16:00.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.820" endtime="20201112 10:16:00.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.826" endtime="20201112 10:16:00.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.791" endtime="20201112 10:16:00.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.785" endtime="20201112 10:16:00.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.849" endtime="20201112 10:16:01.185"></status>
</kw>
<msg timestamp="20201112 10:16:01.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039731556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.845" endtime="20201112 10:16:01.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039731556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.194" endtime="20201112 10:16:01.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.213" endtime="20201112 10:16:01.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.838" endtime="20201112 10:16:01.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.834" endtime="20201112 10:16:01.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.234" level="INFO">${RESULT} = [{'time': 0.039731556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.765300000000248e-05, 'source_diff': 2.765300000000248e-05}, {'time': 0.039767653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:01.225" endtime="20201112 10:16:01.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:01.236" endtime="20201112 10:16:01.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.275" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.272" endtime="20201112 10:16:01.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.280" level="INFO">VALUE: [2.765300000000248e-05, 2.795900000000101e-05, 2.812500000000384e-05, 2.7791999999998707e-05, 2.742999999999496e-05, 2.7958000000001537e-05, 2.7777999999999137e-05, 2.7263999999999067e-05, 2.743100000000137e-05, 2.761100000000377e-05, 2.794500000000144e-05, 2.7930999999994932e-05, 2.7457999999994098e-05, 2.7777999999999137e-05, 2.7291999999998207e-05, 2.792999999999546e-05, 2.8124999999996902e-05, 2.74170000000018e-05, 2.8277999999999637e-05, 2.7944000000001967e-05, 2.7777999999999137e-05, 2.7472000000000607e-05, 2.7972000000001107e-05, 2.7472000000000607e-05, 2.8124999999996902e-05, 2.8110999999997333e-05, 2.744399999999453e-05, 2.7778000000006076e-05, 2.7624999999996402e-05, 2.761100000000377e-05, 2.7791999999998707e-05, 2.8264000000000067e-05, 2.8110999999997333e-05, 2.7986000000000677e-05, 2.815300000000298e-05, 2.8112000000003745e-05, 2.7304999999998303e-05, 2.7610999999996833e-05, 2.7777999999999137e-05, 2.7944000000001967e-05, 2.793100000000187e-05, 2.7611999999996306e-05, 2.7277999999998637e-05, 2.7457999999994098e-05, 2.762500000000334e-05, 2.79170000000023e-05, 2.7499999999999747e-05, 2.766599999999564e-05, 2.7985999999993738e-05, 2.745900000000051e-05]</msg>
<status status="PASS" starttime="20201112 10:16:01.277" endtime="20201112 10:16:01.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.266" endtime="20201112 10:16:01.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.289" endtime="20201112 10:16:01.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.297" endtime="20201112 10:16:01.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.293" endtime="20201112 10:16:01.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.285" endtime="20201112 10:16:01.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.781" endtime="20201112 10:16:01.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.780" endtime="20201112 10:16:01.323"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.345" endtime="20201112 10:16:01.361"></status>
</kw>
<msg timestamp="20201112 10:16:01.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.342" endtime="20201112 10:16:01.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.364" endtime="20201112 10:16:01.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.370" endtime="20201112 10:16:01.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.335" endtime="20201112 10:16:01.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.329" endtime="20201112 10:16:01.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.393" endtime="20201112 10:16:01.740"></status>
</kw>
<msg timestamp="20201112 10:16:01.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039736194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.390" endtime="20201112 10:16:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039736194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.749" endtime="20201112 10:16:01.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.769" endtime="20201112 10:16:01.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.383" endtime="20201112 10:16:01.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.378" endtime="20201112 10:16:01.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.787" level="INFO">${RESULT} = [{'time': 0.039736194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.812500000000384e-05, 'source_diff': 2.812500000000384e-05}, {'time': 0.039775306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:01.778" endtime="20201112 10:16:01.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:01.789" endtime="20201112 10:16:01.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.828" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.826" endtime="20201112 10:16:01.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.834" level="INFO">VALUE: [2.812500000000384e-05, 2.8112000000003745e-05, 2.787500000000359e-05, 2.8264000000000067e-05, 2.7292000000005145e-05, 2.7944999999994502e-05, 2.813900000000341e-05, 2.7777999999999137e-05, 2.743100000000137e-05, 2.8166999999995612e-05, 2.8124999999996902e-05, 2.7791999999998707e-05, 2.7610999999996833e-05, 2.744500000000094e-05, 2.7276999999999163e-05, 2.8291999999999207e-05, 2.812500000000384e-05, 2.8110999999997333e-05, 2.7276999999999163e-05, 2.7776999999999663e-05, 2.8040999999999483e-05, 2.7722000000000857e-05, 2.8110999999997333e-05, 2.762500000000334e-05, 2.7290999999998733e-05, 2.8110999999997333e-05, 2.7458000000001037e-05, 2.8110999999997333e-05, 2.747300000000008e-05, 2.784700000000445e-05, 2.7944000000001967e-05, 2.7957999999994598e-05, 2.7291999999998207e-05, 2.7722000000000857e-05, 2.795900000000101e-05, 2.743100000000137e-05, 2.7722000000000857e-05, 2.812500000000384e-05, 2.7444000000001467e-05, 2.8290999999999733e-05, 2.8152000000003508e-05, 2.8082999999998193e-05, 2.7458000000001037e-05, 2.8124999999996902e-05, 2.7819000000005312e-05, 2.7763999999999567e-05, 2.8110999999997333e-05, 2.8084000000004605e-05, 2.7957999999994598e-05, 2.7458000000001037e-05]</msg>
<status status="PASS" starttime="20201112 10:16:01.831" endtime="20201112 10:16:01.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.819" endtime="20201112 10:16:01.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.843" endtime="20201112 10:16:01.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.851" endtime="20201112 10:16:01.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.847" endtime="20201112 10:16:01.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.839" endtime="20201112 10:16:01.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.325" endtime="20201112 10:16:01.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.324" endtime="20201112 10:16:01.877"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.899" endtime="20201112 10:16:01.914"></status>
</kw>
<msg timestamp="20201112 10:16:01.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.896" endtime="20201112 10:16:01.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.918" endtime="20201112 10:16:01.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.925" endtime="20201112 10:16:01.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.889" endtime="20201112 10:16:01.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.883" endtime="20201112 10:16:01.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.948" endtime="20201112 10:16:02.285"></status>
</kw>
<msg timestamp="20201112 10:16:02.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039842528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.945" endtime="20201112 10:16:02.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039842528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.294" endtime="20201112 10:16:02.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.313" endtime="20201112 10:16:02.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.938" endtime="20201112 10:16:02.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.933" endtime="20201112 10:16:02.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.332" level="INFO">${RESULT} = [{'time': 0.039842528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7334000000003855e-05, 'source_diff': 2.7334000000003855e-05}, {'time': 0.039878542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:02.323" endtime="20201112 10:16:02.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:02.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:02.334" endtime="20201112 10:16:02.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.372" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.370" endtime="20201112 10:16:02.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.378" level="INFO">VALUE: [2.7334000000003855e-05, 2.8056000000005465e-05, 2.795900000000101e-05, 2.7499999999999747e-05, 2.8277999999999637e-05, 2.761100000000377e-05, 2.7334000000003855e-05, 2.7763000000000093e-05, 2.8096999999997763e-05, 2.7263999999999067e-05, 2.7944000000001967e-05, 2.7610999999996833e-05, 2.7568999999998123e-05, 2.7277999999998637e-05, 2.7610999999996833e-05, 2.7792000000005646e-05, 2.794500000000144e-05, 2.811100000000427e-05, 2.7652999999995542e-05, 2.8124999999996902e-05, 2.7277999999998637e-05, 2.793100000000187e-05, 2.744500000000094e-05, 2.7776999999999663e-05, 2.7430000000001897e-05, 2.8124999999996902e-05, 2.7944000000001967e-05, 2.7291999999998207e-05, 2.7596999999997263e-05, 2.7638999999995972e-05, 2.7680999999994682e-05, 2.7611999999996306e-05, 2.8318999999998873e-05, 2.7624999999996402e-05, 2.7778000000006076e-05, 2.7958000000001537e-05, 2.736100000000352e-05, 2.8124999999996902e-05, 2.740199999999582e-05, 2.7666999999995112e-05, 2.7596999999997263e-05, 2.7374999999996152e-05, 2.7278000000005576e-05, 2.7472000000000607e-05, 2.8264000000000067e-05, 2.790300000000273e-05, 2.7944000000001967e-05, 2.8110999999997333e-05, 2.7958000000001537e-05, 2.8277999999999637e-05]</msg>
<status status="PASS" starttime="20201112 10:16:02.375" endtime="20201112 10:16:02.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.363" endtime="20201112 10:16:02.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.387" endtime="20201112 10:16:02.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.395" endtime="20201112 10:16:02.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.391" endtime="20201112 10:16:02.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.383" endtime="20201112 10:16:02.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.879" endtime="20201112 10:16:02.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.878" endtime="20201112 10:16:02.421"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.443" endtime="20201112 10:16:02.459"></status>
</kw>
<msg timestamp="20201112 10:16:02.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.440" endtime="20201112 10:16:02.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.462" endtime="20201112 10:16:02.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.468" endtime="20201112 10:16:02.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.433" endtime="20201112 10:16:02.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.427" endtime="20201112 10:16:02.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.491" endtime="20201112 10:16:02.827"></status>
</kw>
<msg timestamp="20201112 10:16:02.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039752319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.488" endtime="20201112 10:16:02.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039752319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.836" endtime="20201112 10:16:02.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.855" endtime="20201112 10:16:02.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.481" endtime="20201112 10:16:02.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.476" endtime="20201112 10:16:02.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.873" level="INFO">${RESULT} = [{'time': 0.039786889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.456999999999766e-05, 'source_diff': 3.456999999999766e-05}, {'time': 0.039827028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:02.864" endtime="20201112 10:16:02.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:02.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:02.875" endtime="20201112 10:16:02.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.914" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.912" endtime="20201112 10:16:02.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.919" level="INFO">VALUE: [3.456999999999766e-05, 3.5096999999997824e-05, 3.4902999999995854e-05, 3.4596999999997324e-05, 3.524999999999362e-05, 3.491700000000236e-05, 3.4582999999997754e-05, 3.459700000000426e-05, 3.52779999999997e-05, 3.423699999999946e-05, 3.443100000000143e-05, 3.508300000000519e-05, 3.440200000000282e-05, 3.476399999999963e-05, 3.438900000000272e-05, 3.475000000000006e-05, 3.49580000000016e-05, 3.4568999999998185e-05, 3.475000000000006e-05, 3.475000000000006e-05, 3.466700000000211e-05, 3.526400000000013e-05, 3.4402999999995354e-05, 3.525000000000056e-05, 3.509700000000476e-05, 3.443100000000143e-05, 3.476399999999963e-05, 3.509700000000476e-05, 3.445900000000057e-05, 3.4610999999996894e-05, 3.4416999999994924e-05, 3.444400000000153e-05, 3.473699999999996e-05, 3.438900000000272e-05, 3.5110999999997394e-05, 3.433300000000444e-05, 3.4582999999997754e-05, 3.4402999999995354e-05, 3.473600000000049e-05, 3.442999999999502e-05, 3.426399999999913e-05, 3.509700000000476e-05, 3.473699999999996e-05, 3.4916999999995424e-05, 3.444400000000153e-05, 3.4402999999995354e-05, 3.506999999999816e-05, 3.490199999999638e-05, 3.434800000000349e-05, 3.525000000000056e-05]</msg>
<status status="PASS" starttime="20201112 10:16:02.916" endtime="20201112 10:16:02.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.905" endtime="20201112 10:16:02.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.929" endtime="20201112 10:16:02.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.937" endtime="20201112 10:16:02.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.933" endtime="20201112 10:16:02.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.924" endtime="20201112 10:16:02.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.423" endtime="20201112 10:16:02.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.422" endtime="20201112 10:16:02.963"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.986" endtime="20201112 10:16:03.004"></status>
</kw>
<msg timestamp="20201112 10:16:03.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.983" endtime="20201112 10:16:03.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.007" endtime="20201112 10:16:03.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.013" endtime="20201112 10:16:03.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.976" endtime="20201112 10:16:03.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.970" endtime="20201112 10:16:03.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.036" endtime="20201112 10:16:03.384"></status>
</kw>
<msg timestamp="20201112 10:16:03.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04115825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041193333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:03.033" endtime="20201112 10:16:03.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04115825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041193333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:03.393" endtime="20201112 10:16:03.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.412" endtime="20201112 10:16:03.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.026" endtime="20201112 10:16:03.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.021" endtime="20201112 10:16:03.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:03.432" level="INFO">${RESULT} = [{'time': 0.041193333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5082999999998254e-05, 'source_diff': 3.5082999999998254e-05}, {'time': 0.041237514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:03.424" endtime="20201112 10:16:03.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:03.462" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:03.435" endtime="20201112 10:16:03.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.473" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:16:03.471" endtime="20201112 10:16:03.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.478" level="INFO">VALUE: [3.5082999999998254e-05, 3.440300000000229e-05, 3.493100000000193e-05, 3.523600000000099e-05, 3.4569000000005123e-05, 3.47779999999992e-05, 3.440300000000229e-05, 3.5082999999998254e-05, 3.458400000000417e-05, 3.455599999999809e-05, 3.476399999999963e-05, 3.518000000000271e-05, 3.441599999999545e-05, 3.5110999999997394e-05, 3.443000000000196e-05, 3.424999999999956e-05, 3.473600000000049e-05, 3.4526999999999475e-05, 3.491700000000236e-05, 3.4596999999997324e-05, 3.491700000000236e-05, 3.495900000000107e-05, 3.46250000000034e-05, 3.49450000000015e-05, 3.4568999999998185e-05, 3.5277000000000225e-05, 3.4930999999994994e-05, 3.50979999999973e-05, 3.475000000000006e-05, 3.475000000000006e-05, 3.4916999999995424e-05, 3.525000000000056e-05, 3.5096999999997824e-05, 3.456999999999766e-05, 3.492999999999552e-05, 3.475000000000006e-05, 3.4596999999997324e-05, 3.476399999999963e-05, 3.509800000000424e-05, 3.5263000000000655e-05, 3.422200000000042e-05, 3.440300000000229e-05, 3.441700000000186e-05, 3.491600000000289e-05, 3.493100000000193e-05, 3.50979999999973e-05, 3.473599999999355e-05, 3.49450000000015e-05, 3.436100000000358e-05, 3.5068999999998685e-05]</msg>
<status status="PASS" starttime="20201112 10:16:03.475" endtime="20201112 10:16:03.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.464" endtime="20201112 10:16:03.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.488" endtime="20201112 10:16:03.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:03.496" endtime="20201112 10:16:03.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.491" endtime="20201112 10:16:03.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.483" endtime="20201112 10:16:03.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.965" endtime="20201112 10:16:03.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.964" endtime="20201112 10:16:03.522"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.544" endtime="20201112 10:16:03.562"></status>
</kw>
<msg timestamp="20201112 10:16:03.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.541" endtime="20201112 10:16:03.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.565" endtime="20201112 10:16:03.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.572" endtime="20201112 10:16:03.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.534" endtime="20201112 10:16:03.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.528" endtime="20201112 10:16:03.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.594" endtime="20201112 10:16:03.930"></status>
</kw>
<msg timestamp="20201112 10:16:03.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039921403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.591" endtime="20201112 10:16:03.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039921403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.939" endtime="20201112 10:16:03.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.958" endtime="20201112 10:16:03.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.584" endtime="20201112 10:16:03.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.580" endtime="20201112 10:16:03.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:03.977" level="INFO">${RESULT} = [{'time': 0.039921403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.481999999999791e-05, 'source_diff': 3.481999999999791e-05}, {'time': 0.039963431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:03.968" endtime="20201112 10:16:03.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:04.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:03.979" endtime="20201112 10:16:04.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.018" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:16:04.016" endtime="20201112 10:16:04.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.023" level="INFO">VALUE: [3.481999999999791e-05, 3.46250000000034e-05, 3.475000000000006e-05, 3.4262999999999655e-05, 3.51250000000039e-05, 3.47779999999992e-05, 3.4416999999994924e-05, 3.476399999999963e-05, 3.476399999999963e-05, 3.443100000000143e-05, 3.45979999999968e-05, 3.423599999999999e-05, 3.508300000000519e-05, 3.525000000000056e-05, 3.5096999999997824e-05, 3.490199999999638e-05, 3.50700000000051e-05, 3.441700000000186e-05, 3.49580000000016e-05, 3.475000000000006e-05, 3.4888999999996284e-05, 3.526400000000013e-05, 3.440300000000229e-05, 3.475000000000006e-05, 3.506999999999816e-05, 3.441700000000186e-05, 3.5277000000000225e-05, 3.51250000000039e-05, 3.525000000000056e-05, 3.445799999999416e-05, 3.490199999999638e-05, 3.4638999999996034e-05, 3.513900000000347e-05, 3.493100000000193e-05, 3.476399999999963e-05, 3.441700000000186e-05, 3.508399999999773e-05, 3.4596999999997324e-05, 3.45979999999968e-05, 3.509700000000476e-05, 3.525000000000056e-05, 3.456999999999766e-05, 3.42779999999987e-05, 3.493000000000246e-05, 3.476399999999963e-05, 3.42500000000065e-05, 3.441600000000239e-05, 3.520800000000185e-05, 3.422200000000042e-05, 3.472200000000092e-05]</msg>
<status status="PASS" starttime="20201112 10:16:04.020" endtime="20201112 10:16:04.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.009" endtime="20201112 10:16:04.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.033" endtime="20201112 10:16:04.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.041" endtime="20201112 10:16:04.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.037" endtime="20201112 10:16:04.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.028" endtime="20201112 10:16:04.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.524" endtime="20201112 10:16:04.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.523" endtime="20201112 10:16:04.067"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.089" endtime="20201112 10:16:04.105"></status>
</kw>
<msg timestamp="20201112 10:16:04.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.086" endtime="20201112 10:16:04.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.108" endtime="20201112 10:16:04.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.114" endtime="20201112 10:16:04.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.079" endtime="20201112 10:16:04.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.073" endtime="20201112 10:16:04.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.137" endtime="20201112 10:16:04.472"></status>
</kw>
<msg timestamp="20201112 10:16:04.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.134" endtime="20201112 10:16:04.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.481" endtime="20201112 10:16:04.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.500" endtime="20201112 10:16:04.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.127" endtime="20201112 10:16:04.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.122" endtime="20201112 10:16:04.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.519" level="INFO">${RESULT} = [{'time': 0.039927042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.476399999999963e-05, 'source_diff': 3.476399999999963e-05}, {'time': 0.039968986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:04.510" endtime="20201112 10:16:04.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:04.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:04.521" endtime="20201112 10:16:04.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.559" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:16:04.557" endtime="20201112 10:16:04.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.564" level="INFO">VALUE: [3.476399999999963e-05, 3.4582999999997754e-05, 3.526400000000013e-05, 3.49580000000016e-05, 3.525000000000056e-05, 3.508399999999773e-05, 3.494400000000203e-05, 3.443000000000196e-05, 3.5332999999998504e-05, 3.440300000000229e-05, 3.442999999999502e-05, 3.504199999999902e-05, 3.476399999999963e-05, 3.4902999999995854e-05, 3.448600000000024e-05, 3.511100000000433e-05, 3.52779999999997e-05, 3.443100000000143e-05, 3.4610999999996894e-05, 3.441700000000186e-05, 3.493000000000246e-05, 3.493100000000193e-05, 3.5277000000000225e-05, 3.523700000000046e-05, 3.5068999999998685e-05, 3.5082999999998254e-05, 3.491599999999595e-05, 3.5068999999998685e-05, 3.429199999999827e-05, 3.5110999999997394e-05, 3.5096999999997824e-05, 3.475000000000006e-05, 3.47779999999992e-05, 3.449999999999981e-05, 3.495900000000107e-05, 3.461100000000383e-05, 3.476399999999963e-05, 3.441700000000186e-05, 3.491700000000236e-05, 3.440200000000282e-05, 3.52779999999997e-05, 3.526400000000013e-05, 3.509700000000476e-05, 3.4776999999999725e-05, 3.426399999999913e-05, 3.494400000000203e-05, 3.443100000000143e-05, 3.5110999999997394e-05, 3.479199999999877e-05, 3.475000000000006e-05]</msg>
<status status="PASS" starttime="20201112 10:16:04.561" endtime="20201112 10:16:04.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.550" endtime="20201112 10:16:04.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.574" endtime="20201112 10:16:04.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.582" endtime="20201112 10:16:04.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.578" endtime="20201112 10:16:04.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.569" endtime="20201112 10:16:04.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.069" endtime="20201112 10:16:04.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.068" endtime="20201112 10:16:04.608"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.630" endtime="20201112 10:16:04.645"></status>
</kw>
<msg timestamp="20201112 10:16:04.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.627" endtime="20201112 10:16:04.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.649" endtime="20201112 10:16:04.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.655" endtime="20201112 10:16:04.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.620" endtime="20201112 10:16:04.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.614" endtime="20201112 10:16:04.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.678" endtime="20201112 10:16:05.013"></status>
</kw>
<msg timestamp="20201112 10:16:05.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039886903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.675" endtime="20201112 10:16:05.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039886903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.023" endtime="20201112 10:16:05.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.042" endtime="20201112 10:16:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.668" endtime="20201112 10:16:05.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.663" endtime="20201112 10:16:05.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:05.061" level="INFO">${RESULT} = [{'time': 0.039886903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.475000000000006e-05, 'source_diff': 3.475000000000006e-05}, {'time': 0.039931944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:05.052" endtime="20201112 10:16:05.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:05.090" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:05.063" endtime="20201112 10:16:05.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.101" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:16:05.099" endtime="20201112 10:16:05.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.106" level="INFO">VALUE: [3.475000000000006e-05, 3.4610999999996894e-05, 3.520900000000132e-05, 3.494400000000203e-05, 3.476399999999963e-05, 3.476399999999963e-05, 3.473600000000049e-05, 3.441600000000239e-05, 3.45979999999968e-05, 3.493000000000246e-05, 3.5013000000000405e-05, 3.476399999999963e-05, 3.488799999999681e-05, 3.4596999999997324e-05, 3.458400000000417e-05, 3.441700000000186e-05, 3.476399999999963e-05, 3.475000000000006e-05, 3.440300000000229e-05, 3.52779999999997e-05, 3.422200000000042e-05, 3.525000000000056e-05, 3.459700000000426e-05, 3.522200000000142e-05, 3.4888999999996284e-05, 3.509700000000476e-05, 3.458400000000417e-05, 3.522200000000142e-05, 3.508399999999773e-05, 3.441700000000186e-05, 3.447199999999373e-05, 3.523600000000099e-05, 3.438800000000325e-05, 3.490199999999638e-05, 3.442999999999502e-05, 3.505600000000553e-05, 3.5082999999998254e-05, 3.4582999999997754e-05, 3.449999999999981e-05, 3.458399999999723e-05, 3.4582999999997754e-05, 3.475000000000006e-05, 3.473600000000049e-05, 3.448600000000024e-05, 3.4568999999998185e-05, 3.47779999999992e-05, 3.493100000000193e-05, 3.525000000000056e-05, 3.491700000000236e-05, 3.466700000000211e-05]</msg>
<status status="PASS" starttime="20201112 10:16:05.103" endtime="20201112 10:16:05.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.092" endtime="20201112 10:16:05.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.116" endtime="20201112 10:16:05.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:05.124" endtime="20201112 10:16:05.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.120" endtime="20201112 10:16:05.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.111" endtime="20201112 10:16:05.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.610" endtime="20201112 10:16:05.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.609" endtime="20201112 10:16:05.150"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.172" endtime="20201112 10:16:05.189"></status>
</kw>
<msg timestamp="20201112 10:16:05.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.169" endtime="20201112 10:16:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.193" endtime="20201112 10:16:05.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.199" endtime="20201112 10:16:05.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.162" endtime="20201112 10:16:05.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.156" endtime="20201112 10:16:05.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.222" endtime="20201112 10:16:05.569"></status>
</kw>
<msg timestamp="20201112 10:16:05.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040002458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040037389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.218" endtime="20201112 10:16:05.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040002458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040037389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.578" endtime="20201112 10:16:05.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.597" endtime="20201112 10:16:05.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.211" endtime="20201112 10:16:05.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.207" endtime="20201112 10:16:05.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:05.617" level="INFO">${RESULT} = [{'time': 0.040037389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.493100000000193e-05, 'source_diff': 3.493100000000193e-05}, {'time': 0.040076569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:05.609" endtime="20201112 10:16:05.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:05.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:05.619" endtime="20201112 10:16:05.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.658" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:16:05.655" endtime="20201112 10:16:05.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.663" level="INFO">VALUE: [3.493100000000193e-05, 3.443000000000196e-05, 3.458300000000469e-05, 3.443100000000143e-05, 3.4596999999997324e-05, 3.5110999999997394e-05, 3.522300000000089e-05, 3.4596999999997324e-05, 3.4445000000001e-05, 3.5096999999997824e-05, 3.5082999999998254e-05, 3.495900000000107e-05, 3.459700000000426e-05, 3.513900000000347e-05, 3.475000000000006e-05, 3.494400000000203e-05, 3.491700000000236e-05, 3.475000000000006e-05, 3.494400000000203e-05, 3.441700000000186e-05, 3.4624999999996464e-05, 3.525000000000056e-05, 3.449999999999981e-05, 3.472200000000092e-05, 3.4596999999997324e-05, 3.47779999999992e-05, 3.494400000000203e-05, 3.443000000000196e-05, 3.475000000000006e-05, 3.441700000000186e-05, 3.47779999999992e-05, 3.42779999999987e-05, 3.488800000000375e-05, 3.458300000000469e-05, 3.45979999999968e-05, 3.448600000000024e-05, 3.443000000000196e-05, 3.4582999999997754e-05, 3.4832999999998004e-05, 3.49450000000015e-05, 3.490300000000279e-05, 3.4610999999996894e-05, 3.491700000000236e-05, 3.493100000000193e-05, 3.443100000000143e-05, 3.523599999999405e-05, 3.526400000000013e-05, 3.459700000000426e-05, 3.4444999999994064e-05, 3.4445000000001e-05]</msg>
<status status="PASS" starttime="20201112 10:16:05.660" endtime="20201112 10:16:05.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.649" endtime="20201112 10:16:05.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.672" endtime="20201112 10:16:05.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:05.680" endtime="20201112 10:16:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.676" endtime="20201112 10:16:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.668" endtime="20201112 10:16:05.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.152" endtime="20201112 10:16:05.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.151" endtime="20201112 10:16:05.706"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.729" endtime="20201112 10:16:05.746"></status>
</kw>
<msg timestamp="20201112 10:16:05.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.725" endtime="20201112 10:16:05.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.749" endtime="20201112 10:16:05.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.755" endtime="20201112 10:16:05.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.718" endtime="20201112 10:16:05.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.713" endtime="20201112 10:16:05.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.778" endtime="20201112 10:16:06.126"></status>
</kw>
<msg timestamp="20201112 10:16:06.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04017825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:05.775" endtime="20201112 10:16:06.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04017825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:06.135" endtime="20201112 10:16:06.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.154" endtime="20201112 10:16:06.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.768" endtime="20201112 10:16:06.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.763" endtime="20201112 10:16:06.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.173" level="INFO">${RESULT} = [{'time': 0.04017825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.47779999999992e-05, 'source_diff': 3.47779999999992e-05}, {'time': 0.040222361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:16:06.164" endtime="20201112 10:16:06.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:06.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:06.175" endtime="20201112 10:16:06.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.213" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:16:06.211" endtime="20201112 10:16:06.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.218" level="INFO">VALUE: [3.47779999999992e-05, 3.4916999999995424e-05, 3.459800000000374e-05, 3.459700000000426e-05, 3.441700000000186e-05, 3.443000000000196e-05, 3.525000000000056e-05, 3.475000000000006e-05, 3.4804999999998865e-05, 3.475000000000006e-05, 3.523700000000046e-05, 3.513900000000347e-05, 3.441700000000186e-05, 3.4624999999996464e-05, 3.438900000000272e-05, 3.4846999999997574e-05, 3.491600000000289e-05, 3.5082999999998254e-05, 3.525000000000056e-05, 3.5068999999998685e-05, 3.4776999999999725e-05, 3.52779999999997e-05, 3.5069000000005623e-05, 3.526400000000013e-05, 3.458399999999723e-05, 3.491600000000289e-05, 3.50700000000051e-05, 3.4374999999996214e-05, 3.494400000000203e-05, 3.493000000000246e-05, 3.491600000000289e-05, 3.491700000000236e-05, 3.509700000000476e-05, 3.458399999999723e-05, 3.4624999999996464e-05, 3.5096999999997824e-05, 3.444400000000153e-05, 3.4569000000005123e-05, 3.4916999999995424e-05, 3.491600000000289e-05, 3.4445000000001e-05, 3.5110999999997394e-05, 3.438900000000272e-05, 3.4568999999998185e-05, 3.440200000000282e-05, 3.526400000000013e-05, 3.509700000000476e-05, 3.5068999999998685e-05, 3.473600000000049e-05, 3.508399999999773e-05]</msg>
<status status="PASS" starttime="20201112 10:16:06.215" endtime="20201112 10:16:06.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.204" endtime="20201112 10:16:06.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.228" endtime="20201112 10:16:06.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:06.236" endtime="20201112 10:16:06.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.232" endtime="20201112 10:16:06.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.223" endtime="20201112 10:16:06.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.709" endtime="20201112 10:16:06.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.707" endtime="20201112 10:16:06.262"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.284" endtime="20201112 10:16:06.302"></status>
</kw>
<msg timestamp="20201112 10:16:06.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.281" endtime="20201112 10:16:06.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.305" endtime="20201112 10:16:06.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.311" endtime="20201112 10:16:06.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.274" endtime="20201112 10:16:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.268" endtime="20201112 10:16:06.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.334" endtime="20201112 10:16:06.682"></status>
</kw>
<msg timestamp="20201112 10:16:06.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039974847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.331" endtime="20201112 10:16:06.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039974847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.692" endtime="20201112 10:16:06.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.710" endtime="20201112 10:16:06.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.324" endtime="20201112 10:16:06.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.319" endtime="20201112 10:16:06.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.729" level="INFO">${RESULT} = [{'time': 0.040017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.225000000000062e-05, 'source_diff': 4.225000000000062e-05}, {'time': 0.040065194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:06.720" endtime="20201112 10:16:06.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:06.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:06.731" endtime="20201112 10:16:06.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.769" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:16:06.767" endtime="20201112 10:16:06.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.775" level="INFO">VALUE: [4.225000000000062e-05, 4.170800000000141e-05, 4.1568999999998246e-05, 4.204199999999908e-05, 4.2068999999998746e-05, 4.1554999999998676e-05, 4.156999999999772e-05, 4.172200000000098e-05, 4.173600000000055e-05, 4.1417000000001924e-05, 4.1903000000002855e-05, 4.176399999999969e-05, 4.155599999999815e-05, 4.229199999999933e-05, 4.1902999999995916e-05, 4.2040999999999606e-05, 4.1596999999997386e-05, 4.204199999999908e-05, 4.1554999999998676e-05, 4.1903000000002855e-05, 4.223600000000105e-05, 4.2096999999997886e-05, 4.222200000000148e-05, 4.1888999999996346e-05, 4.1846999999997636e-05, 4.1347000000004075e-05, 4.2153000000003105e-05, 4.1389000000002785e-05, 4.175000000000012e-05, 4.193000000000252e-05, 4.2139000000003535e-05, 4.172200000000098e-05, 4.2069000000005685e-05, 4.2083000000005255e-05, 4.2195000000001814e-05, 4.2208999999994445e-05, 4.225000000000062e-05, 4.223600000000105e-05, 4.155600000000509e-05, 4.1889000000003285e-05, 4.1389000000002785e-05, 4.218000000000277e-05, 4.1723000000000454e-05, 4.1554999999998676e-05, 4.1389000000002785e-05, 4.1874999999996776e-05, 4.1374999999996276e-05, 4.1874999999996776e-05, 4.191600000000295e-05, 4.143000000000202e-05]</msg>
<status status="PASS" starttime="20201112 10:16:06.772" endtime="20201112 10:16:06.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.761" endtime="20201112 10:16:06.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.784" endtime="20201112 10:16:06.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:06.792" endtime="20201112 10:16:06.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.788" endtime="20201112 10:16:06.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.780" endtime="20201112 10:16:06.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.264" endtime="20201112 10:16:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.263" endtime="20201112 10:16:06.818"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.840" endtime="20201112 10:16:06.856"></status>
</kw>
<msg timestamp="20201112 10:16:06.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.837" endtime="20201112 10:16:06.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.860" endtime="20201112 10:16:06.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.866" endtime="20201112 10:16:06.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.830" endtime="20201112 10:16:06.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.824" endtime="20201112 10:16:06.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.889" endtime="20201112 10:16:07.225"></status>
</kw>
<msg timestamp="20201112 10:16:07.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039804306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039846042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.885" endtime="20201112 10:16:07.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039804306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039846042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.234" endtime="20201112 10:16:07.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.252" endtime="20201112 10:16:07.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.878" endtime="20201112 10:16:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.874" endtime="20201112 10:16:07.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.271" level="INFO">${RESULT} = [{'time': 0.039846042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.173600000000055e-05, 'source_diff': 4.173600000000055e-05}, {'time': 0.039893208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:07.262" endtime="20201112 10:16:07.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:07.301" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:07.273" endtime="20201112 10:16:07.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.312" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:16:07.309" endtime="20201112 10:16:07.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.317" level="INFO">VALUE: [4.173600000000055e-05, 4.1888999999996346e-05, 4.1568999999998246e-05, 4.1375000000003215e-05, 4.173600000000055e-05, 4.1554999999998676e-05, 4.175000000000012e-05, 4.1374999999996276e-05, 4.223600000000105e-05, 4.188799999999687e-05, 4.1403000000002355e-05, 4.170800000000141e-05, 4.1402999999995416e-05, 4.222200000000148e-05, 4.1402999999995416e-05, 4.225000000000062e-05, 4.2027000000000037e-05, 4.1403000000002355e-05, 4.225000000000062e-05, 4.169400000000184e-05, 4.225000000000062e-05, 4.152799999999901e-05, 4.1737000000000024e-05, 4.145800000000116e-05, 4.2181000000002244e-05, 4.2195000000001814e-05, 4.2111000000004395e-05, 4.222200000000148e-05, 4.205599999999865e-05, 4.1916999999995486e-05, 4.1902999999995916e-05, 4.188800000000381e-05, 4.223600000000105e-05, 4.155600000000509e-05, 4.190200000000338e-05, 4.1709000000000884e-05, 4.1568999999998246e-05, 4.223600000000105e-05, 4.2222999999994015e-05, 4.205599999999865e-05, 4.1568999999998246e-05, 4.120800000000091e-05, 4.1389000000002785e-05, 4.1610999999996956e-05, 4.1375000000003215e-05, 4.155599999999815e-05, 4.158399999999729e-05, 4.191600000000295e-05, 4.1473000000000204e-05, 4.1903000000002855e-05]</msg>
<status status="PASS" starttime="20201112 10:16:07.314" endtime="20201112 10:16:07.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.303" endtime="20201112 10:16:07.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.326" endtime="20201112 10:16:07.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.335" endtime="20201112 10:16:07.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.330" endtime="20201112 10:16:07.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.322" endtime="20201112 10:16:07.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.820" endtime="20201112 10:16:07.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.819" endtime="20201112 10:16:07.360"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.382" endtime="20201112 10:16:07.399"></status>
</kw>
<msg timestamp="20201112 10:16:07.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.379" endtime="20201112 10:16:07.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.402" endtime="20201112 10:16:07.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.408" endtime="20201112 10:16:07.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.372" endtime="20201112 10:16:07.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.366" endtime="20201112 10:16:07.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.431" endtime="20201112 10:16:07.765"></status>
</kw>
<msg timestamp="20201112 10:16:07.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039723903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.428" endtime="20201112 10:16:07.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039723903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.774" endtime="20201112 10:16:07.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.793" endtime="20201112 10:16:07.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.420" endtime="20201112 10:16:07.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.416" endtime="20201112 10:16:07.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.814" level="INFO">${RESULT} = [{'time': 0.039766125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.039813111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:07.805" endtime="20201112 10:16:07.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:07.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:07.816" endtime="20201112 10:16:07.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.854" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:16:07.852" endtime="20201112 10:16:07.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.859" level="INFO">VALUE: [4.222200000000148e-05, 4.173600000000055e-05, 4.1874999999996776e-05, 4.1860999999997206e-05, 4.1903000000002855e-05, 4.1861000000004145e-05, 4.1945000000001564e-05, 4.223600000000105e-05, 4.201399999999994e-05, 4.1374999999996276e-05, 4.2068999999998746e-05, 4.1402999999995416e-05, 4.170800000000141e-05, 4.1417000000001924e-05, 4.140199999999594e-05, 4.1903000000002855e-05, 4.1596999999997386e-05, 4.1888999999996346e-05, 4.172200000000098e-05, 4.222200000000148e-05, 4.205599999999865e-05, 4.169400000000184e-05, 4.1403000000002355e-05, 4.173600000000055e-05, 4.176399999999969e-05, 4.1389000000002785e-05, 4.1582999999997816e-05, 4.142999999999508e-05, 4.205600000000559e-05, 4.1445000000001064e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.1888999999996346e-05, 4.1389000000002785e-05, 4.205600000000559e-05, 4.1847000000004575e-05, 4.1403000000002355e-05, 4.176399999999969e-05, 4.207000000000516e-05, 4.2208999999994445e-05, 4.1526999999999537e-05, 4.1555000000005615e-05, 4.138799999999637e-05, 4.1417000000001924e-05, 4.2223000000000954e-05, 4.155599999999815e-05, 4.1388999999995846e-05, 4.172200000000098e-05, 4.1889000000003285e-05, 4.1389000000002785e-05]</msg>
<status status="PASS" starttime="20201112 10:16:07.856" endtime="20201112 10:16:07.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.845" endtime="20201112 10:16:07.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.869" endtime="20201112 10:16:07.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.877" endtime="20201112 10:16:07.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.873" endtime="20201112 10:16:07.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.864" endtime="20201112 10:16:07.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.362" endtime="20201112 10:16:07.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.361" endtime="20201112 10:16:07.903"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.925" endtime="20201112 10:16:07.941"></status>
</kw>
<msg timestamp="20201112 10:16:07.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.922" endtime="20201112 10:16:07.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.944" endtime="20201112 10:16:07.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.950" endtime="20201112 10:16:07.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.914" endtime="20201112 10:16:07.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.909" endtime="20201112 10:16:07.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.973" endtime="20201112 10:16:08.308"></status>
</kw>
<msg timestamp="20201112 10:16:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039848486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039890194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.970" endtime="20201112 10:16:08.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039848486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039890194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:08.317" endtime="20201112 10:16:08.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.336" endtime="20201112 10:16:08.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.963" endtime="20201112 10:16:08.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.958" endtime="20201112 10:16:08.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:08.355" level="INFO">${RESULT} = [{'time': 0.039890194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.170799999999447e-05, 'source_diff': 4.170799999999447e-05}, {'time': 0.039943431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:08.346" endtime="20201112 10:16:08.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:08.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:08.357" endtime="20201112 10:16:08.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.395" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:16:08.393" endtime="20201112 10:16:08.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.401" level="INFO">VALUE: [4.170799999999447e-05, 4.2195000000001814e-05, 4.134800000000355e-05, 4.1403000000002355e-05, 4.1403000000002355e-05, 4.173600000000055e-05, 4.222199999999454e-05, 4.169400000000184e-05, 4.1388999999995846e-05, 4.140200000000288e-05, 4.175000000000012e-05, 4.1874999999996776e-05, 4.206999999999822e-05, 4.2124999999997026e-05, 4.140200000000288e-05, 4.2209000000001384e-05, 4.1723000000000454e-05, 4.2054999999999176e-05, 4.155600000000509e-05, 4.2082999999998316e-05, 4.1389000000002785e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.223600000000105e-05, 4.1388999999995846e-05, 4.157000000000466e-05, 4.124999999999962e-05, 4.1555000000005615e-05, 4.222199999999454e-05, 4.147200000000073e-05, 4.1374999999996276e-05, 4.172199999999404e-05, 4.2096999999997886e-05, 4.1874999999996776e-05, 4.1903000000002855e-05, 4.223599999999411e-05, 4.204199999999908e-05, 4.205600000000559e-05, 4.1861000000004145e-05, 4.1540999999999106e-05, 4.2068999999998746e-05, 4.156999999999772e-05, 4.1723000000000454e-05, 4.204200000000602e-05, 4.1847000000004575e-05, 4.2054999999999176e-05, 4.1888999999996346e-05, 4.190199999999644e-05, 4.122200000000048e-05, 4.155599999999815e-05]</msg>
<status status="PASS" starttime="20201112 10:16:08.398" endtime="20201112 10:16:08.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.386" endtime="20201112 10:16:08.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.410" endtime="20201112 10:16:08.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:08.418" endtime="20201112 10:16:08.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.414" endtime="20201112 10:16:08.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.405" endtime="20201112 10:16:08.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.905" endtime="20201112 10:16:08.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.903" endtime="20201112 10:16:08.444"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.466" endtime="20201112 10:16:08.482"></status>
</kw>
<msg timestamp="20201112 10:16:08.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.463" endtime="20201112 10:16:08.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.486" endtime="20201112 10:16:08.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.492" endtime="20201112 10:16:08.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.456" endtime="20201112 10:16:08.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.450" endtime="20201112 10:16:08.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.515" endtime="20201112 10:16:08.851"></status>
</kw>
<msg timestamp="20201112 10:16:08.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040013986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:08.511" endtime="20201112 10:16:08.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040013986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:08.861" endtime="20201112 10:16:08.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.879" endtime="20201112 10:16:08.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.504" endtime="20201112 10:16:08.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.500" endtime="20201112 10:16:08.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:08.898" level="INFO">${RESULT} = [{'time': 0.040013986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1361000000003645e-05, 'source_diff': 4.1361000000003645e-05}, {'time': 0.040066125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:08.889" endtime="20201112 10:16:08.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:08.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:08.900" endtime="20201112 10:16:08.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.939" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:16:08.936" endtime="20201112 10:16:08.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.944" level="INFO">VALUE: [4.1361000000003645e-05, 4.1568999999998246e-05, 4.154199999999858e-05, 4.155599999999815e-05, 4.191600000000295e-05, 4.155599999999815e-05, 4.1597000000004325e-05, 4.1374999999996276e-05, 4.138799999999637e-05, 4.156999999999772e-05, 4.1818999999998496e-05, 4.1888999999996346e-05, 4.1403000000002355e-05, 4.205599999999865e-05, 4.173600000000055e-05, 4.155599999999815e-05, 4.170799999999447e-05, 4.2068999999998746e-05, 4.1374999999996276e-05, 4.1847000000004575e-05, 4.205599999999865e-05, 4.226400000000019e-05, 4.170799999999447e-05, 4.175000000000012e-05, 4.1819000000005435e-05, 4.1375000000003215e-05, 4.177799999999926e-05, 4.1569000000005185e-05, 4.225000000000062e-05, 4.1388999999995846e-05, 4.1916999999995486e-05, 4.2041000000006545e-05, 4.1375000000003215e-05, 4.158399999999729e-05, 4.152799999999901e-05, 4.205599999999865e-05, 4.223600000000105e-05, 4.205599999999865e-05, 4.1431000000001494e-05, 4.14860000000003e-05, 4.1389000000002785e-05, 4.173600000000055e-05, 4.170800000000141e-05, 4.1888999999996346e-05, 4.226400000000019e-05, 4.1889000000003285e-05, 4.1931000000001994e-05, 4.1402999999995416e-05, 4.204199999999908e-05, 4.155599999999815e-05]</msg>
<status status="PASS" starttime="20201112 10:16:08.941" endtime="20201112 10:16:08.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.930" endtime="20201112 10:16:08.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.953" endtime="20201112 10:16:08.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:08.962" endtime="20201112 10:16:08.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.957" endtime="20201112 10:16:08.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.949" endtime="20201112 10:16:08.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.446" endtime="20201112 10:16:08.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.445" endtime="20201112 10:16:08.988"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.011" endtime="20201112 10:16:09.027"></status>
</kw>
<msg timestamp="20201112 10:16:09.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.007" endtime="20201112 10:16:09.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.030" endtime="20201112 10:16:09.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.036" endtime="20201112 10:16:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.000" endtime="20201112 10:16:09.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.994" endtime="20201112 10:16:09.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.059" endtime="20201112 10:16:09.398"></status>
</kw>
<msg timestamp="20201112 10:16:09.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.056" endtime="20201112 10:16:09.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040436611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.407" endtime="20201112 10:16:09.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.426" endtime="20201112 10:16:09.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.049" endtime="20201112 10:16:09.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.044" endtime="20201112 10:16:09.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.444" level="INFO">${RESULT} = [{'time': 0.040478889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.227799999999976e-05, 'source_diff': 4.227799999999976e-05}, {'time': 0.04053, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 10:16:09.435" endtime="20201112 10:16:09.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:09.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:09.446" endtime="20201112 10:16:09.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.485" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:16:09.483" endtime="20201112 10:16:09.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.491" level="INFO">VALUE: [4.227799999999976e-05, 4.223599999999411e-05, 4.2068999999998746e-05, 4.223600000000105e-05, 4.152799999999901e-05, 4.1737000000000024e-05, 4.1903000000002855e-05, 4.1917000000002425e-05, 4.156999999999772e-05, 4.124999999999962e-05, 4.208400000000473e-05, 4.1903000000002855e-05, 4.173600000000055e-05, 4.173600000000055e-05, 4.1680999999994806e-05, 4.1888999999996346e-05, 4.223600000000105e-05, 4.1917000000002425e-05, 4.223599999999411e-05, 4.155599999999815e-05, 4.155600000000509e-05, 4.1389000000002785e-05, 4.2068999999998746e-05, 4.1374999999996276e-05, 4.1431000000001494e-05, 4.201399999999994e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.154199999999858e-05, 4.188800000000381e-05, 4.2069000000005685e-05, 4.169400000000184e-05, 4.158399999999729e-05, 4.1417000000001924e-05, 4.2068999999998746e-05, 4.223600000000105e-05, 4.173600000000055e-05, 4.1402999999995416e-05, 4.1569000000005185e-05, 4.156999999999772e-05, 4.2082999999998316e-05, 4.1916999999995486e-05, 4.175000000000012e-05, 4.170800000000141e-05, 4.1209000000000384e-05, 4.1389000000002785e-05, 4.1903000000002855e-05, 4.175000000000012e-05, 4.1903000000002855e-05, 4.140200000000288e-05]</msg>
<status status="PASS" starttime="20201112 10:16:09.488" endtime="20201112 10:16:09.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.476" endtime="20201112 10:16:09.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.505" endtime="20201112 10:16:09.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.513" endtime="20201112 10:16:09.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.509" endtime="20201112 10:16:09.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.500" endtime="20201112 10:16:09.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.990" endtime="20201112 10:16:09.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.989" endtime="20201112 10:16:09.539"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.561" endtime="20201112 10:16:09.577"></status>
</kw>
<msg timestamp="20201112 10:16:09.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.558" endtime="20201112 10:16:09.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.580" endtime="20201112 10:16:09.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.586" endtime="20201112 10:16:09.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.551" endtime="20201112 10:16:09.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.545" endtime="20201112 10:16:09.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.610" endtime="20201112 10:16:09.945"></status>
</kw>
<msg timestamp="20201112 10:16:09.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.606" endtime="20201112 10:16:09.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.955" endtime="20201112 10:16:09.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.973" endtime="20201112 10:16:09.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.599" endtime="20201112 10:16:09.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.594" endtime="20201112 10:16:09.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.994" level="INFO">${RESULT} = [{'time': 0.039890819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2054999999999176e-05, 'source_diff': 4.2054999999999176e-05}, {'time': 0.039940917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:09.985" endtime="20201112 10:16:09.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:10.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:09.996" endtime="20201112 10:16:10.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.034" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:16:10.032" endtime="20201112 10:16:10.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.040" level="INFO">VALUE: [4.2054999999999176e-05, 4.1917000000002425e-05, 4.1973000000000704e-05, 4.1917000000002425e-05, 4.1776999999999787e-05, 4.190200000000338e-05, 4.2068999999998746e-05, 4.1403000000002355e-05, 4.223599999999411e-05, 4.149999999999987e-05, 4.222199999999454e-05, 4.122200000000048e-05, 4.1403000000002355e-05, 4.1889000000003285e-05, 4.1973000000000704e-05, 4.1374999999996276e-05, 4.1874999999996776e-05, 4.1583000000004755e-05, 4.1402999999995416e-05, 4.172200000000098e-05, 4.1709000000000884e-05, 4.1568999999998246e-05, 4.1555000000005615e-05, 4.1889000000003285e-05, 4.1555000000005615e-05, 4.223600000000105e-05, 4.226400000000019e-05, 4.190199999999644e-05, 4.1375000000003215e-05, 4.225000000000062e-05, 4.191600000000295e-05, 4.1917000000002425e-05, 4.194400000000209e-05, 4.1431000000001494e-05, 4.140199999999594e-05, 4.2237000000000524e-05, 4.175000000000012e-05, 4.170800000000141e-05, 4.123600000000005e-05, 4.222200000000148e-05, 4.1583000000004755e-05, 4.226400000000019e-05, 4.176399999999969e-05, 4.172200000000098e-05, 4.1444999999994125e-05, 4.1917000000002425e-05, 4.194400000000209e-05, 4.2068999999998746e-05, 4.1222999999999954e-05, 4.205599999999865e-05]</msg>
<status status="PASS" starttime="20201112 10:16:10.037" endtime="20201112 10:16:10.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.026" endtime="20201112 10:16:10.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.049" endtime="20201112 10:16:10.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:10.057" endtime="20201112 10:16:10.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.053" endtime="20201112 10:16:10.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.045" endtime="20201112 10:16:10.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.541" endtime="20201112 10:16:10.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.540" endtime="20201112 10:16:10.083"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.105" endtime="20201112 10:16:10.122"></status>
</kw>
<msg timestamp="20201112 10:16:10.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.102" endtime="20201112 10:16:10.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.125" endtime="20201112 10:16:10.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.131" endtime="20201112 10:16:10.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.095" endtime="20201112 10:16:10.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.089" endtime="20201112 10:16:10.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.154" endtime="20201112 10:16:10.490"></status>
</kw>
<msg timestamp="20201112 10:16:10.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039881514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039929903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.151" endtime="20201112 10:16:10.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039881514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039929903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.500" endtime="20201112 10:16:10.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.519" endtime="20201112 10:16:10.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.144" endtime="20201112 10:16:10.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.139" endtime="20201112 10:16:10.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:10.538" level="INFO">${RESULT} = [{'time': 0.039929903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8389000000002846e-05, 'source_diff': 4.8389000000002846e-05}, {'time': 0.039984, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:10.529" endtime="20201112 10:16:10.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:10.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:10.540" endtime="20201112 10:16:10.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.578" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:16:10.576" endtime="20201112 10:16:10.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.583" level="INFO">VALUE: [4.8389000000002846e-05, 4.854199999999864e-05, 4.8375000000003276e-05, 4.852800000000601e-05, 4.8723000000000516e-05, 4.905499999999924e-05, 4.890299999999598e-05, 4.930599999999896e-05, 4.8875000000003777e-05, 4.85139999999995e-05, 4.920800000000197e-05, 4.8389000000002846e-05, 4.836099999999677e-05, 4.9209000000001446e-05, 4.872200000000104e-05, 4.890299999999598e-05, 4.926300000000078e-05, 4.9223000000001016e-05, 4.837499999999634e-05, 4.85269999999996e-05, 4.8681000000001806e-05, 4.920800000000197e-05, 4.923600000000111e-05, 4.927799999999982e-05, 4.833299999999763e-05, 4.849999999999993e-05, 4.855499999999874e-05, 4.836099999999677e-05, 4.902800000000651e-05, 4.937499999999734e-05, 4.837499999999634e-05, 4.837499999999634e-05, 4.90270000000001e-05, 4.905599999999871e-05, 4.858400000000429e-05, 4.852799999999907e-05, 4.9014e-05, 4.902799999999957e-05, 4.854199999999864e-05, 4.8319000000005e-05, 4.86940000000019e-05, 4.8875000000003777e-05, 4.904199999999914e-05, 4.881899999999856e-05, 4.877799999999932e-05, 4.852799999999907e-05, 4.920800000000197e-05, 4.905599999999871e-05, 4.8679999999995394e-05, 4.887499999999684e-05]</msg>
<status status="PASS" starttime="20201112 10:16:10.580" endtime="20201112 10:16:10.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.569" endtime="20201112 10:16:10.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.593" endtime="20201112 10:16:10.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:10.601" endtime="20201112 10:16:10.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.596" endtime="20201112 10:16:10.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.588" endtime="20201112 10:16:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.085" endtime="20201112 10:16:10.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.084" endtime="20201112 10:16:10.629"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.656" endtime="20201112 10:16:10.676"></status>
</kw>
<msg timestamp="20201112 10:16:10.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.652" endtime="20201112 10:16:10.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.680" endtime="20201112 10:16:10.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.688" endtime="20201112 10:16:10.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.643" endtime="20201112 10:16:10.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.636" endtime="20201112 10:16:10.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.712" endtime="20201112 10:16:11.047"></status>
</kw>
<msg timestamp="20201112 10:16:11.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048012625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048091139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.709" endtime="20201112 10:16:11.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048012625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048091139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.057" endtime="20201112 10:16:11.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.075" endtime="20201112 10:16:11.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.702" endtime="20201112 10:16:11.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.697" endtime="20201112 10:16:11.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.094" level="INFO">${RESULT} = [{'time': 0.048091139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851399999999481e-05, 'source_diff': 7.851399999999481e-05}, {'time': 0.048179306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:11.085" endtime="20201112 10:16:11.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:11.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:11.096" endtime="20201112 10:16:11.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.134" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:16:11.132" endtime="20201112 10:16:11.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.140" level="INFO">VALUE: [7.851399999999481e-05, 7.905600000000096e-05, 7.895800000000397e-05, 7.895800000000397e-05, 7.900000000000268e-05, 7.901400000000225e-05, 7.841600000000476e-05, 7.85969999999997e-05, 7.906999999999359e-05, 7.822299999999532e-05, 7.888899999999865e-05, 7.905600000000096e-05, 7.840200000000519e-05, 7.858300000000012e-05, 7.89169999999978e-05, 7.898600000000311e-05, 7.819399999999671e-05, 7.833299999999987e-05, 7.829100000000117e-05, 7.872199999999635e-05, 7.818100000000355e-05, 7.834799999999892e-05, 7.83190000000003e-05, 7.826399999999456e-05, 7.848599999999567e-05, 7.850000000000218e-05, 7.836099999999901e-05, 7.848599999999567e-05, 7.820799999999628e-05, 7.88190000000008e-05, 7.845799999999653e-05, 7.916699999999804e-05, 7.898600000000311e-05, 7.847299999999557e-05, 7.872199999999635e-05, 7.834699999999944e-05, 7.848599999999567e-05, 7.837499999999858e-05, 7.875000000000243e-05, 7.869400000000415e-05, 7.89719999999966e-05, 7.912499999999933e-05, 7.834699999999944e-05, 7.848699999999514e-05, 7.894499999999693e-05, 7.861099999999926e-05, 7.911099999999976e-05, 7.918099999999761e-05, 7.847200000000304e-05, 7.88190000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:16:11.137" endtime="20201112 10:16:11.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.126" endtime="20201112 10:16:11.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.149" endtime="20201112 10:16:11.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:11.157" endtime="20201112 10:16:11.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.153" endtime="20201112 10:16:11.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.145" endtime="20201112 10:16:11.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.631" endtime="20201112 10:16:11.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.630" endtime="20201112 10:16:11.183"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.206" endtime="20201112 10:16:11.226"></status>
</kw>
<msg timestamp="20201112 10:16:11.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.202" endtime="20201112 10:16:11.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.229" endtime="20201112 10:16:11.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.236" endtime="20201112 10:16:11.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.195" endtime="20201112 10:16:11.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.190" endtime="20201112 10:16:11.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.259" endtime="20201112 10:16:11.609"></status>
</kw>
<msg timestamp="20201112 10:16:11.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.256" endtime="20201112 10:16:11.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040582806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040662931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.619" endtime="20201112 10:16:11.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.638" endtime="20201112 10:16:11.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.249" endtime="20201112 10:16:11.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.244" endtime="20201112 10:16:11.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.656" level="INFO">${RESULT} = [{'time': 0.040662931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012500000000033e-05, 'source_diff': 8.012500000000033e-05}, {'time': 0.040751028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:11.648" endtime="20201112 10:16:11.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:11.686" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:11.659" endtime="20201112 10:16:11.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.697" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:16:11.695" endtime="20201112 10:16:11.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.702" level="INFO">VALUE: [8.012500000000033e-05, 7.932000000000078e-05, 7.929200000000164e-05, 7.934700000000044e-05, 7.990199999999975e-05, 8.016699999999904e-05, 7.933300000000088e-05, 7.958300000000113e-05, 7.973599999999692e-05, 7.919499999999718e-05, 7.99169999999988e-05, 8.000000000000368e-05, 7.962499999999983e-05, 7.930500000000174e-05, 7.92640000000025e-05, 8.005499999999555e-05, 7.988899999999965e-05, 8.017999999999914e-05, 8.018100000000555e-05, 7.952799999999538e-05, 7.944499999999743e-05, 7.99440000000054e-05, 7.951400000000275e-05, 8.017999999999914e-05, 8.007000000000153e-05, 7.938799999999968e-05, 7.932000000000078e-05, 7.937499999999958e-05, 8.011100000000076e-05, 8.006999999999459e-05, 8.005500000000249e-05, 7.9458999999997e-05, 7.948600000000361e-05, 8.016699999999904e-05, 7.951399999999581e-05, 7.944399999999796e-05, 7.926399999999556e-05, 7.962499999999983e-05, 7.979100000000267e-05, 7.993099999999836e-05, 7.994399999999846e-05, 7.95970000000007e-05, 7.973599999999692e-05, 7.920799999999728e-05, 8.016599999999957e-05, 7.968099999999811e-05, 7.970899999999725e-05, 7.976300000000353e-05, 7.980600000000171e-05, 8.019399999999871e-05]</msg>
<status status="PASS" starttime="20201112 10:16:11.699" endtime="20201112 10:16:11.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.688" endtime="20201112 10:16:11.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.712" endtime="20201112 10:16:11.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:11.720" endtime="20201112 10:16:11.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.716" endtime="20201112 10:16:11.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.707" endtime="20201112 10:16:11.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.185" endtime="20201112 10:16:11.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.184" endtime="20201112 10:16:11.746"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.769" endtime="20201112 10:16:11.787"></status>
</kw>
<msg timestamp="20201112 10:16:11.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.765" endtime="20201112 10:16:11.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.790" endtime="20201112 10:16:11.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.796" endtime="20201112 10:16:11.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.758" endtime="20201112 10:16:11.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.753" endtime="20201112 10:16:11.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.819" endtime="20201112 10:16:12.155"></status>
</kw>
<msg timestamp="20201112 10:16:12.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040648806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.816" endtime="20201112 10:16:12.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040648806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.164" endtime="20201112 10:16:12.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.182" endtime="20201112 10:16:12.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.809" endtime="20201112 10:16:12.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.804" endtime="20201112 10:16:12.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.203" level="INFO">${RESULT} = [{'time': 0.040648806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.034800000000092e-05, 'source_diff': 8.034800000000092e-05}, {'time': 0.040735972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:12.194" endtime="20201112 10:16:12.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:12.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:12.205" endtime="20201112 10:16:12.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.244" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:16:12.241" endtime="20201112 10:16:12.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.249" level="INFO">VALUE: [8.034800000000092e-05, 8.056900000000256e-05, 8.105499999999655e-05, 8.073599999999792e-05, 8.04719999999981e-05, 8.033300000000188e-05, 8.068100000000605e-05, 8.034700000000145e-05, 8.090300000000022e-05, 8.118000000000014e-05, 8.087500000000108e-05, 8.029200000000264e-05, 8.047300000000451e-05, 8.029200000000264e-05, 8.098700000000458e-05, 8.075000000000443e-05, 8.040299999999972e-05, 8.077799999999663e-05, 8.105499999999655e-05, 8.081999999999534e-05, 8.11390000000009e-05, 8.118099999999961e-05, 8.111100000000177e-05, 8.07090000000052e-05, 8.116700000000004e-05, 8.03190000000023e-05, 8.076399999999706e-05, 8.098599999999817e-05, 8.074999999999749e-05, 8.105599999999602e-05, 8.030600000000221e-05, 8.04310000000058e-05, 8.104199999999645e-05, 8.051400000000375e-05, 8.034700000000145e-05, 8.062500000000083e-05, 8.056900000000256e-05, 8.047200000000504e-05, 8.07919999999962e-05, 8.06390000000004e-05, 8.063800000000093e-05, 8.062500000000083e-05, 8.080599999999577e-05, 8.048599999999767e-05, 8.066699999999954e-05, 8.083300000000238e-05, 8.088900000000065e-05, 8.06390000000004e-05, 8.104199999999645e-05, 8.036099999999408e-05]</msg>
<status status="PASS" starttime="20201112 10:16:12.246" endtime="20201112 10:16:12.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.234" endtime="20201112 10:16:12.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.259" endtime="20201112 10:16:12.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.268" endtime="20201112 10:16:12.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.263" endtime="20201112 10:16:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.254" endtime="20201112 10:16:12.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.748" endtime="20201112 10:16:12.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.747" endtime="20201112 10:16:12.294"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.316" endtime="20201112 10:16:12.334"></status>
</kw>
<msg timestamp="20201112 10:16:12.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.313" endtime="20201112 10:16:12.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.338" endtime="20201112 10:16:12.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.344" endtime="20201112 10:16:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.306" endtime="20201112 10:16:12.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.300" endtime="20201112 10:16:12.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.366" endtime="20201112 10:16:12.703"></status>
</kw>
<msg timestamp="20201112 10:16:12.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040128639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.363" endtime="20201112 10:16:12.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040128639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.712" endtime="20201112 10:16:12.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.731" endtime="20201112 10:16:12.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.356" endtime="20201112 10:16:12.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.352" endtime="20201112 10:16:12.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.750" level="INFO">${RESULT} = [{'time': 0.040210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.202799999999788e-05, 'source_diff': 8.202799999999788e-05}, {'time': 0.040296875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:12.741" endtime="20201112 10:16:12.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:12.780" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:12.752" endtime="20201112 10:16:12.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.791" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:16:12.788" endtime="20201112 10:16:12.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.796" level="INFO">VALUE: [8.202799999999788e-05, 8.168100000000011e-05, 8.134700000000245e-05, 8.206999999999659e-05, 8.126399999999756e-05, 8.211099999999583e-05, 8.152799999999738e-05, 8.206999999999659e-05, 8.131899999999637e-05, 8.161099999999533e-05, 8.190299999999429e-05, 8.14719999999991e-05, 8.168000000000064e-05, 8.126399999999756e-05, 8.133300000000288e-05, 8.224999999999899e-05, 8.149999999999824e-05, 8.161100000000227e-05, 8.15970000000027e-05, 8.15970000000027e-05, 8.186100000000252e-05, 8.133399999999541e-05, 8.202799999999788e-05, 8.173600000000586e-05, 8.20269999999984e-05, 8.183399999999591e-05, 8.14719999999991e-05, 8.126399999999756e-05, 8.13190000000033e-05, 8.140200000000125e-05, 8.194499999999993e-05, 8.16390000000014e-05, 8.130500000000374e-05, 8.168000000000064e-05, 8.122199999999885e-05, 8.123599999999842e-05, 8.129099999999723e-05, 8.187499999999515e-05, 8.21390000000019e-05, 8.149999999999824e-05, 8.202799999999788e-05, 8.205499999999755e-05, 8.156899999999662e-05, 8.165300000000097e-05, 8.14719999999991e-05, 8.19719999999996e-05, 8.152799999999738e-05, 8.140300000000072e-05, 8.119399999999971e-05, 8.184700000000295e-05]</msg>
<status status="PASS" starttime="20201112 10:16:12.793" endtime="20201112 10:16:12.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.782" endtime="20201112 10:16:12.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.805" endtime="20201112 10:16:12.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.813" endtime="20201112 10:16:12.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.809" endtime="20201112 10:16:12.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.801" endtime="20201112 10:16:12.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.296" endtime="20201112 10:16:12.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.295" endtime="20201112 10:16:12.839"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.862" endtime="20201112 10:16:12.880"></status>
</kw>
<msg timestamp="20201112 10:16:12.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.858" endtime="20201112 10:16:12.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.883" endtime="20201112 10:16:12.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.889" endtime="20201112 10:16:12.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.851" endtime="20201112 10:16:12.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.846" endtime="20201112 10:16:12.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.912" endtime="20201112 10:16:13.249"></status>
</kw>
<msg timestamp="20201112 10:16:13.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040062847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.909" endtime="20201112 10:16:13.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040062847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:13.258" endtime="20201112 10:16:13.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.277" endtime="20201112 10:16:13.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.902" endtime="20201112 10:16:13.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.897" endtime="20201112 10:16:13.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:13.297" level="INFO">${RESULT} = [{'time': 0.040145153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.230600000000421e-05, 'source_diff': 8.230600000000421e-05}, {'time': 0.040234236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:13.288" endtime="20201112 10:16:13.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:13.327" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:13.299" endtime="20201112 10:16:13.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.338" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:16:13.336" endtime="20201112 10:16:13.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.343" level="INFO">VALUE: [8.230600000000421e-05, 8.302799999999888e-05, 8.286100000000352e-05, 8.277799999999863e-05, 8.251399999999881e-05, 8.281899999999787e-05, 8.243100000000086e-05, 8.248599999999967e-05, 8.293100000000136e-05, 8.299999999999974e-05, 8.272200000000035e-05, 8.257000000000403e-05, 8.227799999999813e-05, 8.274999999999949e-05, 8.261100000000327e-05, 8.277699999999916e-05, 8.270900000000025e-05, 8.236199999999555e-05, 8.263899999999547e-05, 8.243100000000086e-05, 8.283300000000438e-05, 8.23469999999965e-05, 8.274999999999949e-05, 8.277799999999863e-05, 8.222299999999932e-05, 8.304199999999845e-05, 8.230599999999727e-05, 8.2846999999997e-05, 8.276299999999959e-05, 8.320900000000075e-05, 8.279099999999873e-05, 8.295800000000103e-05, 8.238900000000215e-05, 8.326399999999956e-05, 8.258300000000413e-05, 8.254200000000489e-05, 8.224999999999899e-05, 8.309799999999673e-05, 8.225000000000593e-05, 8.286099999999658e-05, 8.277800000000557e-05, 8.220899999999975e-05, 8.324999999999999e-05, 8.220899999999975e-05, 8.286100000000352e-05, 8.231999999999684e-05, 8.270800000000078e-05, 8.2459e-05, 8.298600000000017e-05, 8.2764000000006e-05]</msg>
<status status="PASS" starttime="20201112 10:16:13.340" endtime="20201112 10:16:13.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.329" endtime="20201112 10:16:13.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.353" endtime="20201112 10:16:13.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:13.361" endtime="20201112 10:16:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.356" endtime="20201112 10:16:13.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.348" endtime="20201112 10:16:13.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.841" endtime="20201112 10:16:13.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.840" endtime="20201112 10:16:13.387"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.409" endtime="20201112 10:16:13.427"></status>
</kw>
<msg timestamp="20201112 10:16:13.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.406" endtime="20201112 10:16:13.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.430" endtime="20201112 10:16:13.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.436" endtime="20201112 10:16:13.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.399" endtime="20201112 10:16:13.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.393" endtime="20201112 10:16:13.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.459" endtime="20201112 10:16:13.797"></status>
</kw>
<msg timestamp="20201112 10:16:13.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039913819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03999775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:13.456" endtime="20201112 10:16:13.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039913819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03999775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:13.806" endtime="20201112 10:16:13.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.824" endtime="20201112 10:16:13.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.449" endtime="20201112 10:16:13.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.444" endtime="20201112 10:16:13.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:13.843" level="INFO">${RESULT} = [{'time': 0.03999775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.393099999999543e-05, 'source_diff': 8.393099999999543e-05}, {'time': 0.040086944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:13.834" endtime="20201112 10:16:13.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:13.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:13.845" endtime="20201112 10:16:13.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.884" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:16:13.882" endtime="20201112 10:16:13.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.889" level="INFO">VALUE: [8.393099999999543e-05, 8.373600000000092e-05, 8.369500000000168e-05, 8.355599999999852e-05, 8.358299999999819e-05, 8.392999999999595e-05, 8.398600000000117e-05, 8.40970000000052e-05, 8.3459000000001e-05, 8.384799999999748e-05, 8.362500000000384e-05, 8.383299999999844e-05, 8.369500000000168e-05, 8.412500000000434e-05, 8.386099999999758e-05, 8.427800000000013e-05, 8.341600000000282e-05, 8.316600000000257e-05, 8.383300000000538e-05, 8.392999999999595e-05, 8.386199999999705e-05, 8.356899999999862e-05, 8.390300000000323e-05, 8.390199999999681e-05, 8.351399999999981e-05, 8.354099999999948e-05, 8.327799999999913e-05, 8.405600000000596e-05, 8.369500000000168e-05, 8.362500000000384e-05, 8.355599999999852e-05, 8.352799999999938e-05, 8.41249999999974e-05, 8.375000000000049e-05, 8.347300000000057e-05, 8.381899999999887e-05, 8.376300000000059e-05, 8.330599999999827e-05, 8.395800000000203e-05, 8.340299999999579e-05, 8.318100000000161e-05, 8.320799999999434e-05, 8.341699999999536e-05, 8.319400000000171e-05, 8.376400000000006e-05, 8.388900000000366e-05, 8.406999999999859e-05, 8.383299999999844e-05, 8.363899999999647e-05, 8.354199999999895e-05]</msg>
<status status="PASS" starttime="20201112 10:16:13.886" endtime="20201112 10:16:13.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.875" endtime="20201112 10:16:13.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.898" endtime="20201112 10:16:13.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:13.907" endtime="20201112 10:16:13.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.902" endtime="20201112 10:16:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.894" endtime="20201112 10:16:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.389" endtime="20201112 10:16:13.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.388" endtime="20201112 10:16:13.932"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.955" endtime="20201112 10:16:13.973"></status>
</kw>
<msg timestamp="20201112 10:16:13.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.951" endtime="20201112 10:16:13.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.976" endtime="20201112 10:16:13.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.982" endtime="20201112 10:16:13.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.944" endtime="20201112 10:16:13.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.939" endtime="20201112 10:16:13.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.005" endtime="20201112 10:16:14.342"></status>
</kw>
<msg timestamp="20201112 10:16:14.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039897208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.002" endtime="20201112 10:16:14.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039897208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.351" endtime="20201112 10:16:14.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.370" endtime="20201112 10:16:14.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.995" endtime="20201112 10:16:14.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.990" endtime="20201112 10:16:14.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.390" level="INFO">${RESULT} = [{'time': 0.039897208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.490200000000475e-05, 'source_diff': 8.490200000000475e-05}, {'time': 0.039992431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:14.382" endtime="20201112 10:16:14.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:14.420" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:14.392" endtime="20201112 10:16:14.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.431" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:16:14.429" endtime="20201112 10:16:14.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.436" level="INFO">VALUE: [8.490200000000475e-05, 8.487500000000509e-05, 8.425000000000099e-05, 8.46390000000044e-05, 8.502800000000088e-05, 8.455500000000005e-05, 8.431899999999937e-05, 8.420799999999534e-05, 8.513800000000543e-05, 8.479100000000073e-05, 8.443100000000286e-05, 8.416600000000357e-05, 8.448600000000167e-05, 8.451400000000081e-05, 8.416700000000304e-05, 8.513899999999797e-05, 8.46249999999979e-05, 8.472200000000235e-05, 8.437500000000459e-05, 8.418000000000314e-05, 8.427800000000013e-05, 8.41390000000039e-05, 8.488899999999772e-05, 8.508399999999916e-05, 8.444500000000243e-05, 8.448600000000167e-05, 8.43469999999985e-05, 8.516600000000457e-05, 8.461099999999833e-05, 8.440299999999679e-05, 8.42919999999997e-05, 8.456999999999909e-05, 8.444400000000296e-05, 8.431899999999937e-05, 8.506900000000012e-05, 8.430599999999927e-05, 8.509699999999926e-05, 8.44720000000021e-05, 8.476399999999412e-05, 8.511099999999883e-05, 8.444400000000296e-05, 8.470800000000278e-05, 8.46669999999966e-05, 8.425000000000099e-05, 8.509699999999926e-05, 8.506900000000012e-05, 8.488899999999772e-05, 8.437500000000459e-05, 8.515299999999754e-05, 8.49590000000025e-05]</msg>
<status status="PASS" starttime="20201112 10:16:14.433" endtime="20201112 10:16:14.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.422" endtime="20201112 10:16:14.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.445" endtime="20201112 10:16:14.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.454" endtime="20201112 10:16:14.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.449" endtime="20201112 10:16:14.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.441" endtime="20201112 10:16:14.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.934" endtime="20201112 10:16:14.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.933" endtime="20201112 10:16:14.480"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.502" endtime="20201112 10:16:14.521"></status>
</kw>
<msg timestamp="20201112 10:16:14.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.499" endtime="20201112 10:16:14.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.525" endtime="20201112 10:16:14.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.531" endtime="20201112 10:16:14.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.491" endtime="20201112 10:16:14.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.486" endtime="20201112 10:16:14.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.554" endtime="20201112 10:16:14.902"></status>
</kw>
<msg timestamp="20201112 10:16:14.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.550" endtime="20201112 10:16:14.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.912" endtime="20201112 10:16:14.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.930" endtime="20201112 10:16:14.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.543" endtime="20201112 10:16:14.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.539" endtime="20201112 10:16:14.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.949" level="INFO">${RESULT} = [{'time': 0.040065792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555600000000052e-05, 'source_diff': 8.555600000000052e-05}, {'time': 0.040157903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:14.940" endtime="20201112 10:16:14.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:14.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:14.951" endtime="20201112 10:16:14.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.990" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:16:14.988" endtime="20201112 10:16:14.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.995" level="INFO">VALUE: [8.555600000000052e-05, 8.594500000000393e-05, 8.606900000000112e-05, 8.526400000000156e-05, 8.523599999999548e-05, 8.54720000000031e-05, 8.611099999999983e-05, 8.558399999999966e-05, 8.54999999999953e-05, 8.59720000000036e-05, 8.586099999999958e-05, 8.536199999999855e-05, 8.594400000000446e-05, 8.601400000000231e-05, 8.548599999999573e-05, 8.601399999999537e-05, 8.591599999999838e-05, 8.519399999999677e-05, 8.59720000000036e-05, 8.61249999999994e-05, 8.540299999999779e-05, 8.533299999999994e-05, 8.58050000000013e-05, 8.547199999999616e-05, 8.570799999999684e-05, 8.570900000000325e-05, 8.520799999999634e-05, 8.579199999999426e-05, 8.613899999999897e-05, 8.533299999999994e-05, 8.590300000000523e-05, 8.591699999999786e-05, 8.541600000000482e-05, 8.593099999999743e-05, 8.542999999999745e-05, 8.568100000000411e-05, 8.541699999999736e-05, 8.573599999999598e-05, 8.52920000000007e-05, 8.554100000000148e-05, 8.51669999999971e-05, 8.602799999999494e-05, 8.529100000000123e-05, 8.518100000000361e-05, 8.56249999999989e-05, 8.582000000000034e-05, 8.541699999999736e-05, 8.559699999999976e-05, 8.602800000000188e-05, 8.602699999999547e-05]</msg>
<status status="PASS" starttime="20201112 10:16:14.992" endtime="20201112 10:16:15.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.981" endtime="20201112 10:16:15.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.009" endtime="20201112 10:16:15.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:15.017" endtime="20201112 10:16:15.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.013" endtime="20201112 10:16:15.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.004" endtime="20201112 10:16:15.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.482" endtime="20201112 10:16:15.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.480" endtime="20201112 10:16:15.043"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.065" endtime="20201112 10:16:15.085"></status>
</kw>
<msg timestamp="20201112 10:16:15.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.062" endtime="20201112 10:16:15.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.089" endtime="20201112 10:16:15.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.095" endtime="20201112 10:16:15.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.055" endtime="20201112 10:16:15.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.049" endtime="20201112 10:16:15.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.118" endtime="20201112 10:16:15.466"></status>
</kw>
<msg timestamp="20201112 10:16:15.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040145083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.114" endtime="20201112 10:16:15.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040145083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.475" endtime="20201112 10:16:15.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.494" endtime="20201112 10:16:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.107" endtime="20201112 10:16:15.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.103" endtime="20201112 10:16:15.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:15.513" level="INFO">${RESULT} = [{'time': 0.040232222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.713899999999997e-05, 'source_diff': 8.713899999999997e-05}, {'time': 0.040323361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:15.504" endtime="20201112 10:16:15.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:15.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:15.515" endtime="20201112 10:16:15.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.553" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:16:15.551" endtime="20201112 10:16:15.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.559" level="INFO">VALUE: [8.713899999999997e-05, 8.66249999999999e-05, 8.62370000000029e-05, 8.704200000000245e-05, 8.679099999999579e-05, 8.624999999999605e-05, 8.63470000000005e-05, 8.634699999999357e-05, 8.679100000000273e-05, 8.704100000000298e-05, 8.663899999999947e-05, 8.688899999999972e-05, 8.693000000000589e-05, 8.676400000000306e-05, 8.63470000000005e-05, 8.713899999999997e-05, 8.694399999999852e-05, 8.663899999999947e-05, 8.648599999999673e-05, 8.677800000000263e-05, 8.638899999999922e-05, 8.719499999999825e-05, 8.618100000000462e-05, 8.631900000000137e-05, 8.66669999999986e-05, 8.69720000000046e-05, 8.665299999999904e-05, 8.61799999999982e-05, 8.697199999999766e-05, 8.640299999999879e-05, 8.640299999999879e-05, 8.687500000000015e-05, 8.638899999999922e-05, 8.66669999999986e-05, 8.632000000000084e-05, 8.69999999999968e-05, 8.705600000000202e-05, 8.640299999999879e-05, 8.625000000000299e-05, 8.652800000000238e-05, 8.691599999999938e-05, 8.709700000000126e-05, 8.659800000000023e-05, 8.702799999999594e-05, 8.61669999999981e-05, 8.718100000000562e-05, 8.688899999999972e-05, 8.66799999999987e-05, 8.651400000000281e-05, 8.66249999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:16:15.555" endtime="20201112 10:16:15.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.544" endtime="20201112 10:16:15.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.568" endtime="20201112 10:16:15.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:15.576" endtime="20201112 10:16:15.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.572" endtime="20201112 10:16:15.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.563" endtime="20201112 10:16:15.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.045" endtime="20201112 10:16:15.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.044" endtime="20201112 10:16:15.602"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.624" endtime="20201112 10:16:15.644"></status>
</kw>
<msg timestamp="20201112 10:16:15.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.621" endtime="20201112 10:16:15.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.648" endtime="20201112 10:16:15.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.654" endtime="20201112 10:16:15.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.614" endtime="20201112 10:16:15.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.609" endtime="20201112 10:16:15.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.677" endtime="20201112 10:16:16.024"></status>
</kw>
<msg timestamp="20201112 10:16:16.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040205569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.674" endtime="20201112 10:16:16.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040205569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.033" endtime="20201112 10:16:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.051" endtime="20201112 10:16:16.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.667" endtime="20201112 10:16:16.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.662" endtime="20201112 10:16:16.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:16.070" level="INFO">${RESULT} = [{'time': 0.040293528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.79590000000055e-05, 'source_diff': 8.79590000000055e-05}, {'time': 0.040391611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:16:16.061" endtime="20201112 10:16:16.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:16.100" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:16.072" endtime="20201112 10:16:16.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.111" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:16:16.109" endtime="20201112 10:16:16.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.116" level="INFO">VALUE: [8.79590000000055e-05, 8.791699999999986e-05, 8.809700000000226e-05, 8.800000000000474e-05, 8.74999999999973e-05, 8.755600000000252e-05, 8.805500000000355e-05, 8.769400000000621e-05, 8.784699999999507e-05, 8.730499999999586e-05, 8.733400000000141e-05, 8.804199999999651e-05, 8.76669999999996e-05, 8.722299999999739e-05, 8.805599999999608e-05, 8.791699999999986e-05, 8.751399999999687e-05, 8.81250000000014e-05, 8.772199999999841e-05, 8.726399999999662e-05, 8.768099999999918e-05, 8.74449999999985e-05, 8.813900000000097e-05, 8.804099999999704e-05, 8.806899999999618e-05, 8.76669999999996e-05, 8.813900000000097e-05, 8.802799999999694e-05, 8.769399999999927e-05, 8.761099999999439e-05, 8.784700000000201e-05, 8.745799999999859e-05, 8.783399999999497e-05, 8.747199999999816e-05, 8.783399999999497e-05, 8.793100000000637e-05, 8.794399999999952e-05, 8.751399999999687e-05, 8.747199999999816e-05, 8.794500000000594e-05, 8.782000000000234e-05, 8.780600000000277e-05, 8.776399999999712e-05, 8.742999999999945e-05, 8.727799999999619e-05, 8.804199999999651e-05, 8.71799999999992e-05, 8.793099999999943e-05, 8.769399999999927e-05, 8.787500000000115e-05]</msg>
<status status="PASS" starttime="20201112 10:16:16.113" endtime="20201112 10:16:16.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.102" endtime="20201112 10:16:16.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.125" endtime="20201112 10:16:16.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:16.133" endtime="20201112 10:16:16.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.129" endtime="20201112 10:16:16.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.121" endtime="20201112 10:16:16.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.604" endtime="20201112 10:16:16.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.603" endtime="20201112 10:16:16.160"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.182" endtime="20201112 10:16:16.202"></status>
</kw>
<msg timestamp="20201112 10:16:16.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.179" endtime="20201112 10:16:16.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.205" endtime="20201112 10:16:16.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.211" endtime="20201112 10:16:16.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.172" endtime="20201112 10:16:16.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.166" endtime="20201112 10:16:16.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.234" endtime="20201112 10:16:16.578"></status>
</kw>
<msg timestamp="20201112 10:16:16.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040112444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040201028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.231" endtime="20201112 10:16:16.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040112444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040201028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.587" endtime="20201112 10:16:16.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.606" endtime="20201112 10:16:16.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.224" endtime="20201112 10:16:16.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.219" endtime="20201112 10:16:16.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:16.627" level="INFO">${RESULT} = [{'time': 0.040201028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.858400000000266e-05, 'source_diff': 8.858400000000266e-05}, {'time': 0.040300264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:16.618" endtime="20201112 10:16:16.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:16.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:16.629" endtime="20201112 10:16:16.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.668" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:16:16.666" endtime="20201112 10:16:16.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.673" level="INFO">VALUE: [8.858400000000266e-05, 8.877800000000463e-05, 8.884800000000248e-05, 8.833300000000294e-05, 8.830599999999633e-05, 8.831900000000337e-05, 8.841599999999394e-05, 8.879099999999779e-05, 8.888900000000172e-05, 8.861099999999539e-05, 8.912499999999546e-05, 8.915300000000154e-05, 8.852700000000491e-05, 8.91250000000024e-05, 8.848599999999873e-05, 8.904200000000445e-05, 8.904200000000445e-05, 8.841699999999342e-05, 8.8945e-05, 8.88050000000043e-05, 8.922200000000685e-05, 8.883300000000344e-05, 8.847300000000557e-05, 8.836100000000208e-05, 8.848599999999873e-05, 8.906999999999665e-05, 8.881900000000387e-05, 8.86800000000007e-05, 8.838899999999428e-05, 8.841700000000036e-05, 8.876399999999812e-05, 8.924999999999905e-05, 8.845799999999959e-05, 8.882000000000334e-05, 8.836099999999514e-05, 8.876399999999812e-05, 8.897199999999966e-05, 8.913799999999555e-05, 8.850000000000524e-05, 8.85129999999984e-05, 8.841600000000088e-05, 8.845799999999959e-05, 8.888900000000172e-05, 8.844400000000002e-05, 8.920800000000034e-05, 8.876399999999812e-05, 8.841600000000088e-05, 8.851399999999787e-05, 8.865200000000156e-05, 8.827799999999719e-05]</msg>
<status status="PASS" starttime="20201112 10:16:16.670" endtime="20201112 10:16:16.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.659" endtime="20201112 10:16:16.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.683" endtime="20201112 10:16:16.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:16.691" endtime="20201112 10:16:16.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.687" endtime="20201112 10:16:16.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.678" endtime="20201112 10:16:16.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.162" endtime="20201112 10:16:16.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.161" endtime="20201112 10:16:16.717"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.741" endtime="20201112 10:16:16.759"></status>
</kw>
<msg timestamp="20201112 10:16:16.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.737" endtime="20201112 10:16:16.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.763" endtime="20201112 10:16:16.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.769" endtime="20201112 10:16:16.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.730" endtime="20201112 10:16:16.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.725" endtime="20201112 10:16:16.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.792" endtime="20201112 10:16:17.133"></status>
</kw>
<msg timestamp="20201112 10:16:17.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041578792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041668194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.789" endtime="20201112 10:16:17.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041578792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041668194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.142" endtime="20201112 10:16:17.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.160" endtime="20201112 10:16:17.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.782" endtime="20201112 10:16:17.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.777" endtime="20201112 10:16:17.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.179" level="INFO">${RESULT} = [{'time': 0.041668194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.940199999999537e-05, 'source_diff': 8.940199999999537e-05}, {'time': 0.041769472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:17.170" endtime="20201112 10:16:17.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:17.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:17.181" endtime="20201112 10:16:17.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.220" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:16:17.218" endtime="20201112 10:16:17.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.225" level="INFO">VALUE: [8.940199999999537e-05, 9.091600000000338e-05, 8.952799999999844e-05, 8.96250000000029e-05, 9.009699999999732e-05, 9.004199999999851e-05, 8.933300000000394e-05, 9.013900000000297e-05, 8.954199999999801e-05, 8.924999999999905e-05, 9.119500000000225e-05, 8.925000000000599e-05, 8.994400000000152e-05, 9.106899999999918e-05, 9.016600000000263e-05, 8.977799999999869e-05, 8.94999999999993e-05, 9.04450000000015e-05, 8.981900000000487e-05, 9.113899999999703e-05, 8.990300000000229e-05, 9.056999999999815e-05, 8.934699999999657e-05, 9.06670000000026e-05, 8.977799999999869e-05, 9.104199999999951e-05, 8.92920000000047e-05, 8.98329999999975e-05, 8.941700000000136e-05, 8.96670000000016e-05, 8.922299999999939e-05, 8.981900000000487e-05, 8.99999999999998e-05, 9.051399999999987e-05, 8.963899999999553e-05, 8.943000000000145e-05, 8.938900000000222e-05, 8.997200000000066e-05, 9.059799999999729e-05, 8.937500000000265e-05, 8.997200000000066e-05, 9.01670000000021e-05, 9.084800000000448e-05, 8.951399999999887e-05, 9.002799999999894e-05, 9.063899999999653e-05, 8.974999999999955e-05, 8.983399999999697e-05, 8.937499999999571e-05, 9.005599999999808e-05]</msg>
<status status="PASS" starttime="20201112 10:16:17.222" endtime="20201112 10:16:17.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.211" endtime="20201112 10:16:17.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.234" endtime="20201112 10:16:17.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.242" endtime="20201112 10:16:17.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.238" endtime="20201112 10:16:17.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.230" endtime="20201112 10:16:17.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.720" endtime="20201112 10:16:17.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.718" endtime="20201112 10:16:17.268"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.290" endtime="20201112 10:16:17.309"></status>
</kw>
<msg timestamp="20201112 10:16:17.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.287" endtime="20201112 10:16:17.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.312" endtime="20201112 10:16:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.318" endtime="20201112 10:16:17.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.280" endtime="20201112 10:16:17.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.274" endtime="20201112 10:16:17.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.341" endtime="20201112 10:16:17.677"></status>
</kw>
<msg timestamp="20201112 10:16:17.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039876903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:16:17.338" endtime="20201112 10:16:17.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039876903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:16:17.687" endtime="20201112 10:16:17.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.705" endtime="20201112 10:16:17.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.331" endtime="20201112 10:16:17.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.326" endtime="20201112 10:16:17.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.724" level="INFO">${RESULT} = [{'time': 0.039876903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.040299999999585e-05, 'source_diff': 9.040299999999585e-05}, {'time': 0.039974069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:17.715" endtime="20201112 10:16:17.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:17.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:17.726" endtime="20201112 10:16:17.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.765" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:16:17.763" endtime="20201112 10:16:17.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.770" level="INFO">VALUE: [9.040299999999585e-05, 9.097200000000166e-05, 9.025000000000005e-05, 9.084699999999807e-05, 9.105599999999908e-05, 9.131899999999943e-05, 9.052699999999997e-05, 9.097200000000166e-05, 9.137499999999771e-05, 9.070899999999438e-05, 9.052799999999944e-05, 9.154200000000001e-05, 9.062499999999696e-05, 9.161099999999839e-05, 9.06250000000039e-05, 9.112499999999746e-05, 9.208299999999975e-05, 9.037499999999671e-05, 9.116699999999617e-05, 9.081899999999893e-05, 9.151400000000087e-05, 9.051399999999987e-05, 9.04859999999938e-05, 9.045900000000107e-05, 9.026399999999962e-05, 9.188899999999778e-05, 9.076400000000012e-05, 9.15000000000013e-05, 9.055499999999911e-05, 9.068100000000218e-05, 9.08879999999973e-05, 9.023599999999354e-05, 9.20000000000018e-05, 9.144399999999608e-05, 9.205599999999314e-05, 9.119499999999531e-05, 9.143100000000293e-05, 9.019500000000125e-05, 9.034699999999757e-05, 9.079199999999926e-05, 9.027799999999919e-05, 9.166699999999667e-05, 9.08199999999984e-05, 9.181899999999993e-05, 9.087499999999721e-05, 9.062499999999696e-05, 9.041700000000236e-05, 9.033399999999747e-05, 9.201399999999443e-05, 9.10000000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:16:17.767" endtime="20201112 10:16:17.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.756" endtime="20201112 10:16:17.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.780" endtime="20201112 10:16:17.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.788" endtime="20201112 10:16:17.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.783" endtime="20201112 10:16:17.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.775" endtime="20201112 10:16:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.270" endtime="20201112 10:16:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.269" endtime="20201112 10:16:17.814"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.836" endtime="20201112 10:16:17.854"></status>
</kw>
<msg timestamp="20201112 10:16:17.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.833" endtime="20201112 10:16:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.858" endtime="20201112 10:16:17.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.864" endtime="20201112 10:16:17.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.825" endtime="20201112 10:16:17.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.820" endtime="20201112 10:16:17.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.887" endtime="20201112 10:16:18.222"></status>
</kw>
<msg timestamp="20201112 10:16:18.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040000972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.883" endtime="20201112 10:16:18.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040000972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.231" endtime="20201112 10:16:18.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.250" endtime="20201112 10:16:18.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.876" endtime="20201112 10:16:18.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.872" endtime="20201112 10:16:18.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.268" level="INFO">${RESULT} = [{'time': 0.040000972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.279100000000179e-05, 'source_diff': 9.279100000000179e-05}, {'time': 0.040097125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:18.259" endtime="20201112 10:16:18.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:18.298" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:18.270" endtime="20201112 10:16:18.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.309" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:16:18.307" endtime="20201112 10:16:18.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.314" level="INFO">VALUE: [9.279100000000179e-05, 9.162499999999796e-05, 9.168100000000318e-05, 9.145800000000259e-05, 9.158399999999872e-05, 9.188899999999778e-05, 9.325000000000305e-05, 9.148600000000173e-05, 9.28330000000005e-05, 9.20000000000018e-05, 9.125000000000105e-05, 9.275000000000255e-05, 9.215199999999812e-05, 9.295899999999663e-05, 9.136099999999814e-05, 9.295899999999663e-05, 9.213899999999803e-05, 9.241700000000436e-05, 9.280500000000136e-05, 9.151400000000087e-05, 9.287499999999921e-05, 9.15000000000013e-05, 9.302699999999553e-05, 9.158400000000566e-05, 9.234699999999957e-05, 9.184699999999907e-05, 9.31529999999986e-05, 9.188900000000472e-05, 9.297199999999672e-05, 9.205600000000008e-05, 9.290300000000529e-05, 9.191699999999692e-05, 9.302800000000194e-05, 9.122200000000191e-05, 9.313899999999903e-05, 9.151400000000087e-05, 9.263899999999853e-05, 9.216699999999717e-05, 9.229200000000076e-05, 9.16250000000049e-05, 9.219399999999683e-05, 9.266699999999767e-05, 9.27079999999969e-05, 9.269500000000375e-05, 9.188899999999778e-05, 9.173600000000198e-05, 9.22079999999964e-05, 9.188899999999778e-05, 9.137499999999771e-05, 9.206900000000018e-05]</msg>
<status status="PASS" starttime="20201112 10:16:18.311" endtime="20201112 10:16:18.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.300" endtime="20201112 10:16:18.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.324" endtime="20201112 10:16:18.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:18.332" endtime="20201112 10:16:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.328" endtime="20201112 10:16:18.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.319" endtime="20201112 10:16:18.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.816" endtime="20201112 10:16:18.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.814" endtime="20201112 10:16:18.358"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.380" endtime="20201112 10:16:18.399"></status>
</kw>
<msg timestamp="20201112 10:16:18.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.377" endtime="20201112 10:16:18.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.402" endtime="20201112 10:16:18.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.408" endtime="20201112 10:16:18.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.370" endtime="20201112 10:16:18.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.364" endtime="20201112 10:16:18.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.431" endtime="20201112 10:16:18.768"></status>
</kw>
<msg timestamp="20201112 10:16:18.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039804431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.428" endtime="20201112 10:16:18.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039804431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.778" endtime="20201112 10:16:18.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.796" endtime="20201112 10:16:18.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.421" endtime="20201112 10:16:18.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.416" endtime="20201112 10:16:18.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.817" level="INFO">${RESULT} = [{'time': 0.039898528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.409700000000132e-05, 'source_diff': 9.409700000000132e-05}, {'time': 0.039997694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:18.808" endtime="20201112 10:16:18.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:18.847" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:18.819" endtime="20201112 10:16:18.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.857" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:16:18.855" endtime="20201112 10:16:18.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.863" level="INFO">VALUE: [9.409700000000132e-05, 9.26659999999982e-05, 9.354200000000201e-05, 9.241699999999742e-05, 9.397199999999772e-05, 9.384700000000107e-05, 9.369399999999833e-05, 9.280500000000136e-05, 9.361100000000039e-05, 9.305500000000161e-05, 9.234799999999904e-05, 9.380600000000183e-05, 9.243100000000393e-05, 9.379200000000226e-05, 9.334800000000004e-05, 9.327700000000272e-05, 9.225000000000205e-05, 9.266700000000461e-05, 9.374999999999661e-05, 9.237499999999871e-05, 9.337499999999971e-05, 9.342999999999851e-05, 9.311199999999936e-05, 9.30000000000028e-05, 9.407000000000165e-05, 9.268099999999724e-05, 9.242999999999751e-05, 9.419399999999883e-05, 9.288899999999878e-05, 9.329199999999482e-05, 9.28879999999993e-05, 9.319400000000477e-05, 9.367999999999876e-05, 9.24450000000035e-05, 9.258399999999972e-05, 9.36529999999991e-05, 9.308400000000022e-05, 9.242999999999751e-05, 9.309700000000032e-05, 9.230600000000033e-05, 9.425000000000405e-05, 9.284700000000007e-05, 9.316699999999817e-05, 9.418099999999874e-05, 9.252700000000197e-05, 9.305600000000108e-05, 9.363899999999953e-05, 9.41659999999997e-05, 9.393099999999849e-05, 9.256900000000068e-05]</msg>
<status status="PASS" starttime="20201112 10:16:18.860" endtime="20201112 10:16:18.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.848" endtime="20201112 10:16:18.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.872" endtime="20201112 10:16:18.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:18.880" endtime="20201112 10:16:18.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.876" endtime="20201112 10:16:18.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.868" endtime="20201112 10:16:18.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.360" endtime="20201112 10:16:18.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.359" endtime="20201112 10:16:18.906"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.928" endtime="20201112 10:16:18.947"></status>
</kw>
<msg timestamp="20201112 10:16:18.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.925" endtime="20201112 10:16:18.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.950" endtime="20201112 10:16:18.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.957" endtime="20201112 10:16:18.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.918" endtime="20201112 10:16:18.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.912" endtime="20201112 10:16:18.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.979" endtime="20201112 10:16:19.316"></status>
</kw>
<msg timestamp="20201112 10:16:19.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040307361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.976" endtime="20201112 10:16:19.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040307361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.325" endtime="20201112 10:16:19.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.344" endtime="20201112 10:16:19.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.969" endtime="20201112 10:16:19.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.964" endtime="20201112 10:16:19.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.362" level="INFO">${RESULT} = [{'time': 0.040307361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390299999999935e-05, 'source_diff': 9.390299999999935e-05}, {'time': 0.040411583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:19.354" endtime="20201112 10:16:19.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:19.392" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:19.364" endtime="20201112 10:16:19.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.403" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:16:19.401" endtime="20201112 10:16:19.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.408" level="INFO">VALUE: [9.390299999999935e-05, 9.44859999999978e-05, 9.352800000000244e-05, 9.434800000000104e-05, 9.384700000000107e-05, 9.407000000000165e-05, 9.436100000000114e-05, 9.341599999999894e-05, 9.444499999999856e-05, 9.358300000000125e-05, 9.386200000000011e-05, 9.369499999999781e-05, 9.497200000000566e-05, 9.431900000000243e-05, 9.441699999999942e-05, 9.479199999999632e-05, 9.494399999999958e-05, 9.402800000000294e-05, 9.440299999999985e-05, 9.462500000000096e-05, 9.341599999999894e-05, 9.377700000000322e-05, 9.354200000000201e-05, 9.438900000000028e-05, 9.454100000000354e-05, 9.383299999999456e-05, 9.361100000000039e-05, 9.358400000000072e-05, 9.469499999999881e-05, 9.395900000000457e-05, 9.401399999999643e-05, 9.395899999999763e-05, 9.334700000000057e-05, 9.519399999999983e-05, 9.338899999999928e-05, 9.459699999999488e-05, 9.354100000000254e-05, 9.344399999999808e-05, 9.444499999999856e-05, 9.411100000000089e-05, 9.455499999999617e-05, 9.520899999999888e-05, 9.434700000000157e-05, 9.469499999999881e-05, 9.459800000000129e-05, 9.46530000000001e-05, 9.449999999999736e-05, 9.479199999999632e-05, 9.341700000000536e-05, 9.448600000000473e-05]</msg>
<status status="PASS" starttime="20201112 10:16:19.405" endtime="20201112 10:16:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.394" endtime="20201112 10:16:19.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.418" endtime="20201112 10:16:19.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:19.426" endtime="20201112 10:16:19.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.421" endtime="20201112 10:16:19.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.413" endtime="20201112 10:16:19.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.908" endtime="20201112 10:16:19.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.907" endtime="20201112 10:16:19.451"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.474" endtime="20201112 10:16:19.493"></status>
</kw>
<msg timestamp="20201112 10:16:19.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.471" endtime="20201112 10:16:19.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.497" endtime="20201112 10:16:19.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.503" endtime="20201112 10:16:19.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.463" endtime="20201112 10:16:19.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.458" endtime="20201112 10:16:19.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.526" endtime="20201112 10:16:19.862"></status>
</kw>
<msg timestamp="20201112 10:16:19.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040605903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040702153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.523" endtime="20201112 10:16:19.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040605903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040702153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.871" endtime="20201112 10:16:19.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.890" endtime="20201112 10:16:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.516" endtime="20201112 10:16:19.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.511" endtime="20201112 10:16:19.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.909" level="INFO">${RESULT} = [{'time': 0.040702153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999911e-05, 'source_diff': 9.624999999999911e-05}, {'time': 0.040805333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:19.900" endtime="20201112 10:16:19.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:19.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:19.911" endtime="20201112 10:16:19.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.949" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:16:19.947" endtime="20201112 10:16:19.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.955" level="INFO">VALUE: [9.624999999999911e-05, 9.437500000000071e-05, 9.559699999999588e-05, 9.441699999999942e-05, 9.466699999999967e-05, 9.594400000000058e-05, 9.512499999999452e-05, 9.466699999999967e-05, 9.566700000000067e-05, 9.43200000000019e-05, 9.619500000000031e-05, 9.591700000000092e-05, 9.457000000000215e-05, 9.469399999999933e-05, 9.543099999999999e-05, 9.562500000000196e-05, 9.591600000000144e-05, 9.520899999999888e-05, 9.543099999999999e-05, 9.579199999999732e-05, 9.466699999999967e-05, 9.61660000000017e-05, 9.473600000000498e-05, 9.480500000000336e-05, 9.562500000000196e-05, 9.561099999999545e-05, 9.451399999999693e-05, 9.476399999999718e-05, 9.597199999999972e-05, 9.449999999999736e-05, 9.547199999999922e-05, 9.477799999999675e-05, 9.497200000000566e-05, 9.580499999999742e-05, 9.555600000000358e-05, 9.552700000000497e-05, 9.579200000000426e-05, 9.543099999999999e-05, 9.626399999999868e-05, 9.43200000000019e-05, 9.588900000000178e-05, 9.555600000000358e-05, 9.624999999999911e-05, 9.579200000000426e-05, 9.463900000000053e-05, 9.6027999999998e-05, 9.441599999999994e-05, 9.608399999999628e-05, 9.461099999999445e-05, 9.618000000000126e-05]</msg>
<status status="PASS" starttime="20201112 10:16:19.952" endtime="20201112 10:16:19.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.940" endtime="20201112 10:16:19.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.964" endtime="20201112 10:16:19.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:19.972" endtime="20201112 10:16:19.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.968" endtime="20201112 10:16:19.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.960" endtime="20201112 10:16:19.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.454" endtime="20201112 10:16:19.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.452" endtime="20201112 10:16:19.998"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.020" endtime="20201112 10:16:20.039"></status>
</kw>
<msg timestamp="20201112 10:16:20.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.017" endtime="20201112 10:16:20.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.042" endtime="20201112 10:16:20.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.048" endtime="20201112 10:16:20.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.010" endtime="20201112 10:16:20.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.004" endtime="20201112 10:16:20.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.071" endtime="20201112 10:16:20.406"></status>
</kw>
<msg timestamp="20201112 10:16:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040071917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.068" endtime="20201112 10:16:20.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040071917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.415" endtime="20201112 10:16:20.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.433" endtime="20201112 10:16:20.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.061" endtime="20201112 10:16:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.056" endtime="20201112 10:16:20.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:20.452" level="INFO">${RESULT} = [{'time': 0.040168292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.637500000000271e-05, 'source_diff': 9.637500000000271e-05}, {'time': 0.040275458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:20.443" endtime="20201112 10:16:20.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:20.482" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:20.454" endtime="20201112 10:16:20.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.493" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:16:20.490" endtime="20201112 10:16:20.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.498" level="INFO">VALUE: [9.637500000000271e-05, 9.627699999999878e-05, 9.697199999999379e-05, 9.55279999999975e-05, 9.701399999999943e-05, 9.633299999999706e-05, 9.683400000000397e-05, 9.706900000000518e-05, 9.640300000000185e-05, 9.656899999999774e-05, 9.651399999999893e-05, 9.688899999999584e-05, 9.698699999999977e-05, 9.647200000000022e-05, 9.659699999999688e-05, 9.634699999999663e-05, 9.688900000000278e-05, 9.634699999999663e-05, 9.65279999999985e-05, 9.547300000000564e-05, 9.69860000000003e-05, 9.695900000000063e-05, 9.63609999999962e-05, 9.633399999999653e-05, 9.638900000000228e-05, 9.706999999999771e-05, 9.687500000000321e-05, 9.631899999999749e-05, 9.597199999999972e-05, 9.686100000000364e-05, 9.680500000000536e-05, 9.68200000000044e-05, 9.69860000000003e-05, 9.645900000000013e-05, 9.613900000000203e-05, 9.713899999999609e-05, 9.657000000000415e-05, 9.551399999999793e-05, 9.679200000000526e-05, 9.522199999999897e-05, 9.668100000000124e-05, 9.626299999999921e-05, 9.681899999999799e-05, 9.652699999999903e-05, 9.690300000000235e-05, 9.665299999999516e-05, 9.683299999999756e-05, 9.659700000000382e-05, 9.701299999999996e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201112 10:16:20.495" endtime="20201112 10:16:20.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.484" endtime="20201112 10:16:20.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.514" endtime="20201112 10:16:20.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:20.523" endtime="20201112 10:16:20.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.519" endtime="20201112 10:16:20.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.510" endtime="20201112 10:16:20.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.000" endtime="20201112 10:16:20.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.999" endtime="20201112 10:16:20.549"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.572" endtime="20201112 10:16:20.591"></status>
</kw>
<msg timestamp="20201112 10:16:20.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.568" endtime="20201112 10:16:20.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.594" endtime="20201112 10:16:20.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.601" endtime="20201112 10:16:20.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.561" endtime="20201112 10:16:20.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.556" endtime="20201112 10:16:20.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.624" endtime="20201112 10:16:20.959"></status>
</kw>
<msg timestamp="20201112 10:16:20.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040232236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.620" endtime="20201112 10:16:20.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040232236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.968" endtime="20201112 10:16:20.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.987" endtime="20201112 10:16:20.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.613" endtime="20201112 10:16:20.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.609" endtime="20201112 10:16:20.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:21.008" level="INFO">${RESULT} = [{'time': 0.040329708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.747200000000122e-05, 'source_diff': 9.747200000000122e-05}, {'time': 0.040438028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:20.999" endtime="20201112 10:16:21.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:21.037" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:21.010" endtime="20201112 10:16:21.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.048" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:16:21.046" endtime="20201112 10:16:21.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.053" level="INFO">VALUE: [9.747200000000122e-05, 9.754199999999907e-05, 9.727699999999978e-05, 9.801400000000043e-05, 9.75409999999996e-05, 9.715299999999566e-05, 9.811100000000489e-05, 9.805499999999967e-05, 9.659699999999688e-05, 9.773600000000104e-05, 9.712500000000346e-05, 9.629200000000476e-05, 9.673600000000004e-05, 9.74860000000008e-05, 9.812499999999752e-05, 9.731899999999849e-05, 9.8028e-05, 9.768000000000276e-05, 9.751399999999993e-05, 9.75279999999995e-05, 9.790299999999641e-05, 9.788900000000378e-05, 9.759700000000482e-05, 9.741700000000242e-05, 9.812500000000446e-05, 9.805599999999914e-05, 9.762500000000396e-05, 9.712500000000346e-05, 9.698699999999977e-05, 9.82080000000024e-05, 9.722200000000097e-05, 9.75279999999995e-05, 9.811100000000489e-05, 9.780499999999942e-05, 9.743000000000251e-05, 9.766700000000267e-05, 9.73609999999972e-05, 9.738799999999687e-05, 9.808399999999828e-05, 9.738900000000328e-05, 9.768100000000224e-05, 9.79860000000013e-05, 9.766700000000267e-05, 9.822200000000197e-05, 9.745900000000113e-05, 9.767999999999583e-05, 9.788900000000378e-05, 9.82080000000024e-05, 9.736199999999667e-05, 9.737499999999677e-05]</msg>
<status status="PASS" starttime="20201112 10:16:21.050" endtime="20201112 10:16:21.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.039" endtime="20201112 10:16:21.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.063" endtime="20201112 10:16:21.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:21.071" endtime="20201112 10:16:21.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.066" endtime="20201112 10:16:21.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.058" endtime="20201112 10:16:21.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.551" endtime="20201112 10:16:21.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.550" endtime="20201112 10:16:21.097"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.119" endtime="20201112 10:16:21.138"></status>
</kw>
<msg timestamp="20201112 10:16:21.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.115" endtime="20201112 10:16:21.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.141" endtime="20201112 10:16:21.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.147" endtime="20201112 10:16:21.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.109" endtime="20201112 10:16:21.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.103" endtime="20201112 10:16:21.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.170" endtime="20201112 10:16:21.503"></status>
</kw>
<msg timestamp="20201112 10:16:21.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.167" endtime="20201112 10:16:21.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.513" endtime="20201112 10:16:21.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.532" endtime="20201112 10:16:21.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.160" endtime="20201112 10:16:21.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.155" endtime="20201112 10:16:21.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:21.551" level="INFO">${RESULT} = [{'time': 0.040090597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.844399999999615e-05, 'source_diff': 9.844399999999615e-05}, {'time': 0.040197958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:21.542" endtime="20201112 10:16:21.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:21.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:21.553" endtime="20201112 10:16:21.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.592" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:16:21.590" endtime="20201112 10:16:21.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.598" level="INFO">VALUE: [9.844399999999615e-05, 9.844399999999615e-05, 9.926400000000168e-05, 9.840300000000385e-05, 9.877699999999434e-05, 9.897199999999579e-05, 9.902799999999407e-05, 9.859699999999888e-05, 9.883299999999956e-05, 9.911099999999895e-05, 9.91530000000046e-05, 9.833299999999906e-05, 9.899999999999493e-05, 9.84860000000018e-05, 9.831899999999949e-05, 9.881999999999946e-05, 9.861199999999792e-05, 9.874999999999468e-05, 9.872200000000247e-05, 9.895799999999622e-05, 9.81939999999959e-05, 9.88609999999987e-05, 9.881999999999946e-05, 9.861099999999845e-05, 9.844399999999615e-05, 9.908299999999981e-05, 9.855500000000017e-05, 9.900000000000186e-05, 9.879200000000032e-05, 9.847200000000222e-05, 9.827800000000025e-05, 9.812500000000446e-05, 9.862499999999802e-05, 9.876400000000118e-05, 9.895799999999622e-05, 9.912499999999852e-05, 9.862499999999802e-05, 9.908299999999981e-05, 9.918000000000426e-05, 9.88059999999999e-05, 9.845800000000265e-05, 9.877800000000075e-05, 9.888900000000478e-05, 9.826400000000068e-05, 9.82359999999946e-05, 9.823600000000154e-05, 9.869400000000333e-05, 9.859699999999888e-05, 9.845800000000265e-05, 9.894500000000306e-05]</msg>
<status status="PASS" starttime="20201112 10:16:21.595" endtime="20201112 10:16:21.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.583" endtime="20201112 10:16:21.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.607" endtime="20201112 10:16:21.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:21.615" endtime="20201112 10:16:21.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.611" endtime="20201112 10:16:21.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.603" endtime="20201112 10:16:21.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.099" endtime="20201112 10:16:21.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.098" endtime="20201112 10:16:21.641"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.663" endtime="20201112 10:16:21.682"></status>
</kw>
<msg timestamp="20201112 10:16:21.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.660" endtime="20201112 10:16:21.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.685" endtime="20201112 10:16:21.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.692" endtime="20201112 10:16:21.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.653" endtime="20201112 10:16:21.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.647" endtime="20201112 10:16:21.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.714" endtime="20201112 10:16:22.048"></status>
</kw>
<msg timestamp="20201112 10:16:22.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039911847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040011861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.711" endtime="20201112 10:16:22.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039911847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040011861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.057" endtime="20201112 10:16:22.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.076" endtime="20201112 10:16:22.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.704" endtime="20201112 10:16:22.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.700" endtime="20201112 10:16:22.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.094" level="INFO">${RESULT} = [{'time': 0.040011861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010001400000000243, 'source_diff': 0.00010001400000000243}, {'time': 0.040121194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:22.085" endtime="20201112 10:16:22.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:22.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:22.096" endtime="20201112 10:16:22.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.135" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:16:22.133" endtime="20201112 10:16:22.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.140" level="INFO">VALUE: [0.00010001400000000243, 9.981900000000099e-05, 0.00010022200000000397, 0.00010024999999999618, 9.943099999999705e-05, 0.00010022200000000397, 9.983300000000056e-05, 9.911099999999895e-05, 9.95280000000015e-05, 9.997199999999679e-05, 9.958300000000031e-05, 9.984700000000013e-05, 9.980500000000142e-05, 0.00010023600000000354, 9.988899999999884e-05, 9.945799999999672e-05, 0.00010005499999999473, 9.997200000000372e-05, 0.00010031999999999403, 9.991700000000492e-05, 0.00010004099999999516, 0.0001002080000000044, 9.99730000000032e-05, 0.00010019499999999737, 9.880500000000042e-05, 0.00010006900000000124, 0.000100028000000002, 9.959799999999935e-05, 9.983300000000056e-05, 9.979100000000185e-05, 9.93609999999992e-05, 0.00010011099999999995, 9.931900000000049e-05, 9.926300000000221e-05, 9.988900000000578e-05, 9.945800000000365e-05, 9.984700000000013e-05, 9.993099999999755e-05, 9.94860000000028e-05, 9.972200000000347e-05, 0.00010008300000000081, 9.981900000000099e-05, 9.97359999999961e-05, 9.911100000000589e-05, 9.938899999999834e-05, 9.925000000000211e-05, 9.94860000000028e-05, 9.982000000000046e-05, 9.96809999999973e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201112 10:16:22.137" endtime="20201112 10:16:22.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.126" endtime="20201112 10:16:22.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.149" endtime="20201112 10:16:22.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:22.158" endtime="20201112 10:16:22.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.153" endtime="20201112 10:16:22.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.145" endtime="20201112 10:16:22.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.643" endtime="20201112 10:16:22.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.642" endtime="20201112 10:16:22.183"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.206" endtime="20201112 10:16:22.225"></status>
</kw>
<msg timestamp="20201112 10:16:22.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:22.202" endtime="20201112 10:16:22.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:22.228" endtime="20201112 10:16:22.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.234" endtime="20201112 10:16:22.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.195" endtime="20201112 10:16:22.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.190" endtime="20201112 10:16:22.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.257" endtime="20201112 10:16:22.593"></status>
</kw>
<msg timestamp="20201112 10:16:22.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039887806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.253" endtime="20201112 10:16:22.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039887806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.602" endtime="20201112 10:16:22.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.620" endtime="20201112 10:16:22.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.246" endtime="20201112 10:16:22.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.242" endtime="20201112 10:16:22.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.639" level="INFO">${RESULT} = [{'time': 0.039988167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003610000000002, 'source_diff': 0.0001003610000000002}, {'time': 0.04009625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:22.630" endtime="20201112 10:16:22.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:22.668" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:22.641" endtime="20201112 10:16:22.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.679" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:16:22.676" endtime="20201112 10:16:22.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.684" level="INFO">VALUE: [0.0001003610000000002, 0.00010072199999999754, 0.00010099999999999693, 0.00010052799999999557, 0.0001012359999999976, 0.00010115299999999966, 0.0001004860000000038, 0.00010108299999999487, 0.00010113900000000009, 0.00010038899999999934, 0.00010069500000000481, 0.0001006939999999984, 0.00010070899999999744, 0.00010048599999999686, 0.00010076399999999625, 0.00010041699999999848, 0.00010080500000000242, 0.00010030500000000192, 0.00010058400000000078, 0.00010072199999999754, 0.00010033300000000106, 0.00010037499999999977, 0.00010108299999999487, 0.00010065299999999916, 0.000101028000000003, 0.00010020799999999747, 0.0001003610000000002, 0.0001009860000000043, 0.00010066599999999926, 0.00010094399999999865, 0.00010106900000000224, 0.00010104200000000257, 0.00010083299999999462, 0.00010077800000000275, 0.00010090299999999941, 0.00010068000000000576, 0.00010092999999999908, 0.00010112500000000052, 0.00010100000000000386, 0.0001009860000000043, 0.00010124999999999718, 0.0001008610000000007, 0.00010108300000000181, 0.00010063899999999959, 0.00010033299999999412, 0.00010084700000000113, 0.00010062500000000002, 0.00010041699999999848, 0.00010034700000000063, 0.00010098599999999736]</msg>
<status status="PASS" starttime="20201112 10:16:22.681" endtime="20201112 10:16:22.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.670" endtime="20201112 10:16:22.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.693" endtime="20201112 10:16:22.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:22.701" endtime="20201112 10:16:22.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.697" endtime="20201112 10:16:22.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.689" endtime="20201112 10:16:22.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.185" endtime="20201112 10:16:22.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.184" endtime="20201112 10:16:22.727"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.749" endtime="20201112 10:16:22.769"></status>
</kw>
<msg timestamp="20201112 10:16:22.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:22.746" endtime="20201112 10:16:22.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:22.772" endtime="20201112 10:16:22.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.778" endtime="20201112 10:16:22.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.739" endtime="20201112 10:16:22.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.733" endtime="20201112 10:16:22.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.801" endtime="20201112 10:16:23.136"></status>
</kw>
<msg timestamp="20201112 10:16:23.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040221611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.798" endtime="20201112 10:16:23.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040221611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:23.145" endtime="20201112 10:16:23.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.163" endtime="20201112 10:16:23.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.791" endtime="20201112 10:16:23.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.786" endtime="20201112 10:16:23.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:23.184" level="INFO">${RESULT} = [{'time': 0.040221611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010230499999999698, 'source_diff': 0.00010230499999999698}, {'time': 0.040331778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:23.175" endtime="20201112 10:16:23.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:23.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:23.186" endtime="20201112 10:16:23.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.223" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:16:23.221" endtime="20201112 10:16:23.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.229" level="INFO">VALUE: [0.00010230499999999698, 0.00010169499999999887, 0.00010170799999999897, 0.00010216700000000023, 0.00010133400000000153, 0.00010184700000000213, 0.00010142999999999958, 0.00010204200000000357, 0.00010180499999999648, 0.00010220899999999894, 0.00010187500000000127, 0.00010147199999999829, 0.00010129200000000282, 0.00010143100000000599, 0.00010163900000000059, 0.0001018610000000017, 0.00010187499999999433, 0.00010132000000000196, 0.00010166699999999973, 0.00010173600000000504, 0.00010138900000000034, 0.00010211100000000195, 0.00010138900000000034, 0.00010188900000000084, 0.00010142999999999958, 0.00010177700000000428, 0.00010161100000000145, 0.00010215300000000066, 0.00010133300000000206, 0.00010143099999999905, 0.00010163900000000059, 0.0001013610000000012, 0.00010156900000000274, 0.00010170899999999844, 0.00010145800000000565, 0.00010220900000000588, 0.00010163900000000059, 0.00010209700000000238, 0.00010131899999999555, 0.00010180499999999648, 0.00010141699999999948, 0.00010167999999999983, 0.00010141700000000642, 0.0001018480000000016, 0.00010166699999999973, 0.00010193099999999955, 0.00010133300000000206, 0.00010229099999999741, 0.00010216600000000076, 0.00010197200000000572]</msg>
<status status="PASS" starttime="20201112 10:16:23.226" endtime="20201112 10:16:23.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.215" endtime="20201112 10:16:23.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.238" endtime="20201112 10:16:23.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:23.246" endtime="20201112 10:16:23.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.242" endtime="20201112 10:16:23.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.234" endtime="20201112 10:16:23.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.729" endtime="20201112 10:16:23.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.728" endtime="20201112 10:16:23.272"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.294" endtime="20201112 10:16:23.313"></status>
</kw>
<msg timestamp="20201112 10:16:23.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:23.291" endtime="20201112 10:16:23.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:23.316" endtime="20201112 10:16:23.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.323" endtime="20201112 10:16:23.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.284" endtime="20201112 10:16:23.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.278" endtime="20201112 10:16:23.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.346" endtime="20201112 10:16:23.680"></status>
</kw>
<msg timestamp="20201112 10:16:23.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:23.342" endtime="20201112 10:16:23.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:23.690" endtime="20201112 10:16:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.708" endtime="20201112 10:16:23.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.335" endtime="20201112 10:16:23.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.331" endtime="20201112 10:16:23.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:23.726" level="INFO">${RESULT} = [{'time': 0.039883181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010222299999999851, 'source_diff': 0.00010222299999999851}, {'time': 0.039992542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:23.717" endtime="20201112 10:16:23.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:23.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:23.729" endtime="20201112 10:16:23.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.767" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:16:23.765" endtime="20201112 10:16:23.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.772" level="INFO">VALUE: [0.00010222299999999851, 0.00010287500000000227, 0.00010318000000000133, 0.00010258400000000278, 0.00010241700000000048, 0.00010302699999999859, 0.000102513999999998, 0.00010284699999999619, 0.00010244400000000015, 0.00010258299999999637, 0.00010263899999999465, 0.00010265300000000116, 0.00010276399999999825, 0.00010259699999999594, 0.00010233300000000306, 0.00010301400000000543, 0.00010262500000000202, 0.00010255500000000417, 0.00010240300000000091, 0.00010324999999999918, 0.00010312499999999558, 0.00010293100000000055, 0.00010309700000000338, 0.00010252700000000503, 0.0001023610000000022, 0.00010311199999999549, 0.00010249999999999843, 0.00010309699999999644, 0.00010327799999999832, 0.00010282000000000346, 0.00010288900000000184, 0.00010212500000000152, 0.00010268000000000083, 0.00010287500000000227, 0.00010243100000000005, 0.00010279099999999791, 0.00010326399999999875, 0.00010245799999999972, 0.00010302799999999807, 0.00010252799999999757, 0.00010270899999999944, 0.00010220799999999947, 0.00010231999999999603, 0.0001026940000000004, 0.00010258300000000331, 0.00010326399999999875, 0.00010219499999999937, 0.00010282000000000346, 0.00010244499999999962, 0.00010287500000000227]</msg>
<status status="PASS" starttime="20201112 10:16:23.769" endtime="20201112 10:16:23.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.758" endtime="20201112 10:16:23.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.782" endtime="20201112 10:16:23.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:23.790" endtime="20201112 10:16:23.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.785" endtime="20201112 10:16:23.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.777" endtime="20201112 10:16:23.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.274" endtime="20201112 10:16:23.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.273" endtime="20201112 10:16:23.816"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.838" endtime="20201112 10:16:23.857"></status>
</kw>
<msg timestamp="20201112 10:16:23.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:23.835" endtime="20201112 10:16:23.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:23.860" endtime="20201112 10:16:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.866" endtime="20201112 10:16:23.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.828" endtime="20201112 10:16:23.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.822" endtime="20201112 10:16:23.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.889" endtime="20201112 10:16:24.223"></status>
</kw>
<msg timestamp="20201112 10:16:24.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040033222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:23.886" endtime="20201112 10:16:24.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040033222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:24.233" endtime="20201112 10:16:24.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.251" endtime="20201112 10:16:24.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.879" endtime="20201112 10:16:24.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.874" endtime="20201112 10:16:24.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:24.269" level="INFO">${RESULT} = [{'time': 0.040033222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001039160000000025, 'source_diff': 0.0001039160000000025}, {'time': 0.040146458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:24.261" endtime="20201112 10:16:24.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:24.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:24.271" endtime="20201112 10:16:24.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.309" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:16:24.307" endtime="20201112 10:16:24.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.315" level="INFO">VALUE: [0.0001039160000000025, 0.00010412500000000352, 0.00010372200000000054, 0.00010329199999999789, 0.00010352799999999857, 0.00010376399999999925, 0.00010324999999999918, 0.00010345900000000019, 0.00010376399999999925, 0.00010362500000000302, 0.00010406999999999778, 0.00010356900000000474, 0.00010384700000000413, 0.00010343099999999411, 0.00010340300000000191, 0.00010402699999999959, 0.00010374999999999968, 0.00010341700000000148, 0.00010329200000000482, 0.00010343100000000105, 0.00010383299999999762, 0.00010426399999999975, 0.00010365299999999522, 0.00010365299999999522, 0.00010416700000000223, 0.00010376400000000618, 0.0001032359999999996, 0.00010349999999999943, 0.00010338900000000234, 0.00010420800000000147, 0.00010372300000000001, 0.00010359699999999694, 0.00010370900000000044, 0.00010359700000000388, 0.00010359800000000335, 0.00010354099999999866, 0.00010426399999999975, 0.00010409700000000438, 0.0001035689999999978, 0.00010334700000000363, 0.00010336200000000267, 0.00010422200000000104, 0.00010331899999999755, 0.00010404200000000557, 0.0001031810000000008, 0.00010313800000000262, 0.0001037089999999935, 0.00010329100000000535, 0.00010411199999999649, 0.00010381900000000499]</msg>
<status status="PASS" starttime="20201112 10:16:24.312" endtime="20201112 10:16:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.301" endtime="20201112 10:16:24.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.324" endtime="20201112 10:16:24.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:24.332" endtime="20201112 10:16:24.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.328" endtime="20201112 10:16:24.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.320" endtime="20201112 10:16:24.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.818" endtime="20201112 10:16:24.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.816" endtime="20201112 10:16:24.358"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.380" endtime="20201112 10:16:24.400"></status>
</kw>
<msg timestamp="20201112 10:16:24.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.377" endtime="20201112 10:16:24.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.403" endtime="20201112 10:16:24.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.409" endtime="20201112 10:16:24.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.370" endtime="20201112 10:16:24.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.364" endtime="20201112 10:16:24.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.432" endtime="20201112 10:16:24.766"></status>
</kw>
<msg timestamp="20201112 10:16:24.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03987175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:24.429" endtime="20201112 10:16:24.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03987175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:24.775" endtime="20201112 10:16:24.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.793" endtime="20201112 10:16:24.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.422" endtime="20201112 10:16:24.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.417" endtime="20201112 10:16:24.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:24.812" level="INFO">${RESULT} = [{'time': 0.039977056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010530599999999946, 'source_diff': 0.00010530599999999946}, {'time': 0.040092403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:24.803" endtime="20201112 10:16:24.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:24.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:24.814" endtime="20201112 10:16:24.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.852" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:16:24.849" endtime="20201112 10:16:24.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.857" level="INFO">VALUE: [0.00010530599999999946, 0.00010476400000000025, 0.000104514, 0.00010537499999999783, 0.00010490299999999647, 0.00010475000000000068, 0.00010506999999999878, 0.0001047089999999945, 0.0001050140000000005, 0.00010461100000000445, 0.0001047360000000011, 0.00010508300000000581, 0.0001050559999999992, 0.00010512500000000452, 0.00010494500000000212, 0.00010511099999999801, 0.00010483400000000503, 0.00010472200000000154, 0.00010491700000000298, 0.00010500000000000093, 0.00010511100000000495, 0.00010422200000000104, 0.00010529100000000041, 0.00010434700000000463, 0.00010422200000000104, 0.00010441700000000248, 0.00010506999999999878, 0.00010434700000000463, 0.00010433400000000453, 0.00010465299999999622, 0.00010426400000000668, 0.00010447300000000076, 0.00010433299999999812, 0.00010486099999999776, 0.00010484699999999819, 0.00010495800000000222, 0.00010530599999999946, 0.00010512499999999758, 0.0001047219999999946, 0.00010476400000000025, 0.00010443100000000205, 0.00010473700000000058, 0.00010512499999999758, 0.00010480599999999896, 0.00010508399999999835, 0.00010463799999999718, 0.00010486099999999776, 0.00010495899999999475, 0.00010524999999999424, 0.00010458399999999785]</msg>
<status status="PASS" starttime="20201112 10:16:24.854" endtime="20201112 10:16:24.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.843" endtime="20201112 10:16:24.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.866" endtime="20201112 10:16:24.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:24.874" endtime="20201112 10:16:24.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.870" endtime="20201112 10:16:24.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.862" endtime="20201112 10:16:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.360" endtime="20201112 10:16:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.359" endtime="20201112 10:16:24.900"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.922" endtime="20201112 10:16:24.941"></status>
</kw>
<msg timestamp="20201112 10:16:24.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.919" endtime="20201112 10:16:24.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.945" endtime="20201112 10:16:24.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.951" endtime="20201112 10:16:24.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.912" endtime="20201112 10:16:24.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.906" endtime="20201112 10:16:24.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.973" endtime="20201112 10:16:25.309"></status>
</kw>
<msg timestamp="20201112 10:16:25.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03981125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039917083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:24.970" endtime="20201112 10:16:25.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03981125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039917083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:25.318" endtime="20201112 10:16:25.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.336" endtime="20201112 10:16:25.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.963" endtime="20201112 10:16:25.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.959" endtime="20201112 10:16:25.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:25.357" level="INFO">${RESULT} = [{'time': 0.039917083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010583299999999962, 'source_diff': 0.00010583299999999962}, {'time': 0.040033486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:25.348" endtime="20201112 10:16:25.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:25.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:25.359" endtime="20201112 10:16:25.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.396" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:16:25.394" endtime="20201112 10:16:25.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.402" level="INFO">VALUE: [0.00010583299999999962, 0.00010541700000000348, 0.00010581900000000005, 0.0001058610000000057, 0.00010561100000000545, 0.00010622200000000304, 0.00010598600000000236, 0.00010584799999999867, 0.00010618099999999686, 0.00010550000000000143, 0.00010583299999999962, 0.00010580500000000048, 0.00010544399999999621, 0.00010534699999999869, 0.00010581900000000005, 0.0001057219999999956, 0.00010550000000000143, 0.00010627800000000132, 0.00010555500000000023, 0.00010534700000000563, 0.00010584699999999919, 0.00010613899999999815, 0.00010543099999999611, 0.00010530499999999998, 0.00010604200000000064, 0.00010577800000000082, 0.000105416000000004, 0.00010601399999999456, 0.00010587499999999833, 0.00010545900000000219, 0.00010565300000000416, 0.00010627800000000132, 0.00010548600000000186, 0.00010629100000000141, 0.00010554200000000014, 0.00010626400000000175, 0.0001058339999999991, 0.00010583299999999962, 0.00010575000000000168, 0.00010591700000000398, 0.00010590299999999747, 0.00010626400000000175, 0.00010534699999999869, 0.00010580500000000048, 0.00010531999999999903, 0.00010559800000000535, 0.00010552800000000057, 0.00010550000000000143, 0.00010620799999999653, 0.00010591599999999757]</msg>
<status status="PASS" starttime="20201112 10:16:25.399" endtime="20201112 10:16:25.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.388" endtime="20201112 10:16:25.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.411" endtime="20201112 10:16:25.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:25.419" endtime="20201112 10:16:25.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.415" endtime="20201112 10:16:25.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.407" endtime="20201112 10:16:25.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.902" endtime="20201112 10:16:25.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.901" endtime="20201112 10:16:25.445"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.467" endtime="20201112 10:16:25.487"></status>
</kw>
<msg timestamp="20201112 10:16:25.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:25.464" endtime="20201112 10:16:25.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:25.490" endtime="20201112 10:16:25.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.496" endtime="20201112 10:16:25.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.457" endtime="20201112 10:16:25.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.451" endtime="20201112 10:16:25.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.519" endtime="20201112 10:16:25.856"></status>
</kw>
<msg timestamp="20201112 10:16:25.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039899778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040006472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:25.516" endtime="20201112 10:16:25.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039899778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040006472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:25.865" endtime="20201112 10:16:25.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.883" endtime="20201112 10:16:25.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.509" endtime="20201112 10:16:25.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.504" endtime="20201112 10:16:25.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:25.902" level="INFO">${RESULT} = [{'time': 0.040006472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001066940000000044, 'source_diff': 0.0001066940000000044}, {'time': 0.040122653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:25.893" endtime="20201112 10:16:25.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:25.931" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:25.904" endtime="20201112 10:16:25.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.942" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:16:25.940" endtime="20201112 10:16:25.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:25.947" level="INFO">VALUE: [0.0001066940000000044, 0.0001070560000000012, 0.00010690299999999847, 0.00010681900000000105, 0.00010669399999999746, 0.00010647199999999635, 0.00010615300000000466, 0.00010704100000000216, 0.00010663899999999865, 0.00010727799999999538, 0.00010643099999999711, 0.0001068889999999989, 0.00010647199999999635, 0.0001063339999999996, 0.0001068889999999989, 0.00010691599999999857, 0.00010702800000000207, 0.00010704100000000216, 0.00010654100000000166, 0.00010669399999999746, 0.00010669399999999746, 0.00010691700000000498, 0.00010616700000000423, 0.0001065690000000008, 0.00010644399999999721, 0.00010662500000000602, 0.00010618000000000433, 0.00010630600000000046, 0.0001061810000000038, 0.00010650000000000243, 0.00010670800000000397, 0.00010713899999999915, 0.00010720799999999753, 0.00010640299999999797, 0.00010702800000000207, 0.00010648600000000286, 0.00010729100000000241, 0.00010712499999999958, 0.00010615300000000466, 0.00010677799999999488, 0.00010647199999999635, 0.00010694500000000412, 0.00010690200000000594, 0.00010697300000000326, 0.00010661099999999951, 0.00010683300000000062, 0.0001068340000000001, 0.00010670799999999703, 0.0001070560000000012, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201112 10:16:25.944" endtime="20201112 10:16:25.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.933" endtime="20201112 10:16:25.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:25.960" endtime="20201112 10:16:25.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:25.968" endtime="20201112 10:16:25.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.964" endtime="20201112 10:16:25.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.956" endtime="20201112 10:16:25.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.447" endtime="20201112 10:16:25.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.446" endtime="20201112 10:16:25.994"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.017" endtime="20201112 10:16:26.038"></status>
</kw>
<msg timestamp="20201112 10:16:26.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:26.013" endtime="20201112 10:16:26.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:26.041" endtime="20201112 10:16:26.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.047" endtime="20201112 10:16:26.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.006" endtime="20201112 10:16:26.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.001" endtime="20201112 10:16:26.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.070" endtime="20201112 10:16:26.417"></status>
</kw>
<msg timestamp="20201112 10:16:26.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039961222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.066" endtime="20201112 10:16:26.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039961222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.426" endtime="20201112 10:16:26.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.444" endtime="20201112 10:16:26.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.059" endtime="20201112 10:16:26.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.055" endtime="20201112 10:16:26.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:26.462" level="INFO">${RESULT} = [{'time': 0.040069222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010800000000000393, 'source_diff': 0.00010800000000000393}, {'time': 0.040181431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:26.454" endtime="20201112 10:16:26.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:26.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:26.464" endtime="20201112 10:16:26.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.503" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:16:26.500" endtime="20201112 10:16:26.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.508" level="INFO">VALUE: [0.00010800000000000393, 0.00010737499999999983, 0.0001082219999999981, 0.0001075549999999953, 0.00010769499999999793, 0.00010795799999999828, 0.00010816699999999929, 0.00010729200000000189, 0.00010769499999999793, 0.00010745900000000419, 0.00010787500000000033, 0.00010731899999999461, 0.00010734700000000069, 0.00010730500000000198, 0.00010740299999999897, 0.00010832000000000203, 0.00010751399999999606, 0.00010780499999999554, 0.00010791700000000598, 0.00010795799999999828, 0.00010787500000000033, 0.0001077769999999964, 0.0001071940000000049, 0.0001075560000000017, 0.00010783300000000162, 0.00010781899999999511, 0.00010784699999999425, 0.00010713899999999915, 0.00010774999999999674, 0.00010791700000000598, 0.00010744499999999768, 0.00010777800000000282, 0.00010804200000000264, 0.00010781900000000205, 0.00010762500000000008, 0.00010736100000000026, 0.00010786200000000024, 0.00010730600000000146, 0.00010813900000000015, 0.0001078889999999999, 0.0001080419999999957, 0.00010783299999999468, 0.00010798599999999742, 0.00010808299999999493, 0.0001082360000000046, 0.00010736199999999974, 0.00010816599999999982, 0.00010794399999999871, 0.0001073889999999994, 0.00010815299999999972]</msg>
<status status="PASS" starttime="20201112 10:16:26.505" endtime="20201112 10:16:26.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.494" endtime="20201112 10:16:26.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.517" endtime="20201112 10:16:26.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:26.525" endtime="20201112 10:16:26.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.521" endtime="20201112 10:16:26.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.513" endtime="20201112 10:16:26.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.996" endtime="20201112 10:16:26.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:25.995" endtime="20201112 10:16:26.551"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.574" endtime="20201112 10:16:26.595"></status>
</kw>
<msg timestamp="20201112 10:16:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:26.570" endtime="20201112 10:16:26.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:26.598" endtime="20201112 10:16:26.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.604" endtime="20201112 10:16:26.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.563" endtime="20201112 10:16:26.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.558" endtime="20201112 10:16:26.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.627" endtime="20201112 10:16:26.974"></status>
</kw>
<msg timestamp="20201112 10:16:26.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.623" endtime="20201112 10:16:26.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.983" endtime="20201112 10:16:26.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.001" endtime="20201112 10:16:27.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.616" endtime="20201112 10:16:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.612" endtime="20201112 10:16:27.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.019" level="INFO">${RESULT} = [{'time': 0.040138972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001090690000000033, 'source_diff': 0.0001090690000000033}, {'time': 0.04025425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:27.011" endtime="20201112 10:16:27.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:27.049" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:27.021" endtime="20201112 10:16:27.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.059" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:16:27.057" endtime="20201112 10:16:27.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.064" level="INFO">VALUE: [0.0001090690000000033, 0.00010895799999999928, 0.000108514000000004, 0.00010886100000000176, 0.00010919499999999943, 0.00010847299999999782, 0.00010863800000000118, 0.00010867999999999989, 0.00010862500000000108, 0.0001083340000000016, 0.00010840299999999997, 0.00010929099999999747, 0.00010833299999999518, 0.00010916600000000082, 0.00010848599999999792, 0.00010848599999999792, 0.00010911100000000201, 0.0001085419999999962, 0.00010880599999999602, 0.0001090690000000033, 0.00010852800000000357, 0.0001084020000000005, 0.0001088890000000009, 0.00010858299999999543, 0.00010898599999999842, 0.00010858300000000237, 0.00010855599999999577, 0.00010890300000000047, 0.00010913899999999421, 0.00010916700000000029, 0.00010929200000000389, 0.00010877799999999688, 0.00010836099999999432, 0.00010908399999999541, 0.0001090549999999968, 0.00010837500000000083, 0.00010906899999999636, 0.00010863900000000065, 0.00010834700000000169, 0.00010859700000000194, 0.00010852799999999663, 0.00010920799999999953, 0.00010847199999999835, 0.0001082219999999981, 0.00010837500000000083, 0.00010907000000000278, 0.00010877799999999688, 0.00010842999999999964, 0.00010874999999999774, 0.00010881900000000305]</msg>
<status status="PASS" starttime="20201112 10:16:27.062" endtime="20201112 10:16:27.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.050" endtime="20201112 10:16:27.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.074" endtime="20201112 10:16:27.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.082" endtime="20201112 10:16:27.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.078" endtime="20201112 10:16:27.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.069" endtime="20201112 10:16:27.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.553" endtime="20201112 10:16:27.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.552" endtime="20201112 10:16:27.108"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.130" endtime="20201112 10:16:27.150"></status>
</kw>
<msg timestamp="20201112 10:16:27.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:27.127" endtime="20201112 10:16:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:27.153" endtime="20201112 10:16:27.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.159" endtime="20201112 10:16:27.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.120" endtime="20201112 10:16:27.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.114" endtime="20201112 10:16:27.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.182" endtime="20201112 10:16:27.518"></status>
</kw>
<msg timestamp="20201112 10:16:27.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039947403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.179" endtime="20201112 10:16:27.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039947403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.527" endtime="20201112 10:16:27.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.545" endtime="20201112 10:16:27.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.172" endtime="20201112 10:16:27.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.167" endtime="20201112 10:16:27.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.565" level="INFO">${RESULT} = [{'time': 0.040057375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010997199999999985, 'source_diff': 0.00010997199999999985}, {'time': 0.040176625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:27.557" endtime="20201112 10:16:27.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:27.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:27.567" endtime="20201112 10:16:27.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.605" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:16:27.603" endtime="20201112 10:16:27.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.610" level="INFO">VALUE: [0.00010997199999999985, 0.00011009700000000344, 0.00011011100000000301, 0.00010936100000000226, 0.00010934700000000269, 0.00010926400000000475, 0.00010959800000000242, 0.00010941700000000054, 0.00010954200000000414, 0.00010993100000000061, 0.00010966700000000079, 0.00010961100000000251, 0.0001097089999999995, 0.00010944499999999968, 0.0001095419999999972, 0.00010997199999999985, 0.00010919499999999943, 0.0001095690000000038, 0.00010937500000000183, 0.0001095419999999972, 0.00010988899999999496, 0.000109596999999996, 0.00010997199999999985, 0.00011033399999999666, 0.00010948599999999892, 0.00010941600000000107, 0.00010976399999999831, 0.00010966600000000132, 0.0001092219999999991, 0.00010952799999999763, 0.00011032000000000403, 0.00011002799999999813, 0.0001093890000000014, 0.00010940300000000097, 0.00010990300000000147, 0.00010987499999999539, 0.0001095419999999972, 0.00010947199999999935, 0.00010968000000000089, 0.00010988799999999549, 0.0001098340000000031, 0.00010995800000000028, 0.00010920800000000647, 0.00010919399999999996, 0.00010948599999999892, 0.00010941600000000107, 0.0001100690000000043, 0.00011002699999999865, 0.00010970900000000644, 0.00010958299999999643]</msg>
<status status="PASS" starttime="20201112 10:16:27.607" endtime="20201112 10:16:27.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.596" endtime="20201112 10:16:27.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.620" endtime="20201112 10:16:27.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.628" endtime="20201112 10:16:27.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.623" endtime="20201112 10:16:27.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.615" endtime="20201112 10:16:27.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.110" endtime="20201112 10:16:27.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.109" endtime="20201112 10:16:27.653"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.676" endtime="20201112 10:16:27.695"></status>
</kw>
<msg timestamp="20201112 10:16:27.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:27.673" endtime="20201112 10:16:27.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:27.699" endtime="20201112 10:16:27.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.705" endtime="20201112 10:16:27.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.665" endtime="20201112 10:16:27.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.660" endtime="20201112 10:16:27.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.728" endtime="20201112 10:16:28.064"></status>
</kw>
<msg timestamp="20201112 10:16:28.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.724" endtime="20201112 10:16:28.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:28.073" endtime="20201112 10:16:28.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.091" endtime="20201112 10:16:28.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.717" endtime="20201112 10:16:28.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.713" endtime="20201112 10:16:28.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:28.110" level="INFO">${RESULT} = [{'time': 0.040057958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011102699999999965, 'source_diff': 0.00011102699999999965}, {'time': 0.040174194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:28.101" endtime="20201112 10:16:28.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:28.139" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:28.112" endtime="20201112 10:16:28.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.150" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:16:28.147" endtime="20201112 10:16:28.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.155" level="INFO">VALUE: [0.00011102699999999965, 0.00011034700000000369, 0.00011036100000000326, 0.00011099999999999999, 0.00011120800000000153, 0.0001102220000000001, 0.00011023599999999967, 0.00011049999999999949, 0.00011076399999999931, 0.00011054200000000514, 0.00011069500000000093, 0.00011041700000000154, 0.00011055599999999777, 0.00011040300000000197, 0.00011044399999999427, 0.00011029099999999847, 0.00011070800000000103, 0.00011051299999999958, 0.00011074999999999974, 0.00011037499999999589, 0.00011126399999999981, 0.00011034699999999675, 0.0001107090000000005, 0.00011048599999999992, 0.00011033300000000412, 0.00011045800000000078, 0.00011115199999999631, 0.00011023599999999967, 0.0001105549999999983, 0.00011094400000000171, 0.00011081899999999811, 0.00011047200000000035, 0.00011048599999999992, 0.0001104020000000025, 0.00011115200000000325, 0.00011094400000000171, 0.00011097200000000085, 0.00011040300000000197, 0.00011037500000000283, 0.00011080499999999854, 0.00011065200000000275, 0.00011083300000000462, 0.00011104200000000564, 0.00011095899999999381, 0.00011031999999999709, 0.00011079200000000539, 0.00011026399999999881, 0.00011119500000000143, 0.00011031999999999709, 0.00011034699999999675]</msg>
<status status="PASS" starttime="20201112 10:16:28.152" endtime="20201112 10:16:28.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.141" endtime="20201112 10:16:28.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.164" endtime="20201112 10:16:28.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:28.172" endtime="20201112 10:16:28.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.168" endtime="20201112 10:16:28.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.160" endtime="20201112 10:16:28.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.656" endtime="20201112 10:16:28.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.654" endtime="20201112 10:16:28.198"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.221" endtime="20201112 10:16:28.240"></status>
</kw>
<msg timestamp="20201112 10:16:28.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:28.217" endtime="20201112 10:16:28.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:28.243" endtime="20201112 10:16:28.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.249" endtime="20201112 10:16:28.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.210" endtime="20201112 10:16:28.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.205" endtime="20201112 10:16:28.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.272" endtime="20201112 10:16:28.607"></status>
</kw>
<msg timestamp="20201112 10:16:28.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040061819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:28.269" endtime="20201112 10:16:28.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040061819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:28.616" endtime="20201112 10:16:28.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.634" endtime="20201112 10:16:28.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.262" endtime="20201112 10:16:28.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.257" endtime="20201112 10:16:28.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:28.652" level="INFO">${RESULT} = [{'time': 0.040173444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011162500000000408, 'source_diff': 0.00011162500000000408}, {'time': 0.040289778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:28.644" endtime="20201112 10:16:28.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:28.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:28.654" endtime="20201112 10:16:28.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.692" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:16:28.690" endtime="20201112 10:16:28.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.698" level="INFO">VALUE: [0.00011162500000000408, 0.00011158399999999791, 0.00011184700000000519, 0.00011190299999999653, 0.00011158400000000485, 0.00011193099999999567, 0.00011202800000000013, 0.00011144400000000221, 0.00011155599999999877, 0.00011156999999999834, 0.0001118340000000051, 0.00011219499999999549, 0.00011211099999999807, 0.0001120419999999997, 0.0001115690000000058, 0.00011177799999999988, 0.00011188899999999696, 0.00011195800000000228, 0.00011141600000000307, 0.00011151400000000006, 0.00011161100000000451, 0.0001113890000000034, 0.00011123600000000067, 0.00011212499999999764, 0.00011125000000000024, 0.00011218099999999592, 0.00011231899999999961, 0.00011166700000000279, 0.0001120969999999985, 0.00011130499999999904, 0.00011144400000000221, 0.00011141600000000307, 0.00011220800000000253, 0.00011183300000000562, 0.00011133299999999818, 0.00011188899999999696, 0.00011184699999999825, 0.00011201400000000056, 0.00011170800000000203, 0.00011166599999999638, 0.00011209700000000544, 0.00011155599999999877, 0.00011195800000000228, 0.00011126399999999981, 0.0001122629999999944, 0.00011206999999999884, 0.00011152799999999963, 0.00011143100000000211, 0.00011229199999999995, 0.00011116700000000229]</msg>
<status status="PASS" starttime="20201112 10:16:28.695" endtime="20201112 10:16:28.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.683" endtime="20201112 10:16:28.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.707" endtime="20201112 10:16:28.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:28.715" endtime="20201112 10:16:28.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.711" endtime="20201112 10:16:28.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.703" endtime="20201112 10:16:28.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.200" endtime="20201112 10:16:28.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.199" endtime="20201112 10:16:28.741"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.764" endtime="20201112 10:16:28.784"></status>
</kw>
<msg timestamp="20201112 10:16:28.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:28.760" endtime="20201112 10:16:28.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:28.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:28.787" endtime="20201112 10:16:28.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.794" endtime="20201112 10:16:28.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.753" endtime="20201112 10:16:28.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.747" endtime="20201112 10:16:28.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:28.817" endtime="20201112 10:16:29.153"></status>
</kw>
<msg timestamp="20201112 10:16:29.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:28.814" endtime="20201112 10:16:29.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.162" endtime="20201112 10:16:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.180" endtime="20201112 10:16:29.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.806" endtime="20201112 10:16:29.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.802" endtime="20201112 10:16:29.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.198" level="INFO">${RESULT} = [{'time': 0.040693375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011290299999999753, 'source_diff': 0.00011290299999999753}, {'time': 0.040811653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:29.190" endtime="20201112 10:16:29.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:29.228" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:29.200" endtime="20201112 10:16:29.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.239" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:16:29.236" endtime="20201112 10:16:29.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.245" level="INFO">VALUE: [0.00011290299999999753, 0.00011280600000000002, 0.00011280600000000002, 0.00011316699999999735, 0.00011243000000000364, 0.00011304099999999428, 0.00011286100000000576, 0.00011312499999999864, 0.00011301400000000156, 0.00011312500000000558, 0.00011319399999999702, 0.00011280600000000002, 0.00011281900000000011, 0.00011251400000000106, 0.0001127220000000026, 0.0001122499999999943, 0.0001130550000000008, 0.00011302700000000165, 0.00011255599999999977, 0.00011280600000000002, 0.00011284699999999925, 0.0001125550000000003, 0.00011268099999999642, 0.00011234700000000569, 0.00011222199999999516, 0.00011269399999999652, 0.00011281999999999959, 0.00011286099999999882, 0.00011286099999999882, 0.00011313899999999821, 0.00011234699999999875, 0.00011263899999999771, 0.00011320799999999659, 0.00011230500000000004, 0.00011305600000000027, 0.00011256999999999934, 0.00011261099999999857, 0.00011229199999999995, 0.00011227799999999344, 0.00011266699999999685, 0.00011284699999999925, 0.0001132220000000031, 0.00011273600000000217, 0.00011238899999999746, 0.00011302700000000165, 0.00011306999999999984, 0.0001129169999999971, 0.00011318100000000386, 0.00011223600000000167, 0.00011230599999999952]</msg>
<status status="PASS" starttime="20201112 10:16:29.242" endtime="20201112 10:16:29.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.230" endtime="20201112 10:16:29.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.255" endtime="20201112 10:16:29.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:29.263" endtime="20201112 10:16:29.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.259" endtime="20201112 10:16:29.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.250" endtime="20201112 10:16:29.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.743" endtime="20201112 10:16:29.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:28.742" endtime="20201112 10:16:29.289"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.312" endtime="20201112 10:16:29.331"></status>
</kw>
<msg timestamp="20201112 10:16:29.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:29.308" endtime="20201112 10:16:29.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:29.335" endtime="20201112 10:16:29.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.341" endtime="20201112 10:16:29.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.301" endtime="20201112 10:16:29.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.296" endtime="20201112 10:16:29.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.364" endtime="20201112 10:16:29.700"></status>
</kw>
<msg timestamp="20201112 10:16:29.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040183319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.361" endtime="20201112 10:16:29.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040183319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.709" endtime="20201112 10:16:29.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.727" endtime="20201112 10:16:29.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.354" endtime="20201112 10:16:29.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.349" endtime="20201112 10:16:29.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.748" level="INFO">${RESULT} = [{'time': 0.040297347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011402799999999519, 'source_diff': 0.00011402799999999519}, {'time': 0.040417722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:29.739" endtime="20201112 10:16:29.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:29.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:29.750" endtime="20201112 10:16:29.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.788" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:16:29.785" endtime="20201112 10:16:29.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.793" level="INFO">VALUE: [0.00011402799999999519, 0.00011345800000000378, 0.00011361099999999957, 0.00011395800000000428, 0.00011363900000000565, 0.00011330500000000104, 0.00011356900000000086, 0.0001140420000000017, 0.00011362499999999914, 0.00011368099999999742, 0.00011345900000000325, 0.00011401399999999562, 0.00011351400000000206, 0.00011331900000000061, 0.00011381900000000111, 0.00011313900000000515, 0.0001135829999999935, 0.00011405599999999433, 0.00011336099999999932, 0.00011327800000000138, 0.00011369400000000446, 0.00011402800000000213, 0.0001138749999999994, 0.0001132770000000019, 0.00011408300000000093, 0.00011400000000000299, 0.00011390300000000547, 0.00011379200000000145, 0.00011336099999999932, 0.00011345800000000378, 0.00011341700000000454, 0.00011401400000000256, 0.00011333300000000018, 0.00011405600000000127, 0.00011325000000000224, 0.00011338799999999899, 0.00011322199999999616, 0.00011412499999999964, 0.00011336099999999932, 0.00011394500000000418, 0.00011336099999999932, 0.0001138749999999994, 0.00011349999999999555, 0.00011416700000000529, 0.00011416700000000529, 0.00011405600000000127, 0.0001138749999999994, 0.00011338899999999846, 0.00011349999999999555, 0.00011334699999999975]</msg>
<status status="PASS" starttime="20201112 10:16:29.790" endtime="20201112 10:16:29.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.779" endtime="20201112 10:16:29.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.803" endtime="20201112 10:16:29.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:29.811" endtime="20201112 10:16:29.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.807" endtime="20201112 10:16:29.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.798" endtime="20201112 10:16:29.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.291" endtime="20201112 10:16:29.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.290" endtime="20201112 10:16:29.838"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.860" endtime="20201112 10:16:29.880"></status>
</kw>
<msg timestamp="20201112 10:16:29.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:29.857" endtime="20201112 10:16:29.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:29.883" endtime="20201112 10:16:29.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.889" endtime="20201112 10:16:29.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.850" endtime="20201112 10:16:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.844" endtime="20201112 10:16:29.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.913" endtime="20201112 10:16:30.249"></status>
</kw>
<msg timestamp="20201112 10:16:30.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040494778, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:29.909" endtime="20201112 10:16:30.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040494778, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:30.258" endtime="20201112 10:16:30.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.276" endtime="20201112 10:16:30.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.902" endtime="20201112 10:16:30.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.897" endtime="20201112 10:16:30.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:30.295" level="INFO">${RESULT} = [{'time': 0.040494778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011477800000000288, 'source_diff': 0.00011477800000000288}, {'time': 0.040617028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:30.286" endtime="20201112 10:16:30.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:30.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:30.297" endtime="20201112 10:16:30.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.335" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:16:30.333" endtime="20201112 10:16:30.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.340" level="INFO">VALUE: [0.00011477800000000288, 0.00011493099999999867, 0.00011479100000000297, 0.00011466700000000579, 0.0001149169999999991, 0.00011445899999999731, 0.00011444499999999774, 0.00011463899999999971, 0.0001148750000000004, 0.0001145420000000022, 0.00011498600000000442, 0.00011465299999999928, 0.0001144299999999987, 0.00011462500000000014, 0.0001142770000000029, 0.00011490200000000006, 0.00011486100000000082, 0.00011500000000000399, 0.00011461100000000057, 0.00011480500000000254, 0.000114597000000001, 0.00011451400000000306, 0.00011490299999999953, 0.00011465200000000675, 0.00011483299999999474, 0.00011455599999999483, 0.00011461100000000057, 0.00011480600000000202, 0.00011508399999999447, 0.00011454199999999526, 0.0001150420000000027, 0.00011501399999999662, 0.00011472199999999766, 0.00011507000000000184, 0.00011463899999999971, 0.0001147499999999968, 0.00011488899999999996, 0.00011470799999999809, 0.00011452699999999622, 0.00011438899999999946, 0.00011483300000000168, 0.00011477800000000288, 0.00011438899999999946, 0.00011480600000000202, 0.00011434800000000023, 0.00011468000000000589, 0.00011502800000000313, 0.00011419400000000496, 0.00011469399999999852, 0.00011497199999999791]</msg>
<status status="PASS" starttime="20201112 10:16:30.337" endtime="20201112 10:16:30.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.326" endtime="20201112 10:16:30.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.350" endtime="20201112 10:16:30.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:30.358" endtime="20201112 10:16:30.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.353" endtime="20201112 10:16:30.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.345" endtime="20201112 10:16:30.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.840" endtime="20201112 10:16:30.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.839" endtime="20201112 10:16:30.384"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.406" endtime="20201112 10:16:30.427"></status>
</kw>
<msg timestamp="20201112 10:16:30.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:30.403" endtime="20201112 10:16:30.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:30.430" endtime="20201112 10:16:30.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.436" endtime="20201112 10:16:30.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.395" endtime="20201112 10:16:30.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.390" endtime="20201112 10:16:30.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.459" endtime="20201112 10:16:30.806"></status>
</kw>
<msg timestamp="20201112 10:16:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:30.456" endtime="20201112 10:16:30.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:30.815" endtime="20201112 10:16:30.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.833" endtime="20201112 10:16:30.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.449" endtime="20201112 10:16:30.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.445" endtime="20201112 10:16:30.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:30.853" level="INFO">${RESULT} = [{'time': 0.040067806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011587499999999445, 'source_diff': 0.00011587499999999445}, {'time': 0.040194083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:30.844" endtime="20201112 10:16:30.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:30.882" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:30.855" endtime="20201112 10:16:30.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.893" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:16:30.891" endtime="20201112 10:16:30.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.898" level="INFO">VALUE: [0.00011587499999999445, 0.00011559699999999506, 0.0001158049999999966, 0.00011529100000000347, 0.00011576400000000431, 0.00011611100000000207, 0.0001157220000000056, 0.00011611100000000207, 0.00011551399999999712, 0.00011561100000000157, 0.00011627799999999744, 0.00011612500000000164, 0.00011523599999999773, 0.0001159170000000001, 0.00011531899999999567, 0.00011529199999999601, 0.00011569499999999899, 0.00011593099999999967, 0.00011597199999999891, 0.00011573599999999823, 0.00011588900000000096, 0.00011613900000000121, 0.00011582000000000259, 0.00011602799999999719, 0.00011547299999999788, 0.00011536100000000132, 0.00011561100000000157, 0.00011595799999999934, 0.00011601399999999762, 0.00011540300000000003, 0.00011562500000000114, 0.00011593099999999967, 0.00011588899999999402, 0.00011611100000000207, 0.00011554199999999626, 0.00011579099999999704, 0.00011581899999999618, 0.00011550000000000449, 0.00011568099999999942, 0.0001156249999999942, 0.00011552800000000363, 0.00011545799999999884, 0.00011538900000000046, 0.0001158750000000014, 0.00011516699999999935, 0.00011561199999999411, 0.00011586100000000182, 0.00011584700000000225, 0.00011544399999999927, 0.00011584700000000225]</msg>
<status status="PASS" starttime="20201112 10:16:30.895" endtime="20201112 10:16:30.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.884" endtime="20201112 10:16:30.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.908" endtime="20201112 10:16:30.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:30.916" endtime="20201112 10:16:30.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.912" endtime="20201112 10:16:30.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.903" endtime="20201112 10:16:30.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.386" endtime="20201112 10:16:30.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.384" endtime="20201112 10:16:30.942"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.964" endtime="20201112 10:16:30.986"></status>
</kw>
<msg timestamp="20201112 10:16:30.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:30.961" endtime="20201112 10:16:30.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:30.989" endtime="20201112 10:16:30.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.995" endtime="20201112 10:16:30.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.954" endtime="20201112 10:16:31.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.948" endtime="20201112 10:16:31.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.018" endtime="20201112 10:16:31.366"></status>
</kw>
<msg timestamp="20201112 10:16:31.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040280375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:31.015" endtime="20201112 10:16:31.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040280375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:31.376" endtime="20201112 10:16:31.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.394" endtime="20201112 10:16:31.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.008" endtime="20201112 10:16:31.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.003" endtime="20201112 10:16:31.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:31.412" level="INFO">${RESULT} = [{'time': 0.040280375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011706899999999743, 'source_diff': 0.00011706899999999743}, {'time': 0.040405611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:31.403" endtime="20201112 10:16:31.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:31.441" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:31.414" endtime="20201112 10:16:31.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.452" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:16:31.450" endtime="20201112 10:16:31.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.457" level="INFO">VALUE: [0.00011706899999999743, 0.00011644400000000027, 0.00011633299999999624, 0.00011679200000000445, 0.00011677800000000488, 0.00011682000000000359, 0.0001163750000000019, 0.00011654100000000472, 0.00011673600000000617, 0.00011647199999999941, 0.00011648600000000592, 0.0001164029999999941, 0.00011618099999999992, 0.00011670899999999956, 0.00011699999999999905, 0.00011699999999999905, 0.00011651399999999812, 0.00011645799999999984, 0.00011673599999999923, 0.00011661099999999563, 0.00011629100000000447, 0.00011698599999999948, 0.00011626399999999787, 0.00011620899999999906, 0.00011677799999999794, 0.00011658400000000291, 0.00011652699999999822, 0.00011633299999999624, 0.00011661100000000257, 0.0001162499999999983, 0.00011715200000000231, 0.00011629200000000395, 0.00011694500000000024, 0.00011661099999999563, 0.0001163750000000019, 0.00011636099999999538, 0.00011697199999999991, 0.00011670800000000009, 0.00011640300000000103, 0.00011623599999999873, 0.00011647199999999941, 0.000117082999999997, 0.00011669499999999999, 0.00011662500000000214, 0.00011648699999999845, 0.00011691699999999416, 0.00011648599999999898, 0.00011716700000000135, 0.00011679099999999804, 0.00011698599999999948]</msg>
<status status="PASS" starttime="20201112 10:16:31.454" endtime="20201112 10:16:31.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.443" endtime="20201112 10:16:31.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.471" endtime="20201112 10:16:31.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:31.479" endtime="20201112 10:16:31.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.475" endtime="20201112 10:16:31.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.466" endtime="20201112 10:16:31.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.944" endtime="20201112 10:16:31.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.943" endtime="20201112 10:16:31.505"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.528" endtime="20201112 10:16:31.549"></status>
</kw>
<msg timestamp="20201112 10:16:31.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:31.524" endtime="20201112 10:16:31.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:31.553" endtime="20201112 10:16:31.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.559" endtime="20201112 10:16:31.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.517" endtime="20201112 10:16:31.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.511" endtime="20201112 10:16:31.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.582" endtime="20201112 10:16:31.930"></status>
</kw>
<msg timestamp="20201112 10:16:31.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:31.578" endtime="20201112 10:16:31.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:31.939" endtime="20201112 10:16:31.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.957" endtime="20201112 10:16:31.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.571" endtime="20201112 10:16:31.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.566" endtime="20201112 10:16:31.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:31.977" level="INFO">${RESULT} = [{'time': 0.040507319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011738800000000299, 'source_diff': 0.00011738800000000299}, {'time': 0.040634542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:31.969" endtime="20201112 10:16:31.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:32.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:31.979" endtime="20201112 10:16:32.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.017" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:16:32.015" endtime="20201112 10:16:32.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.023" level="INFO">VALUE: [0.00011738800000000299, 0.00011793100000000167, 0.00011734799999999629, 0.00011811099999999713, 0.00011730599999999758, 0.00011729199999999801, 0.00011729199999999801, 0.00011780599999999808, 0.00011818100000000192, 0.0001172770000000059, 0.00011773600000000023, 0.00011726400000000581, 0.00011738899999999552, 0.00011822200000000116, 0.00011788900000000296, 0.00011759699999999706, 0.0001173620000000028, 0.00011816700000000235, 0.00011800000000000005, 0.00011776400000000631, 0.00011816700000000235, 0.0001179029999999956, 0.00011818100000000192, 0.00011807000000000484, 0.00011745800000000084, 0.00011722200000000016, 0.00011772199999999372, 0.00011729199999999801, 0.00011731899999999768, 0.00011731900000000461, 0.00011768000000000195, 0.00011736100000000332, 0.00011815200000000331, 0.00011745900000000031, 0.00011727799999999844, 0.00011809699999999757, 0.00011786099999999688, 0.00011737499999999595, 0.0001176249999999962, 0.00011716599999999494, 0.00011770900000000056, 0.00011743100000000117, 0.00011791600000000263, 0.00011752699999999922, 0.00011736100000000332, 0.0001177499999999998, 0.00011729199999999801, 0.00011822300000000063, 0.00011747299999999988, 0.00011823600000000073]</msg>
<status status="PASS" starttime="20201112 10:16:32.020" endtime="20201112 10:16:32.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.008" endtime="20201112 10:16:32.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.032" endtime="20201112 10:16:32.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.040" endtime="20201112 10:16:32.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.036" endtime="20201112 10:16:32.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.027" endtime="20201112 10:16:32.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.507" endtime="20201112 10:16:32.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.506" endtime="20201112 10:16:32.066"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.088" endtime="20201112 10:16:32.110"></status>
</kw>
<msg timestamp="20201112 10:16:32.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:32.085" endtime="20201112 10:16:32.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:32.113" endtime="20201112 10:16:32.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.119" endtime="20201112 10:16:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.078" endtime="20201112 10:16:32.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.072" endtime="20201112 10:16:32.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.142" endtime="20201112 10:16:32.488"></status>
</kw>
<msg timestamp="20201112 10:16:32.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040009472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.139" endtime="20201112 10:16:32.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040009472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.497" endtime="20201112 10:16:32.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.515" endtime="20201112 10:16:32.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.132" endtime="20201112 10:16:32.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.127" endtime="20201112 10:16:32.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.534" level="INFO">${RESULT} = [{'time': 0.040128347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001188750000000044, 'source_diff': 0.0001188750000000044}, {'time': 0.040257556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:32.525" endtime="20201112 10:16:32.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:32.563" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:32.536" endtime="20201112 10:16:32.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.574" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:16:32.572" endtime="20201112 10:16:32.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.579" level="INFO">VALUE: [0.0001188750000000044, 0.00011884799999999779, 0.00011845800000000184, 0.00011916599999999694, 0.00011886100000000482, 0.00011829099999999954, 0.00011919399999999608, 0.00011887499999999745, 0.00011898700000000095, 0.00011854199999999926, 0.00011920800000000259, 0.00011862500000000414, 0.00011840200000000356, 0.00011901400000000062, 0.00011829199999999901, 0.00011909799999999804, 0.00011909799999999804, 0.00011894399999999583, 0.00011869499999999505, 0.0001183620000000038, 0.00011894500000000224, 0.00011876400000000037, 0.00011813899999999627, 0.00011837499999999695, 0.00011905599999999933, 0.00011863899999999677, 0.0001184579999999949, 0.000119082999999999, 0.00011843100000000217, 0.00011832000000000509, 0.0001182500000000003, 0.00011844400000000227, 0.00011916599999999694, 0.00011901400000000062, 0.00011868000000000295, 0.00011913899999999727, 0.0001182500000000003, 0.00011888899999999702, 0.00011850000000000055, 0.00011844500000000174, 0.00011911099999999814, 0.000118695000000002, 0.00011834699999999782, 0.0001187500000000008, 0.00011870900000000156, 0.00011888900000000396, 0.00011868100000000242, 0.00011905599999999933, 0.00011883399999999822, 0.00011833399999999772]</msg>
<status status="PASS" starttime="20201112 10:16:32.576" endtime="20201112 10:16:32.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.565" endtime="20201112 10:16:32.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.589" endtime="20201112 10:16:32.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.597" endtime="20201112 10:16:32.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.592" endtime="20201112 10:16:32.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.584" endtime="20201112 10:16:32.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.068" endtime="20201112 10:16:32.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.067" endtime="20201112 10:16:32.623"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.645" endtime="20201112 10:16:32.665"></status>
</kw>
<msg timestamp="20201112 10:16:32.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:32.642" endtime="20201112 10:16:32.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:32.668" endtime="20201112 10:16:32.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.674" endtime="20201112 10:16:32.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.635" endtime="20201112 10:16:32.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.629" endtime="20201112 10:16:32.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.697" endtime="20201112 10:16:33.032"></status>
</kw>
<msg timestamp="20201112 10:16:33.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040152139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.694" endtime="20201112 10:16:33.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040152139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:33.042" endtime="20201112 10:16:33.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.060" endtime="20201112 10:16:33.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.687" endtime="20201112 10:16:33.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.682" endtime="20201112 10:16:33.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:33.078" level="INFO">${RESULT} = [{'time': 0.040272278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012013899999999827, 'source_diff': 0.00012013899999999827}, {'time': 0.040402514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:33.069" endtime="20201112 10:16:33.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:33.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:33.080" endtime="20201112 10:16:33.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.118" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:16:33.116" endtime="20201112 10:16:33.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.123" level="INFO">VALUE: [0.00012013899999999827, 0.00011920800000000259, 0.00011966700000000385, 0.00011966699999999691, 0.00011959699999999907, 0.00011933399999999872, 0.00011973599999999529, 0.00011973600000000223, 0.00011948600000000198, 0.00011930599999999958, 0.00011945899999999537, 0.00012008399999999947, 0.00011934799999999829, 0.00011918099999999598, 0.0001197630000000019, 0.00011959799999999854, 0.00011933299999999925, 0.00011973600000000223, 0.000120083, 0.00012011100000000607, 0.0001192500000000013, 0.00011963899999999777, 0.00011972200000000266, 0.00012015300000000478, 0.0001199579999999964, 0.00012001399999999468, 0.00012019499999999655, 0.00012013899999999827, 0.00012013899999999827, 0.00011929200000000001, 0.00011948600000000198, 0.00012013900000000521, 0.00011991599999999769, 0.00011987499999999846, 0.00011977800000000094, 0.0001194170000000036, 0.00012004200000000076, 0.00011938899999999752, 0.0001198050000000006, 0.00011994399999999683, 0.0001201950000000035, 0.00011933299999999925, 0.00012004200000000076, 0.00012009699999999957, 0.00011961099999999864, 0.00011981900000000018, 0.00011976400000000137, 0.00011961099999999864, 0.0001198620000000053, 0.00011984699999999932]</msg>
<status status="PASS" starttime="20201112 10:16:33.120" endtime="20201112 10:16:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.109" endtime="20201112 10:16:33.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.133" endtime="20201112 10:16:33.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:33.141" endtime="20201112 10:16:33.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.136" endtime="20201112 10:16:33.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.128" endtime="20201112 10:16:33.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.625" endtime="20201112 10:16:33.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.623" endtime="20201112 10:16:33.167"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.189" endtime="20201112 10:16:33.209"></status>
</kw>
<msg timestamp="20201112 10:16:33.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:33.185" endtime="20201112 10:16:33.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:33.212" endtime="20201112 10:16:33.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.218" endtime="20201112 10:16:33.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.178" endtime="20201112 10:16:33.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.173" endtime="20201112 10:16:33.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.241" endtime="20201112 10:16:33.574"></status>
</kw>
<msg timestamp="20201112 10:16:33.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039867111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:33.238" endtime="20201112 10:16:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039867111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:33.584" endtime="20201112 10:16:33.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.602" endtime="20201112 10:16:33.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.231" endtime="20201112 10:16:33.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.226" endtime="20201112 10:16:33.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:33.620" level="INFO">${RESULT} = [{'time': 0.039987278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012016700000000435, 'source_diff': 0.00012016700000000435}, {'time': 0.040114486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:33.612" endtime="20201112 10:16:33.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:33.650" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:33.622" endtime="20201112 10:16:33.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.660" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:16:33.658" endtime="20201112 10:16:33.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.666" level="INFO">VALUE: [0.00012016700000000435, 0.00012029200000000101, 0.00012036099999999939, 0.0001208050000000016, 0.00012063899999999877, 0.00012023600000000273, 0.00012026399999999493, 0.00012090300000000553, 0.00012045900000000331, 0.00012054200000000126, 0.00012105600000000133, 0.00012020799999999665, 0.00012037499999999896, 0.00012040199999999862, 0.00012030600000000058, 0.00012111100000000014, 0.00012063900000000571, 0.0001209449999999973, 0.00012079200000000151, 0.00012037499999999896, 0.00012115299999999884, 0.00012101300000000315, 0.00012041699999999766, 0.00012077800000000194, 0.0001202500000000023, 0.00012101399999999568, 0.00012032000000000015, 0.00012101400000000262, 0.00012052799999999475, 0.00012116699999999841, 0.00012070900000000356, 0.00012097200000000391, 0.000121083000000001, 0.00012080600000000108, 0.00012042999999999776, 0.00012097200000000391, 0.00012116699999999841, 0.0001206379999999993, 0.00012036199999999886, 0.00012063899999999877, 0.00012119399999999808, 0.00012033300000000025, 0.00012095800000000434, 0.00012027800000000144, 0.0001206249999999992, 0.00012051399999999518, 0.00012097300000000338, 0.00012105500000000186, 0.00012119499999999755, 0.00012036100000000632]</msg>
<status status="PASS" starttime="20201112 10:16:33.663" endtime="20201112 10:16:33.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.652" endtime="20201112 10:16:33.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.675" endtime="20201112 10:16:33.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:33.683" endtime="20201112 10:16:33.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.679" endtime="20201112 10:16:33.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.671" endtime="20201112 10:16:33.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.169" endtime="20201112 10:16:33.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.168" endtime="20201112 10:16:33.709"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.731" endtime="20201112 10:16:33.751"></status>
</kw>
<msg timestamp="20201112 10:16:33.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:33.728" endtime="20201112 10:16:33.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:33.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:33.755" endtime="20201112 10:16:33.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.761" endtime="20201112 10:16:33.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.721" endtime="20201112 10:16:33.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.715" endtime="20201112 10:16:33.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:33.784" endtime="20201112 10:16:34.120"></status>
</kw>
<msg timestamp="20201112 10:16:34.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039971639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040092889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:33.780" endtime="20201112 10:16:34.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039971639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040092889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:34.129" endtime="20201112 10:16:34.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.147" endtime="20201112 10:16:34.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.773" endtime="20201112 10:16:34.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.769" endtime="20201112 10:16:34.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:34.168" level="INFO">${RESULT} = [{'time': 0.040092889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012124999999999636, 'source_diff': 0.00012124999999999636}, {'time': 0.040225264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:34.159" endtime="20201112 10:16:34.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:34.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:34.170" endtime="20201112 10:16:34.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.280" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:16:34.278" endtime="20201112 10:16:34.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.285" level="INFO">VALUE: [0.00012124999999999636, 0.0001214029999999991, 0.00012204200000000276, 0.00012144399999999833, 0.00012187500000000046, 0.0001212500000000033, 0.00012191699999999916, 0.0001215830000000015, 0.00012190200000000012, 0.00012163899999999978, 0.0001214579999999979, 0.00012197200000000491, 0.00012187500000000046, 0.00012179200000000251, 0.00012204200000000276, 0.00012200000000000405, 0.00012197199999999797, 0.00012176399999999643, 0.00012148599999999704, 0.0001219579999999984, 0.00012179199999999557, 0.00012147199999999747, 0.00012173600000000423, 0.00012174999999999686, 0.0001216109999999937, 0.00012152700000000322, 0.00012208400000000147, 0.00012124999999999636, 0.00012167999999999901, 0.00012148700000000345, 0.00012209700000000157, 0.00012205499999999592, 0.00012127700000000297, 0.0001216380000000003, 0.0001216250000000002, 0.0001217500000000038, 0.00012144399999999833, 0.00012198599999999754, 0.00012127800000000244, 0.00012151399999999618, 0.00012163899999999978, 0.00012147199999999747, 0.00012133400000000072, 0.00012165300000000628, 0.00012194500000000524, 0.00012169499999999805, 0.00012168099999999848, 0.00012149999999999661, 0.00012184700000000132, 0.00012161100000000064]</msg>
<status status="PASS" starttime="20201112 10:16:34.282" endtime="20201112 10:16:34.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.271" endtime="20201112 10:16:34.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.294" endtime="20201112 10:16:34.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:34.303" endtime="20201112 10:16:34.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.298" endtime="20201112 10:16:34.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.290" endtime="20201112 10:16:34.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.711" endtime="20201112 10:16:34.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:33.710" endtime="20201112 10:16:34.328"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.352" endtime="20201112 10:16:34.372"></status>
</kw>
<msg timestamp="20201112 10:16:34.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:34.348" endtime="20201112 10:16:34.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:34.375" endtime="20201112 10:16:34.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.381" endtime="20201112 10:16:34.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.340" endtime="20201112 10:16:34.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.335" endtime="20201112 10:16:34.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.404" endtime="20201112 10:16:34.739"></status>
</kw>
<msg timestamp="20201112 10:16:34.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041188125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:34.401" endtime="20201112 10:16:34.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041065583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041188125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:34.748" endtime="20201112 10:16:34.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.767" endtime="20201112 10:16:34.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.394" endtime="20201112 10:16:34.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.389" endtime="20201112 10:16:34.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:34.783" level="INFO">${RESULT} = [{'time': 0.041188125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012254199999999632, 'source_diff': 0.00012254199999999632}, {'time': 0.041318431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:34.775" endtime="20201112 10:16:34.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:34.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:34.785" endtime="20201112 10:16:34.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.824" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:16:34.822" endtime="20201112 10:16:34.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.829" level="INFO">VALUE: [0.00012254199999999632, 0.00012244500000000574, 0.00012241699999999966, 0.0001226250000000012, 0.00012276399999999743, 0.0001222779999999965, 0.00012277699999999753, 0.00012291700000000017, 0.00012231900000000268, 0.00012312499999999477, 0.00012226399999999693, 0.00012259700000000207, 0.00012238900000000053, 0.00012229199999999607, 0.00012301399999999768, 0.0001224449999999988, 0.00012247300000000488, 0.00012276399999999743, 0.00012229199999999607, 0.00012261100000000164, 0.0001222909999999966, 0.00012237500000000096, 0.00012304199999999682, 0.00012248700000000445, 0.00012277699999999753, 0.00012304100000000429, 0.0001224160000000002, 0.00012322199999999922, 0.00012270900000000556, 0.00012276299999999796, 0.00012306900000000343, 0.00012276399999999743, 0.00012288900000000103, 0.00012268099999999948, 0.0001225280000000037, 0.00012230499999999617, 0.0001226250000000012, 0.00012243099999999923, 0.00012311199999999467, 0.00012305600000000333, 0.00012274999999999786, 0.0001226380000000013, 0.00012306900000000343, 0.00012238900000000053, 0.00012252799999999675, 0.00012277699999999753, 0.0001225830000000025, 0.00012295899999999887, 0.00012250000000000455, 0.00012247300000000488]</msg>
<status status="PASS" starttime="20201112 10:16:34.826" endtime="20201112 10:16:34.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.815" endtime="20201112 10:16:34.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.838" endtime="20201112 10:16:34.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:34.846" endtime="20201112 10:16:34.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.842" endtime="20201112 10:16:34.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.834" endtime="20201112 10:16:34.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.330" endtime="20201112 10:16:34.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.329" endtime="20201112 10:16:34.872"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.894" endtime="20201112 10:16:34.916"></status>
</kw>
<msg timestamp="20201112 10:16:34.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:34.891" endtime="20201112 10:16:34.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:34.919" endtime="20201112 10:16:34.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.926" endtime="20201112 10:16:34.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.884" endtime="20201112 10:16:34.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.879" endtime="20201112 10:16:34.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.948" endtime="20201112 10:16:35.283"></status>
</kw>
<msg timestamp="20201112 10:16:35.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:34.945" endtime="20201112 10:16:35.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.292" endtime="20201112 10:16:35.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.310" endtime="20201112 10:16:35.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.938" endtime="20201112 10:16:35.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.934" endtime="20201112 10:16:35.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.327" level="INFO">${RESULT} = [{'time': 0.041377972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001236250000000022, 'source_diff': 0.0001236250000000022}, {'time': 0.041509208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:35.319" endtime="20201112 10:16:35.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:35.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:35.329" endtime="20201112 10:16:35.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.368" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:16:35.365" endtime="20201112 10:16:35.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.373" level="INFO">VALUE: [0.0001236250000000022, 0.00012348599999999904, 0.00012374999999999886, 0.00012347199999999947, 0.00012394400000000083, 0.00012351399999999818, 0.00012397299999999944, 0.00012402799999999825, 0.00012369500000000005, 0.0001233329999999963, 0.00012348599999999904, 0.00012358400000000297, 0.00012340199999999468, 0.00012351399999999818, 0.00012405499999999792, 0.00012408299999999706, 0.0001239580000000004, 0.00012334700000000282, 0.00012374999999999886, 0.00012351399999999818, 0.00012331900000000368, 0.00012343000000000076, 0.00012341700000000067, 0.000123680000000001, 0.00012334699999999588, 0.0001235830000000035, 0.00012387500000000246, 0.0001239450000000003, 0.00012319400000000008, 0.0001242359999999998, 0.00012409700000000357, 0.00012337500000000196, 0.00012356900000000393, 0.00012327700000000497, 0.00012334700000000282, 0.00012415300000000185, 0.00012416700000000142, 0.0001239999999999991, 0.00012387500000000246, 0.00012384700000000332, 0.0001232779999999975, 0.00012383300000000375, 0.00012347300000000588, 0.00012358399999999603, 0.00012347199999999947, 0.00012374999999999886, 0.00012401399999999868, 0.00012384699999999638, 0.00012329199999999707, 0.00012366700000000092]</msg>
<status status="PASS" starttime="20201112 10:16:35.370" endtime="20201112 10:16:35.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.359" endtime="20201112 10:16:35.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.382" endtime="20201112 10:16:35.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:35.390" endtime="20201112 10:16:35.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.386" endtime="20201112 10:16:35.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.378" endtime="20201112 10:16:35.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.874" endtime="20201112 10:16:35.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.873" endtime="20201112 10:16:35.416"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.438" endtime="20201112 10:16:35.459"></status>
</kw>
<msg timestamp="20201112 10:16:35.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:35.435" endtime="20201112 10:16:35.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:35.462" endtime="20201112 10:16:35.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.468" endtime="20201112 10:16:35.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.428" endtime="20201112 10:16:35.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.422" endtime="20201112 10:16:35.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.493" endtime="20201112 10:16:35.827"></status>
</kw>
<msg timestamp="20201112 10:16:35.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040061181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.490" endtime="20201112 10:16:35.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040061181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:35.836" endtime="20201112 10:16:35.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.854" endtime="20201112 10:16:35.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.481" endtime="20201112 10:16:35.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.476" endtime="20201112 10:16:35.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.871" level="INFO">${RESULT} = [{'time': 0.040061181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012520900000000112, 'source_diff': 0.00012520900000000112}, {'time': 0.040191417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:35.863" endtime="20201112 10:16:35.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:35.901" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:35.873" endtime="20201112 10:16:35.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.912" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:16:35.909" endtime="20201112 10:16:35.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.917" level="INFO">VALUE: [0.00012520900000000112, 0.00012487500000000346, 0.0001245830000000045, 0.0001250280000000062, 0.00012444400000000133, 0.00012454199999999832, 0.00012480499999999867, 0.00012450000000000655, 0.00012436099999999645, 0.0001250000000000001, 0.00012474999999999986, 0.00012494400000000183, 0.00012436099999999645, 0.0001248329999999978, 0.0001246250000000032, 0.00012447200000000047, 0.00012526399999999993, 0.00012454199999999832, 0.00012434700000000382, 0.00012461100000000364, 0.00012476399999999943, 0.00012474999999999986, 0.0001244030000000021, 0.00012463900000000278, 0.00012438900000000253, 0.00012487500000000346, 0.00012454199999999832, 0.00012455499999999842, 0.0001248329999999978, 0.00012504200000000576, 0.00012431899999999774, 0.0001244580000000009, 0.00012513899999999634, 0.00012480499999999867, 0.00012509700000000457, 0.00012448600000000004, 0.0001247360000000003, 0.00012484700000000432, 0.00012476399999999943, 0.0001247909999999991, 0.00012436100000000339, 0.00012459700000000407, 0.0001248329999999978, 0.00012487499999999652, 0.00012502699999999978, 0.00012454199999999832, 0.00012468099999999455, 0.0001250559999999984, 0.00012443100000000124, 0.00012459699999999713]</msg>
<status status="PASS" starttime="20201112 10:16:35.914" endtime="20201112 10:16:35.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.903" endtime="20201112 10:16:35.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.926" endtime="20201112 10:16:35.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:35.934" endtime="20201112 10:16:35.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.930" endtime="20201112 10:16:35.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.922" endtime="20201112 10:16:35.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.418" endtime="20201112 10:16:35.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.417" endtime="20201112 10:16:35.960"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.982" endtime="20201112 10:16:36.003"></status>
</kw>
<msg timestamp="20201112 10:16:36.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:35.979" endtime="20201112 10:16:36.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:36.006" endtime="20201112 10:16:36.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.013" endtime="20201112 10:16:36.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.972" endtime="20201112 10:16:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.966" endtime="20201112 10:16:36.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.036" endtime="20201112 10:16:36.375"></status>
</kw>
<msg timestamp="20201112 10:16:36.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039790847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039916486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.033" endtime="20201112 10:16:36.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039790847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039916486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.384" endtime="20201112 10:16:36.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.402" endtime="20201112 10:16:36.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.026" endtime="20201112 10:16:36.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.021" endtime="20201112 10:16:36.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:36.419" level="INFO">${RESULT} = [{'time': 0.039916486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012563900000000378, 'source_diff': 0.00012563900000000378}, {'time': 0.040048722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:36.411" endtime="20201112 10:16:36.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:36.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:36.421" endtime="20201112 10:16:36.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.461" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:16:36.459" endtime="20201112 10:16:36.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.467" level="INFO">VALUE: [0.00012563900000000378, 0.00012620800000000265, 0.0001254580000000019, 0.000125778, 0.00012554199999999932, 0.00012567999999999607, 0.00012625000000000136, 0.00012618100000000299, 0.00012575000000000086, 0.00012602700000000078, 0.00012581900000000618, 0.00012548600000000104, 0.0001261250000000047, 0.00012599999999999417, 0.00012597300000000144, 0.00012536100000000439, 0.00012563900000000378, 0.00012561100000000464, 0.00012531899999999874, 0.00012530499999999917, 0.00012575000000000086, 0.00012547200000000147, 0.00012591700000000317, 0.0001258889999999971, 0.00012552700000000028, 0.00012547200000000147, 0.0001261529999999969, 0.00012576400000000043, 0.00012530599999999864, 0.000125778, 0.00012617999999999657, 0.00012612499999999777, 0.00012570800000000215, 0.00012615300000000385, 0.0001259030000000036, 0.00012608400000000547, 0.0001253329999999983, 0.00012531899999999874, 0.00012602800000000025, 0.00012587500000000446, 0.00012538900000000353, 0.00012527700000000003, 0.0001259729999999945, 0.00012608399999999853, 0.00012525000000000036, 0.00012563900000000378, 0.0001256250000000042, 0.00012608299999999906, 0.0001255559999999989, 0.00012530599999999864]</msg>
<status status="PASS" starttime="20201112 10:16:36.464" endtime="20201112 10:16:36.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.453" endtime="20201112 10:16:36.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.480" endtime="20201112 10:16:36.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:36.488" endtime="20201112 10:16:36.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.484" endtime="20201112 10:16:36.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.475" endtime="20201112 10:16:36.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.962" endtime="20201112 10:16:36.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.961" endtime="20201112 10:16:36.514"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.536" endtime="20201112 10:16:36.557"></status>
</kw>
<msg timestamp="20201112 10:16:36.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:36.533" endtime="20201112 10:16:36.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:36.560" endtime="20201112 10:16:36.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.566" endtime="20201112 10:16:36.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.526" endtime="20201112 10:16:36.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.521" endtime="20201112 10:16:36.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.589" endtime="20201112 10:16:36.924"></status>
</kw>
<msg timestamp="20201112 10:16:36.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040445667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.586" endtime="20201112 10:16:36.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040445667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.933" endtime="20201112 10:16:36.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.951" endtime="20201112 10:16:36.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.579" endtime="20201112 10:16:36.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.574" endtime="20201112 10:16:36.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:36.970" level="INFO">${RESULT} = [{'time': 0.040445667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012680600000000014, 'source_diff': 0.00012680600000000014}, {'time': 0.040579903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:36.961" endtime="20201112 10:16:36.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:36.999" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:36.972" endtime="20201112 10:16:37.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.010" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:16:37.008" endtime="20201112 10:16:37.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.015" level="INFO">VALUE: [0.00012680600000000014, 0.00012630599999999964, 0.00012717999999999757, 0.00012673700000000176, 0.00012697199999999603, 0.0001267079999999962, 0.00012630599999999964, 0.00012712499999999877, 0.00012670800000000315, 0.00012636099999999845, 0.00012716700000000442, 0.00012667999999999707, 0.00012684699999999938, 0.00012626400000000093, 0.0001268329999999998, 0.0001263199999999992, 0.000126569, 0.000126778000000001, 0.00012634699999999888, 0.00012629200000000007, 0.0001268879999999986, 0.000126569, 0.0001270000000000021, 0.00012655500000000042, 0.00012652700000000128, 0.00012658399999999903, 0.0001264439999999964, 0.00012625000000000136, 0.0001265000000000016, 0.00012690299999999766, 0.00012679200000000057, 0.0001262780000000005, 0.0001262780000000005, 0.00012684699999999938, 0.0001270690000000005, 0.00012684700000000632, 0.00012637499999999802, 0.00012695900000000288, 0.00012690299999999766, 0.00012651399999999424, 0.0001269859999999956, 0.00012720800000000365, 0.00012694499999999637, 0.0001267360000000023, 0.00012626400000000093, 0.0001267360000000023, 0.0001267910000000011, 0.00012630599999999964, 0.0001267079999999962, 0.00012686100000000589]</msg>
<status status="PASS" starttime="20201112 10:16:37.012" endtime="20201112 10:16:37.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.001" endtime="20201112 10:16:37.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.025" endtime="20201112 10:16:37.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:37.033" endtime="20201112 10:16:37.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.029" endtime="20201112 10:16:37.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.020" endtime="20201112 10:16:37.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.516" endtime="20201112 10:16:37.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.515" endtime="20201112 10:16:37.060"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.082" endtime="20201112 10:16:37.102"></status>
</kw>
<msg timestamp="20201112 10:16:37.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:37.079" endtime="20201112 10:16:37.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:37.106" endtime="20201112 10:16:37.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.112" endtime="20201112 10:16:37.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.072" endtime="20201112 10:16:37.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.066" endtime="20201112 10:16:37.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.135" endtime="20201112 10:16:37.469"></status>
</kw>
<msg timestamp="20201112 10:16:37.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.131" endtime="20201112 10:16:37.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.478" endtime="20201112 10:16:37.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.497" endtime="20201112 10:16:37.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.124" endtime="20201112 10:16:37.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.120" endtime="20201112 10:16:37.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:37.515" level="INFO">${RESULT} = [{'time': 0.040441611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001280000000000031, 'source_diff': 0.0001280000000000031}, {'time': 0.040574833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:37.506" endtime="20201112 10:16:37.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:37.544" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:37.517" endtime="20201112 10:16:37.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.555" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:16:37.553" endtime="20201112 10:16:37.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.561" level="INFO">VALUE: [0.0001280000000000031, 0.0001274439999999974, 0.00012813899999999934, 0.00012786099999999995, 0.00012774999999999592, 0.00012754200000000132, 0.0001276109999999997, 0.0001278330000000008, 0.0001280000000000031, 0.00012740199999999868, 0.00012725000000000236, 0.00012741699999999773, 0.0001272780000000015, 0.0001281110000000002, 0.00012726400000000193, 0.00012754200000000132, 0.0001275130000000027, 0.00012787499999999952, 0.00012772200000000372, 0.00012762499999999927, 0.0001277769999999956, 0.00012816700000000542, 0.0001276109999999997, 0.0001278889999999991, 0.00012754200000000132, 0.00012727700000000203, 0.00012769399999999764, 0.0001281529999999989, 0.0001276109999999997, 0.000127778000000002, 0.00012762499999999927, 0.00012781900000000124, 0.00012808400000000053, 0.00012791599999999875, 0.0001281110000000002, 0.00012813899999999934, 0.00012740200000000562, 0.00012791599999999875, 0.00012804100000000235, 0.00012766699999999798, 0.00012820899999999719, 0.00012801400000000268, 0.00012808400000000053, 0.0001275000000000026, 0.00012736100000000639, 0.0001275000000000026, 0.00012741699999999773, 0.00012815199999999943, 0.00012804200000000182, 0.0001273889999999986]</msg>
<status status="PASS" starttime="20201112 10:16:37.558" endtime="20201112 10:16:37.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.546" endtime="20201112 10:16:37.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.570" endtime="20201112 10:16:37.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:37.578" endtime="20201112 10:16:37.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.574" endtime="20201112 10:16:37.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.566" endtime="20201112 10:16:37.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.062" endtime="20201112 10:16:37.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.061" endtime="20201112 10:16:37.604"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.626" endtime="20201112 10:16:37.647"></status>
</kw>
<msg timestamp="20201112 10:16:37.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:37.623" endtime="20201112 10:16:37.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:37.650" endtime="20201112 10:16:37.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.656" endtime="20201112 10:16:37.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.616" endtime="20201112 10:16:37.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.610" endtime="20201112 10:16:37.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.679" endtime="20201112 10:16:38.014"></status>
</kw>
<msg timestamp="20201112 10:16:38.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039964403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.676" endtime="20201112 10:16:38.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039964403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.023" endtime="20201112 10:16:38.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.041" endtime="20201112 10:16:38.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.669" endtime="20201112 10:16:38.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.664" endtime="20201112 10:16:38.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:38.060" level="INFO">${RESULT} = [{'time': 0.040093028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012862500000000027, 'source_diff': 0.00012862500000000027}, {'time': 0.040232278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:38.051" endtime="20201112 10:16:38.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:38.090" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:38.062" endtime="20201112 10:16:38.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.101" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:16:38.098" endtime="20201112 10:16:38.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.106" level="INFO">VALUE: [0.00012862500000000027, 0.0001285000000000036, 0.00012919399999999914, 0.00012854200000000232, 0.00012879200000000257, 0.00012842999999999882, 0.00012833399999999384, 0.00012862500000000027, 0.00012862500000000027, 0.000128778000000003, 0.00012868099999999855, 0.00012851400000000318, 0.00012869399999999864, 0.00012868099999999855, 0.0001282780000000025, 0.0001289859999999976, 0.00012836100000000045, 0.00012916699999999948, 0.00012919499999999862, 0.0001286110000000007, 0.0001290969999999947, 0.00012890299999999966, 0.00012920899999999819, 0.00012849999999999667, 0.0001285409999999959, 0.00012922199999999828, 0.00012890299999999966, 0.0001283889999999996, 0.00012890299999999966, 0.0001285560000000019, 0.00012890299999999966, 0.00012895799999999846, 0.0001284859999999971, 0.00012912500000000077, 0.00012891599999999975, 0.00012869499999999812, 0.0001284439999999984, 0.0001290409999999964, 0.00012862500000000027, 0.0001285000000000036, 0.00012873599999999735, 0.00012897200000000497, 0.00012834700000000088, 0.00012827700000000303, 0.0001288890000000001, 0.00012891699999999923, 0.00012890299999999966, 0.00012858300000000156, 0.00012834700000000088, 0.00012841699999999873]</msg>
<status status="PASS" starttime="20201112 10:16:38.103" endtime="20201112 10:16:38.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.092" endtime="20201112 10:16:38.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.115" endtime="20201112 10:16:38.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:38.124" endtime="20201112 10:16:38.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.119" endtime="20201112 10:16:38.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.111" endtime="20201112 10:16:38.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.606" endtime="20201112 10:16:38.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.605" endtime="20201112 10:16:38.149"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.172" endtime="20201112 10:16:38.192"></status>
</kw>
<msg timestamp="20201112 10:16:38.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:38.168" endtime="20201112 10:16:38.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:38.195" endtime="20201112 10:16:38.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.202" endtime="20201112 10:16:38.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.161" endtime="20201112 10:16:38.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.156" endtime="20201112 10:16:38.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.224" endtime="20201112 10:16:38.560"></status>
</kw>
<msg timestamp="20201112 10:16:38.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039968903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040098806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.221" endtime="20201112 10:16:38.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039968903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040098806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.569" endtime="20201112 10:16:38.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.587" endtime="20201112 10:16:38.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.214" endtime="20201112 10:16:38.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.209" endtime="20201112 10:16:38.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:38.606" level="INFO">${RESULT} = [{'time': 0.040098806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012990300000000066, 'source_diff': 0.00012990300000000066}, {'time': 0.040239028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:38.597" endtime="20201112 10:16:38.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:38.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:38.608" endtime="20201112 10:16:38.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.648" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:16:38.646" endtime="20201112 10:16:38.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.653" level="INFO">VALUE: [0.00012990300000000066, 0.00012934700000000188, 0.00013007000000000296, 0.00013009700000000263, 0.00012958300000000256, 0.00013022199999999928, 0.00012990300000000066, 0.000129778000000004, 0.00012951399999999724, 0.00012969399999999964, 0.00012980600000000314, 0.00012940300000000016, 0.00012933400000000178, 0.00012930600000000264, 0.00012961099999999476, 0.00012937500000000102, 0.0001295560000000029, 0.0001301530000000009, 0.00012980499999999673, 0.00012999999999999817, 0.00012994499999999937, 0.000130166000000001, 0.00012930600000000264, 0.00012969399999999964, 0.00012937500000000102, 0.00012963900000000084, 0.0001296530000000004, 0.00012984700000000238, 0.0001296660000000005, 0.00012947199999999853, 0.00013008400000000253, 0.00012924999999999742, 0.0001299439999999999, 0.00012963800000000136, 0.00012952699999999734, 0.00012966699999999998, 0.00013012500000000177, 0.00012943000000000676, 0.00012930600000000264, 0.00012951400000000418, 0.00012937500000000102, 0.00013011099999999526, 0.00012969399999999964, 0.00013019400000000014, 0.00012923599999999785, 0.00012961200000000117, 0.00012958400000000203, 0.00012951399999999724, 0.0001293609999999945, 0.00013013900000000134]</msg>
<status status="PASS" starttime="20201112 10:16:38.650" endtime="20201112 10:16:38.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.639" endtime="20201112 10:16:38.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.663" endtime="20201112 10:16:38.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:38.671" endtime="20201112 10:16:38.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.667" endtime="20201112 10:16:38.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.658" endtime="20201112 10:16:38.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.151" endtime="20201112 10:16:38.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.150" endtime="20201112 10:16:38.697"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.719" endtime="20201112 10:16:38.740"></status>
</kw>
<msg timestamp="20201112 10:16:38.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:38.716" endtime="20201112 10:16:38.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:38.743" endtime="20201112 10:16:38.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.749" endtime="20201112 10:16:38.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.709" endtime="20201112 10:16:38.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.703" endtime="20201112 10:16:38.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.772" endtime="20201112 10:16:39.107"></status>
</kw>
<msg timestamp="20201112 10:16:39.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039996819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040127625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.769" endtime="20201112 10:16:39.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039996819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040127625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:39.116" endtime="20201112 10:16:39.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.135" endtime="20201112 10:16:39.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.762" endtime="20201112 10:16:39.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.757" endtime="20201112 10:16:39.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:39.152" level="INFO">${RESULT} = [{'time': 0.040127625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001308059999999972, 'source_diff': 0.0001308059999999972}, {'time': 0.040265889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:39.143" endtime="20201112 10:16:39.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:39.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:39.154" endtime="20201112 10:16:39.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.193" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:16:39.191" endtime="20201112 10:16:39.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.198" level="INFO">VALUE: [0.0001308059999999972, 0.00013112499999999583, 0.0001303189999999968, 0.00013094500000000037, 0.00013081999999999677, 0.00013107000000000396, 0.00013051400000000518, 0.00013024999999999842, 0.00013095800000000046, 0.00013123599999999985, 0.00013092999999999438, 0.00013109700000000363, 0.00013030600000000364, 0.00013041700000000073, 0.00013044499999999987, 0.00013073599999999935, 0.00013099999999999917, 0.00013124999999999942, 0.00013042999999999388, 0.0001307910000000051, 0.00013029099999999766, 0.00013029099999999766, 0.000130860999999996, 0.0001310969999999967, 0.00013066700000000098, 0.00013045899999999944, 0.00013036100000000245, 0.0001311110000000032, 0.00013091600000000175, 0.00013058400000000303, 0.0001308200000000037, 0.00013087499999999558, 0.0001303890000000016, 0.0001309719999999931, 0.00013077799999999806, 0.00013061099999999576, 0.0001303890000000016, 0.00013076300000000596, 0.00013083400000000328, 0.00013118100000000105, 0.00013057000000000346, 0.0001303890000000016, 0.00013054199999999738, 0.000130263999999998, 0.0001303059999999967, 0.00013077799999999806, 0.00013037499999999508, 0.00013027799999999756, 0.00013118000000000157, 0.00013095800000000046]</msg>
<status status="PASS" starttime="20201112 10:16:39.196" endtime="20201112 10:16:39.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.184" endtime="20201112 10:16:39.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.208" endtime="20201112 10:16:39.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:39.216" endtime="20201112 10:16:39.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.212" endtime="20201112 10:16:39.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.203" endtime="20201112 10:16:39.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.699" endtime="20201112 10:16:39.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.698" endtime="20201112 10:16:39.242"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.264" endtime="20201112 10:16:39.285"></status>
</kw>
<msg timestamp="20201112 10:16:39.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:39.261" endtime="20201112 10:16:39.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:39.288" endtime="20201112 10:16:39.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.294" endtime="20201112 10:16:39.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.254" endtime="20201112 10:16:39.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.248" endtime="20201112 10:16:39.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.317" endtime="20201112 10:16:39.653"></status>
</kw>
<msg timestamp="20201112 10:16:39.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039833639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039964903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:39.314" endtime="20201112 10:16:39.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039833639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039964903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:39.662" endtime="20201112 10:16:39.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.680" endtime="20201112 10:16:39.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.307" endtime="20201112 10:16:39.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.302" endtime="20201112 10:16:39.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:39.697" level="INFO">${RESULT} = [{'time': 0.039964903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013126400000000593, 'source_diff': 0.00013126400000000593}, {'time': 0.040105181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:39.689" endtime="20201112 10:16:39.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:39.728" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:39.699" endtime="20201112 10:16:39.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.739" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:16:39.737" endtime="20201112 10:16:39.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.745" level="INFO">VALUE: [0.00013126400000000593, 0.0001318059999999982, 0.0001319440000000019, 0.00013134699999999694, 0.0001319860000000006, 0.00013191700000000223, 0.0001313890000000026, 0.00013123599999999985, 0.0001319860000000006, 0.00013173600000000035, 0.0001321389999999964, 0.0001313200000000042, 0.00013140299999999522, 0.0001317080000000012, 0.00013161200000000317, 0.0001312780000000055, 0.0001321530000000029, 0.0001320560000000054, 0.00013222299999999382, 0.00013137500000000302, 0.00013138899999999565, 0.00013159700000000413, 0.00013190300000000266, 0.00013137499999999608, 0.00013197200000000103, 0.0001316110000000037, 0.0001317090000000007, 0.00013161199999999623, 0.000131263999999999, 0.00013152800000000575, 0.0001317080000000012, 0.00013205599999999845, 0.0001319719999999941, 0.00013219500000000162, 0.00013177799999999906, 0.00013205599999999845, 0.00013136100000000345, 0.00013149999999999967, 0.00013159700000000413, 0.00013142999999999488, 0.00013145799999999402, 0.00013223600000000085, 0.00013206899999999855, 0.0001317639999999995, 0.0001314860000000001, 0.00013161099999999676, 0.00013136100000000345, 0.0001314860000000001, 0.0001318059999999982, 0.00013190299999999572]</msg>
<status status="PASS" starttime="20201112 10:16:39.742" endtime="20201112 10:16:39.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.730" endtime="20201112 10:16:39.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.754" endtime="20201112 10:16:39.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:39.762" endtime="20201112 10:16:39.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.758" endtime="20201112 10:16:39.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.749" endtime="20201112 10:16:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.244" endtime="20201112 10:16:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.243" endtime="20201112 10:16:39.788"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.810" endtime="20201112 10:16:39.830"></status>
</kw>
<msg timestamp="20201112 10:16:39.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:39.806" endtime="20201112 10:16:39.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:39.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:39.834" endtime="20201112 10:16:39.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.840" endtime="20201112 10:16:39.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.800" endtime="20201112 10:16:39.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.794" endtime="20201112 10:16:39.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:39.863" endtime="20201112 10:16:40.198"></status>
</kw>
<msg timestamp="20201112 10:16:40.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:39.860" endtime="20201112 10:16:40.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.207" endtime="20201112 10:16:40.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.225" endtime="20201112 10:16:40.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.852" endtime="20201112 10:16:40.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.848" endtime="20201112 10:16:40.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.242" level="INFO">${RESULT} = [{'time': 0.039908847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013267999999999613, 'source_diff': 0.00013267999999999613}, {'time': 0.040047125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:40.234" endtime="20201112 10:16:40.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:40.273" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:40.244" endtime="20201112 10:16:40.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.284" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:16:40.282" endtime="20201112 10:16:40.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.289" level="INFO">VALUE: [0.00013267999999999613, 0.00013230600000000564, 0.00013280499999999973, 0.00013301400000000074, 0.00013315299999999697, 0.00013255499999999948, 0.0001325969999999982, 0.00013267999999999613, 0.00013258299999999862, 0.00013265299999999647, 0.0001326389999999969, 0.0001328890000000041, 0.00013251400000000024, 0.00013279100000000016, 0.0001329310000000028, 0.00013295900000000194, 0.0001331809999999961, 0.00013231999999999827, 0.00013241700000000273, 0.00013297200000000203, 0.00013275000000000092, 0.000132264, 0.00013261099999999776, 0.00013234800000000435, 0.00013266699999999604, 0.0001322080000000017, 0.0001330139999999938, 0.00013287499999999758, 0.00013223600000000085, 0.00013312499999999783, 0.00013277800000000006, 0.00013234699999999794, 0.0001329169999999963, 0.00013256999999999852, 0.0001324169999999958, 0.00013229099999999966, 0.00013234700000000488, 0.00013254199999999938, 0.00013230500000000617, 0.00013238899999999665, 0.00013265299999999647, 0.00013275000000000092, 0.00013286200000000442, 0.00013263900000000384, 0.00013306899999999955, 0.00013236100000000445, 0.0001326389999999969, 0.0001329310000000028, 0.00013322300000000176, 0.00013256899999999905]</msg>
<status status="PASS" starttime="20201112 10:16:40.286" endtime="20201112 10:16:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.275" endtime="20201112 10:16:40.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.299" endtime="20201112 10:16:40.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:40.307" endtime="20201112 10:16:40.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.302" endtime="20201112 10:16:40.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.294" endtime="20201112 10:16:40.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.790" endtime="20201112 10:16:40.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:39.789" endtime="20201112 10:16:40.332"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.355" endtime="20201112 10:16:40.375"></status>
</kw>
<msg timestamp="20201112 10:16:40.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:40.351" endtime="20201112 10:16:40.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:40.379" endtime="20201112 10:16:40.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.385" endtime="20201112 10:16:40.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.344" endtime="20201112 10:16:40.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.339" endtime="20201112 10:16:40.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.408" endtime="20201112 10:16:40.741"></status>
</kw>
<msg timestamp="20201112 10:16:40.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.404" endtime="20201112 10:16:40.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.750" endtime="20201112 10:16:40.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.769" endtime="20201112 10:16:40.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.397" endtime="20201112 10:16:40.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.393" endtime="20201112 10:16:40.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.785" level="INFO">${RESULT} = [{'time': 0.039899625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001334310000000033, 'source_diff': 0.0001334310000000033}, {'time': 0.040040917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:40.777" endtime="20201112 10:16:40.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:40.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:40.788" endtime="20201112 10:16:40.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.829" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:16:40.826" endtime="20201112 10:16:40.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.834" level="INFO">VALUE: [0.0001334310000000033, 0.0001338060000000002, 0.00013356999999999952, 0.00013344399999999645, 0.00013365299999999747, 0.00013342999999999688, 0.00013343000000000382, 0.0001333059999999997, 0.0001339310000000038, 0.00013344399999999645, 0.00013388899999999815, 0.00013331999999999927, 0.0001341530000000049, 0.00013405600000000045, 0.0001334310000000033, 0.0001341519999999985, 0.00013334700000000588, 0.0001334860000000021, 0.0001339719999999961, 0.00013347200000000253, 0.0001335280000000008, 0.00013341600000000425, 0.0001336389999999979, 0.0001338060000000002, 0.0001339719999999961, 0.00013388799999999867, 0.00013384699999999944, 0.00013429200000000113, 0.00013427699999999515, 0.00013333299999999937, 0.00013426300000000252, 0.00013361200000000517, 0.00013337499999999808, 0.00013388899999999815, 0.0001337640000000015, 0.00013344500000000287, 0.00013390299999999772, 0.00013387499999999858, 0.00013412499999999883, 0.00013351400000000124, 0.00013407000000000002, 0.00013409799999999916, 0.00013408300000000012, 0.0001335969999999992, 0.00013426399999999505, 0.00013417999999999763, 0.00013411099999999926, 0.0001337369999999949, 0.00013340199999999774, 0.00013372199999999584]</msg>
<status status="PASS" starttime="20201112 10:16:40.831" endtime="20201112 10:16:40.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.820" endtime="20201112 10:16:40.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.843" endtime="20201112 10:16:40.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:40.851" endtime="20201112 10:16:40.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.847" endtime="20201112 10:16:40.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.839" endtime="20201112 10:16:40.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.334" endtime="20201112 10:16:40.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.333" endtime="20201112 10:16:40.877"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.899" endtime="20201112 10:16:40.920"></status>
</kw>
<msg timestamp="20201112 10:16:40.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:40.896" endtime="20201112 10:16:40.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:40.923" endtime="20201112 10:16:40.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.929" endtime="20201112 10:16:40.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.889" endtime="20201112 10:16:40.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.883" endtime="20201112 10:16:40.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.952" endtime="20201112 10:16:41.288"></status>
</kw>
<msg timestamp="20201112 10:16:41.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039795986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039930528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.949" endtime="20201112 10:16:41.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039795986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039930528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:41.298" endtime="20201112 10:16:41.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.316" endtime="20201112 10:16:41.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.942" endtime="20201112 10:16:41.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.937" endtime="20201112 10:16:41.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:41.333" level="INFO">${RESULT} = [{'time': 0.039930528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013454200000000138, 'source_diff': 0.00013454200000000138}, {'time': 0.040072778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:41.324" endtime="20201112 10:16:41.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:41.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:41.335" endtime="20201112 10:16:41.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.375" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:16:41.371" endtime="20201112 10:16:41.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.380" level="INFO">VALUE: [0.00013454200000000138, 0.00013523600000000385, 0.00013473599999999641, 0.00013493099999999786, 0.0001343609999999995, 0.00013440299999999822, 0.00013522199999999734, 0.00013423600000000285, 0.00013443099999999736, 0.00013480500000000173, 0.00013433300000000037, 0.0001343609999999995, 0.00013501400000000274, 0.00013519500000000462, 0.00013469400000000464, 0.00013508300000000112, 0.00013440300000000516, 0.00013442999999999788, 0.0001344310000000043, 0.0001346389999999989, 0.0001345840000000001, 0.000134264000000002, 0.00013436199999999898, 0.00013452799999999487, 0.00013484700000000044, 0.00013455600000000095, 0.00013494399999999795, 0.00013513900000000634, 0.00013494499999999743, 0.00013488899999999915, 0.00013454200000000138, 0.0001350280000000023, 0.00013497200000000403, 0.0001344860000000031, 0.0001348060000000012, 0.00013466700000000498, 0.00013429099999999472, 0.0001350139999999958, 0.00013512499999999983, 0.0001347090000000037, 0.00013475000000000292, 0.0001345410000000019, 0.0001350139999999958, 0.00013470799999999727, 0.00013443099999999736, 0.00013515299999999897, 0.00013487499999999958, 0.0001348060000000012, 0.0001349860000000036, 0.0001350280000000023]</msg>
<status status="PASS" starttime="20201112 10:16:41.377" endtime="20201112 10:16:41.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.365" endtime="20201112 10:16:41.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.389" endtime="20201112 10:16:41.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:41.397" endtime="20201112 10:16:41.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.393" endtime="20201112 10:16:41.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.385" endtime="20201112 10:16:41.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.879" endtime="20201112 10:16:41.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.878" endtime="20201112 10:16:41.423"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.445" endtime="20201112 10:16:41.466"></status>
</kw>
<msg timestamp="20201112 10:16:41.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:41.442" endtime="20201112 10:16:41.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:41.470" endtime="20201112 10:16:41.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.476" endtime="20201112 10:16:41.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.435" endtime="20201112 10:16:41.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.430" endtime="20201112 10:16:41.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.498" endtime="20201112 10:16:41.834"></status>
</kw>
<msg timestamp="20201112 10:16:41.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:41.495" endtime="20201112 10:16:41.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:41.843" endtime="20201112 10:16:41.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.861" endtime="20201112 10:16:41.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.488" endtime="20201112 10:16:41.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.484" endtime="20201112 10:16:41.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:41.878" level="INFO">${RESULT} = [{'time': 0.040028111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013549999999999673, 'source_diff': 0.00013549999999999673}, {'time': 0.040173389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:41.869" endtime="20201112 10:16:41.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:41.908" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:41.880" endtime="20201112 10:16:41.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.919" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:16:41.916" endtime="20201112 10:16:41.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.924" level="INFO">VALUE: [0.00013549999999999673, 0.00013554199999999544, 0.00013551300000000377, 0.00013555600000000195, 0.00013573599999999741, 0.00013612500000000083, 0.0001356809999999986, 0.00013538800000000017, 0.00013533299999999443, 0.00013542999999999888, 0.0001353190000000018, 0.00013555500000000248, 0.00013584700000000144, 0.0001355970000000012, 0.00013601400000000374, 0.00013591599999999981, 0.00013543099999999836, 0.00013529200000000213, 0.00013537500000000008, 0.0001353480000000004, 0.00013558300000000162, 0.0001360840000000016, 0.0001361390000000004, 0.00013527699999999615, 0.00013622199999999834, 0.00013573600000000435, 0.00013566599999999956, 0.00013552799999999587, 0.000135861000000001, 0.00013591599999999981, 0.00013587500000000058, 0.00013547200000000453, 0.00013538899999999965, 0.00013515299999999897, 0.00013570799999999827, 0.0001354589999999975, 0.00013555600000000195, 0.0001360139999999968, 0.00013611100000000126, 0.00013562500000000033, 0.0001354860000000041, 0.00013566699999999904, 0.0001356389999999999, 0.00013577699999999665, 0.00013574999999999698, 0.00013573599999999741, 0.00013543099999999836, 0.0001359860000000046, 0.00013566699999999904, 0.00013569500000000512]</msg>
<status status="PASS" starttime="20201112 10:16:41.921" endtime="20201112 10:16:41.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.910" endtime="20201112 10:16:41.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.940" endtime="20201112 10:16:41.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:41.948" endtime="20201112 10:16:41.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.944" endtime="20201112 10:16:41.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.935" endtime="20201112 10:16:41.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.425" endtime="20201112 10:16:41.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.424" endtime="20201112 10:16:41.974"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.996" endtime="20201112 10:16:42.017"></status>
</kw>
<msg timestamp="20201112 10:16:42.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:41.993" endtime="20201112 10:16:42.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:42.020" endtime="20201112 10:16:42.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.026" endtime="20201112 10:16:42.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.986" endtime="20201112 10:16:42.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.980" endtime="20201112 10:16:42.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.049" endtime="20201112 10:16:42.385"></status>
</kw>
<msg timestamp="20201112 10:16:42.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039800153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039937, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:42.046" endtime="20201112 10:16:42.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039800153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039937, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:42.394" endtime="20201112 10:16:42.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.412" endtime="20201112 10:16:42.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.039" endtime="20201112 10:16:42.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.034" endtime="20201112 10:16:42.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:42.429" level="INFO">${RESULT} = [{'time': 0.039937, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013684700000000244, 'source_diff': 0.00013684700000000244}, {'time': 0.040081278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:42.420" endtime="20201112 10:16:42.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:42.459" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:42.431" endtime="20201112 10:16:42.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.470" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:16:42.468" endtime="20201112 10:16:42.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.475" level="INFO">VALUE: [0.00013684700000000244, 0.00013690300000000072, 0.00013679099999999722, 0.000136264000000004, 0.00013630599999999576, 0.00013711099999999532, 0.0001370840000000026, 0.0001363610000000015, 0.00013722299999999882, 0.00013702799999999737, 0.00013637500000000108, 0.0001362770000000041, 0.00013711099999999532, 0.00013627800000000356, 0.0001369719999999991, 0.00013643099999999936, 0.000136652000000001, 0.0001366809999999996, 0.00013644499999999893, 0.00013718000000000063, 0.0001369170000000003, 0.00013695799999999952, 0.00013723599999999891, 0.0001365689999999961, 0.00013652799999999687, 0.00013712500000000183, 0.0001365139999999973, 0.00013673600000000535, 0.00013698599999999866, 0.00013673600000000535, 0.0001369719999999991, 0.00013629200000000313, 0.00013708399999999565, 0.00013630599999999576, 0.00013666600000000056, 0.00013724999999999848, 0.00013658300000000262, 0.00013656999999999558, 0.0001365840000000021, 0.00013722199999999934, 0.00013708399999999565, 0.0001373049999999973, 0.000137264000000005, 0.00013723599999999891, 0.00013719499999999968, 0.0001369170000000003, 0.00013656900000000305, 0.00013672199999999884, 0.00013658300000000262, 0.00013716700000000054]</msg>
<status status="PASS" starttime="20201112 10:16:42.472" endtime="20201112 10:16:42.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.461" endtime="20201112 10:16:42.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.484" endtime="20201112 10:16:42.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:42.494" endtime="20201112 10:16:42.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.490" endtime="20201112 10:16:42.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.480" endtime="20201112 10:16:42.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.976" endtime="20201112 10:16:42.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.975" endtime="20201112 10:16:42.520"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.542" endtime="20201112 10:16:42.563"></status>
</kw>
<msg timestamp="20201112 10:16:42.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:42.539" endtime="20201112 10:16:42.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:42.566" endtime="20201112 10:16:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.572" endtime="20201112 10:16:42.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.532" endtime="20201112 10:16:42.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.526" endtime="20201112 10:16:42.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.595" endtime="20201112 10:16:42.928"></status>
</kw>
<msg timestamp="20201112 10:16:42.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039801889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:16:42.592" endtime="20201112 10:16:42.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:42.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039801889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:16:42.937" endtime="20201112 10:16:42.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:42.956" endtime="20201112 10:16:42.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.585" endtime="20201112 10:16:42.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.580" endtime="20201112 10:16:42.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:42.973" level="INFO">${RESULT} = [{'time': 0.0399395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013761100000000276, 'source_diff': 0.00013761100000000276}, {'time': 0.04008275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:42.964" endtime="20201112 10:16:42.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:43.004" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:42.975" endtime="20201112 10:16:43.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.015" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:16:43.013" endtime="20201112 10:16:43.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.020" level="INFO">VALUE: [0.00013761100000000276, 0.0001381390000000024, 0.00013798599999999966, 0.0001381249999999959, 0.00013819499999999374, 0.00013819399999999427, 0.00013784700000000344, 0.00013769500000000018, 0.00013805500000000498, 0.0001375139999999983, 0.00013755500000000448, 0.00013795800000000052, 0.00013727799999999762, 0.00013799999999999923, 0.00013818000000000163, 0.00013754200000000438, 0.00013763799999999549, 0.0001381940000000012, 0.00013766700000000104, 0.00013798599999999966, 0.00013729200000000413, 0.00013815199999999556, 0.00013827799999999862, 0.00013762500000000233, 0.00013805499999999804, 0.00013794500000000043, 0.00013780599999999726, 0.00013780500000000473, 0.00013780599999999726, 0.0001379720000000001, 0.00013756900000000405, 0.00013751400000000524, 0.00013822200000000034, 0.00013777800000000506, 0.00013733300000000337, 0.00013808299999999718, 0.00013749999999999873, 0.0001381390000000024, 0.00013765300000000147, 0.000137959, 0.00013820800000000077, 0.00013780599999999726, 0.00013784799999999597, 0.00013749999999999873, 0.00013787500000000258, 0.00013743000000000088, 0.00013763899999999496, 0.00013733299999999643, 0.00013780500000000473, 0.00013773599999999941]</msg>
<status status="PASS" starttime="20201112 10:16:43.017" endtime="20201112 10:16:43.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.006" endtime="20201112 10:16:43.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.030" endtime="20201112 10:16:43.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:43.038" endtime="20201112 10:16:43.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.034" endtime="20201112 10:16:43.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.025" endtime="20201112 10:16:43.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.522" endtime="20201112 10:16:43.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:42.521" endtime="20201112 10:16:43.065"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.087" endtime="20201112 10:16:43.108"></status>
</kw>
<msg timestamp="20201112 10:16:43.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:43.084" endtime="20201112 10:16:43.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:43.111" endtime="20201112 10:16:43.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.118" endtime="20201112 10:16:43.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.077" endtime="20201112 10:16:43.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.071" endtime="20201112 10:16:43.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.140" endtime="20201112 10:16:43.476"></status>
</kw>
<msg timestamp="20201112 10:16:43.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041394361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.137" endtime="20201112 10:16:43.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041394361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.485" endtime="20201112 10:16:43.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.503" endtime="20201112 10:16:43.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.130" endtime="20201112 10:16:43.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.125" endtime="20201112 10:16:43.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:43.520" level="INFO">${RESULT} = [{'time': 0.041394361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013823599999999991, 'source_diff': 0.00013823599999999991}, {'time': 0.041541667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:43.512" endtime="20201112 10:16:43.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:43.550" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:43.522" endtime="20201112 10:16:43.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.561" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:16:43.559" endtime="20201112 10:16:43.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.566" level="INFO">VALUE: [0.00013823599999999991, 0.00013923599999999398, 0.00013877799999999912, 0.00013888900000000315, 0.0001388049999999988, 0.00013877699999999965, 0.00013837500000000308, 0.00013858399999999715, 0.00013898600000000066, 0.0001391810000000021, 0.00013876399999999955, 0.00013866700000000204, 0.00013887500000000358, 0.00013927799999999962, 0.00013873599999999348, 0.00013834700000000394, 0.00013847300000000007, 0.00013861100000000376, 0.00013856999999999758, 0.00013887499999999664, 0.0001386799999999952, 0.00013876399999999955, 0.00013859699999999725, 0.0001390139999999998, 0.00013845800000000102, 0.0001383339999999969, 0.00013824999999999948, 0.00013859699999999725, 0.00013925000000000048, 0.00013833299999999743, 0.00013905600000000545, 0.00013831999999999733, 0.00013915299999999603, 0.00013873599999999348, 0.00013829099999999872, 0.0001382919999999982, 0.0001391249999999969, 0.00013872200000000084, 0.00013866700000000204, 0.00013854200000000538, 0.00013900000000000023, 0.00013827699999999915, 0.0001382919999999982, 0.00013890299999999578, 0.00013923600000000091, 0.0001391249999999969, 0.0001388060000000052, 0.00013833400000000384, 0.00013895800000000152, 0.0001388469999999975]</msg>
<status status="PASS" starttime="20201112 10:16:43.563" endtime="20201112 10:16:43.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.552" endtime="20201112 10:16:43.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.576" endtime="20201112 10:16:43.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:43.584" endtime="20201112 10:16:43.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.579" endtime="20201112 10:16:43.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.571" endtime="20201112 10:16:43.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.067" endtime="20201112 10:16:43.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.066" endtime="20201112 10:16:43.609"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.633" endtime="20201112 10:16:43.656"></status>
</kw>
<msg timestamp="20201112 10:16:43.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:43.630" endtime="20201112 10:16:43.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:43.659" endtime="20201112 10:16:43.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.665" endtime="20201112 10:16:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.623" endtime="20201112 10:16:43.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.616" endtime="20201112 10:16:43.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.688" endtime="20201112 10:16:44.035"></status>
</kw>
<msg timestamp="20201112 10:16:44.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.685" endtime="20201112 10:16:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:44.044" endtime="20201112 10:16:44.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.062" endtime="20201112 10:16:44.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.678" endtime="20201112 10:16:44.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.673" endtime="20201112 10:16:44.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:44.079" level="INFO">${RESULT} = [{'time': 0.041498125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001397919999999997, 'source_diff': 0.0001397919999999997}, {'time': 0.041644444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:44.070" endtime="20201112 10:16:44.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:44.109" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:44.081" endtime="20201112 10:16:44.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.120" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:16:44.117" endtime="20201112 10:16:44.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.125" level="INFO">VALUE: [0.0001397919999999997, 0.00013961100000000476, 0.0001393610000000045, 0.00013937499999999714, 0.00014012500000000483, 0.00013969499999999524, 0.00013993100000000286, 0.00013994399999999602, 0.00013972300000000132, 0.00014022300000000182, 0.0001393049999999993, 0.0001395689999999991, 0.00014020800000000277, 0.00013938900000000365, 0.00013955499999999954, 0.0001400140000000008, 0.00014026400000000105, 0.00013962500000000433, 0.00013983299999999893, 0.00014008399999999865, 0.00013937499999999714, 0.00014002800000000037, 0.00013947199999999466, 0.0001394590000000015, 0.0001395689999999991, 0.00014024999999999455, 0.0001395689999999991, 0.00013956999999999858, 0.00013954099999999997, 0.00013954199999999944, 0.00013937500000000408, 0.00013981999999999883, 0.00014006999999999908, 0.0001394999999999938, 0.0001393480000000044, 0.0001395140000000003, 0.00013961100000000476, 0.00013959699999999825, 0.0001399720000000021, 0.00014026400000000105, 0.00013997300000000157, 0.00013940300000000322, 0.00014015300000000397, 0.00013961099999999782, 0.00014008299999999918, 0.00014015300000000397, 0.00014001399999999387, 0.0001392919999999992, 0.0001400140000000008, 0.00013943000000000288]</msg>
<status status="PASS" starttime="20201112 10:16:44.122" endtime="20201112 10:16:44.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.111" endtime="20201112 10:16:44.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.134" endtime="20201112 10:16:44.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:44.142" endtime="20201112 10:16:44.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.138" endtime="20201112 10:16:44.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.130" endtime="20201112 10:16:44.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.611" endtime="20201112 10:16:44.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.610" endtime="20201112 10:16:44.168"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.191" endtime="20201112 10:16:44.213"></status>
</kw>
<msg timestamp="20201112 10:16:44.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:44.187" endtime="20201112 10:16:44.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:44.216" endtime="20201112 10:16:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.222" endtime="20201112 10:16:44.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.180" endtime="20201112 10:16:44.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.175" endtime="20201112 10:16:44.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.247" endtime="20201112 10:16:44.596"></status>
</kw>
<msg timestamp="20201112 10:16:44.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040120958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:44.243" endtime="20201112 10:16:44.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040120958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:44.605" endtime="20201112 10:16:44.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.623" endtime="20201112 10:16:44.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.236" endtime="20201112 10:16:44.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.232" endtime="20201112 10:16:44.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:44.640" level="INFO">${RESULT} = [{'time': 0.040120958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014105500000000104, 'source_diff': 0.00014105500000000104}, {'time': 0.040267222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:44.631" endtime="20201112 10:16:44.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:44.670" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:44.642" endtime="20201112 10:16:44.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.680" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:16:44.678" endtime="20201112 10:16:44.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.686" level="INFO">VALUE: [0.00014105500000000104, 0.0001411249999999989, 0.00014086099999999907, 0.00014108399999999965, 0.00014052800000000087, 0.00014054100000000097, 0.0001402920000000002, 0.00014055600000000001, 0.00014092999999999745, 0.00014066599999999763, 0.00014036099999999857, 0.00014084799999999897, 0.00014073599999999548, 0.00014115300000000497, 0.00014077800000000112, 0.0001408050000000008, 0.00014034700000000594, 0.00014066700000000404, 0.00014075000000000198, 0.00014122299999999588, 0.00014052800000000087, 0.0001404019999999978, 0.0001410140000000018, 0.00014056999999999958, 0.00014075000000000198, 0.0001407920000000007, 0.00014075000000000198, 0.00014122200000000334, 0.00014127800000000162, 0.00014075000000000198, 0.00014065199999999806, 0.00014109699999999975, 0.00014075000000000198, 0.00014127799999999469, 0.00014122200000000334, 0.00014033400000000584, 0.00014115299999999803, 0.00014116600000000507, 0.00014073600000000241, 0.00014118000000000464, 0.00014066700000000404, 0.00014036099999999857, 0.00014073600000000241, 0.00014130600000000076, 0.00014125000000000248, 0.00014080600000000026, 0.0001406669999999971, 0.00014090300000000472, 0.00014059800000000566, 0.00014059699999999925]</msg>
<status status="PASS" starttime="20201112 10:16:44.683" endtime="20201112 10:16:44.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.671" endtime="20201112 10:16:44.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.695" endtime="20201112 10:16:44.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:44.703" endtime="20201112 10:16:44.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.699" endtime="20201112 10:16:44.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.690" endtime="20201112 10:16:44.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.170" endtime="20201112 10:16:44.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.169" endtime="20201112 10:16:44.729"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.751" endtime="20201112 10:16:44.774"></status>
</kw>
<msg timestamp="20201112 10:16:44.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:44.748" endtime="20201112 10:16:44.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:44.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:44.777" endtime="20201112 10:16:44.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.783" endtime="20201112 10:16:44.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.741" endtime="20201112 10:16:44.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.735" endtime="20201112 10:16:44.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:44.808" endtime="20201112 10:16:45.154"></status>
</kw>
<msg timestamp="20201112 10:16:45.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040172917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:44.805" endtime="20201112 10:16:45.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040172917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.164" endtime="20201112 10:16:45.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.182" endtime="20201112 10:16:45.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.796" endtime="20201112 10:16:45.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.791" endtime="20201112 10:16:45.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.199" level="INFO">${RESULT} = [{'time': 0.040314306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001413889999999987, 'source_diff': 0.0001413889999999987}, {'time': 0.040462583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:45.190" endtime="20201112 10:16:45.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:45.231" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:45.201" endtime="20201112 10:16:45.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.241" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:16:45.239" endtime="20201112 10:16:45.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.246" level="INFO">VALUE: [0.0001413889999999987, 0.00014186100000000007, 0.0001414999999999958, 0.00014134799999999947, 0.00014173599999999648, 0.00014190299999999878, 0.00014198600000000366, 0.0001417920000000017, 0.0001419019999999993, 0.00014138900000000565, 0.00014229099999999578, 0.00014194399999999802, 0.00014141699999999785, 0.00014174999999999605, 0.00014218099999999817, 0.0001414720000000036, 0.0001414999999999958, 0.00014145799999999709, 0.00014158300000000068, 0.00014215300000000597, 0.00014192999999999845, 0.00014226400000000305, 0.000141959000000004, 0.00014206899999999467, 0.00014161099999999982, 0.00014137499999999914, 0.0001419720000000041, 0.00014154100000000197, 0.00014159700000000025, 0.00014222300000000382, 0.0001419720000000041, 0.00014218099999999817, 0.00014136099999999957, 0.00014168099999999767, 0.0001421390000000064, 0.00014173599999999648, 0.0001416249999999994, 0.0001415419999999945, 0.0001417089999999968, 0.00014144400000000446, 0.00014208300000000118, 0.0001421669999999986, 0.00014186100000000007, 0.00014220799999999784, 0.00014226399999999612, 0.00014195800000000453, 0.0001421249999999999, 0.0001422219999999974, 0.0001414720000000036, 0.00014159700000000025]</msg>
<status status="PASS" starttime="20201112 10:16:45.243" endtime="20201112 10:16:45.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.232" endtime="20201112 10:16:45.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.256" endtime="20201112 10:16:45.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:45.264" endtime="20201112 10:16:45.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.260" endtime="20201112 10:16:45.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.251" endtime="20201112 10:16:45.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.731" endtime="20201112 10:16:45.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:44.730" endtime="20201112 10:16:45.290"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.314" endtime="20201112 10:16:45.336"></status>
</kw>
<msg timestamp="20201112 10:16:45.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:45.310" endtime="20201112 10:16:45.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:45.340" endtime="20201112 10:16:45.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.346" endtime="20201112 10:16:45.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.303" endtime="20201112 10:16:45.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.297" endtime="20201112 10:16:45.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.369" endtime="20201112 10:16:45.718"></status>
</kw>
<msg timestamp="20201112 10:16:45.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.365" endtime="20201112 10:16:45.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.727" endtime="20201112 10:16:45.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.745" endtime="20201112 10:16:45.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.358" endtime="20201112 10:16:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.354" endtime="20201112 10:16:45.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.762" level="INFO">${RESULT} = [{'time': 0.041898611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001423889999999997, 'source_diff': 0.0001423889999999997}, {'time': 0.042048917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:45.754" endtime="20201112 10:16:45.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:45.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:45.764" endtime="20201112 10:16:45.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.802" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:16:45.800" endtime="20201112 10:16:45.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.808" level="INFO">VALUE: [0.0001423889999999997, 0.00014276399999999662, 0.00014236100000000057, 0.00014265299999999953, 0.00014273599999999748, 0.00014259800000000072, 0.00014291599999999988, 0.0001426810000000056, 0.0001430140000000038, 0.00014252799999999594, 0.00014240299999999928, 0.00014244399999999852, 0.00014300000000000423, 0.00014283399999999447, 0.00014255600000000201, 0.00014229199999999526, 0.00014222300000000382, 0.0001427920000000027, 0.00014274999999999705, 0.00014316600000000013, 0.0001421940000000052, 0.00014311100000000132, 0.00014272200000000484, 0.00014313900000000046, 0.0001430549999999961, 0.00014308299999999524, 0.00014319399999999927, 0.00014280600000000226, 0.0001422920000000022, 0.00014276400000000355, 0.00014304099999999653, 0.00014259700000000125, 0.0001427920000000027, 0.000142832999999995, 0.00014234800000000047, 0.00014302800000000337, 0.00014275000000000398, 0.00014294399999999902, 0.0001428340000000014, 0.00014227800000000262, 0.00014325000000000448, 0.00014308400000000165, 0.0001430969999999948, 0.00014294399999999902, 0.00014265299999999953, 0.00014281899999999542, 0.00014308399999999472, 0.00014313900000000046, 0.00014248600000000416, 0.0001429449999999985]</msg>
<status status="PASS" starttime="20201112 10:16:45.805" endtime="20201112 10:16:45.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.794" endtime="20201112 10:16:45.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.817" endtime="20201112 10:16:45.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:45.825" endtime="20201112 10:16:45.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.821" endtime="20201112 10:16:45.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.813" endtime="20201112 10:16:45.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.292" endtime="20201112 10:16:45.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.291" endtime="20201112 10:16:45.851"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.873" endtime="20201112 10:16:45.894"></status>
</kw>
<msg timestamp="20201112 10:16:45.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:45.870" endtime="20201112 10:16:45.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:45.897" endtime="20201112 10:16:45.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.904" endtime="20201112 10:16:45.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.863" endtime="20201112 10:16:45.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.857" endtime="20201112 10:16:45.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.926" endtime="20201112 10:16:46.264"></status>
</kw>
<msg timestamp="20201112 10:16:46.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039653917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.923" endtime="20201112 10:16:46.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039653917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:46.273" endtime="20201112 10:16:46.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.292" endtime="20201112 10:16:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.916" endtime="20201112 10:16:46.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.911" endtime="20201112 10:16:46.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:46.309" level="INFO">${RESULT} = [{'time': 0.039797889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001439720000000061, 'source_diff': 0.0001439720000000061}, {'time': 0.039949125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:46.300" endtime="20201112 10:16:46.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:46.338" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:46.311" endtime="20201112 10:16:46.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.350" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:16:46.347" endtime="20201112 10:16:46.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.355" level="INFO">VALUE: [0.0001439720000000061, 0.00014327800000000362, 0.00014354099999999703, 0.00014388800000000174, 0.0001435690000000031, 0.00014334699999999506, 0.00014358300000000268, 0.00014381900000000336, 0.00014319499999999874, 0.0001436250000000014, 0.0001441250000000019, 0.00014363900000000096, 0.00014426399999999812, 0.0001441529999999941, 0.000143959000000006, 0.00014356899999999617, 0.0001434020000000008, 0.00014377800000000412, 0.00014326299999999764, 0.0001441250000000019, 0.0001439299999999935, 0.0001434170000000068, 0.00014358300000000268, 0.00014352799999999694, 0.00014423599999999898, 0.00014344500000000593, 0.00014427799999999769, 0.00014386100000000207, 0.00014426299999999864, 0.0001437920000000037, 0.0001434999999999978, 0.0001439999999999983, 0.0001437219999999989, 0.00014416600000000113, 0.00014420799999999984, 0.00014393099999999992, 0.00014333300000000243, 0.0001433329999999955, 0.00014415300000000103, 0.00014386099999999513, 0.00014395799999999959, 0.00014358399999999522, 0.00014372200000000585, 0.00014365300000000053, 0.00014386100000000207, 0.0001435419999999965, 0.00014390300000000078, 0.00014406999999999615, 0.00014361100000000182, 0.00014393000000000045]</msg>
<status status="PASS" starttime="20201112 10:16:46.352" endtime="20201112 10:16:46.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.340" endtime="20201112 10:16:46.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.365" endtime="20201112 10:16:46.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:46.373" endtime="20201112 10:16:46.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.369" endtime="20201112 10:16:46.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.360" endtime="20201112 10:16:46.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.853" endtime="20201112 10:16:46.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.852" endtime="20201112 10:16:46.399"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.421" endtime="20201112 10:16:46.442"></status>
</kw>
<msg timestamp="20201112 10:16:46.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:46.418" endtime="20201112 10:16:46.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:46.445" endtime="20201112 10:16:46.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.452" endtime="20201112 10:16:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.411" endtime="20201112 10:16:46.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.405" endtime="20201112 10:16:46.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.474" endtime="20201112 10:16:46.809"></status>
</kw>
<msg timestamp="20201112 10:16:46.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:46.471" endtime="20201112 10:16:46.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:46.818" endtime="20201112 10:16:46.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.836" endtime="20201112 10:16:46.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.464" endtime="20201112 10:16:46.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.460" endtime="20201112 10:16:46.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:46.855" level="INFO">${RESULT} = [{'time': 0.040018417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014476399999999862, 'source_diff': 0.00014476399999999862}, {'time': 0.040168694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:46.846" endtime="20201112 10:16:46.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:46.884" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:46.857" endtime="20201112 10:16:46.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.895" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:16:46.893" endtime="20201112 10:16:46.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.900" level="INFO">VALUE: [0.00014476399999999862, 0.00014441599999999444, 0.00014511099999999638, 0.00014515300000000203, 0.00014456999999999665, 0.00014491700000000135, 0.0001448050000000048, 0.00014444400000000052, 0.00014527799999999869, 0.000144445, 0.0001448749999999957, 0.00014480599999999733, 0.000144347000000003, 0.00014523599999999998, 0.00014476299999999914, 0.00014508299999999724, 0.00014487500000000264, 0.0001449299999999945, 0.00014448599999999923, 0.00014463799999999555, 0.00014502799999999844, 0.00014495900000000006, 0.00014516699999999466, 0.0001445549999999976, 0.00014467999999999426, 0.00014498599999999973, 0.00014465300000000153, 0.00014523599999999998, 0.000145041999999998, 0.00014429199999999726, 0.00014484699999999656, 0.00014474999999999905, 0.0001443749999999952, 0.00014505599999999758, 0.00014443000000000095, 0.0001443199999999964, 0.00014526299999999964, 0.00014455599999999708, 0.00014448599999999923, 0.0001443749999999952, 0.00014493000000000145, 0.00014455599999999708, 0.0001448199999999969, 0.00014437500000000214, 0.00014490300000000178, 0.0001449299999999945, 0.00014481900000000436, 0.0001451670000000016, 0.00014530599999999783, 0.00014495800000000059]</msg>
<status status="PASS" starttime="20201112 10:16:46.897" endtime="20201112 10:16:46.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.886" endtime="20201112 10:16:46.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.910" endtime="20201112 10:16:46.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:46.918" endtime="20201112 10:16:46.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.913" endtime="20201112 10:16:46.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.905" endtime="20201112 10:16:46.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.401" endtime="20201112 10:16:46.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.400" endtime="20201112 10:16:46.944"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.966" endtime="20201112 10:16:46.987"></status>
</kw>
<msg timestamp="20201112 10:16:46.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:46.963" endtime="20201112 10:16:46.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:46.990" endtime="20201112 10:16:46.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.996" endtime="20201112 10:16:47.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.956" endtime="20201112 10:16:47.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.950" endtime="20201112 10:16:47.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.020" endtime="20201112 10:16:47.354"></status>
</kw>
<msg timestamp="20201112 10:16:47.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039793792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039939833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:47.016" endtime="20201112 10:16:47.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039793792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039939833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:47.363" endtime="20201112 10:16:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.382" endtime="20201112 10:16:47.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.009" endtime="20201112 10:16:47.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.005" endtime="20201112 10:16:47.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:47.401" level="INFO">${RESULT} = [{'time': 0.039939833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014604099999999953, 'source_diff': 0.00014604099999999953}, {'time': 0.040090097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:47.392" endtime="20201112 10:16:47.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:47.433" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:47.403" endtime="20201112 10:16:47.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.443" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:16:47.441" endtime="20201112 10:16:47.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.449" level="INFO">VALUE: [0.00014604099999999953, 0.00014541599999999544, 0.0001459169999999954, 0.000146041999999999, 0.0001457220000000009, 0.00014586100000000407, 0.000145445000000001, 0.00014587500000000364, 0.00014580499999999885, 0.0001458619999999966, 0.00014593100000000192, 0.0001455419999999985, 0.0001456250000000034, 0.0001462220000000014, 0.00014598600000000073, 0.0001454020000000028, 0.0001456250000000034, 0.00014611199999999686, 0.00014598600000000073, 0.0001456529999999956, 0.0001459450000000015, 0.0001453329999999975, 0.0001456670000000021, 0.0001459580000000016, 0.00014562499999999645, 0.00014579199999999876, 0.00014594400000000202, 0.00014552799999999894, 0.00014548600000000023, 0.0001458199999999979, 0.00014573600000000048, 0.0001460000000000003, 0.0001454999999999998, 0.0001454999999999998, 0.00014590299999999584, 0.00014591700000000235, 0.00014612499999999695, 0.00014625000000000055, 0.00014552799999999894, 0.0001461800000000027, 0.00014530499999999835, 0.000146041999999999, 0.0001454999999999998, 0.00014583300000000493, 0.00014548600000000023, 0.0001461670000000026, 0.0001458890000000032, 0.00014580499999999885, 0.00014626400000000012, 0.0001454999999999998]</msg>
<status status="PASS" starttime="20201112 10:16:47.446" endtime="20201112 10:16:47.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.434" endtime="20201112 10:16:47.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.462" endtime="20201112 10:16:47.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:47.470" endtime="20201112 10:16:47.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.466" endtime="20201112 10:16:47.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.457" endtime="20201112 10:16:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.946" endtime="20201112 10:16:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.945" endtime="20201112 10:16:47.496"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.518" endtime="20201112 10:16:47.539"></status>
</kw>
<msg timestamp="20201112 10:16:47.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:47.515" endtime="20201112 10:16:47.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:47.543" endtime="20201112 10:16:47.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.549" endtime="20201112 10:16:47.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.508" endtime="20201112 10:16:47.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.502" endtime="20201112 10:16:47.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.572" endtime="20201112 10:16:47.906"></status>
</kw>
<msg timestamp="20201112 10:16:47.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:47.568" endtime="20201112 10:16:47.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:47.916" endtime="20201112 10:16:47.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:47.934" endtime="20201112 10:16:47.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.561" endtime="20201112 10:16:47.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.557" endtime="20201112 10:16:47.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:47.951" level="INFO">${RESULT} = [{'time': 0.040171403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014683399999999847, 'source_diff': 0.00014683399999999847}, {'time': 0.04032375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:16:47.942" endtime="20201112 10:16:47.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:47.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:47.953" endtime="20201112 10:16:47.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.993" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:16:47.990" endtime="20201112 10:16:47.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:47.998" level="INFO">VALUE: [0.00014683399999999847, 0.00014658299999999874, 0.00014687500000000464, 0.0001473199999999994, 0.00014669500000000224, 0.00014697200000000216, 0.00014683300000000593, 0.00014694399999999608, 0.00014640300000000328, 0.000146347000000005, 0.00014693000000000345, 0.00014673600000000148, 0.00014687500000000464, 0.00014665300000000353, 0.00014652799999999994, 0.00014690300000000378, 0.00014681899999999942, 0.00014655599999999908, 0.00014729200000000026, 0.00014672300000000138, 0.00014708299999999924, 0.00014717999999999676, 0.00014686099999999813, 0.00014649999999999386, 0.00014708399999999872, 0.000147042, 0.00014723700000000145, 0.00014709799999999829, 0.00014648600000000123, 0.00014669500000000224, 0.0001465000000000008, 0.00014651400000000037, 0.00014734699999999906, 0.0001467770000000007, 0.00014729199999999332, 0.00014729099999999384, 0.00014658300000000568, 0.00014699999999999436, 0.00014636099999999763, 0.00014698600000000173, 0.00014729100000000078, 0.00014669399999999583, 0.00014705600000000651, 0.00014686099999999813, 0.0001465000000000008, 0.0001472090000000023, 0.0001464169999999959, 0.00014691700000000335, 0.00014647199999999472, 0.00014716600000000413]</msg>
<status status="PASS" starttime="20201112 10:16:47.995" endtime="20201112 10:16:47.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.984" endtime="20201112 10:16:48.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.007" endtime="20201112 10:16:48.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:48.015" endtime="20201112 10:16:48.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.011" endtime="20201112 10:16:48.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.003" endtime="20201112 10:16:48.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.498" endtime="20201112 10:16:48.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:47.497" endtime="20201112 10:16:48.041"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.063" endtime="20201112 10:16:48.084"></status>
</kw>
<msg timestamp="20201112 10:16:48.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:48.060" endtime="20201112 10:16:48.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:48.088" endtime="20201112 10:16:48.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.094" endtime="20201112 10:16:48.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.053" endtime="20201112 10:16:48.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.047" endtime="20201112 10:16:48.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.117" endtime="20201112 10:16:48.452"></status>
</kw>
<msg timestamp="20201112 10:16:48.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039823, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:48.113" endtime="20201112 10:16:48.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039823, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:16:48.461" endtime="20201112 10:16:48.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.480" endtime="20201112 10:16:48.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.106" endtime="20201112 10:16:48.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.102" endtime="20201112 10:16:48.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:48.496" level="INFO">${RESULT} = [{'time': 0.039823, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014747199999999572, 'source_diff': 0.00014747199999999572}, {'time': 0.039977319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:48.488" endtime="20201112 10:16:48.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:48.528" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:48.499" endtime="20201112 10:16:48.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.539" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:16:48.536" endtime="20201112 10:16:48.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.544" level="INFO">VALUE: [0.00014747199999999572, 0.00014799999999999536, 0.00014788899999999827, 0.00014741700000000385, 0.0001476250000000054, 0.00014808399999999972, 0.00014773600000000248, 0.000147429999999997, 0.00014784699999999956, 0.00014763899999999802, 0.0001476529999999976, 0.00014743100000000342, 0.0001481250000000059, 0.0001482499999999956, 0.000147527999999994, 0.00014769400000000377, 0.00014734800000000547, 0.0001473329999999995, 0.0001478749999999987, 0.0001475000000000018, 0.00014736100000000557, 0.00014769500000000324, 0.00014776400000000162, 0.00014744399999999658, 0.00014784799999999904, 0.0001481659999999982, 0.0001479859999999958, 0.00014818100000000417, 0.00014776400000000162, 0.00014745799999999615, 0.0001478749999999987, 0.00014758399999999922, 0.00014790199999999837, 0.00014754100000000103, 0.00014768100000000367, 0.00014801399999999493, 0.00014788899999999827, 0.00014751399999999443, 0.00014773599999999554, 0.0001482090000000033, 0.00014738899999999777, 0.000148042000000001, 0.00014795799999999665, 0.00014773600000000248, 0.00014747200000000266, 0.00014769400000000377, 0.0001477220000000029, 0.00014797199999999622, 0.00014805600000000058, 0.00014736099999999863]</msg>
<status status="PASS" starttime="20201112 10:16:48.541" endtime="20201112 10:16:48.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.530" endtime="20201112 10:16:48.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.553" endtime="20201112 10:16:48.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:48.561" endtime="20201112 10:16:48.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.557" endtime="20201112 10:16:48.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.549" endtime="20201112 10:16:48.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.043" endtime="20201112 10:16:48.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.042" endtime="20201112 10:16:48.587"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.609" endtime="20201112 10:16:48.630"></status>
</kw>
<msg timestamp="20201112 10:16:48.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:48.606" endtime="20201112 10:16:48.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:48.634" endtime="20201112 10:16:48.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.640" endtime="20201112 10:16:48.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.599" endtime="20201112 10:16:48.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.593" endtime="20201112 10:16:48.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.663" endtime="20201112 10:16:48.998"></status>
</kw>
<msg timestamp="20201112 10:16:49.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039797472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039945889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.660" endtime="20201112 10:16:49.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039797472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039945889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:49.008" endtime="20201112 10:16:49.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.027" endtime="20201112 10:16:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.652" endtime="20201112 10:16:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.648" endtime="20201112 10:16:49.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:49.044" level="INFO">${RESULT} = [{'time': 0.039945889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001484169999999979, 'source_diff': 0.0001484169999999979}, {'time': 0.040105208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:49.035" endtime="20201112 10:16:49.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:49.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:49.046" endtime="20201112 10:16:49.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.086" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:16:49.083" endtime="20201112 10:16:49.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.091" level="INFO">VALUE: [0.0001484169999999979, 0.0001483330000000005, 0.00014852800000000194, 0.00014905600000000158, 0.0001492369999999965, 0.00014854100000000203, 0.00014897199999999722, 0.00014829100000000178, 0.00014897199999999722, 0.00014908400000000072, 0.0001489580000000046, 0.0001490970000000008, 0.00014876400000000262, 0.00014849999999999586, 0.00014890299999999884, 0.00014920800000000484, 0.00014879200000000176, 0.00014833399999999997, 0.0001492629999999967, 0.00014856900000000117, 0.0001487079999999974, 0.0001487499999999961, 0.0001485970000000003, 0.0001487079999999974, 0.00014865300000000553, 0.0001492090000000043, 0.00014866699999999816, 0.00014830600000000083, 0.00014923599999999704, 0.00014884700000000056, 0.00014863899999999902, 0.00014868099999999773, 0.00014841599999999844, 0.0001489580000000046, 0.00014890199999999937, 0.00014923599999999704, 0.00014879200000000176, 0.00014926300000000364, 0.00014865199999999912, 0.00014863900000000596, 0.0001485000000000028, 0.0001489859999999968, 0.00014844400000000452, 0.00014841700000000485, 0.00014873599999999654, 0.00014925000000000355, 0.00014843099999999748, 0.00014888899999999927, 0.0001486529999999986, 0.00014867999999999826]</msg>
<status status="PASS" starttime="20201112 10:16:49.088" endtime="20201112 10:16:49.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.077" endtime="20201112 10:16:49.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.100" endtime="20201112 10:16:49.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:49.109" endtime="20201112 10:16:49.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.104" endtime="20201112 10:16:49.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.096" endtime="20201112 10:16:49.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.589" endtime="20201112 10:16:49.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.588" endtime="20201112 10:16:49.134"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.157" endtime="20201112 10:16:49.178"></status>
</kw>
<msg timestamp="20201112 10:16:49.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:49.153" endtime="20201112 10:16:49.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:49.182" endtime="20201112 10:16:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.188" endtime="20201112 10:16:49.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.146" endtime="20201112 10:16:49.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.141" endtime="20201112 10:16:49.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.211" endtime="20201112 10:16:49.549"></status>
</kw>
<msg timestamp="20201112 10:16:49.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040239611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:49.208" endtime="20201112 10:16:49.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040239611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:49.558" endtime="20201112 10:16:49.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.577" endtime="20201112 10:16:49.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.200" endtime="20201112 10:16:49.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.196" endtime="20201112 10:16:49.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:49.594" level="INFO">${RESULT} = [{'time': 0.040239611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015031900000000292, 'source_diff': 0.00015031900000000292}, {'time': 0.040398028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:49.585" endtime="20201112 10:16:49.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:49.626" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:49.596" endtime="20201112 10:16:49.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.637" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:16:49.635" endtime="20201112 10:16:49.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.642" level="INFO">VALUE: [0.00015031900000000292, 0.00014993100000000592, 0.0001500970000000018, 0.00014958400000000122, 0.00014986100000000113, 0.00015034800000000154, 0.00014980600000000233, 0.00014956900000000217, 0.00015009800000000129, 0.0001493750000000002, 0.00014944499999999805, 0.00014962500000000045, 0.00014954100000000303, 0.00014963900000000002, 0.00014998600000000473, 0.00014962500000000045, 0.00014961099999999394, 0.000149445000000005, 0.00015027799999999675, 0.00014995799999999865, 0.0001497220000000049, 0.0001496949999999983, 0.00014955600000000208, 0.00014995899999999812, 0.00014984700000000156, 0.0001494169999999989, 0.00014995799999999865, 0.00014958399999999428, 0.0001496529999999996, 0.000149527999999996, 0.00015026399999999718, 0.00014955599999999514, 0.00015013900000000052, 0.0001499580000000056, 0.00014994399999999908, 0.00014966699999999916, 0.000149833000000002, 0.0001493609999999937, 0.00014988900000000027, 0.00015008300000000224, 0.0001497090000000048, 0.00015030499999999641, 0.0001500970000000018, 0.00014944399999999858, 0.0001495000000000038, 0.00014990299999999984, 0.00014979200000000276, 0.00014952700000000346, 0.00014948699999999676, 0.00014981899999999548]</msg>
<status status="PASS" starttime="20201112 10:16:49.639" endtime="20201112 10:16:49.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.628" endtime="20201112 10:16:49.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.652" endtime="20201112 10:16:49.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:49.660" endtime="20201112 10:16:49.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.655" endtime="20201112 10:16:49.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.647" endtime="20201112 10:16:49.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.136" endtime="20201112 10:16:49.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.135" endtime="20201112 10:16:49.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.805" endtime="20201112 10:16:49.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:49.696" endtime="20201112 10:16:49.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.692" endtime="20201112 10:16:49.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.689" endtime="20201112 10:16:49.720"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:54.673" endtime="20201112 10:16:49.721" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:57.069" endtime="20201112 10:16:49.730"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:16:49.869" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:16:49.884" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:16:51.816" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:16:49.865" endtime="20201112 10:16:51.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.823" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:16:51.820" endtime="20201112 10:16:51.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.863" endtime="20201112 10:16:51.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:51.830" endtime="20201112 10:16:52.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.827" endtime="20201112 10:16:52.163"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.192" endtime="20201112 10:16:52.213"></status>
</kw>
<msg timestamp="20201112 10:16:52.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:52.189" endtime="20201112 10:16:52.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:52.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:52.217" endtime="20201112 10:16:52.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:52.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:52.223" endtime="20201112 10:16:52.228"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:52.182" endtime="20201112 10:16:52.230"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:52.177" endtime="20201112 10:16:52.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.174" endtime="20201112 10:16:52.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:52.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:52.239" endtime="20201112 10:16:52.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.234" endtime="20201112 10:16:52.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.173" endtime="20201112 10:16:52.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.171" endtime="20201112 10:16:52.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.245" endtime="20201112 10:16:52.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.168" endtime="20201112 10:16:52.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.253" endtime="20201112 10:16:52.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.164" endtime="20201112 10:16:52.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.860" endtime="20201112 10:16:52.259"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:52.273" endtime="20201112 10:16:52.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.269" endtime="20201112 10:16:52.296"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.329" endtime="20201112 10:16:52.350"></status>
</kw>
<msg timestamp="20201112 10:16:52.351" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:52.325" endtime="20201112 10:16:52.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:52.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:52.353" endtime="20201112 10:16:52.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:52.364" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:52.360" endtime="20201112 10:16:52.364"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:52.318" endtime="20201112 10:16:52.366"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:52.312" endtime="20201112 10:16:52.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.309" endtime="20201112 10:16:52.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:52.376" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:52.375" endtime="20201112 10:16:52.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.370" endtime="20201112 10:16:52.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.308" endtime="20201112 10:16:52.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.306" endtime="20201112 10:16:52.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.380" endtime="20201112 10:16:52.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.302" endtime="20201112 10:16:52.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.298" endtime="20201112 10:16:52.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.266" endtime="20201112 10:16:52.386"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:52.394" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:52.417" endtime="20201112 10:16:54.528"></status>
</kw>
<msg timestamp="20201112 10:16:54.529" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 670943, 'wakeups': [680982, 690982, 700982, 710982, 720982, 730982, 74...</msg>
<status status="PASS" starttime="20201112 10:16:52.414" endtime="20201112 10:16:54.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 670943, 'wakeups': [680982, 690982, 700982, 710982, 720982, 730982, 74...</msg>
<status status="PASS" starttime="20201112 10:16:54.532" endtime="20201112 10:16:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.539" endtime="20201112 10:16:54.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.405" endtime="20201112 10:16:54.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.399" endtime="20201112 10:16:54.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:54.552" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 670943, 'timer-interval': 10000, 'wakeups': [680982, 690982, 700982, 710982, 720982, 730982, 740982, 750982, 760982, 770982, 780982, 790982, 800982, 810982, 820982, 83...</msg>
<status status="PASS" starttime="20201112 10:16:54.547" endtime="20201112 10:16:54.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.562" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:54.560" endtime="20201112 10:16:54.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.566" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:54.564" endtime="20201112 10:16:54.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.554" endtime="20201112 10:16:54.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.578" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:54.576" endtime="20201112 10:16:54.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.583" level="INFO">VALUE: 670943</msg>
<status status="PASS" starttime="20201112 10:16:54.581" endtime="20201112 10:16:54.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.570" endtime="20201112 10:16:54.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.595" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:54.593" endtime="20201112 10:16:54.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.600" level="INFO">VALUE: [680982, 690982, 700982, 710982, 720982, 730982, 740982, 750982, 760982, 770982, 780982, 790982, 800982, 810982, 820982, 830982, 840982, 850982, 860982, 870982, 880982, 890982, 900982, 910982, 920982, 930982, 940982, 950982, 960982, 970982, 980982, 990982, 1000982, 1010982, 1020982, 1030982, 1040982, 1050982, 1060982, 1070982, 1080982, 1090982, 1100982, 1110982, 1120982, 1130982, 1140982, 1150982, 1160982, 1170982, 1180982, 1190982, 1200982, 1210982, 1220982, 1230982, 1240982, 1250982, 1260982, 1270982, 1280982, 1290982, 1300982, 1310982, 1320982, 1330982, 1340982, 1350982, 1360982, 1370982, 1380982, 1390982, 1400982, 1410982, 1420982, 1430982, 1440982, 1450982, 1460982, 1470982, 1480982, 1490982, 1500982, 1510982, 1520982, 1530982, 1540982, 1550982, 1560982, 1570982, 1580982, 1590982, 1600982, 1610982, 1620982, 1630982, 1640982, 1650982, 1660982, 1670982]</msg>
<status status="PASS" starttime="20201112 10:16:54.598" endtime="20201112 10:16:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.586" endtime="20201112 10:16:54.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.620" endtime="20201112 10:16:54.972"></status>
</kw>
<msg timestamp="20201112 10:16:54.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134970042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145034694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:54.616" endtime="20201112 10:16:54.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134970042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145034694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:54.980" endtime="20201112 10:16:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.997" endtime="20201112 10:16:55.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.609" endtime="20201112 10:16:55.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.604" endtime="20201112 10:16:55.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.059" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:55.006" endtime="20201112 10:16:55.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.070" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:55.068" endtime="20201112 10:16:55.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.075" level="INFO">VALUE: 0.134970042</msg>
<status status="PASS" starttime="20201112 10:16:55.073" endtime="20201112 10:16:55.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.061" endtime="20201112 10:16:55.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.088" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:55.085" endtime="20201112 10:16:55.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.092" level="INFO">VALUE: [0.145034694, 0.155058958, 0.165083403, 0.175107125, 0.185131708, 0.195157292, 0.205182542, 0.215208403, 0.225233764, 0.235259139, 0.245284347, 0.255308806, 0.26533425, 0.275360083, 0.285384778, 0.295409611, 0.305434583, 0.315459194, 0.325484736, 0.335508681, 0.345533625, 0.355558097, 0.365582208, 0.375606792, 0.385632222, 0.395656111, 0.405681417, 0.41570675, 0.42573175, 0.435755111, 0.445778556, 0.455802083, 0.465825264, 0.475849986, 0.485875486, 0.495900958, 0.505926708, 0.515951278, 0.525977181, 0.536002264, 0.546027819, 0.556053694, 0.566079458, 0.576104972, 0.586130944, 0.596155833, 0.606179639, 0.616204208, 0.626229236, 0.636255181, 0.646281597, 0.656307542, 0.666334458, 0.676361861, 0.68638925, 0.696416431, 0.706444597, 0.716472083, 0.726497944, 0.736524264, 0.746550708, 0.756576375, 0.766603306, 0.776629778, 0.786656903, 0.796682847, 0.806708847, 0.816733875, 0.826759278, 0.836785014, 0.84681175, 0.856836792, 0.866860306, 0.876883819, 0.886907056, 0.896929708, 0.906953944, 0.916978917, 0.927004194, 0.937029083, 0.947054361, 0.957080222, 0.967106708, 0.977132556, 0.987158903, 0.99718375, 1.007210125, 1.017236, 1.027262389, 1.037288194, 1.047314125, 1.057340681, 1.067366514, 1.077391222, 1.087417903, 1.097443514, 1.107468083, 1.117492847, 1.12751875, 1.137545361] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:55.090" endtime="20201112 10:16:55.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.078" endtime="20201112 10:16:55.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.101" endtime="20201112 10:16:55.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:55.109" endtime="20201112 10:16:55.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.105" endtime="20201112 10:16:55.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.096" endtime="20201112 10:16:55.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.396" endtime="20201112 10:16:55.135"></status>
</kw>
<msg timestamp="20201112 10:16:55.135" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.156" endtime="20201112 10:16:57.290"></status>
</kw>
<msg timestamp="20201112 10:16:57.292" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3403136, 'wakeups': [3413175, 3423175, 3433175, 3443175, 3453175, 3463...</msg>
<status status="PASS" starttime="20201112 10:16:55.153" endtime="20201112 10:16:57.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.298" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3403136, 'wakeups': [3413175, 3423175, 3433175, 3443175, 3453175, 3463...</msg>
<status status="PASS" starttime="20201112 10:16:57.294" endtime="20201112 10:16:57.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.301" endtime="20201112 10:16:57.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.145" endtime="20201112 10:16:57.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.140" endtime="20201112 10:16:57.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:57.313" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 3403136, 'timer-interval': 10000, 'wakeups': [3413175, 3423175, 3433175, 3443175, 3453175, 3463175, 3473175, 3483175, 3493175, 3503175, 3513175, 3523175, 3533175, 3543...</msg>
<status status="PASS" starttime="20201112 10:16:57.309" endtime="20201112 10:16:57.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.324" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:57.321" endtime="20201112 10:16:57.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.328" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:57.326" endtime="20201112 10:16:57.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.315" endtime="20201112 10:16:57.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.341" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:57.339" endtime="20201112 10:16:57.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.345" level="INFO">VALUE: 3403136</msg>
<status status="PASS" starttime="20201112 10:16:57.343" endtime="20201112 10:16:57.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.332" endtime="20201112 10:16:57.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.359" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:57.355" endtime="20201112 10:16:57.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.364" level="INFO">VALUE: [3413175, 3423175, 3433175, 3443175, 3453175, 3463175, 3473175, 3483175, 3493175, 3503175, 3513175, 3523175, 3533175, 3543175, 3553175, 3563175, 3573175, 3583175, 3593175, 3603175, 3613175, 3623175, 3633175, 3643175, 3653175, 3663175, 3673175, 3683175, 3693175, 3703175, 3713175, 3723175, 3733175, 3743175, 3753175, 3763175, 3773175, 3783175, 3793175, 3803175, 3813175, 3823175, 3833175, 3843175, 3853175, 3863175, 3873175, 3883175, 3893175, 3903175, 3913175, 3923175, 3933175, 3943175, 3953175, 3963175, 3973175, 3983175, 3993175, 4003175, 4013175, 4023175, 4033175, 4043175, 4053175, 4063175, 4073175, 4083175, 4093175, 4103175, 4113175, 4123175, 4133175, 4143175, 4153175, 4163175, 4173175, 4183175, 4193175, 4203175, 4213175, 4223175, 4233175, 4243175, 4253175, 4263175, 4273175, 4283175, 4293175, 4303175, 4313175, 4323175, 4333175, 4343175, 4353175, 4363175, 4373175, 4383175, 4393175, 4403175]</msg>
<status status="PASS" starttime="20201112 10:16:57.361" endtime="20201112 10:16:57.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.349" endtime="20201112 10:16:57.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.382" endtime="20201112 10:16:57.739"></status>
</kw>
<msg timestamp="20201112 10:16:57.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04777425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:57.379" endtime="20201112 10:16:57.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04777425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:57.747" endtime="20201112 10:16:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.764" endtime="20201112 10:16:57.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.372" endtime="20201112 10:16:57.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.367" endtime="20201112 10:16:57.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:57.826" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:16:57.772" endtime="20201112 10:16:57.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.836" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:57.834" endtime="20201112 10:16:57.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.841" level="INFO">VALUE: 0.037708361</msg>
<status status="PASS" starttime="20201112 10:16:57.838" endtime="20201112 10:16:57.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.828" endtime="20201112 10:16:57.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.854" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:57.851" endtime="20201112 10:16:57.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.858" level="INFO">VALUE: [0.04777425, 0.057799083, 0.067823375, 0.077847611, 0.087872458, 0.097896792, 0.107921194, 0.117945153, 0.127969236, 0.137995417, 0.148021569, 0.158046361, 0.168071847, 0.178096944, 0.188122181, 0.198146611, 0.208170694, 0.218196208, 0.228222347, 0.238247944, 0.248273583, 0.258299194, 0.268324194, 0.278348292, 0.288372542, 0.298396833, 0.308421625, 0.318446542, 0.328470944, 0.338494889, 0.348518667, 0.3585425, 0.368565778, 0.378588736, 0.388611875, 0.398635375, 0.408660583, 0.418685514, 0.428710556, 0.438734417, 0.448758542, 0.458781431, 0.468804417, 0.47882725, 0.488851292, 0.498875681, 0.508902, 0.518927611, 0.528953306, 0.538978889, 0.549004708, 0.559030181, 0.569055375, 0.579079778, 0.589104042, 0.599128403, 0.609152708, 0.619177264, 0.629201708, 0.639225319, 0.649249403, 0.659273014, 0.669296722, 0.679321833, 0.689347014, 0.6993715, 0.709395083, 0.719417889, 0.729440875, 0.739463083, 0.749485556, 0.759507806, 0.769530611, 0.779554472, 0.789578944, 0.799602597, 0.809626889, 0.819651347, 0.829676819, 0.839702097, 0.849728458, 0.85975375, 0.869779611, 0.879806375, 0.889832528, 0.899858056, 0.909882833, 0.919907014, 0.929932139, 0.939956208, 0.949980056, 0.960004153, 0.970028944, 0.980052389, 0.990077042, 1.000101347, 1.01012575, 1.020148875, 1.030172639, 1.040197458] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:57.856" endtime="20201112 10:16:57.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.844" endtime="20201112 10:16:57.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.867" endtime="20201112 10:16:57.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:57.875" endtime="20201112 10:16:57.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.871" endtime="20201112 10:16:57.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.863" endtime="20201112 10:16:57.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.136" endtime="20201112 10:16:57.901"></status>
</kw>
<msg timestamp="20201112 10:16:57.901" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.924" endtime="20201112 10:17:00.058"></status>
</kw>
<msg timestamp="20201112 10:17:00.060" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6164383, 'wakeups': [6174422, 6184422, 6194422, 6204422, 6214422, 6224...</msg>
<status status="PASS" starttime="20201112 10:16:57.920" endtime="20201112 10:17:00.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.066" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6164383, 'wakeups': [6174422, 6184422, 6194422, 6204422, 6214422, 6224...</msg>
<status status="PASS" starttime="20201112 10:17:00.062" endtime="20201112 10:17:00.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.069" endtime="20201112 10:17:00.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.913" endtime="20201112 10:17:00.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.906" endtime="20201112 10:17:00.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:00.081" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 6164383, 'timer-interval': 10000, 'wakeups': [6174422, 6184422, 6194422, 6204422, 6214422, 6224422, 6234422, 6244422, 6254422, 6264422, 6274422, 6284422, 6294422, 6304...</msg>
<status status="PASS" starttime="20201112 10:17:00.077" endtime="20201112 10:17:00.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.091" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:00.089" endtime="20201112 10:17:00.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:00.093" endtime="20201112 10:17:00.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.083" endtime="20201112 10:17:00.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.108" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:17:00.105" endtime="20201112 10:17:00.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.112" level="INFO">VALUE: 6164383</msg>
<status status="PASS" starttime="20201112 10:17:00.110" endtime="20201112 10:17:00.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.099" endtime="20201112 10:17:00.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.124" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:00.122" endtime="20201112 10:17:00.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.129" level="INFO">VALUE: [6174422, 6184422, 6194422, 6204422, 6214422, 6224422, 6234422, 6244422, 6254422, 6264422, 6274422, 6284422, 6294422, 6304422, 6314422, 6324422, 6334422, 6344422, 6354422, 6364422, 6374422, 6384422, 6394422, 6404422, 6414422, 6424422, 6434422, 6444422, 6454422, 6464422, 6474422, 6484422, 6494422, 6504422, 6514422, 6524422, 6534422, 6544422, 6554422, 6564422, 6574422, 6584422, 6594422, 6604422, 6614422, 6624422, 6634422, 6644422, 6654422, 6664422, 6674422, 6684422, 6694422, 6704422, 6714422, 6724422, 6734422, 6744422, 6754422, 6764422, 6774422, 6784422, 6794422, 6804422, 6814422, 6824422, 6834422, 6844422, 6854422, 6864422, 6874422, 6884422, 6894422, 6904422, 6914422, 6924422, 6934422, 6944422, 6954422, 6964422, 6974422, 6984422, 6994422, 7004422, 7014422, 7024422, 7034422, 7044422, 7054422, 7064422, 7074422, 7084422, 7094422, 7104422, 7114422, 7124422, 7134422, 7144422, 7154422, 7164422]</msg>
<status status="PASS" starttime="20201112 10:17:00.126" endtime="20201112 10:17:00.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.115" endtime="20201112 10:17:00.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.148" endtime="20201112 10:17:00.502"></status>
</kw>
<msg timestamp="20201112 10:17:00.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038914653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048978625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:00.145" endtime="20201112 10:17:00.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038914653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048978625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:00.511" endtime="20201112 10:17:00.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.528" endtime="20201112 10:17:00.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.138" endtime="20201112 10:17:00.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.132" endtime="20201112 10:17:00.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:00.590" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:00.536" endtime="20201112 10:17:00.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.600" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:17:00.598" endtime="20201112 10:17:00.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.605" level="INFO">VALUE: 0.038914653</msg>
<status status="PASS" starttime="20201112 10:17:00.603" endtime="20201112 10:17:00.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.592" endtime="20201112 10:17:00.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.618" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:00.616" endtime="20201112 10:17:00.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:00.622" level="INFO">VALUE: [0.048978625, 0.059002903, 0.069028958, 0.079052458, 0.089075806, 0.099098639, 0.109120681, 0.119143375, 0.129166403, 0.139190806, 0.149214486, 0.159239125, 0.169264792, 0.179289319, 0.189313931, 0.199338014, 0.209361889, 0.219384639, 0.229408181, 0.239432319, 0.249455597, 0.259478806, 0.269502167, 0.279526056, 0.289550278, 0.299574514, 0.309598333, 0.319621681, 0.329645333, 0.339668569, 0.349692722, 0.359715667, 0.369738736, 0.379761889, 0.389785347, 0.399808111, 0.409831417, 0.419854333, 0.429878292, 0.439902458, 0.449926625, 0.459949917, 0.469973667, 0.479996264, 0.490020097, 0.500043167, 0.510066431, 0.520091528, 0.530116389, 0.540141653, 0.550167194, 0.560192431, 0.570218028, 0.580241847, 0.590265208, 0.600289333, 0.610313431, 0.620336958, 0.630360139, 0.640382986, 0.650406167, 0.660429486, 0.670453111, 0.680476667, 0.690500958, 0.700524806, 0.710549, 0.720572944, 0.730595986, 0.740618931, 0.750641514, 0.760665389, 0.770689097, 0.78071325, 0.790737361, 0.800761597, 0.810784972, 0.820809111, 0.830834111, 0.840859097, 0.850885264, 0.860910375, 0.870935597, 0.880959153, 0.890983736, 0.901007389, 0.911031056, 0.92105375, 0.931077583, 0.941100125, 0.951123417, 0.961146569, 0.971170861, 0.981195472, 0.991218944, 1.001242458, 1.011266819, 1.021290514, 1.031314639, 1.041337806] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:00.620" endtime="20201112 10:17:00.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.608" endtime="20201112 10:17:00.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.631" endtime="20201112 10:17:00.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:00.639" endtime="20201112 10:17:00.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.635" endtime="20201112 10:17:00.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.627" endtime="20201112 10:17:00.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.903" endtime="20201112 10:17:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.391" endtime="20201112 10:17:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.390" endtime="20201112 10:17:00.666"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:00.671" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:00.692" endtime="20201112 10:17:02.806"></status>
</kw>
<msg timestamp="20201112 10:17:02.808" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8926937, 'wakeups': [8937009, 8947008, 8957007, 8967007, 8977008, 8987...</msg>
<status status="PASS" starttime="20201112 10:17:00.688" endtime="20201112 10:17:02.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.814" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8926937, 'wakeups': [8937009, 8947008, 8957007, 8967007, 8977008, 8987...</msg>
<status status="PASS" starttime="20201112 10:17:02.810" endtime="20201112 10:17:02.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.817" endtime="20201112 10:17:02.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.681" endtime="20201112 10:17:02.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.676" endtime="20201112 10:17:02.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:02.830" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 8926937, 'timer-interval': 10000, 'wakeups': [8937009, 8947008, 8957007, 8967007, 8977008, 8987008, 8997008, 9007008, 9017007, 9027007, 9037008, 9047008, 9057007, 9067...</msg>
<status status="PASS" starttime="20201112 10:17:02.825" endtime="20201112 10:17:02.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.840" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:02.837" endtime="20201112 10:17:02.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.844" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:02.842" endtime="20201112 10:17:02.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.831" endtime="20201112 10:17:02.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.856" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:02.854" endtime="20201112 10:17:02.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.861" level="INFO">VALUE: 8926937</msg>
<status status="PASS" starttime="20201112 10:17:02.859" endtime="20201112 10:17:02.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.847" endtime="20201112 10:17:02.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.874" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:02.871" endtime="20201112 10:17:02.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.879" level="INFO">VALUE: [8937009, 8947008, 8957007, 8967007, 8977008, 8987008, 8997008, 9007008, 9017007, 9027007, 9037008, 9047008, 9057007, 9067007, 9077008, 9087008, 9097007, 9107007, 9117008, 9127008, 9137008, 9147008, 9157008, 9167008, 9177008, 9187008, 9197008, 9207008, 9217008, 9227008, 9237007, 9247007, 9257008, 9267008, 9277008, 9287008, 9297008, 9307008, 9317008, 9327007, 9337007, 9347008, 9357008, 9367008, 9377008, 9387008, 9397008, 9407008, 9417008, 9427008, 9437008, 9447008, 9457008, 9467008, 9477008, 9487008, 9497008, 9507008, 9517008, 9527008, 9537008, 9547008, 9557008, 9567008, 9577008, 9587008, 9597008, 9607008, 9617008, 9627008, 9637007, 9647007, 9657007, 9667007, 9677008, 9687008, 9697008, 9707008, 9717007, 9727007, 9737008, 9747008, 9757008, 9767008, 9777008, 9787008, 9797007, 9807007, 9817008, 9827007, 9837007, 9847008, 9857008, 9867008, 9877008, 9887008, 9897008, 9907008, 9917008, 9927008]</msg>
<status status="PASS" starttime="20201112 10:17:02.876" endtime="20201112 10:17:02.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.865" endtime="20201112 10:17:02.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.900" endtime="20201112 10:17:03.245"></status>
</kw>
<msg timestamp="20201112 10:17:03.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044012792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054108847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:02.897" endtime="20201112 10:17:03.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044012792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054108847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:03.253" endtime="20201112 10:17:03.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.270" endtime="20201112 10:17:03.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.890" endtime="20201112 10:17:03.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.885" endtime="20201112 10:17:03.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:03.332" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:03.279" endtime="20201112 10:17:03.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.343" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:03.341" endtime="20201112 10:17:03.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.347" level="INFO">VALUE: 0.044012792</msg>
<status status="PASS" starttime="20201112 10:17:03.345" endtime="20201112 10:17:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.334" endtime="20201112 10:17:03.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.360" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:03.358" endtime="20201112 10:17:03.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.365" level="INFO">VALUE: [0.054108847, 0.064130708, 0.074152361, 0.084176139, 0.094201014, 0.104224, 0.114248403, 0.124272292, 0.134295653, 0.144319111, 0.154344778, 0.164368806, 0.174392181, 0.184416542, 0.194441653, 0.20446475, 0.214486, 0.224508389, 0.234533292, 0.244556931, 0.254581569, 0.264605333, 0.274629736, 0.284653125, 0.294675875, 0.304697736, 0.314720806, 0.324742903, 0.334764986, 0.344787167, 0.354809236, 0.364830847, 0.374854667, 0.384877944, 0.394900611, 0.404923736, 0.414949556, 0.424975556, 0.434998847, 0.445020806, 0.455044097, 0.465067569, 0.475091028, 0.485113917, 0.495137625, 0.505161056, 0.515185083, 0.525208472, 0.535232861, 0.545255625, 0.555278764, 0.565301028, 0.575322917, 0.585344847, 0.595367042, 0.605389431, 0.615412694, 0.625434625, 0.635456806, 0.645479667, 0.655502986, 0.665524958, 0.67554825, 0.685570958, 0.695594875, 0.705618806, 0.715642056, 0.725665444, 0.735688833, 0.745712139, 0.755734708, 0.765758347, 0.775782181, 0.785805306, 0.795830847, 0.805855667, 0.815880903, 0.825905486, 0.835930708, 0.84595575, 0.855982431, 0.866006958, 0.876031569, 0.886054181, 0.896077472, 0.906101069, 0.916125764, 0.926151153, 0.936176833, 0.946198986, 0.956222181, 0.966246153, 0.976269069, 0.986291069, 0.996314125, 1.006337167, 1.016360181, 1.026383556, 1.036407597, 1.046431319] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:03.362" endtime="20201112 10:17:03.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.351" endtime="20201112 10:17:03.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.373" endtime="20201112 10:17:03.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:03.381" endtime="20201112 10:17:03.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.377" endtime="20201112 10:17:03.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.369" endtime="20201112 10:17:03.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.673" endtime="20201112 10:17:03.407"></status>
</kw>
<msg timestamp="20201112 10:17:03.407" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.429" endtime="20201112 10:17:05.554"></status>
</kw>
<msg timestamp="20201112 10:17:05.555" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11657751, 'wakeups': [11667822, 11677822, 11687822, 11697822, 11707822...</msg>
<status status="PASS" starttime="20201112 10:17:03.426" endtime="20201112 10:17:05.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.562" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11657751, 'wakeups': [11667822, 11677822, 11687822, 11697822, 11707822...</msg>
<status status="PASS" starttime="20201112 10:17:05.557" endtime="20201112 10:17:05.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.564" endtime="20201112 10:17:05.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.419" endtime="20201112 10:17:05.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.412" endtime="20201112 10:17:05.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:05.577" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 11657751, 'timer-interval': 10000, 'wakeups': [11667822, 11677822, 11687822, 11697822, 11707822, 11717822, 11727822, 11737821, 11747820, 11757821, 11767822, 11777822, ...</msg>
<status status="PASS" starttime="20201112 10:17:05.573" endtime="20201112 10:17:05.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.595" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:05.592" endtime="20201112 10:17:05.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.599" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:05.597" endtime="20201112 10:17:05.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.579" endtime="20201112 10:17:05.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.611" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:05.609" endtime="20201112 10:17:05.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.615" level="INFO">VALUE: 11657751</msg>
<status status="PASS" starttime="20201112 10:17:05.613" endtime="20201112 10:17:05.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.603" endtime="20201112 10:17:05.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.627" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:05.625" endtime="20201112 10:17:05.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.632" level="INFO">VALUE: [11667822, 11677822, 11687822, 11697822, 11707822, 11717822, 11727822, 11737821, 11747820, 11757821, 11767822, 11777822, 11787822, 11797822, 11807822, 11817822, 11827822, 11837821, 11847821, 11857822, 11867822, 11877822, 11887822, 11897822, 11907821, 11917821, 11927822, 11937822, 11947822, 11957821, 11967821, 11977822, 11987822, 11997822, 12007822, 12017822, 12027822, 12037822, 12047822, 12057822, 12067822, 12077822, 12087822, 12097822, 12107822, 12117822, 12127822, 12137822, 12147822, 12157822, 12167822, 12177822, 12187822, 12197822, 12207822, 12217822, 12227821, 12237821, 12247822, 12257822, 12267821, 12277821, 12287822, 12297822, 12307821, 12317821, 12327822, 12337822, 12347822, 12357822, 12367822, 12377822, 12387822, 12397822, 12407821, 12417821, 12427822, 12437822, 12447822, 12457822, 12467822, 12477821, 12487821, 12497822, 12507822, 12517822, 12527822, 12537822, 12547821, 12557821, 12567821, 12577821, 12587822, 12597822, 12607822, 12617822, 12627822, 12637821, 12647821, 12657822]</msg>
<status status="PASS" starttime="20201112 10:17:05.630" endtime="20201112 10:17:05.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.619" endtime="20201112 10:17:05.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.651" endtime="20201112 10:17:05.994"></status>
</kw>
<msg timestamp="20201112 10:17:06.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038603167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048696681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:05.648" endtime="20201112 10:17:06.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038603167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048696681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:06.003" endtime="20201112 10:17:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.020" endtime="20201112 10:17:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.641" endtime="20201112 10:17:06.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.636" endtime="20201112 10:17:06.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:06.082" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:06.028" endtime="20201112 10:17:06.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.092" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:06.090" endtime="20201112 10:17:06.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.096" level="INFO">VALUE: 0.038603167</msg>
<status status="PASS" starttime="20201112 10:17:06.094" endtime="20201112 10:17:06.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.083" endtime="20201112 10:17:06.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.110" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:06.107" endtime="20201112 10:17:06.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:06.115" level="INFO">VALUE: [0.048696681, 0.058721306, 0.068745833, 0.078770167, 0.088794347, 0.098818125, 0.108840708, 0.118861125, 0.128883319, 0.138907347, 0.148932069, 0.158954917, 0.168976611, 0.178998083, 0.189020847, 0.199044597, 0.209067917, 0.219089736, 0.229113778, 0.239137806, 0.249161611, 0.259185097, 0.269208958, 0.279231486, 0.289253097, 0.299275278, 0.309297208, 0.319318417, 0.329341653, 0.339364, 0.349386278, 0.359409806, 0.369432444, 0.379455111, 0.389478181, 0.399500028, 0.40952325, 0.419544917, 0.429567278, 0.43958875, 0.449612625, 0.459635528, 0.469659042, 0.479681806, 0.489705347, 0.499727361, 0.509749472, 0.519772083, 0.529795167, 0.539817306, 0.549840361, 0.559863194, 0.569886153, 0.579909861, 0.589933361, 0.599956681, 0.609978708, 0.620002514, 0.630027792, 0.640050333, 0.650072069, 0.660095236, 0.670118806, 0.680141347, 0.690163361, 0.700186611, 0.710212292, 0.720235653, 0.730258486, 0.740281514, 0.750305153, 0.760328569, 0.770352722, 0.780377417, 0.790399889, 0.800423319, 0.810448306, 0.820472486, 0.830496597, 0.840520806, 0.850544403, 0.860567625, 0.870591667, 0.880615278, 0.890638639, 0.900661181, 0.910685583, 0.920710694, 0.930734944, 0.940757986, 0.950780681, 0.960801458, 0.970824125, 0.980845194, 0.990866222, 1.000887389, 1.010908375, 1.020930333, 1.030953139, 1.040975306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:06.112" endtime="20201112 10:17:06.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.100" endtime="20201112 10:17:06.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.123" endtime="20201112 10:17:06.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:06.132" endtime="20201112 10:17:06.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.127" endtime="20201112 10:17:06.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.119" endtime="20201112 10:17:06.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.409" endtime="20201112 10:17:06.157"></status>
</kw>
<msg timestamp="20201112 10:17:06.157" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:06.178" endtime="20201112 10:17:08.302"></status>
</kw>
<msg timestamp="20201112 10:17:08.303" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14400140, 'wakeups': [14410212, 14420211, 14430211, 14440211, 14450211...</msg>
<status status="PASS" starttime="20201112 10:17:06.174" endtime="20201112 10:17:08.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.310" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14400140, 'wakeups': [14410212, 14420211, 14430211, 14440211, 14450211...</msg>
<status status="PASS" starttime="20201112 10:17:08.305" endtime="20201112 10:17:08.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.312" endtime="20201112 10:17:08.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.167" endtime="20201112 10:17:08.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.162" endtime="20201112 10:17:08.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.325" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 14400140, 'timer-interval': 10000, 'wakeups': [14410212, 14420211, 14430211, 14440211, 14450211, 14460211, 14470210, 14480210, 14490210, 14500210, 14510211, 14520211, ...</msg>
<status status="PASS" starttime="20201112 10:17:08.320" endtime="20201112 10:17:08.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.335" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:08.333" endtime="20201112 10:17:08.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.339" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:08.337" endtime="20201112 10:17:08.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.327" endtime="20201112 10:17:08.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.352" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.349" endtime="20201112 10:17:08.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.356" level="INFO">VALUE: 14400140</msg>
<status status="PASS" starttime="20201112 10:17:08.354" endtime="20201112 10:17:08.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.343" endtime="20201112 10:17:08.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.368" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.366" endtime="20201112 10:17:08.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.375" level="INFO">VALUE: [14410212, 14420211, 14430211, 14440211, 14450211, 14460211, 14470210, 14480210, 14490210, 14500210, 14510211, 14520211, 14530210, 14540210, 14550211, 14560211, 14570211, 14580211, 14590211, 14600211, 14610210, 14620210, 14630211, 14640211, 14650211, 14660211, 14670210, 14680210, 14690211, 14700211, 14710210, 14720210, 14730211, 14740211, 14750210, 14760210, 14770211, 14780211, 14790211, 14800211, 14810211, 14820211, 14830211, 14840211, 14850210, 14860210, 14870210, 14880210, 14890210, 14900210, 14910211, 14920211, 14930211, 14940211, 14950211, 14960211, 14970211, 14980211, 14990211, 15000210, 15010210, 15020211, 15030211, 15040210, 15050210, 15060211, 15070211, 15080211, 15090211, 15100211, 15110211, 15120211, 15130211, 15140211, 15150211, 15160211, 15170210, 15180210, 15190211, 15200211, 15210211, 15220211, 15230211, 15240211, 15250211, 15260211, 15270211, 15280211, 15290211, 15300211, 15310211, 15320211, 15330211, 15340211, 15350210, 15360210, 15370211, 15380211, 15390211, 15400211]</msg>
<status status="PASS" starttime="20201112 10:17:08.371" endtime="20201112 10:17:08.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.359" endtime="20201112 10:17:08.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.394" endtime="20201112 10:17:08.738"></status>
</kw>
<msg timestamp="20201112 10:17:08.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036858014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046952556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.391" endtime="20201112 10:17:08.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036858014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046952556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.747" endtime="20201112 10:17:08.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.764" endtime="20201112 10:17:08.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.384" endtime="20201112 10:17:08.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.379" endtime="20201112 10:17:08.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.825" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:08.773" endtime="20201112 10:17:08.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.836" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.834" endtime="20201112 10:17:08.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.841" level="INFO">VALUE: 0.036858014</msg>
<status status="PASS" starttime="20201112 10:17:08.838" endtime="20201112 10:17:08.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.827" endtime="20201112 10:17:08.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.854" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.851" endtime="20201112 10:17:08.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.858" level="INFO">VALUE: [0.046952556, 0.056973806, 0.066995597, 0.077016667, 0.087039083, 0.0970605, 0.10708125, 0.117102667, 0.127123583, 0.137145583, 0.147167889, 0.157189514, 0.167211917, 0.177234667, 0.187259667, 0.19728225, 0.207304917, 0.217327889, 0.227351417, 0.237374194, 0.247396125, 0.257419806, 0.267444347, 0.277467278, 0.287490556, 0.297511736, 0.307532028, 0.317552944, 0.32757675, 0.337598486, 0.347619847, 0.357640694, 0.367663264, 0.377684083, 0.387704444, 0.397725583, 0.407747861, 0.417768125, 0.427789139, 0.437810583, 0.447832986, 0.457853556, 0.467874667, 0.477894958, 0.487915361, 0.497936292, 0.507957931, 0.517979972, 0.528002847, 0.538025583, 0.548049042, 0.558072486, 0.568096194, 0.578120708, 0.588145, 0.598169361, 0.608193778, 0.618217722, 0.628242528, 0.638266528, 0.648292208, 0.658317764, 0.668342069, 0.678364972, 0.688387806, 0.698412306, 0.708435653, 0.718458986, 0.728482194, 0.738506083, 0.748530819, 0.758555194, 0.768579681, 0.778604222, 0.788628708, 0.798653722, 0.808676861, 0.818700278, 0.828725861, 0.838750458, 0.848774694, 0.858799056, 0.868824194, 0.878848194, 0.888872861, 0.898897722, 0.908922819, 0.918946361, 0.928970431, 0.938993653, 0.949016583, 0.959039458, 0.969063972, 0.979087806, 0.989111417, 0.999135347, 1.009159625, 1.019183875, 1.029207556, 1.039230694] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:08.856" endtime="20201112 10:17:08.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.844" endtime="20201112 10:17:08.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.867" endtime="20201112 10:17:08.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:08.877" endtime="20201112 10:17:08.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.872" endtime="20201112 10:17:08.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.862" endtime="20201112 10:17:08.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:06.159" endtime="20201112 10:17:08.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.668" endtime="20201112 10:17:08.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:00.666" endtime="20201112 10:17:08.905"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:08.910" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.933" endtime="20201112 10:17:11.057"></status>
</kw>
<msg timestamp="20201112 10:17:11.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17149332, 'wakeups': [17159436, 17169435, 17179435, 17189435, 17199435...</msg>
<status status="PASS" starttime="20201112 10:17:08.929" endtime="20201112 10:17:11.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.066" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17149332, 'wakeups': [17159436, 17169435, 17179435, 17189435, 17199435...</msg>
<status status="PASS" starttime="20201112 10:17:11.061" endtime="20201112 10:17:11.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.068" endtime="20201112 10:17:11.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.922" endtime="20201112 10:17:11.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.915" endtime="20201112 10:17:11.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:11.081" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 17149332, 'timer-interval': 10000, 'wakeups': [17159436, 17169435, 17179435, 17189435, 17199435, 17209435, 17219435, 17229436, 17239435, 17249436, 17259436, 17269435, ...</msg>
<status status="PASS" starttime="20201112 10:17:11.076" endtime="20201112 10:17:11.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.091" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:11.088" endtime="20201112 10:17:11.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:11.093" endtime="20201112 10:17:11.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.082" endtime="20201112 10:17:11.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.107" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:11.105" endtime="20201112 10:17:11.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.112" level="INFO">VALUE: 17149332</msg>
<status status="PASS" starttime="20201112 10:17:11.110" endtime="20201112 10:17:11.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.099" endtime="20201112 10:17:11.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.124" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:11.122" endtime="20201112 10:17:11.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.129" level="INFO">VALUE: [17159436, 17169435, 17179435, 17189435, 17199435, 17209435, 17219435, 17229436, 17239435, 17249436, 17259436, 17269435, 17279435, 17289435, 17299436, 17309436, 17319435, 17329435, 17339435, 17349436, 17359435, 17369436, 17379435, 17389435, 17399435, 17409436, 17419435, 17429435, 17439435, 17449435, 17459435, 17469436, 17479435, 17489435, 17499435, 17509435, 17519435, 17529435, 17539435, 17549435, 17559435, 17569435, 17579435, 17589435, 17599435, 17609435, 17619435, 17629436, 17639435, 17649435, 17659435, 17669435, 17679435, 17689435, 17699435, 17709435, 17719435, 17729435, 17739435, 17749436, 17759435, 17769435, 17779435, 17789435, 17799435, 17809435, 17819435, 17829435, 17839435, 17849436, 17859435, 17869435, 17879435, 17889435, 17899435, 17909435, 17919435, 17929436, 17939435, 17949435, 17959435, 17969435, 17979435, 17989435, 17999435, 18009436, 18019435, 18029436, 18039435, 18049436, 18059435, 18069435, 18079435, 18089435, 18099435, 18109435, 18119435, 18129435, 18139435, 18149435]</msg>
<status status="PASS" starttime="20201112 10:17:11.127" endtime="20201112 10:17:11.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.115" endtime="20201112 10:17:11.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.150" endtime="20201112 10:17:11.494"></status>
</kw>
<msg timestamp="20201112 10:17:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045807458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055933806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:11.145" endtime="20201112 10:17:11.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045807458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055933806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:11.503" endtime="20201112 10:17:11.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.520" endtime="20201112 10:17:11.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.138" endtime="20201112 10:17:11.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.133" endtime="20201112 10:17:11.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:11.582" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:11.528" endtime="20201112 10:17:11.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.592" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:11.590" endtime="20201112 10:17:11.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.596" level="INFO">VALUE: 0.045807458</msg>
<status status="PASS" starttime="20201112 10:17:11.594" endtime="20201112 10:17:11.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.583" endtime="20201112 10:17:11.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.610" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:11.607" endtime="20201112 10:17:11.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:11.614" level="INFO">VALUE: [0.055933806, 0.065954056, 0.075976347, 0.085999097, 0.096022444, 0.106045917, 0.116069625, 0.126092958, 0.136114333, 0.146137778, 0.156160861, 0.166182903, 0.176206972, 0.186229139, 0.196252792, 0.206274806, 0.216295444, 0.22631825, 0.236341069, 0.246365931, 0.256388667, 0.266413972, 0.276437833, 0.286462125, 0.296485764, 0.306509903, 0.316532375, 0.326555139, 0.336578819, 0.346602292, 0.356626181, 0.366650514, 0.376672361, 0.386694556, 0.39671775, 0.406740014, 0.416762958, 0.426786778, 0.436812153, 0.446836972, 0.4568625, 0.466888111, 0.476913222, 0.486938153, 0.496962694, 0.506985167, 0.517006431, 0.527029028, 0.537051583, 0.547074625, 0.557097042, 0.567119556, 0.577143014, 0.587167167, 0.597191181, 0.607214528, 0.617238444, 0.627260903, 0.637284611, 0.647309097, 0.657331667, 0.667354611, 0.677377083, 0.68740075, 0.697424333, 0.707447056, 0.717470375, 0.727494056, 0.737516667, 0.747540014, 0.757563736, 0.767586806, 0.777610306, 0.787634458, 0.797659194, 0.807682986, 0.817706625, 0.827731458, 0.837754861, 0.847778903, 0.857802722, 0.867826917, 0.877849944, 0.887873333, 0.897897333, 0.907921653, 0.91794375, 0.927967306, 0.937988639, 0.948012403, 0.958034986, 0.968058556, 0.978082361, 0.988106819, 0.998131194, 1.008154, 1.018176653, 1.028200764, 1.038225292, 1.048248347] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:11.612" endtime="20201112 10:17:11.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.600" endtime="20201112 10:17:11.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.623" endtime="20201112 10:17:11.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:11.631" endtime="20201112 10:17:11.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.626" endtime="20201112 10:17:11.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.618" endtime="20201112 10:17:11.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.912" endtime="20201112 10:17:11.656"></status>
</kw>
<msg timestamp="20201112 10:17:11.657" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:11.677" endtime="20201112 10:17:13.802"></status>
</kw>
<msg timestamp="20201112 10:17:13.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19887553, 'wakeups': [19897656, 19907656, 19917656, 19927656, 19937656...</msg>
<status status="PASS" starttime="20201112 10:17:11.674" endtime="20201112 10:17:13.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.811" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19887553, 'wakeups': [19897656, 19907656, 19917656, 19927656, 19937656...</msg>
<status status="PASS" starttime="20201112 10:17:13.805" endtime="20201112 10:17:13.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.813" endtime="20201112 10:17:13.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.667" endtime="20201112 10:17:13.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.662" endtime="20201112 10:17:13.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:13.826" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 19887553, 'timer-interval': 10000, 'wakeups': [19897656, 19907656, 19917656, 19927656, 19937656, 19947656, 19957656, 19967656, 19977656, 19987656, 19997656, 20007656, ...</msg>
<status status="PASS" starttime="20201112 10:17:13.821" endtime="20201112 10:17:13.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.835" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:13.833" endtime="20201112 10:17:13.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.840" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:13.838" endtime="20201112 10:17:13.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.827" endtime="20201112 10:17:13.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.852" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:13.850" endtime="20201112 10:17:13.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.856" level="INFO">VALUE: 19887553</msg>
<status status="PASS" starttime="20201112 10:17:13.854" endtime="20201112 10:17:13.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.843" endtime="20201112 10:17:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.868" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:13.866" endtime="20201112 10:17:13.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.875" level="INFO">VALUE: [19897656, 19907656, 19917656, 19927656, 19937656, 19947656, 19957656, 19967656, 19977656, 19987656, 19997656, 20007656, 20017656, 20027656, 20037656, 20047656, 20057656, 20067657, 20077656, 20087656, 20097656, 20107656, 20117656, 20127656, 20137656, 20147656, 20157656, 20167656, 20177656, 20187656, 20197656, 20207656, 20217657, 20227656, 20237656, 20247656, 20257656, 20267656, 20277656, 20287657, 20297656, 20307656, 20317656, 20327656, 20337656, 20347656, 20357656, 20367657, 20377656, 20387657, 20397656, 20407657, 20417656, 20427656, 20437656, 20447657, 20457656, 20467656, 20477656, 20487656, 20497656, 20507656, 20517656, 20527656, 20537656, 20547656, 20557656, 20567656, 20577656, 20587656, 20597656, 20607656, 20617656, 20627656, 20637656, 20647656, 20657657, 20667656, 20677656, 20687656, 20697656, 20707656, 20717656, 20727657, 20737656, 20747656, 20757656, 20767657, 20777656, 20787656, 20797656, 20807656, 20817656, 20827656, 20837656, 20847656, 20857656, 20867656, 20877656, 20887657]</msg>
<status status="PASS" starttime="20201112 10:17:13.871" endtime="20201112 10:17:13.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.860" endtime="20201112 10:17:13.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.894" endtime="20201112 10:17:14.236"></status>
</kw>
<msg timestamp="20201112 10:17:14.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047210778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:17:13.890" endtime="20201112 10:17:14.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:14.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047210778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:17:14.245" endtime="20201112 10:17:14.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:14.262" endtime="20201112 10:17:14.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.883" endtime="20201112 10:17:14.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.879" endtime="20201112 10:17:14.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:14.322" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:14.270" endtime="20201112 10:17:14.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:14.333" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:14.331" endtime="20201112 10:17:14.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:14.337" level="INFO">VALUE: 0.037083</msg>
<status status="PASS" starttime="20201112 10:17:14.335" endtime="20201112 10:17:14.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.324" endtime="20201112 10:17:14.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:14.350" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:14.348" endtime="20201112 10:17:14.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:14.355" level="INFO">VALUE: [0.047210778, 0.057235069, 0.067259875, 0.077284875, 0.087311111, 0.097336347, 0.107361181, 0.117386389, 0.12741175, 0.137438639, 0.147465181, 0.157491389, 0.167517042, 0.177542569, 0.187568833, 0.197595347, 0.207622014, 0.217648347, 0.227673944, 0.237698514, 0.24772375, 0.257749306, 0.267773708, 0.27779775, 0.287821722, 0.297845139, 0.307869056, 0.317892319, 0.327916847, 0.337941278, 0.347965986, 0.357988444, 0.368011792, 0.378033208, 0.388055708, 0.398078875, 0.408102583, 0.418125167, 0.428148028, 0.438172819, 0.448196319, 0.458220306, 0.468244653, 0.478269056, 0.488292583, 0.498316444, 0.508341361, 0.518366722, 0.528390097, 0.538415472, 0.548438806, 0.558464222, 0.568488556, 0.578513181, 0.588539278, 0.598565319, 0.608589472, 0.618614458, 0.628639778, 0.638665417, 0.648690639, 0.658715917, 0.668741667, 0.678767431, 0.688793264, 0.698817986, 0.7088425, 0.718866875, 0.728892139, 0.738918417, 0.748944806, 0.758969542, 0.768994597, 0.77902, 0.789045111, 0.799070417, 0.809096389, 0.819120556, 0.829145306, 0.839169764, 0.849194764, 0.859219819, 0.869245542, 0.87927175, 0.889295208, 0.899319, 0.909343611, 0.919370042, 0.929394958, 0.939420569, 0.949446417, 0.959472778, 0.969499361, 0.979525903, 0.989552958, 0.999578625, 1.009604306, 1.019629611, 1.029653958, 1.039679958] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:14.353" endtime="20201112 10:17:14.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.341" endtime="20201112 10:17:14.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:14.363" endtime="20201112 10:17:14.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:14.371" endtime="20201112 10:17:14.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.367" endtime="20201112 10:17:14.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.359" endtime="20201112 10:17:14.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:11.658" endtime="20201112 10:17:14.399"></status>
</kw>
<msg timestamp="20201112 10:17:14.400" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:14.420" endtime="20201112 10:17:16.544"></status>
</kw>
<msg timestamp="20201112 10:17:16.546" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22624222, 'wakeups': [22634326, 22644325, 22654325, 22664325, 22674325...</msg>
<status status="PASS" starttime="20201112 10:17:14.417" endtime="20201112 10:17:16.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.552" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22624222, 'wakeups': [22634326, 22644325, 22654325, 22664325, 22674325...</msg>
<status status="PASS" starttime="20201112 10:17:16.548" endtime="20201112 10:17:16.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.555" endtime="20201112 10:17:16.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.410" endtime="20201112 10:17:16.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.405" endtime="20201112 10:17:16.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:16.568" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 22624222, 'timer-interval': 10000, 'wakeups': [22634326, 22644325, 22654325, 22664325, 22674325, 22684325, 22694325, 22704325, 22714325, 22724325, 22734325, 22744325, ...</msg>
<status status="PASS" starttime="20201112 10:17:16.563" endtime="20201112 10:17:16.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.578" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:16.575" endtime="20201112 10:17:16.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.582" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:16.580" endtime="20201112 10:17:16.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.569" endtime="20201112 10:17:16.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.599" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:16.596" endtime="20201112 10:17:16.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.603" level="INFO">VALUE: 22624222</msg>
<status status="PASS" starttime="20201112 10:17:16.601" endtime="20201112 10:17:16.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.590" endtime="20201112 10:17:16.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.615" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:16.613" endtime="20201112 10:17:16.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.620" level="INFO">VALUE: [22634326, 22644325, 22654325, 22664325, 22674325, 22684325, 22694325, 22704325, 22714325, 22724325, 22734325, 22744325, 22754325, 22764326, 22774325, 22784325, 22794325, 22804325, 22814325, 22824326, 22834325, 22844325, 22854325, 22864325, 22874325, 22884325, 22894325, 22904325, 22914325, 22924326, 22934325, 22944325, 22954325, 22964325, 22974325, 22984326, 22994325, 23004325, 23014325, 23024325, 23034325, 23044325, 23054325, 23064325, 23074326, 23084325, 23094325, 23104326, 23114325, 23124325, 23134325, 23144326, 23154326, 23164326, 23174325, 23184325, 23194326, 23204325, 23214325, 23224325, 23234325, 23244325, 23254325, 23264325, 23274325, 23284325, 23294325, 23304325, 23314325, 23324326, 23334325, 23344325, 23354325, 23364326, 23374325, 23384325, 23394325, 23404326, 23414325, 23424325, 23434325, 23444326, 23454325, 23464325, 23474325, 23484325, 23494326, 23504325, 23514325, 23524325, 23534325, 23544325, 23554325, 23564325, 23574325, 23584325, 23594325, 23604325, 23614325, 23624325]</msg>
<status status="PASS" starttime="20201112 10:17:16.617" endtime="20201112 10:17:16.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.606" endtime="20201112 10:17:16.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.638" endtime="20201112 10:17:16.980"></status>
</kw>
<msg timestamp="20201112 10:17:16.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037142514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047269708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:16.635" endtime="20201112 10:17:16.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037142514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047269708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:16.988" endtime="20201112 10:17:17.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.005" endtime="20201112 10:17:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.628" endtime="20201112 10:17:17.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.623" endtime="20201112 10:17:17.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:17.067" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:17.015" endtime="20201112 10:17:17.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.078" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:17:17.075" endtime="20201112 10:17:17.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.082" level="INFO">VALUE: 0.037142514</msg>
<status status="PASS" starttime="20201112 10:17:17.080" endtime="20201112 10:17:17.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.069" endtime="20201112 10:17:17.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.095" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:17.093" endtime="20201112 10:17:17.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.100" level="INFO">VALUE: [0.047269708, 0.057290736, 0.067313069, 0.077335583, 0.087358806, 0.097380444, 0.1074035, 0.117425917, 0.127448597, 0.137471194, 0.147495625, 0.157519278, 0.167543278, 0.177567819, 0.187590347, 0.197613819, 0.207638236, 0.217661722, 0.227684694, 0.237708611, 0.247731111, 0.257753792, 0.267777722, 0.277801375, 0.287824625, 0.297846472, 0.307869972, 0.317892986, 0.327916556, 0.337941278, 0.347964056, 0.357988028, 0.368011986, 0.378034708, 0.388057667, 0.398080861, 0.408102083, 0.418125333, 0.428149208, 0.438172069, 0.448196125, 0.458219667, 0.468243722, 0.478266375, 0.488290306, 0.498311819, 0.508334778, 0.518358722, 0.528380958, 0.538403333, 0.548426639, 0.558451319, 0.568474597, 0.57849725, 0.588519014, 0.598542139, 0.608567292, 0.618589694, 0.628613736, 0.638638028, 0.6486625, 0.658686847, 0.668710917, 0.678735056, 0.688758653, 0.698781375, 0.708804819, 0.718827792, 0.728852542, 0.738878097, 0.7489015, 0.758925389, 0.76895075, 0.778975806, 0.788998097, 0.799022847, 0.809047444, 0.819071347, 0.829093458, 0.839115778, 0.849138917, 0.859161958, 0.869183042, 0.879206431, 0.889229153, 0.899251847, 0.909275306, 0.919296986, 0.929320069, 0.939342667, 0.949364819, 0.959385944, 0.969408014, 0.97943, 0.989453222, 0.999475472, 1.009498792, 1.019521903, 1.029544833, 1.039567486] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:17.097" endtime="20201112 10:17:17.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.085" endtime="20201112 10:17:17.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.109" endtime="20201112 10:17:17.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:17.117" endtime="20201112 10:17:17.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.113" endtime="20201112 10:17:17.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.104" endtime="20201112 10:17:17.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:14.401" endtime="20201112 10:17:17.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.908" endtime="20201112 10:17:17.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.906" endtime="20201112 10:17:17.143"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:17.149" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.169" endtime="20201112 10:17:19.294"></status>
</kw>
<msg timestamp="20201112 10:17:19.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25367411, 'wakeups': [25377550, 25387549, 25397549, 25407549, 25417549...</msg>
<status status="PASS" starttime="20201112 10:17:17.166" endtime="20201112 10:17:19.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.302" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25367411, 'wakeups': [25377550, 25387549, 25397549, 25407549, 25417549...</msg>
<status status="PASS" starttime="20201112 10:17:19.298" endtime="20201112 10:17:19.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.305" endtime="20201112 10:17:19.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.159" endtime="20201112 10:17:19.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.154" endtime="20201112 10:17:19.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:19.319" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 25367411, 'timer-interval': 10000, 'wakeups': [25377550, 25387549, 25397549, 25407549, 25417549, 25427549, 25437549, 25447549, 25457549, 25467549, 25477549, 25487549, ...</msg>
<status status="PASS" starttime="20201112 10:17:19.314" endtime="20201112 10:17:19.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.329" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:19.327" endtime="20201112 10:17:19.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.334" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:19.331" endtime="20201112 10:17:19.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.321" endtime="20201112 10:17:19.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.346" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:19.343" endtime="20201112 10:17:19.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.350" level="INFO">VALUE: 25367411</msg>
<status status="PASS" starttime="20201112 10:17:19.348" endtime="20201112 10:17:19.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.337" endtime="20201112 10:17:19.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.362" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:19.360" endtime="20201112 10:17:19.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.367" level="INFO">VALUE: [25377550, 25387549, 25397549, 25407549, 25417549, 25427549, 25437549, 25447549, 25457549, 25467549, 25477549, 25487549, 25497549, 25507549, 25517549, 25527549, 25537549, 25547549, 25557549, 25567549, 25577549, 25587549, 25597549, 25607549, 25617549, 25627549, 25637549, 25647549, 25657549, 25667549, 25677549, 25687549, 25697549, 25707549, 25717549, 25727549, 25737549, 25747549, 25757549, 25767549, 25777549, 25787549, 25797549, 25807549, 25817549, 25827549, 25837549, 25847549, 25857549, 25867549, 25877549, 25887549, 25897549, 25907549, 25917549, 25927549, 25937549, 25947549, 25957549, 25967549, 25977549, 25987549, 25997549, 26007549, 26017549, 26027549, 26037549, 26047549, 26057549, 26067549, 26077549, 26087549, 26097549, 26107549, 26117549, 26127549, 26137549, 26147549, 26157549, 26167549, 26177549, 26187549, 26197549, 26207549, 26217549, 26227549, 26237549, 26247549, 26257549, 26267549, 26277549, 26287549, 26297549, 26307549, 26317549, 26327549, 26337549, 26347549, 26357549, 26367549]</msg>
<status status="PASS" starttime="20201112 10:17:19.364" endtime="20201112 10:17:19.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.353" endtime="20201112 10:17:19.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.387" endtime="20201112 10:17:19.730"></status>
</kw>
<msg timestamp="20201112 10:17:19.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042898583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053060153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:19.383" endtime="20201112 10:17:19.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042898583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053060153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:19.738" endtime="20201112 10:17:19.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.755" endtime="20201112 10:17:19.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.376" endtime="20201112 10:17:19.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.371" endtime="20201112 10:17:19.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:19.816" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:19.763" endtime="20201112 10:17:19.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.827" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:19.824" endtime="20201112 10:17:19.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.831" level="INFO">VALUE: 0.042898583</msg>
<status status="PASS" starttime="20201112 10:17:19.829" endtime="20201112 10:17:19.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.818" endtime="20201112 10:17:19.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.844" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:19.842" endtime="20201112 10:17:19.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.849" level="INFO">VALUE: [0.053060153, 0.063081139, 0.073103667, 0.083127681, 0.093150083, 0.103171708, 0.113194236, 0.123216639, 0.133239847, 0.143261806, 0.153285417, 0.163307125, 0.173328486, 0.183349917, 0.193371306, 0.203392931, 0.213414944, 0.223436431, 0.233459472, 0.243481542, 0.253503694, 0.263523667, 0.273545181, 0.283566194, 0.293587722, 0.303609778, 0.313632236, 0.323654625, 0.333677194, 0.343700056, 0.353725097, 0.363747653, 0.373770389, 0.383791611, 0.393813875, 0.403835056, 0.413857417, 0.423878681, 0.433899736, 0.443920944, 0.453942778, 0.463965069, 0.473987722, 0.484009472, 0.494032014, 0.504052931, 0.514074944, 0.524096861, 0.534118736, 0.544141944, 0.554165778, 0.564189333, 0.57421225, 0.584234917, 0.594258083, 0.604280722, 0.614303208, 0.624326333, 0.634348583, 0.644370611, 0.654393319, 0.664415889, 0.674439042, 0.684462236, 0.694484639, 0.704506708, 0.714529833, 0.724552847, 0.734576375, 0.744599167, 0.754621917, 0.764645125, 0.77466875, 0.784691333, 0.794714556, 0.80473725, 0.814760403, 0.824784306, 0.834807486, 0.844830819, 0.854855181, 0.864879306, 0.874904306, 0.884928847, 0.894953347, 0.904977611, 0.915001528, 0.925026361, 0.935053278, 0.945079056, 0.95510425, 0.965129694, 0.975156153, 0.985181153, 0.995207361, 1.005231847, 1.015255583, 1.025280125, 1.035306694, 1.045332833] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:19.846" endtime="20201112 10:17:19.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.834" endtime="20201112 10:17:19.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.857" endtime="20201112 10:17:19.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:19.865" endtime="20201112 10:17:19.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.861" endtime="20201112 10:17:19.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.853" endtime="20201112 10:17:19.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.150" endtime="20201112 10:17:19.891"></status>
</kw>
<msg timestamp="20201112 10:17:19.891" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.912" endtime="20201112 10:17:22.037"></status>
</kw>
<msg timestamp="20201112 10:17:22.038" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28104328, 'wakeups': [28114467, 28124466, 28134466, 28144466, 28154466...</msg>
<status status="PASS" starttime="20201112 10:17:19.908" endtime="20201112 10:17:22.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.045" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28104328, 'wakeups': [28114467, 28124466, 28134466, 28144466, 28154466...</msg>
<status status="PASS" starttime="20201112 10:17:22.040" endtime="20201112 10:17:22.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.047" endtime="20201112 10:17:22.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.901" endtime="20201112 10:17:22.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.896" endtime="20201112 10:17:22.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:22.060" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 28104328, 'timer-interval': 10000, 'wakeups': [28114467, 28124466, 28134466, 28144466, 28154466, 28164466, 28174466, 28184466, 28194466, 28204466, 28214466, 28224466, ...</msg>
<status status="PASS" starttime="20201112 10:17:22.055" endtime="20201112 10:17:22.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.070" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:22.067" endtime="20201112 10:17:22.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.074" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:22.072" endtime="20201112 10:17:22.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.061" endtime="20201112 10:17:22.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.086" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:22.084" endtime="20201112 10:17:22.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.090" level="INFO">VALUE: 28104328</msg>
<status status="PASS" starttime="20201112 10:17:22.088" endtime="20201112 10:17:22.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.078" endtime="20201112 10:17:22.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.102" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:22.100" endtime="20201112 10:17:22.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.107" level="INFO">VALUE: [28114467, 28124466, 28134466, 28144466, 28154466, 28164466, 28174466, 28184466, 28194466, 28204466, 28214466, 28224466, 28234466, 28244466, 28254466, 28264466, 28274466, 28284466, 28294466, 28304466, 28314466, 28324466, 28334466, 28344466, 28354466, 28364466, 28374466, 28384466, 28394466, 28404466, 28414466, 28424466, 28434466, 28444466, 28454466, 28464466, 28474466, 28484466, 28494466, 28504466, 28514466, 28524466, 28534466, 28544466, 28554466, 28564466, 28574466, 28584466, 28594466, 28604466, 28614466, 28624466, 28634466, 28644466, 28654466, 28664466, 28674466, 28684466, 28694466, 28704466, 28714466, 28724466, 28734466, 28744466, 28754466, 28764466, 28774466, 28784466, 28794466, 28804466, 28814466, 28824466, 28834466, 28844466, 28854466, 28864466, 28874466, 28884466, 28894466, 28904466, 28914466, 28924466, 28934466, 28944466, 28954466, 28964466, 28974466, 28984466, 28994466, 29004466, 29014466, 29024466, 29034466, 29044466, 29054466, 29064466, 29074466, 29084466, 29094466, 29104466]</msg>
<status status="PASS" starttime="20201112 10:17:22.105" endtime="20201112 10:17:22.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.094" endtime="20201112 10:17:22.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.129" endtime="20201112 10:17:22.471"></status>
</kw>
<msg timestamp="20201112 10:17:22.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037762375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047924819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:22.126" endtime="20201112 10:17:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037762375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047924819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:22.480" endtime="20201112 10:17:22.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.497" endtime="20201112 10:17:22.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.119" endtime="20201112 10:17:22.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.114" endtime="20201112 10:17:22.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:22.558" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:22.507" endtime="20201112 10:17:22.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.569" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:22.567" endtime="20201112 10:17:22.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.573" level="INFO">VALUE: 0.037762375</msg>
<status status="PASS" starttime="20201112 10:17:22.571" endtime="20201112 10:17:22.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.560" endtime="20201112 10:17:22.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.586" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:22.584" endtime="20201112 10:17:22.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.591" level="INFO">VALUE: [0.047924819, 0.057946417, 0.067969653, 0.077991292, 0.088013722, 0.098037972, 0.108061708, 0.118085667, 0.128109347, 0.138134319, 0.148158847, 0.158182583, 0.168206583, 0.178229458, 0.188253139, 0.198275917, 0.208300389, 0.218325542, 0.228351125, 0.238374611, 0.248397833, 0.258421792, 0.268445778, 0.278468778, 0.288491875, 0.298515319, 0.308539292, 0.318563556, 0.328586667, 0.338608389, 0.348630903, 0.358652542, 0.368675972, 0.378698944, 0.388723222, 0.398745806, 0.408768986, 0.418792528, 0.428815972, 0.438839194, 0.4488635, 0.458886319, 0.468909875, 0.478932875, 0.488956667, 0.49897975, 0.509002875, 0.519025778, 0.529048, 0.539068944, 0.549091806, 0.55911475, 0.569137861, 0.579160042, 0.589183611, 0.599206847, 0.609229764, 0.619252486, 0.629275722, 0.639299097, 0.649321819, 0.659344722, 0.669367917, 0.679390917, 0.689414486, 0.699438181, 0.709462611, 0.719485639, 0.729509014, 0.739532028, 0.749554236, 0.759578236, 0.769603111, 0.779626889, 0.789651389, 0.799675056, 0.809698333, 0.819721583, 0.829744722, 0.839766861, 0.84979025, 0.859813306, 0.8698375, 0.879861639, 0.889886028, 0.899910083, 0.909933819, 0.919955958, 0.929979194, 0.940002028, 0.950024597, 0.960046986, 0.970070806, 0.98009425, 0.990118306, 1.000142014, 1.010165903, 1.020189181, 1.030212236, 1.040235264] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:22.589" endtime="20201112 10:17:22.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.577" endtime="20201112 10:17:22.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.600" endtime="20201112 10:17:22.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:22.608" endtime="20201112 10:17:22.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.603" endtime="20201112 10:17:22.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.595" endtime="20201112 10:17:22.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.892" endtime="20201112 10:17:22.634"></status>
</kw>
<msg timestamp="20201112 10:17:22.635" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.655" endtime="20201112 10:17:24.780"></status>
</kw>
<msg timestamp="20201112 10:17:24.781" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30841150, 'wakeups': [30851289, 30861288, 30871288, 30881288, 30891288...</msg>
<status status="PASS" starttime="20201112 10:17:22.652" endtime="20201112 10:17:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.788" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30841150, 'wakeups': [30851289, 30861288, 30871288, 30881288, 30891288...</msg>
<status status="PASS" starttime="20201112 10:17:24.783" endtime="20201112 10:17:24.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.790" endtime="20201112 10:17:24.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.645" endtime="20201112 10:17:24.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.640" endtime="20201112 10:17:24.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:24.803" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 30841150, 'timer-interval': 10000, 'wakeups': [30851289, 30861288, 30871288, 30881288, 30891288, 30901288, 30911288, 30921288, 30931288, 30941288, 30951288, 30961288, ...</msg>
<status status="PASS" starttime="20201112 10:17:24.798" endtime="20201112 10:17:24.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.813" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:24.811" endtime="20201112 10:17:24.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.818" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:24.815" endtime="20201112 10:17:24.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.804" endtime="20201112 10:17:24.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.830" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:24.828" endtime="20201112 10:17:24.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.834" level="INFO">VALUE: 30841150</msg>
<status status="PASS" starttime="20201112 10:17:24.832" endtime="20201112 10:17:24.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.821" endtime="20201112 10:17:24.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.846" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:24.844" endtime="20201112 10:17:24.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.851" level="INFO">VALUE: [30851289, 30861288, 30871288, 30881288, 30891288, 30901288, 30911288, 30921288, 30931288, 30941288, 30951288, 30961288, 30971288, 30981288, 30991288, 31001288, 31011288, 31021288, 31031288, 31041288, 31051288, 31061288, 31071288, 31081288, 31091288, 31101288, 31111288, 31121288, 31131288, 31141288, 31151288, 31161288, 31171288, 31181288, 31191288, 31201288, 31211288, 31221288, 31231288, 31241288, 31251288, 31261288, 31271288, 31281288, 31291288, 31301288, 31311288, 31321288, 31331288, 31341288, 31351288, 31361288, 31371288, 31381288, 31391288, 31401288, 31411288, 31421288, 31431288, 31441288, 31451288, 31461288, 31471288, 31481288, 31491288, 31501288, 31511288, 31521288, 31531288, 31541288, 31551288, 31561288, 31571288, 31581288, 31591288, 31601288, 31611288, 31621288, 31631288, 31641288, 31651288, 31661288, 31671288, 31681288, 31691288, 31701288, 31711288, 31721288, 31731288, 31741288, 31751288, 31761288, 31771288, 31781288, 31791288, 31801288, 31811288, 31821288, 31831288, 31841288]</msg>
<status status="PASS" starttime="20201112 10:17:24.848" endtime="20201112 10:17:24.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.838" endtime="20201112 10:17:24.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.869" endtime="20201112 10:17:25.211"></status>
</kw>
<msg timestamp="20201112 10:17:25.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037055931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047218375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:24.866" endtime="20201112 10:17:25.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:25.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037055931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047218375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:25.220" endtime="20201112 10:17:25.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:25.236" endtime="20201112 10:17:25.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.859" endtime="20201112 10:17:25.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.854" endtime="20201112 10:17:25.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:25.298" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:25.246" endtime="20201112 10:17:25.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:25.308" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:17:25.306" endtime="20201112 10:17:25.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:25.313" level="INFO">VALUE: 0.037055931</msg>
<status status="PASS" starttime="20201112 10:17:25.311" endtime="20201112 10:17:25.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.300" endtime="20201112 10:17:25.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:25.326" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:25.324" endtime="20201112 10:17:25.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:25.331" level="INFO">VALUE: [0.047218375, 0.057239778, 0.067261375, 0.077281736, 0.087303153, 0.097323736, 0.107344986, 0.117366681, 0.127389472, 0.137410944, 0.147432542, 0.15745375, 0.167476347, 0.177500125, 0.187524389, 0.197548139, 0.207571069, 0.217594806, 0.227620125, 0.237643722, 0.247666639, 0.257689708, 0.267713361, 0.277736042, 0.287759986, 0.297784444, 0.307808542, 0.317832153, 0.327855806, 0.337879194, 0.347903833, 0.357927972, 0.3679515, 0.3779755, 0.387999, 0.398023208, 0.408047986, 0.418072458, 0.428097917, 0.438122681, 0.448147486, 0.458171194, 0.468197028, 0.478222236, 0.488247347, 0.498271097, 0.508295528, 0.518318972, 0.528343208, 0.538367889, 0.548393167, 0.558418181, 0.568442694, 0.578467472, 0.588492208, 0.598516917, 0.608541597, 0.618566181, 0.628590972, 0.638614917, 0.648639431, 0.658664014, 0.668690611, 0.678715986, 0.688740153, 0.698763806, 0.708787819, 0.718811125, 0.728834458, 0.738857278, 0.748880806, 0.758904556, 0.768929097, 0.778951903, 0.788974417, 0.798997056, 0.809019514, 0.819040403, 0.829061819, 0.839084292, 0.849105903, 0.859129181, 0.869151986, 0.879175042, 0.889198361, 0.899221028, 0.909245, 0.919268389, 0.929290653, 0.939313167, 0.949335639, 0.959356958, 0.969377944, 0.979399514, 0.9894205, 0.999441708, 1.00946325, 1.019484403, 1.029506639, 1.039528694] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:25.328" endtime="20201112 10:17:25.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.316" endtime="20201112 10:17:25.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:25.340" endtime="20201112 10:17:25.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:25.348" endtime="20201112 10:17:25.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.344" endtime="20201112 10:17:25.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.335" endtime="20201112 10:17:25.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.636" endtime="20201112 10:17:25.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.146" endtime="20201112 10:17:25.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.144" endtime="20201112 10:17:25.374"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:25.380" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:25.400" endtime="20201112 10:17:27.525"></status>
</kw>
<msg timestamp="20201112 10:17:27.527" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33580141, 'wakeups': [33590313, 33600313, 33610313, 33620313, 33630313...</msg>
<status status="PASS" starttime="20201112 10:17:25.397" endtime="20201112 10:17:27.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.533" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33580141, 'wakeups': [33590313, 33600313, 33610313, 33620313, 33630313...</msg>
<status status="PASS" starttime="20201112 10:17:27.529" endtime="20201112 10:17:27.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.535" endtime="20201112 10:17:27.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.390" endtime="20201112 10:17:27.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.385" endtime="20201112 10:17:27.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:27.550" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 33580141, 'timer-interval': 10000, 'wakeups': [33590313, 33600313, 33610313, 33620313, 33630313, 33640313, 33650313, 33660313, 33670313, 33680313, 33690313, 33700313, ...</msg>
<status status="PASS" starttime="20201112 10:17:27.545" endtime="20201112 10:17:27.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.560" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:27.557" endtime="20201112 10:17:27.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.564" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:27.562" endtime="20201112 10:17:27.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.552" endtime="20201112 10:17:27.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.576" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:27.574" endtime="20201112 10:17:27.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.581" level="INFO">VALUE: 33580141</msg>
<status status="PASS" starttime="20201112 10:17:27.578" endtime="20201112 10:17:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.568" endtime="20201112 10:17:27.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.600" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:27.597" endtime="20201112 10:17:27.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.604" level="INFO">VALUE: [33590313, 33600313, 33610313, 33620313, 33630313, 33640313, 33650313, 33660313, 33670313, 33680313, 33690313, 33700313, 33710313, 33720313, 33730313, 33740313, 33750313, 33760313, 33770313, 33780313, 33790313, 33800313, 33810313, 33820313, 33830313, 33840313, 33850313, 33860313, 33870313, 33880313, 33890313, 33900313, 33910313, 33920313, 33930313, 33940313, 33950313, 33960313, 33970313, 33980313, 33990313, 34000313, 34010313, 34020313, 34030313, 34040313, 34050313, 34060313, 34070313, 34080313, 34090313, 34100313, 34110313, 34120313, 34130313, 34140313, 34150313, 34160313, 34170313, 34180313, 34190313, 34200313, 34210313, 34220313, 34230313, 34240313, 34250313, 34260313, 34270313, 34280313, 34290313, 34300313, 34310313, 34320313, 34330313, 34340313, 34350313, 34360313, 34370313, 34380313, 34390313, 34400313, 34410313, 34420313, 34430313, 34440313, 34450313, 34460313, 34470313, 34480313, 34490313, 34500313, 34510313, 34520313, 34530313, 34540313, 34550313, 34560313, 34570313, 34580313]</msg>
<status status="PASS" starttime="20201112 10:17:27.602" endtime="20201112 10:17:27.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.584" endtime="20201112 10:17:27.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.623" endtime="20201112 10:17:27.966"></status>
</kw>
<msg timestamp="20201112 10:17:27.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053366972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:27.620" endtime="20201112 10:17:27.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053366972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:27.974" endtime="20201112 10:17:27.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.991" endtime="20201112 10:17:27.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.613" endtime="20201112 10:17:27.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.608" endtime="20201112 10:17:27.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:28.054" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:28.000" endtime="20201112 10:17:28.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:28.065" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:28.063" endtime="20201112 10:17:28.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:28.069" level="INFO">VALUE: 0.043170903</msg>
<status status="PASS" starttime="20201112 10:17:28.067" endtime="20201112 10:17:28.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.056" endtime="20201112 10:17:28.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:28.082" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:28.080" endtime="20201112 10:17:28.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:28.087" level="INFO">VALUE: [0.053366972, 0.063390625, 0.07341575, 0.083439986, 0.093464264, 0.103487833, 0.113512417, 0.123536069, 0.133558611, 0.143580944, 0.153604778, 0.163626972, 0.173649833, 0.183671597, 0.193693542, 0.203714722, 0.213737903, 0.223760847, 0.233784097, 0.243806597, 0.253828861, 0.263850347, 0.273871903, 0.283893847, 0.293917306, 0.303941056, 0.313962931, 0.323984042, 0.334005903, 0.344028486, 0.354051583, 0.364073431, 0.374096458, 0.384118458, 0.394141403, 0.404163681, 0.414186319, 0.424208917, 0.434232125, 0.444255319, 0.454279597, 0.46430325, 0.474326903, 0.484350944, 0.494375708, 0.504399847, 0.514423444, 0.524445806, 0.534469819, 0.544492556, 0.554516958, 0.564540861, 0.574565389, 0.584588264, 0.594611444, 0.604635042, 0.614659903, 0.624684681, 0.634708792, 0.644732833, 0.654756222, 0.664779639, 0.674803792, 0.684827236, 0.694851667, 0.704876042, 0.714899111, 0.724923056, 0.734947278, 0.744971333, 0.754995014, 0.765019167, 0.775044361, 0.785069125, 0.795093347, 0.805116639, 0.815139903, 0.825162972, 0.835187125, 0.845210972, 0.855235444, 0.865259542, 0.875282861, 0.885307042, 0.895331333, 0.905355292, 0.915379694, 0.925403486, 0.935427889, 0.945451653, 0.955475833, 0.965498806, 0.975521125, 0.985542889, 0.995565736, 1.005588944, 1.0156125, 1.02563525, 1.0356595, 1.045682375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:28.085" endtime="20201112 10:17:28.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.073" endtime="20201112 10:17:28.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:28.095" endtime="20201112 10:17:28.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:28.104" endtime="20201112 10:17:28.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.100" endtime="20201112 10:17:28.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.091" endtime="20201112 10:17:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.381" endtime="20201112 10:17:28.130"></status>
</kw>
<msg timestamp="20201112 10:17:28.130" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:28.150" endtime="20201112 10:17:30.275"></status>
</kw>
<msg timestamp="20201112 10:17:30.277" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36323965, 'wakeups': [36334137, 36344137, 36354137, 36364137, 36374137...</msg>
<status status="PASS" starttime="20201112 10:17:28.147" endtime="20201112 10:17:30.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36323965, 'wakeups': [36334137, 36344137, 36354137, 36364137, 36374137...</msg>
<status status="PASS" starttime="20201112 10:17:30.279" endtime="20201112 10:17:30.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.286" endtime="20201112 10:17:30.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.140" endtime="20201112 10:17:30.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.135" endtime="20201112 10:17:30.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:30.298" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 36323965, 'timer-interval': 10000, 'wakeups': [36334137, 36344137, 36354137, 36364137, 36374137, 36384137, 36394137, 36404137, 36414137, 36424137, 36434137, 36444137, ...</msg>
<status status="PASS" starttime="20201112 10:17:30.294" endtime="20201112 10:17:30.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.308" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:30.306" endtime="20201112 10:17:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.313" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:30.311" endtime="20201112 10:17:30.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.300" endtime="20201112 10:17:30.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.325" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:30.323" endtime="20201112 10:17:30.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.329" level="INFO">VALUE: 36323965</msg>
<status status="PASS" starttime="20201112 10:17:30.327" endtime="20201112 10:17:30.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.316" endtime="20201112 10:17:30.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.341" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:30.339" endtime="20201112 10:17:30.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.346" level="INFO">VALUE: [36334137, 36344137, 36354137, 36364137, 36374137, 36384137, 36394137, 36404137, 36414137, 36424137, 36434137, 36444137, 36454137, 36464137, 36474137, 36484137, 36494137, 36504137, 36514137, 36524137, 36534137, 36544137, 36554137, 36564137, 36574137, 36584137, 36594137, 36604137, 36614137, 36624137, 36634137, 36644137, 36654137, 36664137, 36674137, 36684137, 36694137, 36704137, 36714137, 36724137, 36734137, 36744137, 36754137, 36764137, 36774137, 36784137, 36794137, 36804137, 36814137, 36824137, 36834137, 36844137, 36854137, 36864137, 36874137, 36884137, 36894137, 36904137, 36914137, 36924137, 36934137, 36944137, 36954137, 36964137, 36974137, 36984137, 36994137, 37004137, 37014137, 37024137, 37034137, 37044137, 37054137, 37064137, 37074137, 37084137, 37094137, 37104137, 37114137, 37124137, 37134137, 37144137, 37154137, 37164137, 37174137, 37184137, 37194137, 37204137, 37214137, 37224137, 37234137, 37244137, 37254137, 37264137, 37274137, 37284137, 37294137, 37304137, 37314137, 37324137]</msg>
<status status="PASS" starttime="20201112 10:17:30.344" endtime="20201112 10:17:30.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.333" endtime="20201112 10:17:30.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.367" endtime="20201112 10:17:30.710"></status>
</kw>
<msg timestamp="20201112 10:17:30.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036911944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:30.363" endtime="20201112 10:17:30.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036911944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:30.718" endtime="20201112 10:17:30.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.735" endtime="20201112 10:17:30.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.356" endtime="20201112 10:17:30.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.350" endtime="20201112 10:17:30.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:30.796" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:30.744" endtime="20201112 10:17:30.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.807" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:30.805" endtime="20201112 10:17:30.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.811" level="INFO">VALUE: 0.036911944</msg>
<status status="PASS" starttime="20201112 10:17:30.809" endtime="20201112 10:17:30.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.798" endtime="20201112 10:17:30.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.824" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:30.822" endtime="20201112 10:17:30.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:30.829" level="INFO">VALUE: [0.047110236, 0.057135264, 0.067160278, 0.077185486, 0.087210944, 0.097235806, 0.107261972, 0.117287514, 0.127313819, 0.137340375, 0.147368083, 0.157392819, 0.167416625, 0.177440556, 0.187465375, 0.197490444, 0.207513986, 0.217536556, 0.227558847, 0.237580944, 0.247603708, 0.257627639, 0.267651264, 0.277675194, 0.287698903, 0.297722722, 0.30774625, 0.31777125, 0.32779675, 0.337821556, 0.347846556, 0.357871639, 0.367896514, 0.377920069, 0.387943431, 0.397968944, 0.407994208, 0.418019708, 0.428045014, 0.438069986, 0.448095167, 0.458120153, 0.468145847, 0.478169389, 0.488193542, 0.498216569, 0.508240819, 0.518265514, 0.528290042, 0.538313417, 0.548337917, 0.558362139, 0.568386167, 0.578409958, 0.588433764, 0.598457153, 0.608480889, 0.618504875, 0.628529014, 0.638553681, 0.648577903, 0.658601681, 0.668626403, 0.678650333, 0.688675361, 0.698698639, 0.708720875, 0.718743736, 0.728767806, 0.738791069, 0.748815167, 0.758838847, 0.768862625, 0.778886014, 0.788910014, 0.798933667, 0.80895825, 0.818981958, 0.829007639, 0.839032583, 0.849057597, 0.859083222, 0.869108611, 0.879134639, 0.889160306, 0.899184542, 0.909209181, 0.919233889, 0.929258931, 0.939283056, 0.949308097, 0.959332472, 0.969357431, 0.979382847, 0.989408556, 0.999433444, 1.009459514, 1.019484153, 1.029509653, 1.039534208] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:30.826" endtime="20201112 10:17:30.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.815" endtime="20201112 10:17:30.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.838" endtime="20201112 10:17:30.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:30.846" endtime="20201112 10:17:30.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.841" endtime="20201112 10:17:30.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.833" endtime="20201112 10:17:30.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:28.131" endtime="20201112 10:17:30.871"></status>
</kw>
<msg timestamp="20201112 10:17:30.871" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.893" endtime="20201112 10:17:33.018"></status>
</kw>
<msg timestamp="20201112 10:17:33.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39060550, 'wakeups': [39070723, 39080722, 39090722, 39100722, 39110722...</msg>
<status status="PASS" starttime="20201112 10:17:30.890" endtime="20201112 10:17:33.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.032" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39060550, 'wakeups': [39070723, 39080722, 39090722, 39100722, 39110722...</msg>
<status status="PASS" starttime="20201112 10:17:33.022" endtime="20201112 10:17:33.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:33.034" endtime="20201112 10:17:33.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.882" endtime="20201112 10:17:33.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.876" endtime="20201112 10:17:33.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:33.047" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 39060550, 'timer-interval': 10000, 'wakeups': [39070723, 39080722, 39090722, 39100722, 39110722, 39120722, 39130722, 39140722, 39150722, 39160722, 39170722, 39180722, ...</msg>
<status status="PASS" starttime="20201112 10:17:33.042" endtime="20201112 10:17:33.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.056" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:33.054" endtime="20201112 10:17:33.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.061" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:33.059" endtime="20201112 10:17:33.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.048" endtime="20201112 10:17:33.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.073" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:33.071" endtime="20201112 10:17:33.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.077" level="INFO">VALUE: 39060550</msg>
<status status="PASS" starttime="20201112 10:17:33.075" endtime="20201112 10:17:33.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.064" endtime="20201112 10:17:33.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.089" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:33.087" endtime="20201112 10:17:33.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.094" level="INFO">VALUE: [39070723, 39080722, 39090722, 39100722, 39110722, 39120722, 39130722, 39140722, 39150722, 39160722, 39170722, 39180722, 39190722, 39200722, 39210722, 39220722, 39230722, 39240722, 39250722, 39260722, 39270722, 39280722, 39290722, 39300722, 39310722, 39320722, 39330722, 39340722, 39350722, 39360722, 39370722, 39380722, 39390722, 39400722, 39410722, 39420722, 39430722, 39440722, 39450722, 39460722, 39470722, 39480722, 39490722, 39500722, 39510722, 39520722, 39530722, 39540722, 39550722, 39560722, 39570722, 39580722, 39590722, 39600722, 39610722, 39620722, 39630722, 39640722, 39650722, 39660722, 39670722, 39680722, 39690722, 39700722, 39710722, 39720722, 39730722, 39740722, 39750722, 39760722, 39770722, 39780722, 39790722, 39800722, 39810722, 39820722, 39830722, 39840722, 39850722, 39860722, 39870722, 39880722, 39890722, 39900722, 39910722, 39920722, 39930722, 39940722, 39950722, 39960722, 39970722, 39980722, 39990722, 40000722, 40010722, 40020722, 40030722, 40040722, 40050722, 40060722]</msg>
<status status="PASS" starttime="20201112 10:17:33.092" endtime="20201112 10:17:33.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.081" endtime="20201112 10:17:33.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:33.112" endtime="20201112 10:17:33.456"></status>
</kw>
<msg timestamp="20201112 10:17:33.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038439028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048637708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:33.109" endtime="20201112 10:17:33.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038439028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048637708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:33.464" endtime="20201112 10:17:33.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:33.481" endtime="20201112 10:17:33.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.102" endtime="20201112 10:17:33.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.098" endtime="20201112 10:17:33.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:33.544" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:33.490" endtime="20201112 10:17:33.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.555" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:33.553" endtime="20201112 10:17:33.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.559" level="INFO">VALUE: 0.038439028</msg>
<status status="PASS" starttime="20201112 10:17:33.557" endtime="20201112 10:17:33.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.546" endtime="20201112 10:17:33.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.572" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:33.570" endtime="20201112 10:17:33.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:33.577" level="INFO">VALUE: [0.048637708, 0.058660264, 0.068685028, 0.078709583, 0.088735486, 0.098760472, 0.108784889, 0.118810097, 0.128835042, 0.138859431, 0.148884, 0.158908403, 0.168932778, 0.178956486, 0.188981083, 0.199004833, 0.209028458, 0.219052083, 0.229076153, 0.239099222, 0.249121847, 0.259145319, 0.269170819, 0.279195556, 0.28922, 0.299243875, 0.309268181, 0.319292611, 0.3293185, 0.339343361, 0.349368278, 0.359393292, 0.369418431, 0.379443847, 0.389469167, 0.399494319, 0.409520361, 0.419545139, 0.429571153, 0.439596556, 0.449621569, 0.459646431, 0.469671389, 0.479696153, 0.489721722, 0.499746972, 0.509772833, 0.519797917, 0.529823486, 0.539848667, 0.549874194, 0.559898194, 0.569922806, 0.5799465, 0.589971639, 0.599995861, 0.610021694, 0.620045431, 0.630070778, 0.640095833, 0.650119556, 0.660144486, 0.670169556, 0.6801945, 0.690218611, 0.700243611, 0.710268542, 0.720292792, 0.730318597, 0.740344167, 0.750370792, 0.760395014, 0.770420542, 0.780445653, 0.790470875, 0.800495306, 0.810521097, 0.820546764, 0.830570889, 0.840594931, 0.850617653, 0.860640583, 0.870664, 0.880687972, 0.890711931, 0.90073575, 0.910759542, 0.920782028, 0.930806347, 0.940830153, 0.950854972, 0.960879944, 0.970904514, 0.980927778, 0.990951861, 1.000976875, 1.011002611, 1.021026986, 1.031051639, 1.041076375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:33.575" endtime="20201112 10:17:33.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.563" endtime="20201112 10:17:33.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:33.585" endtime="20201112 10:17:33.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:33.594" endtime="20201112 10:17:33.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.589" endtime="20201112 10:17:33.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.581" endtime="20201112 10:17:33.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:30.873" endtime="20201112 10:17:33.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.377" endtime="20201112 10:17:33.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:25.375" endtime="20201112 10:17:33.620"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:33.625" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:33.646" endtime="20201112 10:17:35.771"></status>
</kw>
<msg timestamp="20201112 10:17:35.772" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41806518, 'wakeups': [41816730, 41826728, 41836728, 41846728, 41856728...</msg>
<status status="PASS" starttime="20201112 10:17:33.642" endtime="20201112 10:17:35.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.779" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41806518, 'wakeups': [41816730, 41826728, 41836728, 41846728, 41856728...</msg>
<status status="PASS" starttime="20201112 10:17:35.774" endtime="20201112 10:17:35.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.781" endtime="20201112 10:17:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.635" endtime="20201112 10:17:35.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.630" endtime="20201112 10:17:35.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:35.794" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 41806518, 'timer-interval': 10000, 'wakeups': [41816730, 41826728, 41836728, 41846728, 41856728, 41866729, 41876728, 41886728, 41896728, 41906729, 41916729, 41926728, ...</msg>
<status status="PASS" starttime="20201112 10:17:35.789" endtime="20201112 10:17:35.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.804" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:35.802" endtime="20201112 10:17:35.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.809" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:35.807" endtime="20201112 10:17:35.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.795" endtime="20201112 10:17:35.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.821" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:35.819" endtime="20201112 10:17:35.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.825" level="INFO">VALUE: 41806518</msg>
<status status="PASS" starttime="20201112 10:17:35.823" endtime="20201112 10:17:35.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.812" endtime="20201112 10:17:35.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.839" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:35.837" endtime="20201112 10:17:35.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.844" level="INFO">VALUE: [41816730, 41826728, 41836728, 41846728, 41856728, 41866729, 41876728, 41886728, 41896728, 41906729, 41916729, 41926728, 41936728, 41946728, 41956729, 41966728, 41976728, 41986728, 41996728, 42006729, 42016729, 42026729, 42036729, 42046728, 42056728, 42066729, 42076728, 42086729, 42096729, 42106729, 42116729, 42126728, 42136729, 42146729, 42156728, 42166728, 42176729, 42186729, 42196728, 42206729, 42216728, 42226729, 42236729, 42246729, 42256729, 42266729, 42276728, 42286729, 42296728, 42306729, 42316728, 42326729, 42336729, 42346729, 42356729, 42366729, 42376728, 42386728, 42396729, 42406728, 42416728, 42426729, 42436728, 42446729, 42456728, 42466729, 42476729, 42486729, 42496728, 42506729, 42516728, 42526728, 42536729, 42546729, 42556728, 42566729, 42576729, 42586728, 42596729, 42606728, 42616728, 42626729, 42636728, 42646729, 42656729, 42666729, 42676729, 42686729, 42696729, 42706728, 42716728, 42726729, 42736729, 42746729, 42756729, 42766729, 42776728, 42786728, 42796728, 42806729]</msg>
<status status="PASS" starttime="20201112 10:17:35.842" endtime="20201112 10:17:35.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.829" endtime="20201112 10:17:35.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.863" endtime="20201112 10:17:36.216"></status>
</kw>
<msg timestamp="20201112 10:17:36.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042949625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053187903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:35.859" endtime="20201112 10:17:36.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042949625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053187903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:36.225" endtime="20201112 10:17:36.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.242" endtime="20201112 10:17:36.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.852" endtime="20201112 10:17:36.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.848" endtime="20201112 10:17:36.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:36.302" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:36.250" endtime="20201112 10:17:36.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.313" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:36.311" endtime="20201112 10:17:36.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.317" level="INFO">VALUE: 0.042949625</msg>
<status status="PASS" starttime="20201112 10:17:36.315" endtime="20201112 10:17:36.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.304" endtime="20201112 10:17:36.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.330" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:36.328" endtime="20201112 10:17:36.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.335" level="INFO">VALUE: [0.053187903, 0.063211569, 0.073237903, 0.083264097, 0.093291264, 0.103318958, 0.113344153, 0.123370458, 0.1333965, 0.143423208, 0.153450028, 0.163473417, 0.173497417, 0.183520486, 0.193545514, 0.203568, 0.213592389, 0.223616917, 0.233641722, 0.243666056, 0.253689167, 0.263712819, 0.273736625, 0.283758778, 0.293782153, 0.303806778, 0.313829208, 0.323853347, 0.333877722, 0.343900667, 0.353923597, 0.363945569, 0.373969333, 0.383992389, 0.394015375, 0.404038764, 0.41406375, 0.424087042, 0.434108514, 0.444130875, 0.454153347, 0.464177319, 0.474201014, 0.484224472, 0.494247444, 0.50427025, 0.514293819, 0.524316556, 0.534340014, 0.544365056, 0.5543875, 0.564413069, 0.574437708, 0.584461681, 0.594485792, 0.604508569, 0.614531125, 0.624554736, 0.634580153, 0.644602667, 0.654628, 0.664653833, 0.674676944, 0.684700861, 0.694723486, 0.704747736, 0.714772458, 0.724795764, 0.734819292, 0.744844792, 0.754867847, 0.764891708, 0.774916236, 0.784939264, 0.794961444, 0.804984417, 0.815006694, 0.825028694, 0.835053944, 0.845075667, 0.855098583, 0.86512225, 0.875144361, 0.885167875, 0.895190806, 0.905213792, 0.915236847, 0.925259042, 0.935281917, 0.945302361, 0.955325583, 0.965350014, 0.975373153, 0.985395153, 0.995417847, 1.005440667, 1.015463125, 1.025484972, 1.035507847, 1.045531319] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:36.333" endtime="20201112 10:17:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.321" endtime="20201112 10:17:36.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.344" endtime="20201112 10:17:36.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:36.354" endtime="20201112 10:17:36.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.348" endtime="20201112 10:17:36.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.340" endtime="20201112 10:17:36.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.627" endtime="20201112 10:17:36.380"></status>
</kw>
<msg timestamp="20201112 10:17:36.380" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.401" endtime="20201112 10:17:38.525"></status>
</kw>
<msg timestamp="20201112 10:17:38.526" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44554978, 'wakeups': [44565190, 44575189, 44585189, 44595188, 44605188...</msg>
<status status="PASS" starttime="20201112 10:17:36.397" endtime="20201112 10:17:38.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.533" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44554978, 'wakeups': [44565190, 44575189, 44585189, 44595188, 44605188...</msg>
<status status="PASS" starttime="20201112 10:17:38.529" endtime="20201112 10:17:38.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.535" endtime="20201112 10:17:38.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.390" endtime="20201112 10:17:38.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.385" endtime="20201112 10:17:38.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:38.548" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 44554978, 'timer-interval': 10000, 'wakeups': [44565190, 44575189, 44585189, 44595188, 44605188, 44615188, 44625188, 44635189, 44645188, 44655189, 44665189, 44675189, ...</msg>
<status status="PASS" starttime="20201112 10:17:38.544" endtime="20201112 10:17:38.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.558" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:38.556" endtime="20201112 10:17:38.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.562" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:38.560" endtime="20201112 10:17:38.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.550" endtime="20201112 10:17:38.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.574" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:38.572" endtime="20201112 10:17:38.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.579" level="INFO">VALUE: 44554978</msg>
<status status="PASS" starttime="20201112 10:17:38.577" endtime="20201112 10:17:38.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.566" endtime="20201112 10:17:38.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.591" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:38.589" endtime="20201112 10:17:38.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.595" level="INFO">VALUE: [44565190, 44575189, 44585189, 44595188, 44605188, 44615188, 44625188, 44635189, 44645188, 44655189, 44665189, 44675189, 44685189, 44695189, 44705188, 44715189, 44725188, 44735189, 44745189, 44755189, 44765188, 44775189, 44785188, 44795188, 44805189, 44815189, 44825188, 44835188, 44845188, 44855189, 44865188, 44875189, 44885189, 44895189, 44905188, 44915189, 44925189, 44935189, 44945189, 44955189, 44965189, 44975188, 44985189, 44995189, 45005189, 45015189, 45025188, 45035189, 45045189, 45055189, 45065188, 45075189, 45085189, 45095189, 45105188, 45115189, 45125188, 45135189, 45145189, 45155189, 45165188, 45175189, 45185189, 45195189, 45205188, 45215189, 45225188, 45235189, 45245188, 45255189, 45265188, 45275188, 45285189, 45295188, 45305189, 45315188, 45325189, 45335189, 45345189, 45355189, 45365188, 45375189, 45385189, 45395188, 45405188, 45415189, 45425189, 45435189, 45445188, 45455188, 45465188, 45475188, 45485189, 45495188, 45505188, 45515189, 45525189, 45535189, 45545189, 45555189]</msg>
<status status="PASS" starttime="20201112 10:17:38.593" endtime="20201112 10:17:38.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.582" endtime="20201112 10:17:38.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.619" endtime="20201112 10:17:38.962"></status>
</kw>
<msg timestamp="20201112 10:17:38.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037285931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047523194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:38.615" endtime="20201112 10:17:38.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037285931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047523194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:38.970" endtime="20201112 10:17:38.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.987" endtime="20201112 10:17:38.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.608" endtime="20201112 10:17:38.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.599" endtime="20201112 10:17:38.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:39.051" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:38.997" endtime="20201112 10:17:39.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:39.061" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:39.059" endtime="20201112 10:17:39.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:39.066" level="INFO">VALUE: 0.037285931</msg>
<status status="PASS" starttime="20201112 10:17:39.063" endtime="20201112 10:17:39.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.053" endtime="20201112 10:17:39.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:39.079" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:39.076" endtime="20201112 10:17:39.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:39.083" level="INFO">VALUE: [0.047523194, 0.057545667, 0.067569042, 0.077591375, 0.087615333, 0.097638556, 0.107662931, 0.117687208, 0.127708542, 0.137730889, 0.147753375, 0.157776083, 0.167799764, 0.177821889, 0.187844778, 0.197868431, 0.207890833, 0.217916167, 0.227940764, 0.237964833, 0.247989069, 0.258014556, 0.268039181, 0.278064681, 0.288089847, 0.2981155, 0.308140875, 0.318166653, 0.328192639, 0.338218375, 0.348242236, 0.358267139, 0.368291833, 0.378316167, 0.388339736, 0.398365028, 0.408389917, 0.418413722, 0.428436806, 0.438458625, 0.448481125, 0.458502514, 0.468526542, 0.478549222, 0.488573083, 0.498596778, 0.508620444, 0.518645278, 0.528670139, 0.538694611, 0.548717958, 0.558744222, 0.568770556, 0.578795611, 0.588820014, 0.598845792, 0.608869528, 0.618895153, 0.628920806, 0.638945847, 0.648970736, 0.658996417, 0.669020958, 0.679045472, 0.689069111, 0.69909325, 0.709114944, 0.719138486, 0.729161042, 0.739184764, 0.749207167, 0.759229917, 0.769254111, 0.779276292, 0.789302042, 0.799324903, 0.809350056, 0.819373042, 0.829395403, 0.839417125, 0.849438889, 0.859462028, 0.869483972, 0.879505375, 0.889529375, 0.899555056, 0.909578375, 0.91960175, 0.929624778, 0.93964775, 0.949670472, 0.959693083, 0.969717139, 0.979739347, 0.989762333, 0.999785694, 1.009810097, 1.019834444, 1.029858681, 1.039881542] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:39.081" endtime="20201112 10:17:39.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.069" endtime="20201112 10:17:39.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:39.092" endtime="20201112 10:17:39.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:39.100" endtime="20201112 10:17:39.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.096" endtime="20201112 10:17:39.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.087" endtime="20201112 10:17:39.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.381" endtime="20201112 10:17:39.125"></status>
</kw>
<msg timestamp="20201112 10:17:39.126" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:39.146" endtime="20201112 10:17:41.271"></status>
</kw>
<msg timestamp="20201112 10:17:41.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47294728, 'wakeups': [47304940, 47314939, 47324939, 47334939, 47344939...</msg>
<status status="PASS" starttime="20201112 10:17:39.143" endtime="20201112 10:17:41.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47294728, 'wakeups': [47304940, 47314939, 47324939, 47334939, 47344939...</msg>
<status status="PASS" starttime="20201112 10:17:41.276" endtime="20201112 10:17:41.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:41.282" endtime="20201112 10:17:41.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.136" endtime="20201112 10:17:41.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.131" endtime="20201112 10:17:41.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:41.297" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 47294728, 'timer-interval': 10000, 'wakeups': [47304940, 47314939, 47324939, 47334939, 47344939, 47354939, 47364938, 47374938, 47384939, 47394939, 47404939, 47414938, ...</msg>
<status status="PASS" starttime="20201112 10:17:41.291" endtime="20201112 10:17:41.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:41.305" endtime="20201112 10:17:41.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.311" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:41.309" endtime="20201112 10:17:41.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.299" endtime="20201112 10:17:41.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.323" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:41.321" endtime="20201112 10:17:41.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.328" level="INFO">VALUE: 47294728</msg>
<status status="PASS" starttime="20201112 10:17:41.326" endtime="20201112 10:17:41.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.315" endtime="20201112 10:17:41.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.340" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:41.338" endtime="20201112 10:17:41.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.344" level="INFO">VALUE: [47304940, 47314939, 47324939, 47334939, 47344939, 47354939, 47364938, 47374938, 47384939, 47394939, 47404939, 47414938, 47424938, 47434939, 47444938, 47454939, 47464938, 47474938, 47484939, 47494939, 47504938, 47514939, 47524938, 47534939, 47544938, 47554938, 47564938, 47574938, 47584938, 47594938, 47604939, 47614939, 47624938, 47634939, 47644939, 47654938, 47664939, 47674939, 47684938, 47694938, 47704938, 47714939, 47724939, 47734939, 47744939, 47754938, 47764938, 47774939, 47784938, 47794939, 47804939, 47814939, 47824938, 47834938, 47844938, 47854939, 47864939, 47874939, 47884938, 47894939, 47904939, 47914939, 47924938, 47934938, 47944938, 47954939, 47964939, 47974939, 47984938, 47994938, 48004938, 48014938, 48024939, 48034939, 48044938, 48054938, 48064938, 48074939, 48084938, 48094939, 48104938, 48114938, 48124938, 48134939, 48144939, 48154939, 48164938, 48174938, 48184938, 48194939, 48204938, 48214938, 48224939, 48234939, 48244939, 48254939, 48264939, 48274938, 48284939, 48294938]</msg>
<status status="PASS" starttime="20201112 10:17:41.342" endtime="20201112 10:17:41.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.331" endtime="20201112 10:17:41.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:41.363" endtime="20201112 10:17:41.703"></status>
</kw>
<msg timestamp="20201112 10:17:41.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04731275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:41.360" endtime="20201112 10:17:41.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04731275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:41.712" endtime="20201112 10:17:41.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:41.729" endtime="20201112 10:17:41.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.353" endtime="20201112 10:17:41.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.348" endtime="20201112 10:17:41.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:41.791" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:41.737" endtime="20201112 10:17:41.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.802" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:41.799" endtime="20201112 10:17:41.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.806" level="INFO">VALUE: 0.037075292</msg>
<status status="PASS" starttime="20201112 10:17:41.804" endtime="20201112 10:17:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.793" endtime="20201112 10:17:41.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.819" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:41.817" endtime="20201112 10:17:41.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:41.824" level="INFO">VALUE: [0.04731275, 0.057335278, 0.067358278, 0.077382111, 0.087406903, 0.097431625, 0.107454847, 0.117478569, 0.127503028, 0.137526472, 0.147550958, 0.157574778, 0.167599028, 0.177624486, 0.187648014, 0.197673486, 0.207696292, 0.217719778, 0.227745611, 0.237769194, 0.247792222, 0.257816958, 0.267840625, 0.277866667, 0.287891667, 0.297915944, 0.307940361, 0.317964306, 0.327988417, 0.338013111, 0.348039306, 0.358064375, 0.368087972, 0.378115736, 0.388142042, 0.398166931, 0.408195306, 0.418222597, 0.428248958, 0.438274347, 0.448299889, 0.458325319, 0.46835, 0.478374153, 0.488398583, 0.498421194, 0.508444472, 0.518470083, 0.528493014, 0.538519569, 0.548544917, 0.558568903, 0.568592472, 0.578616806, 0.588640917, 0.598665264, 0.608689903, 0.618714264, 0.628738333, 0.638763875, 0.648788292, 0.658812361, 0.66883625, 0.678860306, 0.688883639, 0.698907431, 0.708932653, 0.718957778, 0.728981986, 0.739005917, 0.74902975, 0.759054167, 0.769079514, 0.779102278, 0.789124639, 0.799149153, 0.80917275, 0.819198375, 0.829221708, 0.839246583, 0.849270639, 0.859295583, 0.869320167, 0.879344917, 0.889370444, 0.899395611, 0.909419514, 0.919444236, 0.929469986, 0.939495958, 0.949520528, 0.959545347, 0.969571722, 0.979596014, 0.989621778, 0.999646625, 1.009672819, 1.019697819, 1.029724472, 1.039748389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:41.821" endtime="20201112 10:17:41.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.810" endtime="20201112 10:17:41.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:41.832" endtime="20201112 10:17:41.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:41.840" endtime="20201112 10:17:41.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.836" endtime="20201112 10:17:41.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.828" endtime="20201112 10:17:41.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:39.127" endtime="20201112 10:17:41.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.622" endtime="20201112 10:17:41.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:33.621" endtime="20201112 10:17:41.867"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:41.872" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:41.893" endtime="20201112 10:17:44.017"></status>
</kw>
<msg timestamp="20201112 10:17:44.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50034463, 'wakeups': [50044712, 50054714, 50064714, 50074713, 50084714...</msg>
<status status="PASS" starttime="20201112 10:17:41.889" endtime="20201112 10:17:44.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50034463, 'wakeups': [50044712, 50054714, 50064714, 50074713, 50084714...</msg>
<status status="PASS" starttime="20201112 10:17:44.021" endtime="20201112 10:17:44.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:44.028" endtime="20201112 10:17:44.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.882" endtime="20201112 10:17:44.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.877" endtime="20201112 10:17:44.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:44.040" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 50034463, 'timer-interval': 10000, 'wakeups': [50044712, 50054714, 50064714, 50074713, 50084714, 50094714, 50104714, 50114714, 50124714, 50134714, 50144714, 50154714, ...</msg>
<status status="PASS" starttime="20201112 10:17:44.036" endtime="20201112 10:17:44.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.051" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:44.049" endtime="20201112 10:17:44.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.056" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:44.054" endtime="20201112 10:17:44.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.043" endtime="20201112 10:17:44.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.068" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:44.066" endtime="20201112 10:17:44.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.072" level="INFO">VALUE: 50034463</msg>
<status status="PASS" starttime="20201112 10:17:44.070" endtime="20201112 10:17:44.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.059" endtime="20201112 10:17:44.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.084" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:44.082" endtime="20201112 10:17:44.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.089" level="INFO">VALUE: [50044712, 50054714, 50064714, 50074713, 50084714, 50094714, 50104714, 50114714, 50124714, 50134714, 50144714, 50154714, 50164714, 50174714, 50184714, 50194714, 50204713, 50214714, 50224714, 50234714, 50244714, 50254714, 50264714, 50274714, 50284714, 50294713, 50304714, 50314714, 50324714, 50334714, 50344714, 50354713, 50364714, 50374714, 50384714, 50394714, 50404714, 50414714, 50424714, 50434714, 50444714, 50454714, 50464714, 50474714, 50484714, 50494714, 50504714, 50514714, 50524714, 50534714, 50544714, 50554714, 50564714, 50574714, 50584714, 50594714, 50604714, 50614713, 50624714, 50634714, 50644714, 50654714, 50664714, 50674714, 50684714, 50694714, 50704714, 50714714, 50724713, 50734714, 50744714, 50754714, 50764714, 50774713, 50784714, 50794714, 50804714, 50814714, 50824713, 50834714, 50844714, 50854713, 50864714, 50874714, 50884714, 50894714, 50904714, 50914714, 50924714, 50934714, 50944714, 50954714, 50964714, 50974714, 50984714, 50994713, 51004714, 51014714, 51024713, 51034713]</msg>
<status status="PASS" starttime="20201112 10:17:44.087" endtime="20201112 10:17:44.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.076" endtime="20201112 10:17:44.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:44.110" endtime="20201112 10:17:44.452"></status>
</kw>
<msg timestamp="20201112 10:17:44.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043002458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053276292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:44.106" endtime="20201112 10:17:44.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043002458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053276292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:44.460" endtime="20201112 10:17:44.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:44.477" endtime="20201112 10:17:44.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.097" endtime="20201112 10:17:44.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.093" endtime="20201112 10:17:44.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:44.538" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:44.485" endtime="20201112 10:17:44.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.548" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:44.546" endtime="20201112 10:17:44.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.553" level="INFO">VALUE: 0.043002458</msg>
<status status="PASS" starttime="20201112 10:17:44.551" endtime="20201112 10:17:44.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.540" endtime="20201112 10:17:44.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.566" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:44.564" endtime="20201112 10:17:44.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:44.571" level="INFO">VALUE: [0.053276292, 0.063302208, 0.073325556, 0.083346361, 0.093369167, 0.103391333, 0.113414611, 0.123437694, 0.133461111, 0.143485764, 0.153511042, 0.163534903, 0.173558972, 0.183583361, 0.193608111, 0.203631931, 0.213654736, 0.223679986, 0.233704431, 0.243727444, 0.253750917, 0.263774958, 0.273798708, 0.283822597, 0.293846264, 0.303868875, 0.313894333, 0.323918639, 0.333942972, 0.343968083, 0.353991833, 0.364015667, 0.374041389, 0.384065347, 0.394088847, 0.404112611, 0.414135542, 0.424158514, 0.434183139, 0.444207514, 0.454232792, 0.464256694, 0.474278667, 0.484301153, 0.494326403, 0.504350778, 0.514376681, 0.524400528, 0.534425125, 0.544450306, 0.554474764, 0.564499153, 0.574523819, 0.584547528, 0.594571611, 0.604595542, 0.614620667, 0.624644528, 0.634669917, 0.644693417, 0.654717667, 0.664741014, 0.674763514, 0.684786417, 0.694809069, 0.704831083, 0.714854694, 0.724878444, 0.734902181, 0.744926806, 0.754950653, 0.764973847, 0.774998389, 0.785021931, 0.795047556, 0.805072153, 0.815097181, 0.825121528, 0.835144653, 0.845169583, 0.855193042, 0.865216875, 0.875243944, 0.885268875, 0.895291931, 0.905316208, 0.915341611, 0.925366681, 0.935390292, 0.945413819, 0.955438236, 0.965461847, 0.975486486, 0.985510542, 0.995534597, 1.005558028, 1.015583306, 1.025607611, 1.035631306, 1.045655389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:44.569" endtime="20201112 10:17:44.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.556" endtime="20201112 10:17:44.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:44.580" endtime="20201112 10:17:44.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:44.588" endtime="20201112 10:17:44.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.583" endtime="20201112 10:17:44.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.575" endtime="20201112 10:17:44.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.873" endtime="20201112 10:17:44.613"></status>
</kw>
<msg timestamp="20201112 10:17:44.614" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:44.636" endtime="20201112 10:17:46.761"></status>
</kw>
<msg timestamp="20201112 10:17:46.762" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52771480, 'wakeups': [52781731, 52791731, 52801731, 52811730, 52821731...</msg>
<status status="PASS" starttime="20201112 10:17:44.632" endtime="20201112 10:17:46.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52771480, 'wakeups': [52781731, 52791731, 52801731, 52811730, 52821731...</msg>
<status status="PASS" starttime="20201112 10:17:46.764" endtime="20201112 10:17:46.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:46.771" endtime="20201112 10:17:46.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.624" endtime="20201112 10:17:46.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.619" endtime="20201112 10:17:46.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:46.784" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 52771480, 'timer-interval': 10000, 'wakeups': [52781731, 52791731, 52801731, 52811730, 52821731, 52831730, 52841731, 52851731, 52861731, 52871731, 52881731, 52891731, ...</msg>
<status status="PASS" starttime="20201112 10:17:46.779" endtime="20201112 10:17:46.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.794" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:46.791" endtime="20201112 10:17:46.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.798" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:46.796" endtime="20201112 10:17:46.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.785" endtime="20201112 10:17:46.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.810" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:46.808" endtime="20201112 10:17:46.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.814" level="INFO">VALUE: 52771480</msg>
<status status="PASS" starttime="20201112 10:17:46.812" endtime="20201112 10:17:46.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.801" endtime="20201112 10:17:46.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.826" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:46.824" endtime="20201112 10:17:46.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.832" level="INFO">VALUE: [52781731, 52791731, 52801731, 52811730, 52821731, 52831730, 52841731, 52851731, 52861731, 52871731, 52881731, 52891731, 52901731, 52911731, 52921731, 52931731, 52941731, 52951731, 52961731, 52971730, 52981731, 52991730, 53001731, 53011731, 53021731, 53031731, 53041731, 53051731, 53061730, 53071731, 53081731, 53091731, 53101730, 53111731, 53121731, 53131730, 53141731, 53151731, 53161731, 53171731, 53181731, 53191731, 53201731, 53211731, 53221731, 53231731, 53241731, 53251731, 53261731, 53271731, 53281731, 53291731, 53301731, 53311730, 53321731, 53331731, 53341731, 53351731, 53361731, 53371730, 53381731, 53391731, 53401731, 53411731, 53421731, 53431730, 53441731, 53451730, 53461731, 53471730, 53481731, 53491731, 53501731, 53511731, 53521731, 53531731, 53541731, 53551731, 53561731, 53571731, 53581731, 53591731, 53601731, 53611731, 53621731, 53631730, 53641731, 53651731, 53661731, 53671731, 53681731, 53691730, 53701731, 53711731, 53721730, 53731731, 53741731, 53751731, 53761731, 53771730]</msg>
<status status="PASS" starttime="20201112 10:17:46.829" endtime="20201112 10:17:46.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.818" endtime="20201112 10:17:46.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:46.850" endtime="20201112 10:17:47.197"></status>
</kw>
<msg timestamp="20201112 10:17:47.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038640097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:46.847" endtime="20201112 10:17:47.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:47.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038640097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:47.206" endtime="20201112 10:17:47.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:47.223" endtime="20201112 10:17:47.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.840" endtime="20201112 10:17:47.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.836" endtime="20201112 10:17:47.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:47.285" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:47.231" endtime="20201112 10:17:47.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:47.295" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:47.293" endtime="20201112 10:17:47.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:47.300" level="INFO">VALUE: 0.038640097</msg>
<status status="PASS" starttime="20201112 10:17:47.298" endtime="20201112 10:17:47.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.287" endtime="20201112 10:17:47.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:47.313" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:47.311" endtime="20201112 10:17:47.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:47.317" level="INFO">VALUE: [0.048912861, 0.058935125, 0.068958375, 0.078978861, 0.089001792, 0.099023472, 0.109047542, 0.119069819, 0.129092764, 0.139116042, 0.149139139, 0.159162472, 0.169185819, 0.179209681, 0.189234014, 0.199258292, 0.209282181, 0.219305944, 0.229329528, 0.239351111, 0.249374653, 0.259395486, 0.269420111, 0.279442806, 0.289465208, 0.299487847, 0.309511764, 0.319534333, 0.329556722, 0.339580681, 0.349602833, 0.359625361, 0.369648375, 0.379673278, 0.389697611, 0.399720681, 0.409746778, 0.419770847, 0.429795694, 0.439820528, 0.449843861, 0.459865903, 0.469888667, 0.479911069, 0.489933986, 0.499957819, 0.509980111, 0.520002556, 0.53002625, 0.540049139, 0.550072208, 0.560094653, 0.570117125, 0.580137944, 0.590161, 0.600182889, 0.610204778, 0.620226958, 0.630249111, 0.640268431, 0.650291389, 0.660312264, 0.670333875, 0.680354597, 0.690377097, 0.700398486, 0.710422347, 0.720442375, 0.730465944, 0.740487292, 0.750510569, 0.760531972, 0.770553514, 0.780574625, 0.790596694, 0.800618125, 0.810639486, 0.820659375, 0.830681097, 0.840702792, 0.850725139, 0.860746972, 0.870769514, 0.880791292, 0.890813139, 0.900833111, 0.910855653, 0.920877403, 0.93089975, 0.940922347, 0.950944417, 0.960964944, 0.970989236, 0.981012181, 0.991032847, 1.001056139, 1.011079764, 1.021102694, 1.031125139, 1.041145736] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:47.315" endtime="20201112 10:17:47.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.303" endtime="20201112 10:17:47.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:47.326" endtime="20201112 10:17:47.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:47.334" endtime="20201112 10:17:47.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.330" endtime="20201112 10:17:47.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.322" endtime="20201112 10:17:47.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:44.615" endtime="20201112 10:17:47.360"></status>
</kw>
<msg timestamp="20201112 10:17:47.361" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:47.381" endtime="20201112 10:17:49.506"></status>
</kw>
<msg timestamp="20201112 10:17:49.508" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55511389, 'wakeups': [55521638, 55531640, 55541640, 55551640, 55561640...</msg>
<status status="PASS" starttime="20201112 10:17:47.378" endtime="20201112 10:17:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.514" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55511389, 'wakeups': [55521638, 55531640, 55541640, 55551640, 55561640...</msg>
<status status="PASS" starttime="20201112 10:17:49.510" endtime="20201112 10:17:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:49.516" endtime="20201112 10:17:49.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.371" endtime="20201112 10:17:49.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.366" endtime="20201112 10:17:49.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:49.529" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 55511389, 'timer-interval': 10000, 'wakeups': [55521638, 55531640, 55541640, 55551640, 55561640, 55571640, 55581640, 55591640, 55601640, 55611639, 55621640, 55631640, ...</msg>
<status status="PASS" starttime="20201112 10:17:49.525" endtime="20201112 10:17:49.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.539" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:49.537" endtime="20201112 10:17:49.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.544" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:49.541" endtime="20201112 10:17:49.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:49.531" endtime="20201112 10:17:49.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.555" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:49.553" endtime="20201112 10:17:49.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.560" level="INFO">VALUE: 55511389</msg>
<status status="PASS" starttime="20201112 10:17:49.558" endtime="20201112 10:17:49.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:49.547" endtime="20201112 10:17:49.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.572" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:49.570" endtime="20201112 10:17:49.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.577" level="INFO">VALUE: [55521638, 55531640, 55541640, 55551640, 55561640, 55571640, 55581640, 55591640, 55601640, 55611639, 55621640, 55631640, 55641640, 55651640, 55661640, 55671640, 55681640, 55691640, 55701639, 55711640, 55721640, 55731639, 55741639, 55751639, 55761640, 55771640, 55781640, 55791639, 55801640, 55811640, 55821640, 55831640, 55841640, 55851639, 55861639, 55871639, 55881640, 55891640, 55901640, 55911640, 55921640, 55931640, 55941640, 55951640, 55961640, 55971640, 55981639, 55991640, 56001640, 56011640, 56021640, 56031640, 56041640, 56051640, 56061640, 56071640, 56081640, 56091640, 56101640, 56111640, 56121640, 56131640, 56141640, 56151639, 56161640, 56171640, 56181640, 56191640, 56201640, 56211640, 56221640, 56231640, 56241640, 56251640, 56261640, 56271639, 56281639, 56291640, 56301640, 56311640, 56321640, 56331640, 56341640, 56351640, 56361640, 56371639, 56381640, 56391640, 56401640, 56411640, 56421640, 56431640, 56441640, 56451640, 56461640, 56471640, 56481640, 56491640, 56501640, 56511639]</msg>
<status status="PASS" starttime="20201112 10:17:49.574" endtime="20201112 10:17:49.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:49.563" endtime="20201112 10:17:49.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:49.597" endtime="20201112 10:17:49.939"></status>
</kw>
<msg timestamp="20201112 10:17:49.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037824403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04809475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:49.594" endtime="20201112 10:17:49.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:49.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037824403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04809475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:49.949" endtime="20201112 10:17:49.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:49.966" endtime="20201112 10:17:49.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:49.587" endtime="20201112 10:17:49.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:49.580" endtime="20201112 10:17:49.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:50.027" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:49.974" endtime="20201112 10:17:50.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:50.038" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:50.036" endtime="20201112 10:17:50.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:50.042" level="INFO">VALUE: 0.037824403</msg>
<status status="PASS" starttime="20201112 10:17:50.040" endtime="20201112 10:17:50.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.029" endtime="20201112 10:17:50.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:50.055" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:50.053" endtime="20201112 10:17:50.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:50.060" level="INFO">VALUE: [0.04809475, 0.058117208, 0.0681385, 0.078158556, 0.088177833, 0.098197236, 0.108217264, 0.118236681, 0.128257514, 0.138277292, 0.148300306, 0.158321653, 0.168342639, 0.178364333, 0.188386778, 0.198409389, 0.208433042, 0.218455653, 0.228477278, 0.238500194, 0.248522694, 0.258543056, 0.268565014, 0.278586583, 0.288608292, 0.298629431, 0.308650389, 0.318670028, 0.328693111, 0.338712833, 0.348735278, 0.358757972, 0.368780208, 0.378801208, 0.388822792, 0.398844347, 0.408867486, 0.418888736, 0.428909694, 0.438930667, 0.448951903, 0.458973903, 0.4689955, 0.479016875, 0.489039028, 0.499060194, 0.509080236, 0.519102042, 0.529122694, 0.539143389, 0.549165111, 0.5591865, 0.569208319, 0.579229431, 0.589250833, 0.599271333, 0.609292333, 0.619312389, 0.6293325, 0.639351903, 0.649373056, 0.659393514, 0.669414458, 0.679435236, 0.689458389, 0.699480375, 0.709503542, 0.719526, 0.729549514, 0.739571542, 0.749595431, 0.759618306, 0.769639653, 0.779660097, 0.789681542, 0.799701236, 0.809721319, 0.819743028, 0.829765069, 0.839786708, 0.849808125, 0.859829097, 0.869850361, 0.879871167, 0.889892486, 0.89991225, 0.909934556, 0.919954917, 0.929977264, 0.939998167, 0.950019153, 0.960040625, 0.970061708, 0.980082986, 0.990103167, 1.000124444, 1.010145389, 1.020165417, 1.030186694, 1.040206875] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:50.058" endtime="20201112 10:17:50.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.046" endtime="20201112 10:17:50.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:50.068" endtime="20201112 10:17:50.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:50.076" endtime="20201112 10:17:50.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.072" endtime="20201112 10:17:50.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.064" endtime="20201112 10:17:50.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:47.362" endtime="20201112 10:17:50.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.869" endtime="20201112 10:17:50.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:41.868" endtime="20201112 10:17:50.103"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:50.108" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:50.130" endtime="20201112 10:17:52.255"></status>
</kw>
<msg timestamp="20201112 10:17:52.257" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58254787, 'wakeups': [58265078, 58275079, 58285079, 58295079, 58305079...</msg>
<status status="PASS" starttime="20201112 10:17:50.127" endtime="20201112 10:17:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58254787, 'wakeups': [58265078, 58275079, 58285079, 58295079, 58305079...</msg>
<status status="PASS" starttime="20201112 10:17:52.259" endtime="20201112 10:17:52.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:52.266" endtime="20201112 10:17:52.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.118" endtime="20201112 10:17:52.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.113" endtime="20201112 10:17:52.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:52.279" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 58254787, 'timer-interval': 10000, 'wakeups': [58265078, 58275079, 58285079, 58295079, 58305079, 58315079, 58325079, 58335079, 58345079, 58355079, 58365079, 58375079, ...</msg>
<status status="PASS" starttime="20201112 10:17:52.275" endtime="20201112 10:17:52.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.289" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:52.287" endtime="20201112 10:17:52.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.293" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:52.291" endtime="20201112 10:17:52.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.281" endtime="20201112 10:17:52.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.305" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:52.303" endtime="20201112 10:17:52.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.310" level="INFO">VALUE: 58254787</msg>
<status status="PASS" starttime="20201112 10:17:52.308" endtime="20201112 10:17:52.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.297" endtime="20201112 10:17:52.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.322" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:52.320" endtime="20201112 10:17:52.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.327" level="INFO">VALUE: [58265078, 58275079, 58285079, 58295079, 58305079, 58315079, 58325079, 58335079, 58345079, 58355079, 58365079, 58375079, 58385079, 58395079, 58405079, 58415079, 58425079, 58435079, 58445079, 58455079, 58465079, 58475079, 58485079, 58495079, 58505079, 58515079, 58525079, 58535079, 58545079, 58555079, 58565079, 58575079, 58585079, 58595079, 58605079, 58615079, 58625079, 58635079, 58645079, 58655079, 58665079, 58675079, 58685079, 58695079, 58705079, 58715079, 58725079, 58735079, 58745079, 58755079, 58765079, 58775079, 58785079, 58795079, 58805079, 58815079, 58825079, 58835079, 58845079, 58855079, 58865079, 58875079, 58885079, 58895079, 58905079, 58915079, 58925079, 58935079, 58945079, 58955079, 58965079, 58975079, 58985078, 58995079, 59005079, 59015079, 59025079, 59035079, 59045079, 59055079, 59065079, 59075079, 59085079, 59095079, 59105079, 59115079, 59125079, 59135079, 59145079, 59155079, 59165079, 59175079, 59185079, 59195079, 59205079, 59215079, 59225079, 59235079, 59245079, 59255078]</msg>
<status status="PASS" starttime="20201112 10:17:52.324" endtime="20201112 10:17:52.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.313" endtime="20201112 10:17:52.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:52.345" endtime="20201112 10:17:52.687"></status>
</kw>
<msg timestamp="20201112 10:17:52.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044559556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054872361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:52.342" endtime="20201112 10:17:52.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044559556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054872361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:52.696" endtime="20201112 10:17:52.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:52.713" endtime="20201112 10:17:52.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.335" endtime="20201112 10:17:52.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.330" endtime="20201112 10:17:52.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:52.775" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:52.721" endtime="20201112 10:17:52.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.786" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:52.784" endtime="20201112 10:17:52.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.790" level="INFO">VALUE: 0.044559556</msg>
<status status="PASS" starttime="20201112 10:17:52.788" endtime="20201112 10:17:52.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.777" endtime="20201112 10:17:52.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.803" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:52.801" endtime="20201112 10:17:52.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:52.808" level="INFO">VALUE: [0.054872361, 0.064893986, 0.074915569, 0.084937472, 0.094959292, 0.104980764, 0.115003153, 0.125025458, 0.135047889, 0.145069958, 0.155093194, 0.165114708, 0.175137944, 0.185160431, 0.195183069, 0.205205222, 0.215227153, 0.225247958, 0.2352695, 0.245290764, 0.255313431, 0.265336806, 0.275359444, 0.285381486, 0.295404028, 0.305425361, 0.315446819, 0.325469597, 0.335491778, 0.345513833, 0.355536736, 0.365559056, 0.37558275, 0.385605431, 0.395628139, 0.405649458, 0.415671292, 0.425693069, 0.435714403, 0.445735681, 0.455757361, 0.465779097, 0.475800917, 0.48582225, 0.495843653, 0.505864833, 0.515886278, 0.525906194, 0.535926917, 0.545948, 0.5559695, 0.565989611, 0.576010958, 0.586033236, 0.596055875, 0.606078458, 0.616101486, 0.62612425, 0.636146917, 0.646169278, 0.656191708, 0.666214153, 0.676237083, 0.686259403, 0.696281194, 0.706301903, 0.716323944, 0.726344958, 0.736368333, 0.746390806, 0.756414472, 0.766437583, 0.776460208, 0.786484583, 0.796508833, 0.806531097, 0.816553667, 0.826577139, 0.836599472, 0.846622639, 0.856646264, 0.866670153, 0.876692847, 0.886715597, 0.896739208, 0.906762486, 0.916786014, 0.926808944, 0.936833306, 0.946856736, 0.956878222, 0.966901458, 0.9769255, 0.986949583, 0.996974042, 1.006998208, 1.01702175, 1.027044611, 1.037066625, 1.047089861] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:52.805" endtime="20201112 10:17:52.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.794" endtime="20201112 10:17:52.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:52.816" endtime="20201112 10:17:52.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:52.824" endtime="20201112 10:17:52.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.820" endtime="20201112 10:17:52.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.812" endtime="20201112 10:17:52.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.110" endtime="20201112 10:17:52.850"></status>
</kw>
<msg timestamp="20201112 10:17:52.850" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:52.871" endtime="20201112 10:17:54.995"></status>
</kw>
<msg timestamp="20201112 10:17:54.996" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60988910, 'wakeups': [60999202, 61009202, 61019202, 61029202, 61039202...</msg>
<status status="PASS" starttime="20201112 10:17:52.867" endtime="20201112 10:17:54.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60988910, 'wakeups': [60999202, 61009202, 61019202, 61029202, 61039202...</msg>
<status status="PASS" starttime="20201112 10:17:54.999" endtime="20201112 10:17:55.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:55.005" endtime="20201112 10:17:55.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.860" endtime="20201112 10:17:55.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.855" endtime="20201112 10:17:55.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:55.018" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 60988910, 'timer-interval': 10000, 'wakeups': [60999202, 61009202, 61019202, 61029202, 61039202, 61049202, 61059202, 61069202, 61079202, 61089202, 61099202, 61109202, ...</msg>
<status status="PASS" starttime="20201112 10:17:55.014" endtime="20201112 10:17:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.028" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:55.026" endtime="20201112 10:17:55.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.033" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:55.030" endtime="20201112 10:17:55.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.020" endtime="20201112 10:17:55.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.045" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:55.043" endtime="20201112 10:17:55.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.050" level="INFO">VALUE: 60988910</msg>
<status status="PASS" starttime="20201112 10:17:55.048" endtime="20201112 10:17:55.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.037" endtime="20201112 10:17:55.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.062" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:55.060" endtime="20201112 10:17:55.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.066" level="INFO">VALUE: [60999202, 61009202, 61019202, 61029202, 61039202, 61049202, 61059202, 61069202, 61079202, 61089202, 61099202, 61109202, 61119202, 61129202, 61139202, 61149202, 61159202, 61169202, 61179202, 61189202, 61199202, 61209202, 61219202, 61229202, 61239202, 61249202, 61259202, 61269202, 61279202, 61289202, 61299202, 61309202, 61319202, 61329202, 61339202, 61349202, 61359202, 61369202, 61379202, 61389202, 61399202, 61409202, 61419202, 61429202, 61439202, 61449202, 61459202, 61469202, 61479202, 61489202, 61499202, 61509202, 61519202, 61529202, 61539202, 61549202, 61559202, 61569202, 61579202, 61589202, 61599202, 61609202, 61619202, 61629202, 61639202, 61649202, 61659202, 61669202, 61679202, 61689202, 61699202, 61709202, 61719202, 61729202, 61739202, 61749202, 61759202, 61769202, 61779202, 61789202, 61799202, 61809202, 61819202, 61829202, 61839202, 61849202, 61859202, 61869202, 61879202, 61889202, 61899202, 61909202, 61919202, 61929202, 61939202, 61949202, 61959202, 61969202, 61979202, 61989202]</msg>
<status status="PASS" starttime="20201112 10:17:55.064" endtime="20201112 10:17:55.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.053" endtime="20201112 10:17:55.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:55.087" endtime="20201112 10:17:55.429"></status>
</kw>
<msg timestamp="20201112 10:17:55.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036936292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047251583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:55.084" endtime="20201112 10:17:55.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036936292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047251583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:55.437" endtime="20201112 10:17:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:55.454" endtime="20201112 10:17:55.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.077" endtime="20201112 10:17:55.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.070" endtime="20201112 10:17:55.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:55.515" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:55.463" endtime="20201112 10:17:55.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.526" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:55.523" endtime="20201112 10:17:55.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.530" level="INFO">VALUE: 0.036936292</msg>
<status status="PASS" starttime="20201112 10:17:55.528" endtime="20201112 10:17:55.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.517" endtime="20201112 10:17:55.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.544" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:55.542" endtime="20201112 10:17:55.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:55.549" level="INFO">VALUE: [0.047251583, 0.057273819, 0.067296736, 0.077319278, 0.087342625, 0.097367042, 0.107390097, 0.117412347, 0.127436389, 0.137459236, 0.147482528, 0.157505194, 0.167527889, 0.177550917, 0.187575278, 0.197598639, 0.207622847, 0.217645903, 0.227670333, 0.237693736, 0.247716194, 0.257738319, 0.267760861, 0.277783236, 0.287806597, 0.297830514, 0.307853819, 0.317876917, 0.327900097, 0.337923292, 0.347948, 0.357971361, 0.367994194, 0.378017125, 0.388042111, 0.398064708, 0.408088486, 0.418114, 0.428140625, 0.438166139, 0.448192125, 0.45821875, 0.468245514, 0.478269667, 0.488293431, 0.498317139, 0.508342458, 0.518367403, 0.528392347, 0.538416667, 0.548440167, 0.558462486, 0.568485403, 0.578509083, 0.588534083, 0.598558931, 0.608583486, 0.618607833, 0.628631514, 0.638654847, 0.648678319, 0.658702458, 0.668727306, 0.678751667, 0.688776181, 0.698800972, 0.708824569, 0.718848681, 0.728872778, 0.738896097, 0.748920028, 0.758944111, 0.768968444, 0.778991917, 0.789016167, 0.799039597, 0.809062069, 0.81908475, 0.829108236, 0.839130903, 0.849154375, 0.859176597, 0.869198306, 0.879221486, 0.889244278, 0.899267986, 0.909292167, 0.919315194, 0.929338597, 0.939362431, 0.949387292, 0.959410694, 0.969433833, 0.979457167, 0.989481486, 0.999506181, 1.009530375, 1.019554264, 1.029578417, 1.039601694] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:55.546" endtime="20201112 10:17:55.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.534" endtime="20201112 10:17:55.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:55.558" endtime="20201112 10:17:55.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:55.566" endtime="20201112 10:17:55.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.562" endtime="20201112 10:17:55.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.553" endtime="20201112 10:17:55.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:52.851" endtime="20201112 10:17:55.592"></status>
</kw>
<msg timestamp="20201112 10:17:55.592" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:55.615" endtime="20201112 10:17:57.740"></status>
</kw>
<msg timestamp="20201112 10:17:57.742" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63727595, 'wakeups': [63737887, 63747887, 63757887, 63767887, 63777887...</msg>
<status status="PASS" starttime="20201112 10:17:55.612" endtime="20201112 10:17:57.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.748" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63727595, 'wakeups': [63737887, 63747887, 63757887, 63767887, 63777887...</msg>
<status status="PASS" starttime="20201112 10:17:57.744" endtime="20201112 10:17:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:57.751" endtime="20201112 10:17:57.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.602" endtime="20201112 10:17:57.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.597" endtime="20201112 10:17:57.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:57.763" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 63727595, 'timer-interval': 10000, 'wakeups': [63737887, 63747887, 63757887, 63767887, 63777887, 63787887, 63797887, 63807887, 63817887, 63827887, 63837887, 63847887, ...</msg>
<status status="PASS" starttime="20201112 10:17:57.759" endtime="20201112 10:17:57.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.773" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:57.771" endtime="20201112 10:17:57.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.778" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:57.776" endtime="20201112 10:17:57.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:57.765" endtime="20201112 10:17:57.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.790" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:57.787" endtime="20201112 10:17:57.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.794" level="INFO">VALUE: 63727595</msg>
<status status="PASS" starttime="20201112 10:17:57.792" endtime="20201112 10:17:57.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:57.781" endtime="20201112 10:17:57.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.806" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:57.804" endtime="20201112 10:17:57.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:57.811" level="INFO">VALUE: [63737887, 63747887, 63757887, 63767887, 63777887, 63787887, 63797887, 63807887, 63817887, 63827887, 63837887, 63847887, 63857887, 63867887, 63877887, 63887886, 63897887, 63907887, 63917887, 63927887, 63937887, 63947887, 63957887, 63967887, 63977887, 63987887, 63997887, 64007887, 64017887, 64027887, 64037887, 64047887, 64057887, 64067887, 64077886, 64087887, 64097887, 64107887, 64117887, 64127887, 64137886, 64147887, 64157887, 64167887, 64177887, 64187887, 64197886, 64207887, 64217887, 64227887, 64237887, 64247887, 64257887, 64267887, 64277886, 64287887, 64297887, 64307887, 64317887, 64327887, 64337887, 64347887, 64357887, 64367887, 64377887, 64387887, 64397887, 64407887, 64417886, 64427887, 64437887, 64447887, 64457887, 64467887, 64477887, 64487887, 64497887, 64507887, 64517887, 64527887, 64537887, 64547887, 64557887, 64567887, 64577887, 64587887, 64597887, 64607887, 64617887, 64627887, 64637887, 64647887, 64657887, 64667887, 64677887, 64687887, 64697887, 64707887, 64717887, 64727887]</msg>
<status status="PASS" starttime="20201112 10:17:57.808" endtime="20201112 10:17:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:57.797" endtime="20201112 10:17:57.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:57.830" endtime="20201112 10:17:58.173"></status>
</kw>
<msg timestamp="20201112 10:17:58.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050054347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:57.827" endtime="20201112 10:17:58.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:58.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050054347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:58.181" endtime="20201112 10:17:58.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:58.198" endtime="20201112 10:17:58.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:57.820" endtime="20201112 10:17:58.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:57.814" endtime="20201112 10:17:58.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:58.260" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:17:58.207" endtime="20201112 10:17:58.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:58.270" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:58.268" endtime="20201112 10:17:58.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:58.275" level="INFO">VALUE: 0.039738694</msg>
<status status="PASS" starttime="20201112 10:17:58.273" endtime="20201112 10:17:58.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.262" endtime="20201112 10:17:58.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:58.288" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:58.285" endtime="20201112 10:17:58.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:58.292" level="INFO">VALUE: [0.050054347, 0.060077833, 0.070101792, 0.08012475, 0.090148111, 0.100171542, 0.110195528, 0.120218333, 0.130240361, 0.140262861, 0.150285792, 0.16030875, 0.170332681, 0.180356472, 0.190379528, 0.200401708, 0.210427375, 0.220450931, 0.230474486, 0.240499069, 0.250523681, 0.260546542, 0.270569792, 0.280592292, 0.290614292, 0.300636778, 0.310658986, 0.320680889, 0.330703264, 0.340724583, 0.350746569, 0.360767389, 0.370789819, 0.380813847, 0.390838167, 0.400864056, 0.410888792, 0.420911569, 0.430935972, 0.440959444, 0.450982431, 0.461007583, 0.471031417, 0.481054694, 0.491078917, 0.501103264, 0.511126569, 0.521151333, 0.531174486, 0.541197694, 0.551221319, 0.561245347, 0.571269264, 0.581293139, 0.591316486, 0.6013435, 0.611370569, 0.621395986, 0.631422458, 0.641448139, 0.651474792, 0.661498444, 0.671522458, 0.681545542, 0.691569306, 0.701592708, 0.711617431, 0.721641958, 0.731664014, 0.741687569, 0.751710389, 0.761732639, 0.771755069, 0.781777361, 0.791799319, 0.801820125, 0.811842208, 0.821863958, 0.831886333, 0.841910083, 0.851934236, 0.861957514, 0.871981694, 0.882005069, 0.892028319, 0.902050653, 0.912075056, 0.922100583, 0.932126181, 0.942151542, 0.952177111, 0.962202292, 0.972226694, 0.982251014, 0.992276236, 1.00229925, 1.012322347, 1.022345847, 1.032369653, 1.042392847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:58.290" endtime="20201112 10:17:58.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.278" endtime="20201112 10:17:58.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:58.301" endtime="20201112 10:17:58.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:58.309" endtime="20201112 10:17:58.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.305" endtime="20201112 10:17:58.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.296" endtime="20201112 10:17:58.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:55.594" endtime="20201112 10:17:58.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.105" endtime="20201112 10:17:58.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:50.104" endtime="20201112 10:17:58.335"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:58.341" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:58.362" endtime="20201112 10:18:00.487"></status>
</kw>
<msg timestamp="20201112 10:18:00.489" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66468090, 'wakeups': [66478418, 66488418, 66498418, 66508418, 66518418...</msg>
<status status="PASS" starttime="20201112 10:17:58.358" endtime="20201112 10:18:00.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66468090, 'wakeups': [66478418, 66488418, 66498418, 66508418, 66518418...</msg>
<status status="PASS" starttime="20201112 10:18:00.491" endtime="20201112 10:18:00.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:00.498" endtime="20201112 10:18:00.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.351" endtime="20201112 10:18:00.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.346" endtime="20201112 10:18:00.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:00.510" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 66468090, 'timer-interval': 10000, 'wakeups': [66478418, 66488418, 66498418, 66508418, 66518418, 66528418, 66538418, 66548418, 66558418, 66568418, 66578418, 66588418, ...</msg>
<status status="PASS" starttime="20201112 10:18:00.506" endtime="20201112 10:18:00.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.520" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:00.518" endtime="20201112 10:18:00.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.525" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:00.522" endtime="20201112 10:18:00.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:00.512" endtime="20201112 10:18:00.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.537" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:00.534" endtime="20201112 10:18:00.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.541" level="INFO">VALUE: 66468090</msg>
<status status="PASS" starttime="20201112 10:18:00.539" endtime="20201112 10:18:00.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:00.528" endtime="20201112 10:18:00.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.553" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:00.551" endtime="20201112 10:18:00.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.558" level="INFO">VALUE: [66478418, 66488418, 66498418, 66508418, 66518418, 66528418, 66538418, 66548418, 66558418, 66568418, 66578418, 66588418, 66598418, 66608418, 66618418, 66628418, 66638418, 66648418, 66658418, 66668418, 66678418, 66688418, 66698418, 66708418, 66718418, 66728418, 66738418, 66748418, 66758418, 66768418, 66778418, 66788418, 66798418, 66808418, 66818418, 66828418, 66838418, 66848418, 66858418, 66868418, 66878418, 66888418, 66898418, 66908418, 66918418, 66928418, 66938418, 66948418, 66958418, 66968418, 66978418, 66988418, 66998418, 67008418, 67018418, 67028418, 67038418, 67048418, 67058418, 67068418, 67078418, 67088418, 67098418, 67108418, 67118418, 67128418, 67138418, 67148418, 67158418, 67168418, 67178418, 67188418, 67198418, 67208418, 67218418, 67228418, 67238418, 67248418, 67258418, 67268418, 67278418, 67288418, 67298418, 67308418, 67318418, 67328418, 67338418, 67348418, 67358418, 67368418, 67378418, 67388418, 67398418, 67408418, 67418418, 67428418, 67438418, 67448418, 67458418, 67468418]</msg>
<status status="PASS" starttime="20201112 10:18:00.555" endtime="20201112 10:18:00.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:00.545" endtime="20201112 10:18:00.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:00.579" endtime="20201112 10:18:00.921"></status>
</kw>
<msg timestamp="20201112 10:18:00.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054122583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:00.575" endtime="20201112 10:18:00.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:00.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054122583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:00.930" endtime="20201112 10:18:00.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:00.947" endtime="20201112 10:18:00.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:00.568" endtime="20201112 10:18:00.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:00.563" endtime="20201112 10:18:00.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:01.008" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:00.956" endtime="20201112 10:18:01.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:01.019" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:01.016" endtime="20201112 10:18:01.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:01.023" level="INFO">VALUE: 0.043769806</msg>
<status status="PASS" starttime="20201112 10:18:01.021" endtime="20201112 10:18:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.010" endtime="20201112 10:18:01.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:01.036" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:01.034" endtime="20201112 10:18:01.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:01.041" level="INFO">VALUE: [0.054122583, 0.064145417, 0.074167819, 0.084189833, 0.094212014, 0.104234708, 0.114258069, 0.124281514, 0.134305264, 0.144329333, 0.154352444, 0.1643745, 0.174398958, 0.184423417, 0.194447264, 0.204469597, 0.214492208, 0.2245145, 0.234536972, 0.244559111, 0.254581458, 0.264603236, 0.2746255, 0.28464725, 0.294669667, 0.304691625, 0.314713458, 0.324735333, 0.334757264, 0.344778597, 0.354801347, 0.364823139, 0.374847194, 0.384869681, 0.39489225, 0.404913708, 0.414936194, 0.424957472, 0.434980375, 0.445002625, 0.455025333, 0.465048222, 0.475072, 0.485093639, 0.495115833, 0.505137583, 0.515160278, 0.525182139, 0.535204097, 0.545226639, 0.555249611, 0.565271319, 0.575293306, 0.585314764, 0.595337028, 0.605358931, 0.615380944, 0.625402292, 0.635424403, 0.645447361, 0.655469514, 0.665491833, 0.675514792, 0.685536986, 0.695560444, 0.705582944, 0.715606472, 0.725629181, 0.735651778, 0.745674861, 0.755697861, 0.765720931, 0.775744625, 0.785768903, 0.795793194, 0.805818083, 0.815843403, 0.825866292, 0.83588875, 0.845911597, 0.855933, 0.865954431, 0.875975528, 0.885995194, 0.896015375, 0.906035583, 0.916056236, 0.926076931, 0.93609925, 0.946119792, 0.956141792, 0.966163125, 0.976185431, 0.986209403, 0.996234431, 1.006258278, 1.016281722, 1.026305153, 1.036328208, 1.046351417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:01.038" endtime="20201112 10:18:01.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.026" endtime="20201112 10:18:01.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:01.049" endtime="20201112 10:18:01.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:01.057" endtime="20201112 10:18:01.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.053" endtime="20201112 10:18:01.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.045" endtime="20201112 10:18:01.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.342" endtime="20201112 10:18:01.084"></status>
</kw>
<msg timestamp="20201112 10:18:01.085" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:01.105" endtime="20201112 10:18:03.230"></status>
</kw>
<msg timestamp="20201112 10:18:03.231" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69205321, 'wakeups': [69215649, 69225649, 69235649, 69245649, 69255649...</msg>
<status status="PASS" starttime="20201112 10:18:01.102" endtime="20201112 10:18:03.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.238" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69205321, 'wakeups': [69215649, 69225649, 69235649, 69245649, 69255649...</msg>
<status status="PASS" starttime="20201112 10:18:03.233" endtime="20201112 10:18:03.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:03.240" endtime="20201112 10:18:03.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.095" endtime="20201112 10:18:03.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.090" endtime="20201112 10:18:03.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:03.253" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 69205321, 'timer-interval': 10000, 'wakeups': [69215649, 69225649, 69235649, 69245649, 69255649, 69265649, 69275649, 69285649, 69295649, 69305649, 69315649, 69325649, ...</msg>
<status status="PASS" starttime="20201112 10:18:03.248" endtime="20201112 10:18:03.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.263" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:03.261" endtime="20201112 10:18:03.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.268" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:03.266" endtime="20201112 10:18:03.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.255" endtime="20201112 10:18:03.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.280" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:03.278" endtime="20201112 10:18:03.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.284" level="INFO">VALUE: 69205321</msg>
<status status="PASS" starttime="20201112 10:18:03.282" endtime="20201112 10:18:03.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.271" endtime="20201112 10:18:03.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.296" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:03.294" endtime="20201112 10:18:03.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.301" level="INFO">VALUE: [69215649, 69225649, 69235649, 69245649, 69255649, 69265649, 69275649, 69285649, 69295649, 69305649, 69315649, 69325649, 69335649, 69345649, 69355649, 69365649, 69375649, 69385649, 69395649, 69405649, 69415649, 69425649, 69435649, 69445649, 69455649, 69465649, 69475649, 69485649, 69495649, 69505649, 69515649, 69525649, 69535649, 69545649, 69555649, 69565649, 69575649, 69585649, 69595649, 69605649, 69615649, 69625649, 69635649, 69645649, 69655649, 69665649, 69675649, 69685649, 69695649, 69705649, 69715649, 69725649, 69735649, 69745649, 69755649, 69765649, 69775649, 69785649, 69795649, 69805649, 69815649, 69825649, 69835649, 69845649, 69855649, 69865649, 69875649, 69885649, 69895649, 69905649, 69915649, 69925649, 69935649, 69945649, 69955649, 69965649, 69975649, 69985649, 69995649, 70005649, 70015649, 70025649, 70035649, 70045649, 70055649, 70065649, 70075649, 70085649, 70095649, 70105649, 70115649, 70125649, 70135649, 70145649, 70155649, 70165649, 70175649, 70185649, 70195649, 70205649]</msg>
<status status="PASS" starttime="20201112 10:18:03.298" endtime="20201112 10:18:03.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.288" endtime="20201112 10:18:03.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:03.320" endtime="20201112 10:18:03.661"></status>
</kw>
<msg timestamp="20201112 10:18:03.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047559736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:03.316" endtime="20201112 10:18:03.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037208486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047559736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:03.670" endtime="20201112 10:18:03.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:03.687" endtime="20201112 10:18:03.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.309" endtime="20201112 10:18:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.304" endtime="20201112 10:18:03.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:03.749" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:03.698" endtime="20201112 10:18:03.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.760" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:03.757" endtime="20201112 10:18:03.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.764" level="INFO">VALUE: 0.037208486</msg>
<status status="PASS" starttime="20201112 10:18:03.762" endtime="20201112 10:18:03.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.751" endtime="20201112 10:18:03.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.778" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:03.775" endtime="20201112 10:18:03.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:03.783" level="INFO">VALUE: [0.047559736, 0.057582431, 0.067604667, 0.077626583, 0.087648569, 0.09766975, 0.107691014, 0.117711792, 0.127732375, 0.137753083, 0.14777475, 0.157796431, 0.167819167, 0.177840986, 0.187861972, 0.197883111, 0.207904708, 0.217925361, 0.227947542, 0.237969125, 0.247992097, 0.258014931, 0.268038375, 0.278060806, 0.288084181, 0.298106875, 0.308128889, 0.318150361, 0.328172361, 0.338194556, 0.348216653, 0.358238306, 0.368258972, 0.378280264, 0.388302125, 0.398323819, 0.408345611, 0.418367208, 0.428389389, 0.438410097, 0.448433361, 0.45845525, 0.468478278, 0.478500028, 0.4885225, 0.498544306, 0.508565639, 0.518586861, 0.528608889, 0.538632042, 0.548655222, 0.558676472, 0.568699875, 0.578722361, 0.588744611, 0.598765736, 0.608786778, 0.618807486, 0.628828361, 0.638850222, 0.648872042, 0.658893903, 0.668915, 0.678936056, 0.688958278, 0.698979542, 0.709001958, 0.719024278, 0.729047014, 0.739068444, 0.749090208, 0.759111667, 0.769134319, 0.779155028, 0.789176278, 0.799195847, 0.809215667, 0.819235569, 0.829256556, 0.839278444, 0.849301153, 0.859324056, 0.869345694, 0.879367444, 0.889390708, 0.899412097, 0.909433264, 0.919455514, 0.929478042, 0.939499806, 0.949521889, 0.959543569, 0.969566333, 0.979587722, 0.989608986, 0.999630319, 1.009652083, 1.019671903, 1.029692611, 1.039713222] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:03.781" endtime="20201112 10:18:03.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.768" endtime="20201112 10:18:03.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:03.793" endtime="20201112 10:18:03.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:03.801" endtime="20201112 10:18:03.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.797" endtime="20201112 10:18:03.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.788" endtime="20201112 10:18:03.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:01.086" endtime="20201112 10:18:03.827"></status>
</kw>
<msg timestamp="20201112 10:18:03.827" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:03.848" endtime="20201112 10:18:05.972"></status>
</kw>
<msg timestamp="20201112 10:18:05.974" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 71942021, 'wakeups': [71952348, 71962349, 71972349, 71982349, 71992349...</msg>
<status status="PASS" starttime="20201112 10:18:03.844" endtime="20201112 10:18:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:05.980" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 71942021, 'wakeups': [71952348, 71962349, 71972349, 71982349, 71992349...</msg>
<status status="PASS" starttime="20201112 10:18:05.976" endtime="20201112 10:18:05.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:05.983" endtime="20201112 10:18:05.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.837" endtime="20201112 10:18:05.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.832" endtime="20201112 10:18:05.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:05.997" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 71942021, 'timer-interval': 10000, 'wakeups': [71952348, 71962349, 71972349, 71982349, 71992349, 72002349, 72012349, 72022349, 72032349, 72042349, 72052349, 72062349, ...</msg>
<status status="PASS" starttime="20201112 10:18:05.992" endtime="20201112 10:18:05.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.007" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:06.005" endtime="20201112 10:18:06.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.011" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:06.009" endtime="20201112 10:18:06.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:05.999" endtime="20201112 10:18:06.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.023" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:06.021" endtime="20201112 10:18:06.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.028" level="INFO">VALUE: 71942021</msg>
<status status="PASS" starttime="20201112 10:18:06.025" endtime="20201112 10:18:06.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.015" endtime="20201112 10:18:06.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.040" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:06.037" endtime="20201112 10:18:06.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.051" level="INFO">VALUE: [71952348, 71962349, 71972349, 71982349, 71992349, 72002349, 72012349, 72022349, 72032349, 72042349, 72052349, 72062349, 72072349, 72082349, 72092349, 72102349, 72112349, 72122349, 72132349, 72142349, 72152349, 72162349, 72172349, 72182349, 72192349, 72202349, 72212349, 72222349, 72232349, 72242349, 72252349, 72262349, 72272349, 72282349, 72292349, 72302349, 72312349, 72322349, 72332349, 72342349, 72352349, 72362349, 72372349, 72382349, 72392349, 72402349, 72412349, 72422349, 72432349, 72442349, 72452349, 72462349, 72472349, 72482349, 72492349, 72502349, 72512349, 72522349, 72532349, 72542349, 72552349, 72562349, 72572349, 72582349, 72592349, 72602349, 72612349, 72622349, 72632349, 72642349, 72652349, 72662349, 72672349, 72682349, 72692349, 72702349, 72712349, 72722349, 72732349, 72742349, 72752349, 72762349, 72772349, 72782349, 72792349, 72802349, 72812349, 72822349, 72832349, 72842349, 72852349, 72862349, 72872349, 72882349, 72892349, 72902349, 72912349, 72922349, 72932349, 72942349]</msg>
<status status="PASS" starttime="20201112 10:18:06.049" endtime="20201112 10:18:06.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.031" endtime="20201112 10:18:06.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:06.070" endtime="20201112 10:18:06.412"></status>
</kw>
<msg timestamp="20201112 10:18:06.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037161014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047511958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:06.067" endtime="20201112 10:18:06.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037161014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047511958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:06.420" endtime="20201112 10:18:06.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:06.437" endtime="20201112 10:18:06.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.060" endtime="20201112 10:18:06.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.055" endtime="20201112 10:18:06.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:06.499" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:06.445" endtime="20201112 10:18:06.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.509" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:18:06.507" endtime="20201112 10:18:06.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.513" level="INFO">VALUE: 0.037161014</msg>
<status status="PASS" starttime="20201112 10:18:06.511" endtime="20201112 10:18:06.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.500" endtime="20201112 10:18:06.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.526" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:06.524" endtime="20201112 10:18:06.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:06.531" level="INFO">VALUE: [0.047511958, 0.057536014, 0.067559028, 0.077581903, 0.087604972, 0.097627333, 0.107649903, 0.117672597, 0.127694667, 0.137715361, 0.147737194, 0.157760014, 0.167783333, 0.177804806, 0.187826056, 0.197847306, 0.207869847, 0.217890847, 0.227912069, 0.237933292, 0.247954569, 0.257975222, 0.267996806, 0.278016611, 0.288038264, 0.298060958, 0.308084042, 0.318107306, 0.328130694, 0.338152528, 0.348174153, 0.358195431, 0.368216069, 0.378235694, 0.388257472, 0.398277028, 0.408299097, 0.418321014, 0.428344306, 0.438365639, 0.448386194, 0.458406806, 0.468427347, 0.478448139, 0.488470333, 0.498492931, 0.508516458, 0.518537319, 0.528558014, 0.538579583, 0.548601903, 0.558623444, 0.568645833, 0.578667722, 0.588690236, 0.598713986, 0.608737056, 0.618760472, 0.628784222, 0.638807528, 0.648831681, 0.658855889, 0.668880194, 0.678903444, 0.688926903, 0.698950667, 0.70897225, 0.718992778, 0.729013472, 0.739034833, 0.749055556, 0.759077333, 0.769098931, 0.779118931, 0.789140583, 0.799161694, 0.809183514, 0.819204778, 0.829226681, 0.839250542, 0.849274056, 0.859299, 0.869323819, 0.879348764, 0.889373958, 0.899398514, 0.909422083, 0.919444639, 0.929468097, 0.939492181, 0.949515611, 0.959538167, 0.969561792, 0.979583944, 0.989606486, 0.999629028, 1.009652514, 1.019676403, 1.029699569, 1.039721653] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:06.529" endtime="20201112 10:18:06.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.517" endtime="20201112 10:18:06.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:06.540" endtime="20201112 10:18:06.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:06.548" endtime="20201112 10:18:06.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.543" endtime="20201112 10:18:06.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.535" endtime="20201112 10:18:06.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:03.828" endtime="20201112 10:18:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.338" endtime="20201112 10:18:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:58.336" endtime="20201112 10:18:06.574"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:18:06.580" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:06.600" endtime="20201112 10:18:08.726"></status>
</kw>
<msg timestamp="20201112 10:18:08.727" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74688917, 'wakeups': [74699289, 74709288, 74719288, 74729288, 747392...</msg>
<status status="PASS" starttime="20201112 10:18:06.597" endtime="20201112 10:18:08.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.734" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74688917, 'wakeups': [74699289, 74709288, 74719288, 74729288, 747392...</msg>
<status status="PASS" starttime="20201112 10:18:08.729" endtime="20201112 10:18:08.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:08.736" endtime="20201112 10:18:08.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.590" endtime="20201112 10:18:08.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.585" endtime="20201112 10:18:08.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:08.749" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 74688917, 'timer-interval': 10000, 'wakeups': [74699289, 74709288, 74719288, 74729288, 74739288, 74749288, 74759288, 74769288, 74779288, 74789288, 74799288, 74809288,...</msg>
<status status="PASS" starttime="20201112 10:18:08.744" endtime="20201112 10:18:08.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.759" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:08.756" endtime="20201112 10:18:08.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.763" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:08.761" endtime="20201112 10:18:08.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:08.750" endtime="20201112 10:18:08.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.775" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:08.773" endtime="20201112 10:18:08.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.780" level="INFO">VALUE: 74688917</msg>
<status status="PASS" starttime="20201112 10:18:08.778" endtime="20201112 10:18:08.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:08.767" endtime="20201112 10:18:08.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.792" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:08.789" endtime="20201112 10:18:08.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:08.798" level="INFO">VALUE: [74699289, 74709288, 74719288, 74729288, 74739288, 74749288, 74759288, 74769288, 74779288, 74789288, 74799288, 74809288, 74819288, 74829288, 74839287, 74849288, 74859288, 74869288, 74879288, 74889288, 74899288, 74909288, 74919288, 74929287, 74939288, 74949288, 74959288, 74969287, 74979288, 74989288, 74999288, 75009288, 75019288, 75029288, 75039288, 75049287, 75059287, 75069288, 75079288, 75089287, 75099288, 75109288, 75119288, 75129288, 75139288, 75149287, 75159288, 75169287, 75179288, 75189287, 75199288, 75209288, 75219288, 75229288, 75239288, 75249288, 75259288, 75269288, 75279288, 75289288, 75299288, 75309288, 75319288, 75329288, 75339288, 75349287, 75359288, 75369287, 75379288, 75389288, 75399288, 75409288, 75419288, 75429288, 75439288, 75449287, 75459288, 75469288, 75479288, 75489288, 75499288, 75509288, 75519288, 75529288, 75539288, 75549288, 75559288, 75569288, 75579288, 75589288, 75599288, 75609288, 75619288, 75629288, 75639288, 75649287, 75659288, 75669287, 75679287, 75689288]</msg>
<status status="PASS" starttime="20201112 10:18:08.794" endtime="20201112 10:18:08.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:08.783" endtime="20201112 10:18:08.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:08.818" endtime="20201112 10:18:09.163"></status>
</kw>
<msg timestamp="20201112 10:18:09.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054020931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:08.814" endtime="20201112 10:18:09.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:09.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054020931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:09.172" endtime="20201112 10:18:09.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:09.189" endtime="20201112 10:18:09.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:08.807" endtime="20201112 10:18:09.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:08.802" endtime="20201112 10:18:09.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:09.250" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:09.197" endtime="20201112 10:18:09.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:09.261" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:09.259" endtime="20201112 10:18:09.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:09.265" level="INFO">VALUE: 0.043625944</msg>
<status status="PASS" starttime="20201112 10:18:09.263" endtime="20201112 10:18:09.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.252" endtime="20201112 10:18:09.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:09.278" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:09.276" endtime="20201112 10:18:09.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:09.283" level="INFO">VALUE: [0.054020931, 0.064044417, 0.074069194, 0.084093972, 0.094120875, 0.104146153, 0.114170875, 0.124194028, 0.134217403, 0.144239611, 0.154262708, 0.164285181, 0.174308278, 0.18433125, 0.194353097, 0.204377153, 0.214399542, 0.224421542, 0.234444472, 0.244466333, 0.254488986, 0.264511319, 0.274533264, 0.284553736, 0.294577194, 0.304599194, 0.314621125, 0.324641889, 0.334665333, 0.344688667, 0.354711583, 0.364733875, 0.374756625, 0.384779389, 0.39480175, 0.404823569, 0.414846569, 0.424870167, 0.434892861, 0.444913611, 0.454936111, 0.464958292, 0.474979986, 0.485002236, 0.495024444, 0.505045028, 0.515068792, 0.525089625, 0.535112597, 0.54513325, 0.555155917, 0.565177611, 0.575200403, 0.585223236, 0.595245903, 0.605268944, 0.615291708, 0.625314667, 0.635336778, 0.645357736, 0.655379444, 0.665400542, 0.675421597, 0.685443542, 0.695465028, 0.705485528, 0.715507778, 0.725528861, 0.735552986, 0.745575625, 0.755598806, 0.765620903, 0.775643486, 0.785665986, 0.795688181, 0.805708444, 0.815731611, 0.825753431, 0.835775542, 0.845797597, 0.855820347, 0.86584225, 0.875863681, 0.885884444, 0.895905528, 0.905926444, 0.915948236, 0.925970167, 0.935992486, 0.946014667, 0.956037083, 0.966059528, 0.976081639, 0.986103167, 0.996125639, 1.006146694, 1.016170611, 1.026192417, 1.036215639, 1.046238972] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:09.281" endtime="20201112 10:18:09.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.269" endtime="20201112 10:18:09.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:09.293" endtime="20201112 10:18:09.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:09.302" endtime="20201112 10:18:09.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.297" endtime="20201112 10:18:09.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.288" endtime="20201112 10:18:09.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.581" endtime="20201112 10:18:09.328"></status>
</kw>
<msg timestamp="20201112 10:18:09.328" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:09.349" endtime="20201112 10:18:11.474"></status>
</kw>
<msg timestamp="20201112 10:18:11.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77431292, 'wakeups': [77441664, 77451662, 77461663, 77471663, 774816...</msg>
<status status="PASS" starttime="20201112 10:18:09.345" endtime="20201112 10:18:11.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.489" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77431292, 'wakeups': [77441664, 77451662, 77461663, 77471663, 774816...</msg>
<status status="PASS" starttime="20201112 10:18:11.477" endtime="20201112 10:18:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:11.491" endtime="20201112 10:18:11.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.338" endtime="20201112 10:18:11.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.333" endtime="20201112 10:18:11.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:11.504" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 77431292, 'timer-interval': 10000, 'wakeups': [77441664, 77451662, 77461663, 77471663, 77481663, 77491662, 77501663, 77511663, 77521663, 77531663, 77541663, 77551663,...</msg>
<status status="PASS" starttime="20201112 10:18:11.500" endtime="20201112 10:18:11.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.514" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:11.512" endtime="20201112 10:18:11.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.518" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:11.516" endtime="20201112 10:18:11.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:11.506" endtime="20201112 10:18:11.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.530" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:11.528" endtime="20201112 10:18:11.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.535" level="INFO">VALUE: 77431292</msg>
<status status="PASS" starttime="20201112 10:18:11.533" endtime="20201112 10:18:11.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:11.522" endtime="20201112 10:18:11.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.547" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:11.545" endtime="20201112 10:18:11.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.552" level="INFO">VALUE: [77441664, 77451662, 77461663, 77471663, 77481663, 77491662, 77501663, 77511663, 77521663, 77531663, 77541663, 77551663, 77561663, 77571663, 77581663, 77591663, 77601663, 77611663, 77621663, 77631662, 77641663, 77651663, 77661663, 77671663, 77681663, 77691663, 77701663, 77711662, 77721663, 77731663, 77741663, 77751663, 77761663, 77771663, 77781663, 77791663, 77801663, 77811663, 77821663, 77831663, 77841663, 77851663, 77861663, 77871662, 77881663, 77891662, 77901663, 77911663, 77921663, 77931663, 77941663, 77951662, 77961663, 77971663, 77981663, 77991663, 78001663, 78011663, 78021663, 78031662, 78041663, 78051663, 78061663, 78071663, 78081663, 78091663, 78101663, 78111663, 78121663, 78131663, 78141663, 78151663, 78161663, 78171663, 78181662, 78191663, 78201663, 78211663, 78221663, 78231663, 78241663, 78251663, 78261663, 78271663, 78281663, 78291662, 78301663, 78311663, 78321663, 78331663, 78341663, 78351663, 78361663, 78371663, 78381663, 78391663, 78401663, 78411662, 78421663, 78431663]</msg>
<status status="PASS" starttime="20201112 10:18:11.549" endtime="20201112 10:18:11.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:11.539" endtime="20201112 10:18:11.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:11.571" endtime="20201112 10:18:11.913"></status>
</kw>
<msg timestamp="20201112 10:18:11.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037757958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048155319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:11.567" endtime="20201112 10:18:11.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:11.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037757958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048155319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:11.921" endtime="20201112 10:18:11.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:11.938" endtime="20201112 10:18:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:11.560" endtime="20201112 10:18:11.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:11.555" endtime="20201112 10:18:11.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:11.999" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:11.948" endtime="20201112 10:18:12.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:12.011" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:12.008" endtime="20201112 10:18:12.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:12.015" level="INFO">VALUE: 0.037757958</msg>
<status status="PASS" starttime="20201112 10:18:12.013" endtime="20201112 10:18:12.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.002" endtime="20201112 10:18:12.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:12.029" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:12.026" endtime="20201112 10:18:12.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:12.033" level="INFO">VALUE: [0.048155319, 0.058177278, 0.068202861, 0.078227931, 0.088252944, 0.098276625, 0.108302403, 0.118327347, 0.128352625, 0.138377139, 0.148401306, 0.158425194, 0.168449889, 0.178473667, 0.188498708, 0.198523556, 0.208546708, 0.218569278, 0.228595222, 0.2386195, 0.248647111, 0.258671486, 0.268695556, 0.278718694, 0.288742236, 0.298765153, 0.308787889, 0.318808833, 0.328831972, 0.338853056, 0.348874264, 0.358895861, 0.3689175, 0.378939819, 0.388962625, 0.398985097, 0.409008097, 0.419030417, 0.4290525, 0.439074639, 0.449096681, 0.459118083, 0.469139875, 0.479160556, 0.489184278, 0.499205056, 0.509228028, 0.519250153, 0.529272222, 0.539293486, 0.549316028, 0.559337403, 0.569362736, 0.579386569, 0.589412792, 0.599437042, 0.609461722, 0.619487042, 0.629510139, 0.639531278, 0.649554528, 0.659577486, 0.669600319, 0.679622764, 0.689645667, 0.699668875, 0.709691528, 0.719714083, 0.729737583, 0.739759333, 0.749781514, 0.759802889, 0.769825222, 0.779847125, 0.789868667, 0.799892681, 0.809916083, 0.819939514, 0.829961944, 0.839983611, 0.850007069, 0.860029861, 0.870052472, 0.880075736, 0.890099194, 0.900120694, 0.910144417, 0.920165847, 0.930187181, 0.940208792, 0.950231583, 0.960253944, 0.970276306, 0.980298542, 0.990321528, 1.000344583, 1.010367681, 1.020389806, 1.030414528, 1.040439472] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:12.031" endtime="20201112 10:18:12.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.019" endtime="20201112 10:18:12.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:12.043" endtime="20201112 10:18:12.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:12.051" endtime="20201112 10:18:12.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.047" endtime="20201112 10:18:12.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.038" endtime="20201112 10:18:12.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:09.329" endtime="20201112 10:18:12.077"></status>
</kw>
<msg timestamp="20201112 10:18:12.077" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:12.098" endtime="20201112 10:18:14.223"></status>
</kw>
<msg timestamp="20201112 10:18:14.224" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80174332, 'wakeups': [80184705, 80194702, 80204703, 80214703, 802247...</msg>
<status status="PASS" starttime="20201112 10:18:12.094" endtime="20201112 10:18:14.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.231" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80174332, 'wakeups': [80184705, 80194702, 80204703, 80214703, 802247...</msg>
<status status="PASS" starttime="20201112 10:18:14.226" endtime="20201112 10:18:14.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:14.233" endtime="20201112 10:18:14.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.087" endtime="20201112 10:18:14.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.082" endtime="20201112 10:18:14.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:14.247" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 80174332, 'timer-interval': 10000, 'wakeups': [80184705, 80194702, 80204703, 80214703, 80224703, 80234702, 80244703, 80254703, 80264703, 80274703, 80284703, 80294702,...</msg>
<status status="PASS" starttime="20201112 10:18:14.243" endtime="20201112 10:18:14.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.257" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:18:14.255" endtime="20201112 10:18:14.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:18:14.259" endtime="20201112 10:18:14.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.249" endtime="20201112 10:18:14.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.274" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:14.272" endtime="20201112 10:18:14.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.279" level="INFO">VALUE: 80174332</msg>
<status status="PASS" starttime="20201112 10:18:14.276" endtime="20201112 10:18:14.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.265" endtime="20201112 10:18:14.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.291" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:14.289" endtime="20201112 10:18:14.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.296" level="INFO">VALUE: [80184705, 80194702, 80204703, 80214703, 80224703, 80234702, 80244703, 80254703, 80264703, 80274703, 80284703, 80294702, 80304703, 80314703, 80324703, 80334703, 80344703, 80354702, 80364703, 80374703, 80384703, 80394702, 80404703, 80414703, 80424703, 80434703, 80444703, 80454703, 80464703, 80474703, 80484703, 80494703, 80504702, 80514702, 80524703, 80534702, 80544703, 80554703, 80564702, 80574703, 80584703, 80594703, 80604703, 80614703, 80624703, 80634703, 80644703, 80654703, 80664703, 80674703, 80684703, 80694703, 80704703, 80714703, 80724703, 80734702, 80744703, 80754703, 80764703, 80774703, 80784703, 80794703, 80804703, 80814703, 80824703, 80834703, 80844703, 80854703, 80864703, 80874703, 80884703, 80894703, 80904703, 80914702, 80924703, 80934703, 80944703, 80954703, 80964703, 80974703, 80984703, 80994703, 81004703, 81014703, 81024702, 81034702, 81044703, 81054703, 81064703, 81074702, 81084703, 81094703, 81104703, 81114703, 81124703, 81134703, 81144703, 81154703, 81164703, 81174702]</msg>
<status status="PASS" starttime="20201112 10:18:14.293" endtime="20201112 10:18:14.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.282" endtime="20201112 10:18:14.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:14.314" endtime="20201112 10:18:14.657"></status>
</kw>
<msg timestamp="20201112 10:18:14.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047593431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:14.311" endtime="20201112 10:18:14.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037195972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047593431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:18:14.665" endtime="20201112 10:18:14.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:14.682" endtime="20201112 10:18:14.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.304" endtime="20201112 10:18:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.299" endtime="20201112 10:18:14.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:18:14.745" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 10:18:14.690" endtime="20201112 10:18:14.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.755" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:18:14.753" endtime="20201112 10:18:14.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.760" level="INFO">VALUE: 0.037195972</msg>
<status status="PASS" starttime="20201112 10:18:14.757" endtime="20201112 10:18:14.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.747" endtime="20201112 10:18:14.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.773" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:18:14.770" endtime="20201112 10:18:14.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:18:14.777" level="INFO">VALUE: [0.047593431, 0.057613847, 0.067638625, 0.077661639, 0.087684583, 0.097706278, 0.107729986, 0.117752236, 0.127775125, 0.137797722, 0.147821403, 0.157843958, 0.167868389, 0.177891028, 0.187913583, 0.197936458, 0.207959792, 0.217982181, 0.228006264, 0.238028542, 0.248050972, 0.258072139, 0.268095361, 0.278118264, 0.288139694, 0.298161222, 0.308183486, 0.318205347, 0.328227181, 0.338249722, 0.348272486, 0.358295181, 0.368317181, 0.378338972, 0.3883625, 0.398384056, 0.408407292, 0.418429306, 0.428451028, 0.438472694, 0.448494986, 0.458516597, 0.468539917, 0.478563347, 0.488586278, 0.498609014, 0.508632611, 0.518655014, 0.528678028, 0.538701028, 0.548723194, 0.558745236, 0.568768236, 0.578791792, 0.588814111, 0.598834597, 0.608857083, 0.618879181, 0.628901903, 0.638924125, 0.648946597, 0.658968361, 0.668989917, 0.679012431, 0.689036056, 0.699059375, 0.709082444, 0.719104083, 0.729127278, 0.739148708, 0.749171264, 0.759194583, 0.769217125, 0.779236833, 0.789258944, 0.799280458, 0.809301681, 0.819322917, 0.829345806, 0.839367069, 0.849389278, 0.859412208, 0.869434917, 0.879456542, 0.889478014, 0.899499611, 0.909522792, 0.919546083, 0.929568931, 0.939590486, 0.949613903, 0.959635958, 0.969658236, 0.979680125, 0.98970275, 0.999725583, 1.009748278, 1.0197695, 1.029790458, 1.039813639] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:18:14.775" endtime="20201112 10:18:14.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.763" endtime="20201112 10:18:14.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:18:14.786" endtime="20201112 10:18:14.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:18:14.795" endtime="20201112 10:18:14.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.790" endtime="20201112 10:18:14.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:14.782" endtime="20201112 10:18:14.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:12.079" endtime="20201112 10:18:14.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.577" endtime="20201112 10:18:14.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:18:06.575" endtime="20201112 10:18:14.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:52.388" endtime="20201112 10:18:14.821"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 10:16:52.260" endtime="20201112 10:18:14.823" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:16:49.753" endtime="20201112 10:18:14.831"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:14:21.528" endtime="20201112 10:18:14.871"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
