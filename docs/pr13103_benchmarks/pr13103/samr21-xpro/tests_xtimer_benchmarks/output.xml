<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 09:42:38.453" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.690" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:39.706" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:41.627" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:39.686" endtime="20201112 09:42:41.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.634" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:41.631" endtime="20201112 09:42:41.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.683" endtime="20201112 09:42:41.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.641" endtime="20201112 09:42:41.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.638" endtime="20201112 09:42:41.972"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.004" endtime="20201112 09:42:42.029"></status>
</kw>
<msg timestamp="20201112 09:42:42.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.000" endtime="20201112 09:42:42.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.037" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.033" endtime="20201112 09:42:42.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.044" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:42.039" endtime="20201112 09:42:42.045"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.994" endtime="20201112 09:42:42.046"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.987" endtime="20201112 09:42:42.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.984" endtime="20201112 09:42:42.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:42.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:42.055" endtime="20201112 09:42:42.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.051" endtime="20201112 09:42:42.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.982" endtime="20201112 09:42:42.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.980" endtime="20201112 09:42:42.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.061" endtime="20201112 09:42:42.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.977" endtime="20201112 09:42:42.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.067" endtime="20201112 09:42:42.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.973" endtime="20201112 09:42:42.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.679" endtime="20201112 09:42:42.073"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.088" endtime="20201112 09:42:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.084" endtime="20201112 09:42:42.112"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.148" endtime="20201112 09:42:42.173"></status>
</kw>
<msg timestamp="20201112 09:42:42.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.144" endtime="20201112 09:42:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.176" endtime="20201112 09:42:42.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.187" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:42.183" endtime="20201112 09:42:42.188"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:42.137" endtime="20201112 09:42:42.190"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:42.131" endtime="20201112 09:42:42.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.127" endtime="20201112 09:42:42.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:42.200" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:42.198" endtime="20201112 09:42:42.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.194" endtime="20201112 09:42:42.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.125" endtime="20201112 09:42:42.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.122" endtime="20201112 09:42:42.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.203" endtime="20201112 09:42:42.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.118" endtime="20201112 09:42:42.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.114" endtime="20201112 09:42:42.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.081" endtime="20201112 09:42:42.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.229" endtime="20201112 09:42:42.241"></status>
</kw>
<msg timestamp="20201112 09:42:42.242" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.225" endtime="20201112 09:42:42.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.248" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.244" endtime="20201112 09:42:42.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.250" endtime="20201112 09:42:42.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.218" endtime="20201112 09:42:42.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.213" endtime="20201112 09:42:42.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.268" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:42.266" endtime="20201112 09:42:42.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.273" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:42.271" endtime="20201112 09:42:42.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.260" endtime="20201112 09:42:42.275"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:42.074" endtime="20201112 09:42:42.278" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:38.718" endtime="20201112 09:42:42.287"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.426" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:42.441" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:44.358" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:42.422" endtime="20201112 09:42:44.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.365" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:44.362" endtime="20201112 09:42:44.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.419" endtime="20201112 09:42:44.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.372" endtime="20201112 09:42:44.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.369" endtime="20201112 09:42:44.704"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.733" endtime="20201112 09:42:44.759"></status>
</kw>
<msg timestamp="20201112 09:42:44.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.730" endtime="20201112 09:42:44.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.762" endtime="20201112 09:42:44.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.773" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:44.769" endtime="20201112 09:42:44.774"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.723" endtime="20201112 09:42:44.776"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.718" endtime="20201112 09:42:44.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.715" endtime="20201112 09:42:44.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:44.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:44.785" endtime="20201112 09:42:44.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.780" endtime="20201112 09:42:44.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.714" endtime="20201112 09:42:44.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.712" endtime="20201112 09:42:44.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.790" endtime="20201112 09:42:44.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.709" endtime="20201112 09:42:44.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.796" endtime="20201112 09:42:44.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.705" endtime="20201112 09:42:44.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.416" endtime="20201112 09:42:44.802"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.816" endtime="20201112 09:42:44.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.812" endtime="20201112 09:42:44.840"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.935" endtime="20201112 09:42:44.957"></status>
</kw>
<msg timestamp="20201112 09:42:44.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.931" endtime="20201112 09:42:44.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.961" endtime="20201112 09:42:44.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.971" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:44.967" endtime="20201112 09:42:44.972"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.924" endtime="20201112 09:42:44.974"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.917" endtime="20201112 09:42:44.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.853" endtime="20201112 09:42:44.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:44.984" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:44.983" endtime="20201112 09:42:44.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.978" endtime="20201112 09:42:44.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.851" endtime="20201112 09:42:44.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.850" endtime="20201112 09:42:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.988" endtime="20201112 09:42:44.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.845" endtime="20201112 09:42:44.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.841" endtime="20201112 09:42:44.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.810" endtime="20201112 09:42:44.995"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:44.999" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.019" endtime="20201112 09:42:45.031"></status>
</kw>
<msg timestamp="20201112 09:42:45.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.016" endtime="20201112 09:42:45.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.034" endtime="20201112 09:42:45.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.041" endtime="20201112 09:42:45.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.009" endtime="20201112 09:42:45.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.004" endtime="20201112 09:42:45.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.064" endtime="20201112 09:42:45.422"></status>
</kw>
<msg timestamp="20201112 09:42:45.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193365833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.061" endtime="20201112 09:42:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193365833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.432" endtime="20201112 09:42:45.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.451" endtime="20201112 09:42:45.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.054" endtime="20201112 09:42:45.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.049" endtime="20201112 09:42:45.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.468" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.466" endtime="20201112 09:42:45.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.480" level="INFO">VALUE: [{'time': 0.193365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193365833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.193375264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.193375736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193382792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.193383264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.193390903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193397208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30499999998424e-06, 'source_diff': 6.30499999998424e-06}, {'time': 0.193397681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193403347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.66600000001527e-06, 'source_diff': 5.66600000001527e-06}, {'time': 0.193403819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193414208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.193414681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193423819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999991875e-06, 'source_diff': 9.137999999991875e-06}, {'time': 0.193424292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193428736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999992343e-06, 'source_diff': 4.443999999992343e-06}, {'time': 0.193429208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193440014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.193440486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193448792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30600000001347e-06, 'source_diff': 8.30600000001347e-06}, {'time': 0.193449264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.193458542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193468833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.029099999999561e-05, 'source_diff': 1.029099999999561e-05}, {'time': 0.193469306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193475014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.707999999993163e-06, 'source_diff': 5.707999999993163e-06}, {'time': 0.193475486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193482333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.193482806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193493278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999983606e-05, 'source_diff': 1.0471999999983606e-05}, {'time': 0.19349375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193503597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000007267e-06, 'source_diff': 9.847000000007267e-06}, {'time': 0.193504069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193508819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.193509292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193515194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.193515667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193526042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0375000000006906e-05, 'source_diff': 1.0375000000006906e-05}, {'time': 0.193526514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193533903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.193534375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.19354275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.193543222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.193547681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000012203e-06, 'source_diff': 4.459000000012203e-06}, {'time': 0.193548153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193556958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.193557431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.19356575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319000000006627e-06, 'source_diff': 8.319000000006627e-06}, {'time': 0.193566222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193571278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.19357175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.193576194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4440000000200985e-06, 'source_diff': 4.4440000000200985e-06}, {'time': 0.193576667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193583819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999982506e-06, 'source_diff': 7.151999999982506e-06}, {'time': 0.193584292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.19359175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.45800000001573e-06, 'source_diff': 7.45800000001573e-06}, {'time': 0.193592222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193603125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.090299999997879e-05, 'source_diff': 1.090299999997879e-05}, {'time': 0.193603597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193612736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000019104e-06, 'source_diff': 9.139000000019104e-06}, {'time': 0.193613208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193618361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999979979e-06, 'source_diff': 5.152999999979979e-06}, {'time': 0.193618833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193629014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.193629486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193634014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.193634486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193644681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000018384e-05, 'source_diff': 1.0195000000018384e-05}, {'time': 0.193645153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.1936545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000020644e-06, 'source_diff': 9.347000000020644e-06}, {'time': 0.193654972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193665458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.193665931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.19367225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999976871e-06, 'source_diff': 6.318999999976871e-06}, {'time': 0.193672722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193682792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.193683264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193688778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000012009e-06, 'source_diff': 5.514000000012009e-06}, {'time': 0.193689319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.193698542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.223000000002646e-06, 'source_diff': 9.223000000002646e-06}, {'time': 0.193699014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193705958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000008721e-06, 'source_diff': 6.944000000008721e-06}, {'time': 0.193706431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193712653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.193713125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.19372175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.62499999998434e-06, 'source_diff': 8.62499999998434e-06}, {'time': 0.193722222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193732806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.058400000000792e-05, 'source_diff': 1.058400000000792e-05}, {'time': 0.193733278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193743236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.193743708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.193752014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30600000001347e-06, 'source_diff': 8.30600000001347e-06}, {'time': 0.193752486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.193759333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.193759806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193766944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.137999999989875e-06, 'source_diff': 7.137999999989875e-06}, {'time': 0.193767417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.193774986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5690000000128155e-06, 'source_diff': 7.5690000000128155e-06}, {'time': 0.193775458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.471" endtime="20201112 09:42:45.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.459" endtime="20201112 09:42:45.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.540" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:45.486" endtime="20201112 09:42:45.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.550" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.547" endtime="20201112 09:42:45.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.559" level="INFO">VALUE: {'eventtime': [0.193365361, 0.193365833, 0.193375264, 0.193375736, 0.193382792, 0.193383264, 0.193390431, 0.193390903, 0.193397208, 0.193397681, 0.193403347, 0.193403819, 0.193414208, 0.193414681, 0.193423819, 0.193424292, 0.193428736, 0.193429208, 0.193440014, 0.193440486, 0.193448792, 0.193449264, 0.193458069, 0.193458542, 0.193468833, 0.193469306, 0.193475014, 0.193475486, 0.193482333, 0.193482806, 0.193493278, 0.19349375, 0.193503597, 0.193504069, 0.193508819, 0.193509292, 0.193515194, 0.193515667, 0.193526042, 0.193526514, 0.193533903, 0.193534375, 0.19354275, 0.193543222, 0.193547681, 0.193548153, 0.193556958, 0.193557431, 0.19356575, 0.193566222, 0.193571278, 0.19357175, 0.193576194, 0.193576667, 0.193583819, 0.193584292, 0.19359175, 0.193592222, 0.193603125, 0.193603597, 0.193612736, 0.193613208, 0.193618361, 0.193618833, 0.193629014, 0.193629486, 0.193634014, 0.193634486, 0.193644681, 0.193645153, 0.1936545, 0.193654972, 0.193665458, 0.193665931, 0.19367225, 0.193672722, 0.193682792, 0.193683264, 0.193688778, 0.193689319, 0.193698542, 0.193699014, 0.193705958, 0.193706431, 0.193712653, 0.193713125, 0.19372175, 0.193722222, 0.193732806, 0.193733278, 0.193743236, 0.193743708, 0.193752014, 0.193752486, 0.193759333, 0.193759806, 0.193766944, 0.193767417, 0.193774986, 0.193775458], 'diff': [0, 4.7199999997360464e-07, 9.431000000004186e-06, 4.720000000013602e-07, 7.05600000000528e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 6.30499999998424e-06, 4.7300000000083386e-07, 5.66600000001527e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.137999999991875e-06, 4.7300000000083386e-07, 4.443999999992343e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.30600000001347e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.7300000000083386e-07, 5.707999999993163e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 1.0471999999983606e-05, 4.720000000013602e-07, 9.847000000007267e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7300000000083386e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.7199999997360464e-07, 4.459000000012203e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 8.319000000006627e-06, 4.720000000013602e-07, 5.05600000000328e-06, 4.7199999997360464e-07, 4.4440000000200985e-06, 4.7300000000083386e-07, 7.151999999982506e-06, 4.7300000000083386e-07, 7.45800000001573e-06, 4.720000000013602e-07, 1.090299999997879e-05, 4.720000000013602e-07, 9.139000000019104e-06, 4.720000000013602e-07, 5.152999999979979e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.720000000013602e-07, 1.0195000000018384e-05, 4.7199999997360464e-07, 9.347000000020644e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 6.318999999976871e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.514000000012009e-06, 5.409999999927972e-07, 9.223000000002646e-06, 4.720000000013602e-07, 6.944000000008721e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.62499999998434e-06, 4.720000000013602e-07, 1.058400000000792e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7199999997360464e-07, 8.30600000001347e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 7.137999999989875e-06, 4.7300000000083386e-07, 7.5690000000128155e-06, 4.720000000013602e-07], 'source_diff': [0, 4.7199999997360464e-07, 9.431000000004186e-06, 4.720000000013602e-07, 7.05600000000528e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 6.30499999998424e-06, 4.7300000000083386e-07, 5.66600000001527e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.137999999991875e-06, 4.7300000000083386e-07, 4.443999999992343e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.30600000001347e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.7300000000083386e-07, 5.707999999993163e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 1.0471999999983606e-05, 4.720000000013602e-07, 9.847000000007267e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7300000000083386e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.7199999997360464e-07, 4.459000000012203e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 8.319000000006627e-06, 4.720000000013602e-07, 5.05600000000328e-06, 4.7199999997360464e-07, 4.4440000000200985e-06, 4.7300000000083386e-07, 7.151999999982506e-06, 4.7300000000083386e-07, 7.45800000001573e-06, 4.720000000013602e-07, 1.090299999997879e-05, 4.720000000013602e-07, 9.139000000019104e-06, 4.720000000013602e-07, 5.152999999979979e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.720000000013602e-07, 1.0195000000018384e-05, 4.7199999997360464e-07, 9.347000000020644e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 6.318999999976871e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 5.514000000012009e-06, 5.409999999927972e-07, 9.223000000002646e-06, 4.720000000013602e-07, 6.944000000008721e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.62499999998434e-06, 4.720000000013602e-07, 1.058400000000792e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7199999997360464e-07, 8.30600000001347e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 7.137999999989875e-06, 4.7300000000083386e-07, 7.5690000000128155e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:45.552" endtime="20201112 09:42:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.542" endtime="20201112 09:42:45.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.573" level="INFO">${RESULT} = [{'time': 0.193365833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.193375736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:45.564" endtime="20201112 09:42:45.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.604" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:45.575" endtime="20201112 09:42:45.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.614" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.612" endtime="20201112 09:42:45.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.620" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.616" endtime="20201112 09:42:45.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.606" endtime="20201112 09:42:45.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.629" endtime="20201112 09:42:45.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.637" endtime="20201112 09:42:45.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.632" endtime="20201112 09:42:45.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.624" endtime="20201112 09:42:45.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.000" endtime="20201112 09:42:45.662"></status>
</kw>
<msg timestamp="20201112 09:42:45.663" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.683" endtime="20201112 09:42:45.693"></status>
</kw>
<msg timestamp="20201112 09:42:45.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.679" endtime="20201112 09:42:45.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.696" endtime="20201112 09:42:45.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.703" endtime="20201112 09:42:45.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.672" endtime="20201112 09:42:45.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.667" endtime="20201112 09:42:45.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.726" endtime="20201112 09:42:46.070"></status>
</kw>
<msg timestamp="20201112 09:42:46.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035975569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035976042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.723" endtime="20201112 09:42:46.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035975569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035976042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.080" endtime="20201112 09:42:46.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.100" endtime="20201112 09:42:46.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.716" endtime="20201112 09:42:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.711" endtime="20201112 09:42:46.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.116" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.114" endtime="20201112 09:42:46.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.128" level="INFO">VALUE: [{'time': 0.035975569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035976042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035985181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035985653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035995736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.035996208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999995841e-06, 'source_diff': 4.555999999995841e-06}, {'time': 0.036001236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036010778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.03601125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036016958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.036017431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036022347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036029472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.036029944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036034792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.036035264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.52800000000564e-06, 'source_diff': 6.52800000000564e-06}, {'time': 0.036042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036052972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000005102e-05, 'source_diff': 1.0708000000005102e-05}, {'time': 0.036053444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036058972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.036059514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036067486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.036067958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036077194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036077667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036087847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036088319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036097917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.036098458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036103944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036104417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036113542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.036114014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036120639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036121111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036126917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.036127389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036135944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036145389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036145861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036150792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.036151333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036161167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.036161639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036166194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.036166667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036177569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036178042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036187278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.03618775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036192306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.036192778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036197722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036198194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036209028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833999999994293e-05, 'source_diff': 1.0833999999994293e-05}, {'time': 0.0362095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036214222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.036214694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.036221486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036231361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036231833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036239875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.036240417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036244611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000005971e-06, 'source_diff': 4.194000000005971e-06}, {'time': 0.036245083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036254653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036255125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036260264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.036260736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036269667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036270139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.036281556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036291931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036292403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036301014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036301486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036308903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.036314222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036323056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.036323528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.0363325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03634175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036342222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036347181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.036347653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036358153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036358625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.036364153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036374542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036375014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.119" endtime="20201112 09:42:46.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.108" endtime="20201112 09:42:46.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.189" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:46.134" endtime="20201112 09:42:46.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.198" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.196" endtime="20201112 09:42:46.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.207" level="INFO">VALUE: {'eventtime': [0.035975569, 0.035976042, 0.035985181, 0.035985653, 0.035995736, 0.035996208, 0.036000764, 0.036001236, 0.036010778, 0.03601125, 0.036016958, 0.036017431, 0.036021875, 0.036022347, 0.036029472, 0.036029944, 0.036034792, 0.036035264, 0.036041792, 0.036042264, 0.036052972, 0.036053444, 0.036058972, 0.036059514, 0.036067486, 0.036067958, 0.036077194, 0.036077667, 0.036087847, 0.036088319, 0.036097917, 0.036098458, 0.036103944, 0.036104417, 0.036113542, 0.036114014, 0.036120639, 0.036121111, 0.036126917, 0.036127389, 0.036135472, 0.036135944, 0.036145389, 0.036145861, 0.036150792, 0.036151333, 0.036161167, 0.036161639, 0.036166194, 0.036166667, 0.036177569, 0.036178042, 0.036187278, 0.03618775, 0.036192306, 0.036192778, 0.036197722, 0.036198194, 0.036209028, 0.0362095, 0.036214222, 0.036214694, 0.036221014, 0.036221486, 0.036231361, 0.036231833, 0.036239875, 0.036240417, 0.036244611, 0.036245083, 0.036254653, 0.036255125, 0.036260264, 0.036260736, 0.036269667, 0.036270139, 0.036281014, 0.036281556, 0.036291931, 0.036292403, 0.036301014, 0.036301486, 0.036308431, 0.036308903, 0.03631375, 0.036314222, 0.036323056, 0.036323528, 0.036332028, 0.0363325, 0.03634175, 0.036342222, 0.036347181, 0.036347653, 0.036358153, 0.036358625, 0.036363681, 0.036364153, 0.036374542, 0.036375014], 'diff': [0, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 4.555999999995841e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 5.52800000000464e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.597999999999551e-06, 5.409999999997361e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.930999999999686e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.720000000013602e-07, 4.5549999999963675e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.041999999999772e-06, 5.419999999992098e-07, 4.194000000005971e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 5.419999999992098e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.05600000000328e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07], 'source_diff': [0, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 4.555999999995841e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 7.124999999996717e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 5.52800000000464e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.597999999999551e-06, 5.409999999997361e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.930999999999686e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.720000000013602e-07, 4.5549999999963675e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 4.721999999998672e-06, 4.720000000013602e-07, 6.3200000000041e-06, 4.7199999999442133e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.041999999999772e-06, 5.419999999992098e-07, 4.194000000005971e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 5.419999999992098e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.05600000000328e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:46.200" endtime="20201112 09:42:46.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.190" endtime="20201112 09:42:46.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.222" level="INFO">${RESULT} = [{'time': 0.035976042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035985653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.213" endtime="20201112 09:42:46.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.252" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:46.224" endtime="20201112 09:42:46.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.262" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.260" endtime="20201112 09:42:46.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.268" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.265" endtime="20201112 09:42:46.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.254" endtime="20201112 09:42:46.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.277" endtime="20201112 09:42:46.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.285" endtime="20201112 09:42:46.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.281" endtime="20201112 09:42:46.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.272" endtime="20201112 09:42:46.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.664" endtime="20201112 09:42:46.311"></status>
</kw>
<msg timestamp="20201112 09:42:46.312" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.333" endtime="20201112 09:42:46.343"></status>
</kw>
<msg timestamp="20201112 09:42:46.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.329" endtime="20201112 09:42:46.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.351" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.347" endtime="20201112 09:42:46.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.353" endtime="20201112 09:42:46.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.321" endtime="20201112 09:42:46.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.316" endtime="20201112 09:42:46.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.376" endtime="20201112 09:42:46.714"></status>
</kw>
<msg timestamp="20201112 09:42:46.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037486069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.373" endtime="20201112 09:42:46.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037486069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.723" endtime="20201112 09:42:46.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.750" endtime="20201112 09:42:46.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.366" endtime="20201112 09:42:46.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.361" endtime="20201112 09:42:46.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.766" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.764" endtime="20201112 09:42:46.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.778" level="INFO">VALUE: [{'time': 0.037485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037486069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037494764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.037495236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037502375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037502847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037510431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.037510903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037519181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.037519653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037529208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.037529681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037535917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.037536389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037545819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.037546292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037550611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.037551083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037561903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.037562375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037567944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.037568417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037575569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.037576042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.037586597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037593944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.037594417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037600208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000004987e-06, 'source_diff': 5.791000000004987e-06}, {'time': 0.037600681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037610153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.037610625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037616333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.037616806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037625597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.790999999994109e-06, 'source_diff': 8.790999999994109e-06}, {'time': 0.037626069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037631167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.037631639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037640542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037641014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037650639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037659236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037659708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037667389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.037667861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037677, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.037677472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037687389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000005116e-06, 'source_diff': 9.917000000005116e-06}, {'time': 0.037687931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037698306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037698778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037706681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037707153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037718028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03772475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.037725222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037733542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.037734014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037740625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.037741097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037751375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037751847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037759944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037760417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037765083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.037765556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037769986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.037770458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037776653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.037777125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.037785806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037796611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.037797083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037806444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037806917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037814167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037814639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037822847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.037823319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037831736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.037832208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037839556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.34800000000424e-06, 'source_diff': 7.34800000000424e-06}, {'time': 0.037840028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037850208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000005462e-05, 'source_diff': 1.0180000000005462e-05}, {'time': 0.037850681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03785825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.037858722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037864417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.037864889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037871097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037871569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037876444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037876917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037887611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.037888083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037895694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.769" endtime="20201112 09:42:46.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.758" endtime="20201112 09:42:46.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.838" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:46.784" endtime="20201112 09:42:46.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.847" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.845" endtime="20201112 09:42:46.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.856" level="INFO">VALUE: {'eventtime': [0.037485528, 0.037486069, 0.037494764, 0.037495236, 0.037502375, 0.037502847, 0.037510431, 0.037510903, 0.037519181, 0.037519653, 0.037529208, 0.037529681, 0.037535917, 0.037536389, 0.037545819, 0.037546292, 0.037550611, 0.037551083, 0.037561903, 0.037562375, 0.037567944, 0.037568417, 0.037575569, 0.037576042, 0.037586125, 0.037586597, 0.037593944, 0.037594417, 0.037600208, 0.037600681, 0.037610153, 0.037610625, 0.037616333, 0.037616806, 0.037625597, 0.037626069, 0.037631167, 0.037631639, 0.037640542, 0.037641014, 0.037650167, 0.037650639, 0.037659236, 0.037659708, 0.037667389, 0.037667861, 0.037677, 0.037677472, 0.037687389, 0.037687931, 0.037698306, 0.037698778, 0.037706681, 0.037707153, 0.037717556, 0.037718028, 0.03772475, 0.037725222, 0.037733542, 0.037734014, 0.037740625, 0.037741097, 0.037751375, 0.037751847, 0.037759944, 0.037760417, 0.037765083, 0.037765556, 0.037769986, 0.037770458, 0.037776653, 0.037777125, 0.037785333, 0.037785806, 0.037796611, 0.037797083, 0.037806444, 0.037806917, 0.037814167, 0.037814639, 0.037822847, 0.037823319, 0.037831736, 0.037832208, 0.037839556, 0.037840028, 0.037850208, 0.037850681, 0.03785825, 0.037858722, 0.037864417, 0.037864889, 0.037871097, 0.037871569, 0.037876444, 0.037876917, 0.037887611, 0.037888083, 0.037895222, 0.037895694], 'diff': [0, 5.409999999997361e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 5.791000000004987e-06, 4.7299999999389497e-07, 9.472000000003422e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 8.790999999994109e-06, 4.720000000013602e-07, 5.09800000000199e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 9.917000000005116e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 7.34800000000424e-06, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07], 'source_diff': [0, 5.409999999997361e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 5.791000000004987e-06, 4.7299999999389497e-07, 9.472000000003422e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 8.790999999994109e-06, 4.720000000013602e-07, 5.09800000000199e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 9.917000000005116e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 4.666000000000392e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 7.34800000000424e-06, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7299999999389497e-07, 7.569000000005877e-06, 4.7199999999442133e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:46.849" endtime="20201112 09:42:46.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.840" endtime="20201112 09:42:46.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.871" level="INFO">${RESULT} = [{'time': 0.037486069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037495236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.862" endtime="20201112 09:42:46.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.901" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:46.873" endtime="20201112 09:42:46.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.913" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.909" endtime="20201112 09:42:46.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.918" level="INFO">VALUE: [5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.915" endtime="20201112 09:42:46.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.903" endtime="20201112 09:42:46.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.927" endtime="20201112 09:42:46.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.935" endtime="20201112 09:42:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.931" endtime="20201112 09:42:46.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.922" endtime="20201112 09:42:46.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.313" endtime="20201112 09:42:46.961"></status>
</kw>
<msg timestamp="20201112 09:42:46.961" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.981" endtime="20201112 09:42:46.992"></status>
</kw>
<msg timestamp="20201112 09:42:46.993" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.978" endtime="20201112 09:42:46.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.995" endtime="20201112 09:42:47.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.002" endtime="20201112 09:42:47.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.971" endtime="20201112 09:42:47.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.966" endtime="20201112 09:42:47.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.025" endtime="20201112 09:42:47.360"></status>
</kw>
<msg timestamp="20201112 09:42:47.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036260125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.022" endtime="20201112 09:42:47.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036260125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.369" endtime="20201112 09:42:47.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.389" endtime="20201112 09:42:47.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.015" endtime="20201112 09:42:47.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.010" endtime="20201112 09:42:47.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.405" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.403" endtime="20201112 09:42:47.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.417" level="INFO">VALUE: [{'time': 0.036259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036260125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036267819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.036268292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036274056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.036274528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036285222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.036285694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036291903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036292375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036302028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.0363025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036312903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036313375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036320972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.036321444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036332208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0763999999996443e-05, 'source_diff': 1.0763999999996443e-05}, {'time': 0.036332681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036338486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8050000000045565e-06, 'source_diff': 5.8050000000045565e-06}, {'time': 0.036338958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036346736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036347208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03635225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.04200000000371e-06, 'source_diff': 5.04200000000371e-06}, {'time': 0.036352722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036363639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0917000000006116e-05, 'source_diff': 1.0917000000006116e-05}, {'time': 0.036364111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036372403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036372875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036378028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.0363785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036387361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.036387903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036393056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036393528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036402875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036403347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036414208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.03641475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036423139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036423611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036429569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036439972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036440444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999996067e-06, 'source_diff': 8.694999999996067e-06}, {'time': 0.036449611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036459903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036460375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036469736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036470208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036477542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.33400000000467e-06, 'source_diff': 7.33400000000467e-06}, {'time': 0.036478014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036483, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.036483472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036488, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.036488472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036495514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036495986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036502514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036502986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036509319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.036509792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036520375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.036520847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036529472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.036529944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036534847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036540806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036546389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036546861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036556736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036557208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036567486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036567958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036575542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.036576014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036581167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036581639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036590583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000003782e-06, 'source_diff': 8.944000000003782e-06}, {'time': 0.036591056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036599264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036599736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036609361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.036609833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036615208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036615681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036622972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.036623514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.036633667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036638931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036639403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036648958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036649431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036657986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036662625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036663097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:47.408" endtime="20201112 09:42:47.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.397" endtime="20201112 09:42:47.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.479" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:47.423" endtime="20201112 09:42:47.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.488" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.486" endtime="20201112 09:42:47.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.498" level="INFO">VALUE: {'eventtime': [0.036259653, 0.036260125, 0.036267819, 0.036268292, 0.036274056, 0.036274528, 0.036285222, 0.036285694, 0.036291903, 0.036292375, 0.036302028, 0.0363025, 0.036312903, 0.036313375, 0.036320972, 0.036321444, 0.036332208, 0.036332681, 0.036338486, 0.036338958, 0.036346736, 0.036347208, 0.03635225, 0.036352722, 0.036363639, 0.036364111, 0.036372403, 0.036372875, 0.036378028, 0.0363785, 0.036387361, 0.036387903, 0.036393056, 0.036393528, 0.036402875, 0.036403347, 0.036414208, 0.03641475, 0.036423139, 0.036423611, 0.036429097, 0.036429569, 0.036439972, 0.036440444, 0.036449139, 0.036449611, 0.036459903, 0.036460375, 0.036469736, 0.036470208, 0.036477542, 0.036478014, 0.036483, 0.036483472, 0.036488, 0.036488472, 0.036495514, 0.036495986, 0.036502514, 0.036502986, 0.036509319, 0.036509792, 0.036520375, 0.036520847, 0.036529472, 0.036529944, 0.036534375, 0.036534847, 0.036540333, 0.036540806, 0.036546389, 0.036546861, 0.036556736, 0.036557208, 0.036567486, 0.036567958, 0.036575542, 0.036576014, 0.036581167, 0.036581639, 0.036590583, 0.036591056, 0.036599264, 0.036599736, 0.036609361, 0.036609833, 0.036615208, 0.036615681, 0.036622972, 0.036623514, 0.036633194, 0.036633667, 0.036638931, 0.036639403, 0.036648958, 0.036649431, 0.036657514, 0.036657986, 0.036662625, 0.036663097], 'diff': [0, 4.7199999999442133e-07, 7.694000000002532e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 1.0763999999996443e-05, 4.7300000000083386e-07, 5.8050000000045565e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.04200000000371e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.694999999996067e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999442133e-07, 7.33400000000467e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.944000000003782e-06, 4.7299999999389497e-07, 8.208000000002602e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7299999999389497e-07, 7.290999999999548e-06, 5.420000000061487e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07], 'source_diff': [0, 4.7199999999442133e-07, 7.694000000002532e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 1.0763999999996443e-05, 4.7300000000083386e-07, 5.8050000000045565e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.04200000000371e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.694999999996067e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999442133e-07, 7.33400000000467e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.944000000003782e-06, 4.7299999999389497e-07, 8.208000000002602e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7299999999389497e-07, 7.290999999999548e-06, 5.420000000061487e-07, 9.679999999998024e-06, 4.7300000000083386e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:47.491" endtime="20201112 09:42:47.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.481" endtime="20201112 09:42:47.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.512" level="INFO">${RESULT} = [{'time': 0.036260125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036268292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:47.503" endtime="20201112 09:42:47.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.543" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:47.514" endtime="20201112 09:42:47.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.553" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.551" endtime="20201112 09:42:47.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.558" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:47.555" endtime="20201112 09:42:47.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.545" endtime="20201112 09:42:47.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.568" endtime="20201112 09:42:47.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.576" endtime="20201112 09:42:47.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.572" endtime="20201112 09:42:47.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.563" endtime="20201112 09:42:47.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.962" endtime="20201112 09:42:47.602"></status>
</kw>
<msg timestamp="20201112 09:42:47.602" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.622" endtime="20201112 09:42:47.632"></status>
</kw>
<msg timestamp="20201112 09:42:47.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.619" endtime="20201112 09:42:47.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.640" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.636" endtime="20201112 09:42:47.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.642" endtime="20201112 09:42:47.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.611" endtime="20201112 09:42:47.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.607" endtime="20201112 09:42:47.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.665" endtime="20201112 09:42:48.013"></status>
</kw>
<msg timestamp="20201112 09:42:48.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.662" endtime="20201112 09:42:48.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.023" endtime="20201112 09:42:48.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.043" endtime="20201112 09:42:48.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.655" endtime="20201112 09:42:48.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.650" endtime="20201112 09:42:48.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.060" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.058" endtime="20201112 09:42:48.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.072" level="INFO">VALUE: [{'time': 0.036007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036013556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.036014028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036021153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.036021625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.036030819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036038069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036038542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036048944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.036049417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036057917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036058389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036063875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036064347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036068792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.445000000005694e-06, 'source_diff': 4.445000000005694e-06}, {'time': 0.036069264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036078819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036079292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036084236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036084708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036094236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.036094778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.036103958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036113278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.03611375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036120486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036120958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036127583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.036128056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036134375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.036134847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036143153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036143625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.036152, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036161847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.036162319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036167833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.036168306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036177208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902000000005073e-06, 'source_diff': 8.902000000005073e-06}, {'time': 0.036177681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036183486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.036183958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036190569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036191042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036197153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.036197625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036202486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.036202958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036212514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.036212986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036220542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036221014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036228847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036238417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036238889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036244681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.036245153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036255111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.036255583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.036263847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036269833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036270306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03627875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999996343e-06, 'source_diff': 8.443999999996343e-06}, {'time': 0.036279292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036289181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.036289653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036300458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.036300931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036307222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.036307694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036316097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036316569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036321431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.036321903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.03632775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036333333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036333806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036340972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999995953e-06, 'source_diff': 7.165999999995953e-06}, {'time': 0.036341444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036351403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958999999996887e-06, 'source_diff': 9.958999999996887e-06}, {'time': 0.036351875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036358389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036358861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036368944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036369417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036378028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.0363785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036383347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.036383819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036391597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036392069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.036400736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.062" endtime="20201112 09:42:48.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.052" endtime="20201112 09:42:48.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.131" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:48.078" endtime="20201112 09:42:48.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.140" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.138" endtime="20201112 09:42:48.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.150" level="INFO">VALUE: {'eventtime': [0.036007139, 0.036007681, 0.036013556, 0.036014028, 0.036021153, 0.036021625, 0.036030347, 0.036030819, 0.036038069, 0.036038542, 0.036048944, 0.036049417, 0.036057917, 0.036058389, 0.036063875, 0.036064347, 0.036068792, 0.036069264, 0.036078819, 0.036079292, 0.036084236, 0.036084708, 0.036094236, 0.036094778, 0.036103486, 0.036103958, 0.036113278, 0.03611375, 0.036120486, 0.036120958, 0.036127583, 0.036128056, 0.036134375, 0.036134847, 0.036143153, 0.036143625, 0.036151528, 0.036152, 0.036161847, 0.036162319, 0.036167833, 0.036168306, 0.036177208, 0.036177681, 0.036183486, 0.036183958, 0.036190569, 0.036191042, 0.036197153, 0.036197625, 0.036202486, 0.036202958, 0.036212514, 0.036212986, 0.036220542, 0.036221014, 0.036228375, 0.036228847, 0.036238417, 0.036238889, 0.036244681, 0.036245153, 0.036255111, 0.036255583, 0.036263375, 0.036263847, 0.036269833, 0.036270306, 0.03627875, 0.036279292, 0.036289181, 0.036289653, 0.036300458, 0.036300931, 0.036307222, 0.036307694, 0.036316097, 0.036316569, 0.036321431, 0.036321903, 0.036327278, 0.03632775, 0.036333333, 0.036333806, 0.036340972, 0.036341444, 0.036351403, 0.036351875, 0.036358389, 0.036358861, 0.036368944, 0.036369417, 0.036378028, 0.0363785, 0.036383347, 0.036383819, 0.036391597, 0.036392069, 0.036400264, 0.036400736], 'diff': [0, 5.419999999992098e-07, 5.875000000002406e-06, 4.7199999999442133e-07, 7.125000000003656e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 4.445000000005694e-06, 4.7199999999442133e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.528000000001702e-06, 5.419999999992098e-07, 8.707999999996163e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.903000000003546e-06, 4.7199999999442133e-07, 9.847000000000328e-06, 4.720000000013602e-07, 5.51400000000507e-06, 4.7299999999389497e-07, 8.902000000005073e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 8.443999999996343e-06, 5.419999999992098e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 6.290999999998548e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 4.86200000000131e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 7.165999999995953e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07], 'source_diff': [0, 5.419999999992098e-07, 5.875000000002406e-06, 4.7199999999442133e-07, 7.125000000003656e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 4.445000000005694e-06, 4.7199999999442133e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.528000000001702e-06, 5.419999999992098e-07, 8.707999999996163e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 7.903000000003546e-06, 4.7199999999442133e-07, 9.847000000000328e-06, 4.720000000013602e-07, 5.51400000000507e-06, 4.7299999999389497e-07, 8.902000000005073e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 8.443999999996343e-06, 5.419999999992098e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 6.290999999998548e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 4.86200000000131e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7300000000083386e-07, 7.165999999995953e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:48.143" endtime="20201112 09:42:48.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.133" endtime="20201112 09:42:48.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.164" level="INFO">${RESULT} = [{'time': 0.036007681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036014028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.155" endtime="20201112 09:42:48.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.195" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:48.166" endtime="20201112 09:42:48.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.203" endtime="20201112 09:42:48.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.211" level="INFO">VALUE: [5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.208" endtime="20201112 09:42:48.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.197" endtime="20201112 09:42:48.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.219" endtime="20201112 09:42:48.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.228" endtime="20201112 09:42:48.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.223" endtime="20201112 09:42:48.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.215" endtime="20201112 09:42:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.603" endtime="20201112 09:42:48.253"></status>
</kw>
<msg timestamp="20201112 09:42:48.254" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.275" endtime="20201112 09:42:48.285"></status>
</kw>
<msg timestamp="20201112 09:42:48.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.271" endtime="20201112 09:42:48.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.289" endtime="20201112 09:42:48.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.295" endtime="20201112 09:42:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.263" endtime="20201112 09:42:48.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.258" endtime="20201112 09:42:48.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.318" endtime="20201112 09:42:48.658"></status>
</kw>
<msg timestamp="20201112 09:42:48.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03749575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:48.315" endtime="20201112 09:42:48.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03749575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:48.668" endtime="20201112 09:42:48.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.687" endtime="20201112 09:42:48.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.308" endtime="20201112 09:42:48.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.303" endtime="20201112 09:42:48.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.704" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.702" endtime="20201112 09:42:48.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.715" level="INFO">VALUE: [{'time': 0.037495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03749575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037500917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.037501389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037507611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.037508083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037516278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.03751675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037521792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.037522264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037530667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037536514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037536986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037541625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037542097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037547417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999996161e-06, 'source_diff': 5.319999999996161e-06}, {'time': 0.037547958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037555417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.037555889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0375645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037564972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037569722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037570194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037577569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037578042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.037587444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037596347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.037596819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037605042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.037605514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.037613, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037622458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.037622931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037633111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.037633583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037640264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037646472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037646944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037656931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986999999996027e-06, 'source_diff': 9.986999999996027e-06}, {'time': 0.037657403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037667778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.03766825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037678639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037679111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037689944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.037690417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037697542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.037698014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037703167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037703639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037711111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.037711583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037720931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.037721403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037725944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.037726417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037735653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.037736125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037743375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037743847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037753083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.037753556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037764153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037764625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037770639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037771111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037776958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.0377775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037784306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.037784778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037795167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037795639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037803611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.037804083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037810361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.037810903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037820972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.037821444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037825972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.037826444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037832861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037833333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037840903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.57000000000535e-06, 'source_diff': 7.57000000000535e-06}, {'time': 0.037841375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037846014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037846486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037851597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.037852139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037859903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.037860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037868667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037869139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037874097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.037874569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037880472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.037880944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.706" endtime="20201112 09:42:48.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.696" endtime="20201112 09:42:48.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.774" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:48.721" endtime="20201112 09:42:48.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.783" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.781" endtime="20201112 09:42:48.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.792" level="INFO">VALUE: {'eventtime': [0.037495278, 0.03749575, 0.037500917, 0.037501389, 0.037507611, 0.037508083, 0.037516278, 0.03751675, 0.037521792, 0.037522264, 0.037530667, 0.037531139, 0.037536514, 0.037536986, 0.037541625, 0.037542097, 0.037547417, 0.037547958, 0.037555417, 0.037555889, 0.0375645, 0.037564972, 0.037569722, 0.037570194, 0.037577569, 0.037578042, 0.037586972, 0.037587444, 0.037596347, 0.037596819, 0.037605042, 0.037605514, 0.037612528, 0.037613, 0.037622458, 0.037622931, 0.037633111, 0.037633583, 0.037639792, 0.037640264, 0.037646472, 0.037646944, 0.037656931, 0.037657403, 0.037667778, 0.03766825, 0.037678639, 0.037679111, 0.037689944, 0.037690417, 0.037697542, 0.037698014, 0.037703167, 0.037703639, 0.037711111, 0.037711583, 0.037720931, 0.037721403, 0.037725944, 0.037726417, 0.037735653, 0.037736125, 0.037743375, 0.037743847, 0.037753083, 0.037753556, 0.037764153, 0.037764625, 0.037770639, 0.037771111, 0.037776958, 0.0377775, 0.037784306, 0.037784778, 0.037795167, 0.037795639, 0.037803611, 0.037804083, 0.037810361, 0.037810903, 0.037820972, 0.037821444, 0.037825972, 0.037826444, 0.037832861, 0.037833333, 0.037840903, 0.037841375, 0.037846014, 0.037846486, 0.037851597, 0.037852139, 0.037859903, 0.037860375, 0.037868667, 0.037869139, 0.037874097, 0.037874569, 0.037880472, 0.037880944], 'diff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.319999999996161e-06, 5.409999999997361e-07, 7.459000000001326e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 8.223000000001646e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.986999999996027e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7299999999389497e-07, 7.125000000003656e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.846999999996327e-06, 5.419999999992098e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.764000000000382e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.319999999996161e-06, 5.409999999997361e-07, 7.459000000001326e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 8.223000000001646e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.986999999996027e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7299999999389497e-07, 7.125000000003656e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.846999999996327e-06, 5.419999999992098e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.764000000000382e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:48.785" endtime="20201112 09:42:48.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.776" endtime="20201112 09:42:48.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.807" level="INFO">${RESULT} = [{'time': 0.03749575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037501389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:48.798" endtime="20201112 09:42:48.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.837" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:48.809" endtime="20201112 09:42:48.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.849" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.845" endtime="20201112 09:42:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.854" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.851" endtime="20201112 09:42:48.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.839" endtime="20201112 09:42:48.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.863" endtime="20201112 09:42:48.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.871" endtime="20201112 09:42:48.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.866" endtime="20201112 09:42:48.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.858" endtime="20201112 09:42:48.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.255" endtime="20201112 09:42:48.897"></status>
</kw>
<msg timestamp="20201112 09:42:48.897" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.917" endtime="20201112 09:42:48.927"></status>
</kw>
<msg timestamp="20201112 09:42:48.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.913" endtime="20201112 09:42:48.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.934" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.930" endtime="20201112 09:42:48.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.936" endtime="20201112 09:42:48.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.906" endtime="20201112 09:42:48.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.902" endtime="20201112 09:42:48.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.960" endtime="20201112 09:42:49.298"></status>
</kw>
<msg timestamp="20201112 09:42:49.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035784361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035784833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.956" endtime="20201112 09:42:49.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035784361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035784833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.307" endtime="20201112 09:42:49.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.327" endtime="20201112 09:42:49.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.949" endtime="20201112 09:42:49.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.945" endtime="20201112 09:42:49.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.343" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.341" endtime="20201112 09:42:49.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.355" level="INFO">VALUE: [{'time': 0.035784361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035784833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03579575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035796222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035803375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.035803847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035810153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.035810625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035819653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.035820125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035824667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.035825139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035834278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.03583475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035842764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.035843236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.035852625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035860708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.035861181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035867514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.035867986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0358725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.51400000000407e-06, 'source_diff': 4.51400000000407e-06}, {'time': 0.035872972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035878667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.035879139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035885889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.035886361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035893917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.035894389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035902486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.035902958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035907903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.035908375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035917611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.035918083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.035927917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035933806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.035934278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035945083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.035945556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035955847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.035956319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035964611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035965083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.035975431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035983542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.035984014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035992611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.035993083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036003486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036003958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036011403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999994817e-06, 'source_diff': 7.444999999994817e-06}, {'time': 0.036011875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036019861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036020333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036025625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.036026097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036033542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.036034014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036041819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.036042292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036051611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.036052083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036056625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036057097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333999999994731e-06, 'source_diff': 4.333999999994731e-06}, {'time': 0.036061903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036069875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.036070347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036077125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.036077667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036084486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.036084958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036092, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036092472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.036102014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036109556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.036110028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.036119458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036127, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.036127472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.036135611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036143694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036144167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036148722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.036149194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036156875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.036157347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036167917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0570000000001412e-05, 'source_diff': 1.0570000000001412e-05}, {'time': 0.036168389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036176278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.03617675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036186208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036186681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:49.345" endtime="20201112 09:42:49.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.335" endtime="20201112 09:42:49.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:49.416" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:49.361" endtime="20201112 09:42:49.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.425" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:49.423" endtime="20201112 09:42:49.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.434" level="INFO">VALUE: {'eventtime': [0.035784361, 0.035784833, 0.03579575, 0.035796222, 0.035803375, 0.035803847, 0.035810153, 0.035810625, 0.035819653, 0.035820125, 0.035824667, 0.035825139, 0.035834278, 0.03583475, 0.035842764, 0.035843236, 0.035852153, 0.035852625, 0.035860708, 0.035861181, 0.035867514, 0.035867986, 0.0358725, 0.035872972, 0.035878667, 0.035879139, 0.035885889, 0.035886361, 0.035893917, 0.035894389, 0.035902486, 0.035902958, 0.035907903, 0.035908375, 0.035917611, 0.035918083, 0.035927444, 0.035927917, 0.035933806, 0.035934278, 0.035945083, 0.035945556, 0.035955847, 0.035956319, 0.035964611, 0.035965083, 0.035974958, 0.035975431, 0.035983542, 0.035984014, 0.035992611, 0.035993083, 0.036003486, 0.036003958, 0.036011403, 0.036011875, 0.036019861, 0.036020333, 0.036025625, 0.036026097, 0.036033542, 0.036034014, 0.036041819, 0.036042292, 0.036051611, 0.036052083, 0.036056625, 0.036057097, 0.036061431, 0.036061903, 0.036069875, 0.036070347, 0.036077125, 0.036077667, 0.036084486, 0.036084958, 0.036092, 0.036092472, 0.036101542, 0.036102014, 0.036109556, 0.036110028, 0.036118986, 0.036119458, 0.036127, 0.036127472, 0.036135139, 0.036135611, 0.036143694, 0.036144167, 0.036148722, 0.036149194, 0.036156875, 0.036157347, 0.036167917, 0.036168389, 0.036176278, 0.03617675, 0.036186208, 0.036186681], 'diff': [0, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 6.333000000004196e-06, 4.7199999999442133e-07, 4.51400000000407e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7299999999389497e-07, 5.889000000001976e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7299999999389497e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.7299999999389497e-07, 9.319000000000688e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.333999999994731e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 6.818999999998188e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.555000000003306e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 6.333000000004196e-06, 4.7199999999442133e-07, 4.51400000000407e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7299999999389497e-07, 5.889000000001976e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7299999999389497e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 7.804999999999618e-06, 4.7299999999389497e-07, 9.319000000000688e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.333999999994731e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 6.818999999998188e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 4.555000000003306e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 09:42:49.427" endtime="20201112 09:42:49.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.418" endtime="20201112 09:42:49.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.449" level="INFO">${RESULT} = [{'time': 0.035784833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035796222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.439" endtime="20201112 09:42:49.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.479" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:49.451" endtime="20201112 09:42:49.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:49.486" endtime="20201112 09:42:49.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.494" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:49.491" endtime="20201112 09:42:49.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.480" endtime="20201112 09:42:49.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.503" endtime="20201112 09:42:49.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.511" endtime="20201112 09:42:49.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.507" endtime="20201112 09:42:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.498" endtime="20201112 09:42:49.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.898" endtime="20201112 09:42:49.537"></status>
</kw>
<msg timestamp="20201112 09:42:49.538" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.558" endtime="20201112 09:42:49.569"></status>
</kw>
<msg timestamp="20201112 09:42:49.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.555" endtime="20201112 09:42:49.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.572" endtime="20201112 09:42:49.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.578" endtime="20201112 09:42:49.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.548" endtime="20201112 09:42:49.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.542" endtime="20201112 09:42:49.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.602" endtime="20201112 09:42:49.932"></status>
</kw>
<msg timestamp="20201112 09:42:49.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037292583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037293056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.598" endtime="20201112 09:42:49.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037292583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037293056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.941" endtime="20201112 09:42:49.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.961" endtime="20201112 09:42:49.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.591" endtime="20201112 09:42:49.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.586" endtime="20201112 09:42:49.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.977" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.975" endtime="20201112 09:42:49.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.988" level="INFO">VALUE: [{'time': 0.037292583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037293056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037299903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.037300375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037307833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037308306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037319222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.037319694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037326417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.037326889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037333736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037334208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037338847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037339319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037347722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037348194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037358903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.037359375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037368306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.037368778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037376236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037376708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.037386347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03739275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.037393222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037404028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.0374045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037410111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.037410653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037415542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.037416083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037421139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.037421611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.037427569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.037433931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03744025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.037440722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037447875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.037448347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037458736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037459208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037463847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037464319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111999999996621e-06, 'source_diff': 7.111999999996621e-06}, {'time': 0.037471972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037482014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.037482486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037491417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.037491889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037501236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037501708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037508125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037508597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03751325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.037513722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037524306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.037524778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037535167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037535639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037543903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.037544444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037550417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.037550889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037556264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037556736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037562486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037570681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037571153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037581333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.037581806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.037587444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.037597361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037607764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037608236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037617986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.037618458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037627125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037636139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.037636611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.037642889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.037651028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037661625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999994139e-05, 'source_diff': 1.0596999999994139e-05}, {'time': 0.037662097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037669056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.037669528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037678125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037678597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037683361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.037683833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037694319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.037694792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:49.979" endtime="20201112 09:42:49.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.969" endtime="20201112 09:42:49.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:50.048" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:49.994" endtime="20201112 09:42:50.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.057" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:50.055" endtime="20201112 09:42:50.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.066" level="INFO">VALUE: {'eventtime': [0.037292583, 0.037293056, 0.037299903, 0.037300375, 0.037307833, 0.037308306, 0.037319222, 0.037319694, 0.037326417, 0.037326889, 0.037333736, 0.037334208, 0.037338847, 0.037339319, 0.037347722, 0.037348194, 0.037358903, 0.037359375, 0.037368306, 0.037368778, 0.037376236, 0.037376708, 0.037385875, 0.037386347, 0.03739275, 0.037393222, 0.037404028, 0.0374045, 0.037410111, 0.037410653, 0.037415542, 0.037416083, 0.037421139, 0.037421611, 0.037427097, 0.037427569, 0.037433458, 0.037433931, 0.03744025, 0.037440722, 0.037447875, 0.037448347, 0.037458736, 0.037459208, 0.037463847, 0.037464319, 0.037471431, 0.037471972, 0.037482014, 0.037482486, 0.037491417, 0.037491889, 0.037501236, 0.037501708, 0.037508125, 0.037508597, 0.03751325, 0.037513722, 0.037524306, 0.037524778, 0.037535167, 0.037535639, 0.037543903, 0.037544444, 0.037550417, 0.037550889, 0.037556264, 0.037556736, 0.037562014, 0.037562486, 0.037570681, 0.037571153, 0.037581333, 0.037581806, 0.037586972, 0.037587444, 0.037596889, 0.037597361, 0.037607764, 0.037608236, 0.037617986, 0.037618458, 0.037626653, 0.037627125, 0.037636139, 0.037636611, 0.037642417, 0.037642889, 0.037650556, 0.037651028, 0.037661625, 0.037662097, 0.037669056, 0.037669528, 0.037678125, 0.037678597, 0.037683361, 0.037683833, 0.037694319, 0.037694792], 'diff': [0, 4.7300000000083386e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 6.7230000000001455e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.611000000002586e-06, 5.419999999992098e-07, 4.889000000000976e-06, 5.409999999997361e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.111999999996621e-06, 5.409999999997361e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.264000000000882e-06, 5.409999999997361e-07, 5.9729999999993955e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 6.959000000000826e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07], 'source_diff': [0, 4.7300000000083386e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 6.7230000000001455e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 5.611000000002586e-06, 5.419999999992098e-07, 4.889000000000976e-06, 5.409999999997361e-07, 5.055999999996341e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7299999999389497e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.111999999996621e-06, 5.409999999997361e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.264000000000882e-06, 5.409999999997361e-07, 5.9729999999993955e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 6.959000000000826e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:50.059" endtime="20201112 09:42:50.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.050" endtime="20201112 09:42:50.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.081" level="INFO">${RESULT} = [{'time': 0.037293056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037300375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.071" endtime="20201112 09:42:50.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.111" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:50.083" endtime="20201112 09:42:50.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.121" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:50.119" endtime="20201112 09:42:50.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.126" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:50.123" endtime="20201112 09:42:50.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.113" endtime="20201112 09:42:50.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.135" endtime="20201112 09:42:50.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.143" endtime="20201112 09:42:50.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.139" endtime="20201112 09:42:50.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.131" endtime="20201112 09:42:50.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.539" endtime="20201112 09:42:50.169"></status>
</kw>
<msg timestamp="20201112 09:42:50.169" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.191" endtime="20201112 09:42:50.202"></status>
</kw>
<msg timestamp="20201112 09:42:50.203" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.188" endtime="20201112 09:42:50.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.205" endtime="20201112 09:42:50.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.211" endtime="20201112 09:42:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.180" endtime="20201112 09:42:50.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.174" endtime="20201112 09:42:50.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.234" endtime="20201112 09:42:50.571"></status>
</kw>
<msg timestamp="20201112 09:42:50.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037982111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037982583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.231" endtime="20201112 09:42:50.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037982111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037982583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.581" endtime="20201112 09:42:50.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.600" endtime="20201112 09:42:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.224" endtime="20201112 09:42:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.219" endtime="20201112 09:42:50.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.616" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:50.614" endtime="20201112 09:42:50.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.628" level="INFO">VALUE: [{'time': 0.037982111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037982583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037986917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.037987389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037998292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.037998764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03800475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.038005222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038014361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.038014833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038022819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038023292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038030458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.038030931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038040889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.038041361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038051861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.038052333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038062292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958999999996887e-06, 'source_diff': 9.958999999996887e-06}, {'time': 0.038062764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038067931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038068403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038073986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.038074458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038082181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.038082722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038087986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.038088458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038097708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038098181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038104486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.038104958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038114306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.038114778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038124125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038124597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.0381295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038138111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.038138583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038147514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.038147986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038153264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.038153736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.038159389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038164639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.038165111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038171847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038172319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03817925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999994747e-06, 'source_diff': 6.930999999994747e-06}, {'time': 0.038179722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038185736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.038186208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038190514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.038190986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038200653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.038201125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038206167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.038206708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038216944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000003742e-05, 'source_diff': 1.0236000000003742e-05}, {'time': 0.038217417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038227167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.038227639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038238542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.038239014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038248889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.038249361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038260042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.038260583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038265597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.038266069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038271042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.038271514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038279708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.038280181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038285125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038285597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038290486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.038290958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038296611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.038297083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038304653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.038305125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038315208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.038315681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038322528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.038323, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038328194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.038328736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038336083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.038336556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038342889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.038343361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038351958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.038352431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.038360681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038367, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.038367472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:50.619" endtime="20201112 09:42:50.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.608" endtime="20201112 09:42:50.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:50.687" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:50.634" endtime="20201112 09:42:50.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.696" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:50.694" endtime="20201112 09:42:50.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.706" level="INFO">VALUE: {'eventtime': [0.037982111, 0.037982583, 0.037986917, 0.037987389, 0.037998292, 0.037998764, 0.03800475, 0.038005222, 0.038014361, 0.038014833, 0.038022819, 0.038023292, 0.038030458, 0.038030931, 0.038040889, 0.038041361, 0.038051861, 0.038052333, 0.038062292, 0.038062764, 0.038067931, 0.038068403, 0.038073986, 0.038074458, 0.038082181, 0.038082722, 0.038087986, 0.038088458, 0.038097708, 0.038098181, 0.038104486, 0.038104958, 0.038114306, 0.038114778, 0.038124125, 0.038124597, 0.038129028, 0.0381295, 0.038138111, 0.038138583, 0.038147514, 0.038147986, 0.038153264, 0.038153736, 0.038158917, 0.038159389, 0.038164639, 0.038165111, 0.038171847, 0.038172319, 0.03817925, 0.038179722, 0.038185736, 0.038186208, 0.038190514, 0.038190986, 0.038200653, 0.038201125, 0.038206167, 0.038206708, 0.038216944, 0.038217417, 0.038227167, 0.038227639, 0.038238542, 0.038239014, 0.038248889, 0.038249361, 0.038260042, 0.038260583, 0.038265597, 0.038266069, 0.038271042, 0.038271514, 0.038279708, 0.038280181, 0.038285125, 0.038285597, 0.038290486, 0.038290958, 0.038296611, 0.038297083, 0.038304653, 0.038305125, 0.038315208, 0.038315681, 0.038322528, 0.038323, 0.038328194, 0.038328736, 0.038336083, 0.038336556, 0.038342889, 0.038343361, 0.038351958, 0.038352431, 0.038360208, 0.038360681, 0.038367, 0.038367472], 'diff': [0, 4.720000000013602e-07, 4.33400000000167e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 5.985999999999492e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 9.958000000004352e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 7.723000000001146e-06, 5.409999999997361e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.041999999996771e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 4.7299999999389497e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 5.409999999997361e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7299999999389497e-07, 6.847000000004266e-06, 4.720000000013602e-07, 5.194000000000032e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 4.33400000000167e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 5.985999999999492e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 9.958000000004352e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.720000000013602e-07, 7.723000000001146e-06, 5.409999999997361e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.930999999994747e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.041999999996771e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 4.7299999999389497e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 5.409999999997361e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7299999999389497e-07, 6.847000000004266e-06, 4.720000000013602e-07, 5.194000000000032e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:50.699" endtime="20201112 09:42:50.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.689" endtime="20201112 09:42:50.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.720" level="INFO">${RESULT} = [{'time': 0.037982583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037987389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:50.711" endtime="20201112 09:42:50.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.751" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:50.722" endtime="20201112 09:42:50.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.762" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:50.759" endtime="20201112 09:42:50.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.767" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:50.764" endtime="20201112 09:42:50.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.752" endtime="20201112 09:42:50.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.776" endtime="20201112 09:42:50.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.784" endtime="20201112 09:42:50.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.780" endtime="20201112 09:42:50.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.772" endtime="20201112 09:42:50.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.170" endtime="20201112 09:42:50.810"></status>
</kw>
<msg timestamp="20201112 09:42:50.810" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.830" endtime="20201112 09:42:50.840"></status>
</kw>
<msg timestamp="20201112 09:42:50.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.826" endtime="20201112 09:42:50.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.844" endtime="20201112 09:42:50.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.850" endtime="20201112 09:42:50.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.819" endtime="20201112 09:42:50.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.815" endtime="20201112 09:42:50.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.873" endtime="20201112 09:42:51.208"></status>
</kw>
<msg timestamp="20201112 09:42:51.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035745042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.870" endtime="20201112 09:42:51.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035745042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.217" endtime="20201112 09:42:51.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.237" endtime="20201112 09:42:51.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.863" endtime="20201112 09:42:51.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.858" endtime="20201112 09:42:51.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.253" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:51.251" endtime="20201112 09:42:51.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.264" level="INFO">VALUE: [{'time': 0.035744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035745042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035750319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000004917e-06, 'source_diff': 5.277000000004917e-06}, {'time': 0.035750792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035757847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.035758319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035764944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035765417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035772667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035773139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035778194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.035778667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035787597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.035788069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035794375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.035794847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035802625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035803097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035811097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.035811569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035822472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035822944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035827903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.035828375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035836472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.035836944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035842, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.035842472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03585025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035850722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035855028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.0358555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035861819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.035862292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.035868667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0358755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035875972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.035884014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03589325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.035893722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035903903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.035904375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035909167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.035909708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035919361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.035919833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.035928708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03593825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035938722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035943986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035944458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035950347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.035950819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035956403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.035956875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035961514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035961986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035969028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.0359695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035979986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.035980458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.035987042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035992792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7500000000057505e-06, 'source_diff': 5.7500000000057505e-06}, {'time': 0.035993333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.036002625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.036019208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036025833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036026306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036032625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.036033097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036043819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036044292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.0360545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036063222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.036063694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036068014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.036068486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.036073264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036082556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036092625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036093097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036102972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036103444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036112431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.036118597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036126583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.036127056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:51.255" endtime="20201112 09:42:51.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.245" endtime="20201112 09:42:51.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:51.325" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:51.270" endtime="20201112 09:42:51.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.335" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:51.332" endtime="20201112 09:42:51.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.344" level="INFO">VALUE: {'eventtime': [0.035744569, 0.035745042, 0.035750319, 0.035750792, 0.035757847, 0.035758319, 0.035764944, 0.035765417, 0.035772667, 0.035773139, 0.035778194, 0.035778667, 0.035787597, 0.035788069, 0.035794375, 0.035794847, 0.035802625, 0.035803097, 0.035811097, 0.035811569, 0.035822472, 0.035822944, 0.035827903, 0.035828375, 0.035836472, 0.035836944, 0.035842, 0.035842472, 0.03585025, 0.035850722, 0.035855028, 0.0358555, 0.035861819, 0.035862292, 0.035868125, 0.035868667, 0.0358755, 0.035875972, 0.035883542, 0.035884014, 0.03589325, 0.035893722, 0.035903903, 0.035904375, 0.035909167, 0.035909708, 0.035919361, 0.035919833, 0.035928236, 0.035928708, 0.03593825, 0.035938722, 0.035943986, 0.035944458, 0.035950347, 0.035950819, 0.035956403, 0.035956875, 0.035961514, 0.035961986, 0.035969028, 0.0359695, 0.035979986, 0.035980458, 0.035986569, 0.035987042, 0.035992792, 0.035993333, 0.036002153, 0.036002625, 0.036012056, 0.036012528, 0.036018736, 0.036019208, 0.036025833, 0.036026306, 0.036032625, 0.036033097, 0.036043819, 0.036044292, 0.036054028, 0.0360545, 0.036063222, 0.036063694, 0.036068014, 0.036068486, 0.036072792, 0.036073264, 0.036082083, 0.036082556, 0.036092625, 0.036093097, 0.036102972, 0.036103444, 0.036111958, 0.036112431, 0.036118125, 0.036118597, 0.036126583, 0.036127056], 'diff': [0, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7299999999389497e-07, 5.833000000003696e-06, 5.419999999992098e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.791999999996521e-06, 5.409999999997361e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7299999999389497e-07, 5.7500000000057505e-06, 5.409999999997361e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.7300000000083386e-07, 9.736000000003242e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.7300000000083386e-07, 5.277000000004917e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7299999999389497e-07, 5.833000000003696e-06, 5.419999999992098e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.791999999996521e-06, 5.409999999997361e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7299999999389497e-07, 5.7500000000057505e-06, 5.409999999997361e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.7300000000083386e-07, 9.736000000003242e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.7300000000083386e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 09:42:51.337" endtime="20201112 09:42:51.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.327" endtime="20201112 09:42:51.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.358" level="INFO">${RESULT} = [{'time': 0.035745042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035750792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.349" endtime="20201112 09:42:51.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.388" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:51.360" endtime="20201112 09:42:51.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.399" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:51.396" endtime="20201112 09:42:51.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.404" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:51.401" endtime="20201112 09:42:51.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.390" endtime="20201112 09:42:51.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.413" endtime="20201112 09:42:51.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.421" endtime="20201112 09:42:51.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.417" endtime="20201112 09:42:51.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.409" endtime="20201112 09:42:51.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.811" endtime="20201112 09:42:51.446"></status>
</kw>
<msg timestamp="20201112 09:42:51.447" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.467" endtime="20201112 09:42:51.477"></status>
</kw>
<msg timestamp="20201112 09:42:51.478" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.463" endtime="20201112 09:42:51.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.484" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.480" endtime="20201112 09:42:51.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.487" endtime="20201112 09:42:51.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.456" endtime="20201112 09:42:51.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.452" endtime="20201112 09:42:51.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.510" endtime="20201112 09:42:51.851"></status>
</kw>
<msg timestamp="20201112 09:42:51.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035792375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035792847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.506" endtime="20201112 09:42:51.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035792375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035792847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.861" endtime="20201112 09:42:51.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.880" endtime="20201112 09:42:51.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.499" endtime="20201112 09:42:51.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.495" endtime="20201112 09:42:51.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.896" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:51.894" endtime="20201112 09:42:51.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.908" level="INFO">VALUE: [{'time': 0.035792375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035792847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.035803306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035812278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035817875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.035818347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.035824181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035830917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035831389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035837917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.035838389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035848458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.035848931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035859125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.035859597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035864778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.03586525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.03587225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.035880583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035887833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035888306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035894722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999995203e-06, 'source_diff': 6.415999999995203e-06}, {'time': 0.035895194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035899847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.035900319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035905486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.035905958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035912278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.03591275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035921972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.035922444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035932097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000005296e-06, 'source_diff': 9.653000000005296e-06}, {'time': 0.035932569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035942278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000003576e-06, 'source_diff': 9.709000000003576e-06}, {'time': 0.035942819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035948292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.035948764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035955083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.035955556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035961028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.0359615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035967944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.035968417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035976806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.035977278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035984139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.035984611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035994667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.035995139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.036000667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036011583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.036012056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036022139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036022611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036029347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036029819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036036653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.036037125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036046681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.036047153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036052056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036058486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.036058958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.036066264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036070583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.036071056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.036081056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036089986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036090458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036096097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036105444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036105917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036115667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.036116139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036124653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036125125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036130236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036138764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999993763e-06, 'source_diff': 8.527999999993763e-06}, {'time': 0.036139236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036147944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036148417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036159014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.036159486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036166764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036167236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036173944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.036174417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036181792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.036182264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:51.898" endtime="20201112 09:42:51.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.888" endtime="20201112 09:42:51.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:51.967" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:51.914" endtime="20201112 09:42:51.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.976" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:51.974" endtime="20201112 09:42:51.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.985" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.035792375, 0.035792847, 0.035802833, 0.035803306, 0.035811806, 0.035812278, 0.035817875, 0.035818347, 0.035823708, 0.035824181, 0.035830917, 0.035831389, 0.035837917, 0.035838389, 0.035848458, 0.035848931, 0.035859125, 0.035859597, 0.035864778, 0.03586525, 0.035871708, 0.03587225, 0.035880111, 0.035880583, 0.035887833, 0.035888306, 0.035894722, 0.035895194, 0.035899847, 0.035900319, 0.035905486, 0.035905958, 0.035912278, 0.03591275, 0.035921972, 0.035922444, 0.035932097, 0.035932569, 0.035942278, 0.035942819, 0.035948292, 0.035948764, 0.035955083, 0.035955556, 0.035961028, 0.0359615, 0.035967944, 0.035968417, 0.035976806, 0.035977278, 0.035984139, 0.035984611, 0.035994667, 0.035995139, 0.036000194, 0.036000667, 0.036011583, 0.036012056, 0.036022139, 0.036022611, 0.036029347, 0.036029819, 0.036036653, 0.036037125, 0.036046681, 0.036047153, 0.036051583, 0.036052056, 0.036058486, 0.036058958, 0.036065792, 0.036066264, 0.036070583, 0.036071056, 0.036080583, 0.036081056, 0.036089986, 0.036090458, 0.036095625, 0.036096097, 0.036105444, 0.036105917, 0.036115667, 0.036116139, 0.036124653, 0.036125125, 0.036129764, 0.036130236, 0.036138764, 0.036139236, 0.036147944, 0.036148417, 0.036159014, 0.036159486, 0.036166764, 0.036167236, 0.036173944, 0.036174417, 0.036181792, 0.036182264], 'diff': [0, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 6.458000000000852e-06, 5.419999999992098e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 9.709000000003576e-06, 5.409999999997361e-07, 5.472999999998895e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 6.444000000001282e-06, 4.7300000000083386e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.83400000000417e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7300000000083386e-07, 7.374999999996967e-06, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 6.458000000000852e-06, 5.419999999992098e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 9.709000000003576e-06, 5.409999999997361e-07, 5.472999999998895e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 6.444000000001282e-06, 4.7300000000083386e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.83400000000417e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7300000000083386e-07, 7.374999999996967e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:51.978" endtime="20201112 09:42:51.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.969" endtime="20201112 09:42:51.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.000" level="INFO">${RESULT} = [{'time': 0.035792847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035803306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.991" endtime="20201112 09:42:52.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.030" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:52.002" endtime="20201112 09:42:52.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:52.038" endtime="20201112 09:42:52.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.045" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:52.042" endtime="20201112 09:42:52.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.032" endtime="20201112 09:42:52.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.054" endtime="20201112 09:42:52.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.063" endtime="20201112 09:42:52.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.058" endtime="20201112 09:42:52.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.050" endtime="20201112 09:42:52.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.448" endtime="20201112 09:42:52.088"></status>
</kw>
<msg timestamp="20201112 09:42:52.088" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.110" endtime="20201112 09:42:52.120"></status>
</kw>
<msg timestamp="20201112 09:42:52.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.106" endtime="20201112 09:42:52.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.123" endtime="20201112 09:42:52.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.130" endtime="20201112 09:42:52.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.097" endtime="20201112 09:42:52.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.093" endtime="20201112 09:42:52.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.153" endtime="20201112 09:42:52.484"></status>
</kw>
<msg timestamp="20201112 09:42:52.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037196958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.149" endtime="20201112 09:42:52.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037196958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.493" endtime="20201112 09:42:52.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.513" endtime="20201112 09:42:52.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.142" endtime="20201112 09:42:52.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.138" endtime="20201112 09:42:52.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.529" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:52.527" endtime="20201112 09:42:52.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.541" level="INFO">VALUE: [{'time': 0.037196958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037197431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037206153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.037206625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037215472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.037215944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037225153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999996137e-06, 'source_diff': 9.208999999996137e-06}, {'time': 0.037225625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037234653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037235125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037241472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.346999999996827e-06, 'source_diff': 6.346999999996827e-06}, {'time': 0.037241944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037252875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930999999998747e-05, 'source_diff': 1.0930999999998747e-05}, {'time': 0.037253417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037260764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.037261236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.037267917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037277278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.03727775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037285306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037285778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037293778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.03729425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037300347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.037300819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.037312, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037322472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000004422e-05, 'source_diff': 1.0472000000004422e-05}, {'time': 0.037322944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037332708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037333181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037339514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.037339986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037347222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.037347694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037352653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.037353125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037358194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.037358667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037365625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037366097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037376583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.037377056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037382431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037382903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037391986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037398306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.037398778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037404861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.037405333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037413569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.037414111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037422667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037428917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.037429458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037436722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037437194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037444681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.037445153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037451958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.037452431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037458542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037459014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037464181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.037464653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037470903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037471375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037480278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.03748075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037489611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.037490153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.037498389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037505028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.0375055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037515778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.03751625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037523708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037524181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037531014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.037531486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037539042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037539514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037545625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037546097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037557375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037568069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.037568542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037575069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.037575542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.818999999993249e-06, 'source_diff': 8.818999999993249e-06}, {'time': 0.037584833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037589278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.03758975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037595014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.037595486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:52.532" endtime="20201112 09:42:52.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.521" endtime="20201112 09:42:52.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:52.601" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:52.547" endtime="20201112 09:42:52.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.611" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:52.608" endtime="20201112 09:42:52.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.620" level="INFO">VALUE: {'eventtime': [0.037196958, 0.037197431, 0.037206153, 0.037206625, 0.037215472, 0.037215944, 0.037225153, 0.037225625, 0.037234653, 0.037235125, 0.037241472, 0.037241944, 0.037252875, 0.037253417, 0.037260764, 0.037261236, 0.037267444, 0.037267917, 0.037277278, 0.03727775, 0.037285306, 0.037285778, 0.037293778, 0.03729425, 0.037300347, 0.037300819, 0.037311528, 0.037312, 0.037322472, 0.037322944, 0.037332708, 0.037333181, 0.037339514, 0.037339986, 0.037347222, 0.037347694, 0.037352653, 0.037353125, 0.037358194, 0.037358667, 0.037365625, 0.037366097, 0.037376583, 0.037377056, 0.037382431, 0.037382903, 0.037391514, 0.037391986, 0.037398306, 0.037398778, 0.037404861, 0.037405333, 0.037413569, 0.037414111, 0.037422667, 0.037423208, 0.037428917, 0.037429458, 0.037436722, 0.037437194, 0.037444681, 0.037445153, 0.037451958, 0.037452431, 0.037458542, 0.037459014, 0.037464181, 0.037464653, 0.037470903, 0.037471375, 0.037480278, 0.03748075, 0.037489611, 0.037490153, 0.037497917, 0.037498389, 0.037505028, 0.0375055, 0.037515778, 0.03751625, 0.037523708, 0.037524181, 0.037531014, 0.037531486, 0.037539042, 0.037539514, 0.037545625, 0.037546097, 0.037556903, 0.037557375, 0.037568069, 0.037568542, 0.037575069, 0.037575542, 0.037584361, 0.037584833, 0.037589278, 0.03758975, 0.037595014, 0.037595486], 'diff': [0, 4.7300000000083386e-07, 8.721999999995733e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.346999999996827e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 5.419999999992098e-07, 7.347000000004766e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 1.0472000000004422e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 8.236000000001742e-06, 5.419999999992098e-07, 8.555999999999842e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999992098e-07, 7.764000000000382e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.458000000001852e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.818999999993249e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07], 'source_diff': [0, 4.7300000000083386e-07, 8.721999999995733e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 6.346999999996827e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 5.419999999992098e-07, 7.347000000004766e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 1.0472000000004422e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 8.236000000001742e-06, 5.419999999992098e-07, 8.555999999999842e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.419999999992098e-07, 7.764000000000382e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.458000000001852e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.818999999993249e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:52.613" endtime="20201112 09:42:52.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.603" endtime="20201112 09:42:52.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.635" level="INFO">${RESULT} = [{'time': 0.037197431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037206625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.626" endtime="20201112 09:42:52.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.667" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:52.637" endtime="20201112 09:42:52.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.677" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:52.675" endtime="20201112 09:42:52.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.682" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:42:52.679" endtime="20201112 09:42:52.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.669" endtime="20201112 09:42:52.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.691" endtime="20201112 09:42:52.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.699" endtime="20201112 09:42:52.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.695" endtime="20201112 09:42:52.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.686" endtime="20201112 09:42:52.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.090" endtime="20201112 09:42:52.725"></status>
</kw>
<msg timestamp="20201112 09:42:52.725" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.745" endtime="20201112 09:42:52.755"></status>
</kw>
<msg timestamp="20201112 09:42:52.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.742" endtime="20201112 09:42:52.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.759" endtime="20201112 09:42:52.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.765" endtime="20201112 09:42:52.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.734" endtime="20201112 09:42:52.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.730" endtime="20201112 09:42:52.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.788" endtime="20201112 09:42:53.126"></status>
</kw>
<msg timestamp="20201112 09:42:53.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.785" endtime="20201112 09:42:53.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.136" endtime="20201112 09:42:53.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.155" endtime="20201112 09:42:53.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.778" endtime="20201112 09:42:53.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.773" endtime="20201112 09:42:53.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.172" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:53.169" endtime="20201112 09:42:53.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.183" level="INFO">VALUE: [{'time': 0.035918819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035924361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.035924833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035932611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035933083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.035938819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035946597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035947069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035957569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.035958042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035964667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035965139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.035970583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035975833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.035976306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035983264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.035983736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035991806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.035992278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036003111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.036003583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.036011917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000004667e-06, 'source_diff': 5.027000000004667e-06}, {'time': 0.036017486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036026069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.036026542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036035917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036036458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036043819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036044292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036054694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.036055167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.036064667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036072861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.036073333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036079542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036080014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036087583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036088056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036094583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.036095056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036103139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036103611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036110986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.036111458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036115986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.036116458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036124556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.09800000000499e-06, 'source_diff': 8.09800000000499e-06}, {'time': 0.036125028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036130389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.036130861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036136361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.036136833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036144083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036144556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036150028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.0361505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036159014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036159486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036166736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036167208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036173208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036173681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036184194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513000000003658e-05, 'source_diff': 1.0513000000003658e-05}, {'time': 0.036184667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036194194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.036194667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036202069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.036202611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036212806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.036213278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036221236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.036221708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036230958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036231431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036241819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.036242292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036249028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.0362495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036259792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036260264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036266, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036274931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036275403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036284847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.036285319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036290486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166999999993427e-06, 'source_diff': 5.166999999993427e-06}, {'time': 0.036290958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036299986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036300458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036310764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.036311236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036318056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8200000000046e-06, 'source_diff': 6.8200000000046e-06}, {'time': 0.036318528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:53.174" endtime="20201112 09:42:53.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.164" endtime="20201112 09:42:53.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:53.243" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:53.189" endtime="20201112 09:42:53.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.252" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:53.250" endtime="20201112 09:42:53.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.262" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.035918819, 0.035919292, 0.035924361, 0.035924833, 0.035932611, 0.035933083, 0.035938347, 0.035938819, 0.035946597, 0.035947069, 0.035957569, 0.035958042, 0.035964667, 0.035965139, 0.035970111, 0.035970583, 0.035975833, 0.035976306, 0.035983264, 0.035983736, 0.035991806, 0.035992278, 0.036003111, 0.036003583, 0.036011444, 0.036011917, 0.036016944, 0.036017486, 0.036026069, 0.036026542, 0.036035917, 0.036036458, 0.036043819, 0.036044292, 0.036054694, 0.036055167, 0.036064125, 0.036064667, 0.036072861, 0.036073333, 0.036079542, 0.036080014, 0.036087583, 0.036088056, 0.036094583, 0.036095056, 0.036103139, 0.036103611, 0.036110986, 0.036111458, 0.036115986, 0.036116458, 0.036124556, 0.036125028, 0.036130389, 0.036130861, 0.036136361, 0.036136833, 0.036144083, 0.036144556, 0.036150028, 0.0361505, 0.036159014, 0.036159486, 0.036166736, 0.036167208, 0.036173208, 0.036173681, 0.036184194, 0.036184667, 0.036194194, 0.036194667, 0.036202069, 0.036202611, 0.036212806, 0.036213278, 0.036221236, 0.036221708, 0.036230958, 0.036231431, 0.036241819, 0.036242292, 0.036249028, 0.0362495, 0.036259792, 0.036260264, 0.036265528, 0.036266, 0.036274931, 0.036275403, 0.036284847, 0.036285319, 0.036290486, 0.036290958, 0.036299986, 0.036300458, 0.036310764, 0.036311236, 0.036318056, 0.036318528], 'diff': [0, 4.7300000000083386e-07, 5.069000000003376e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 5.027000000004667e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 5.409999999997361e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.958000000003352e-06, 5.419999999992098e-07, 8.193999999996093e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0513000000003658e-05, 4.7299999999389497e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 7.402000000003572e-06, 5.419999999992098e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 7.957999999995413e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 5.166999999993427e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 6.8200000000046e-06, 4.720000000013602e-07], 'source_diff': [0, 4.7300000000083386e-07, 5.069000000003376e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 5.027000000004667e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 5.409999999997361e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 8.958000000003352e-06, 5.419999999992098e-07, 8.193999999996093e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 4.52800000000364e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.7199999999442133e-07, 5.361000000002336e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0513000000003658e-05, 4.7299999999389497e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 7.402000000003572e-06, 5.419999999992098e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 7.957999999995413e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 5.166999999993427e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 6.8200000000046e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:53.255" endtime="20201112 09:42:53.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.245" endtime="20201112 09:42:53.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.276" level="INFO">${RESULT} = [{'time': 0.035919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035924833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:53.267" endtime="20201112 09:42:53.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.307" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:53.278" endtime="20201112 09:42:53.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:53.315" endtime="20201112 09:42:53.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.322" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:53.319" endtime="20201112 09:42:53.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.309" endtime="20201112 09:42:53.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.331" endtime="20201112 09:42:53.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.339" endtime="20201112 09:42:53.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.335" endtime="20201112 09:42:53.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.326" endtime="20201112 09:42:53.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.726" endtime="20201112 09:42:53.365"></status>
</kw>
<msg timestamp="20201112 09:42:53.365" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.385" endtime="20201112 09:42:53.395"></status>
</kw>
<msg timestamp="20201112 09:42:53.396" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.382" endtime="20201112 09:42:53.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.399" endtime="20201112 09:42:53.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.405" endtime="20201112 09:42:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.374" endtime="20201112 09:42:53.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.370" endtime="20201112 09:42:53.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.430" endtime="20201112 09:42:53.771"></status>
</kw>
<msg timestamp="20201112 09:42:53.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.427" endtime="20201112 09:42:53.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.780" endtime="20201112 09:42:53.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.800" endtime="20201112 09:42:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.418" endtime="20201112 09:42:53.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.413" endtime="20201112 09:42:53.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.816" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:53.814" endtime="20201112 09:42:53.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.828" level="INFO">VALUE: [{'time': 0.035782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035792403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035792875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.035800306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.035808958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035814958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035815431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035826125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.035826597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035835333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.035835806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035844931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.035845403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035850792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.035851264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035857347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.035857819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035867333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.035867875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.035874319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035878847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.035879319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035889833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.035890306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035896069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.763000000005847e-06, 'source_diff': 5.763000000005847e-06}, {'time': 0.035896542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035907472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930000000006213e-05, 'source_diff': 1.0930000000006213e-05}, {'time': 0.035907944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035918833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.035919306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.035928708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035935986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2780000000063905e-06, 'source_diff': 7.2780000000063905e-06}, {'time': 0.035936458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035947236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.035947708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035957833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.035958375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035964972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.035965444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035970889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.035971431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035977403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.035977875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035982181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.035982653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035989486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035989958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035994403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.035994875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036003375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.036003847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.036012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036021222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.693999999996593e-06, 'source_diff': 8.693999999996593e-06}, {'time': 0.036021694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036031972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036032444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036040125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.036040597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036046903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036047375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036056153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036066333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036066806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036073431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036073903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036083028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.0360835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036091806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036092278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036102306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036109347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.036109819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.036118931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036128583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.036129056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0777000000003478e-05, 'source_diff': 1.0777000000003478e-05}, {'time': 0.036140306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03614725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.036147722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036154569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.036155042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036165833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.036166306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036175958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.036176431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036182431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036182903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036190278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.03619075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036200819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036201292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:53.819" endtime="20201112 09:42:53.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.808" endtime="20201112 09:42:53.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:53.887" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:53.834" endtime="20201112 09:42:53.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.896" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:53.894" endtime="20201112 09:42:53.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.905" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.035782583, 0.035783056, 0.035792403, 0.035792875, 0.035799833, 0.035800306, 0.035808486, 0.035808958, 0.035814958, 0.035815431, 0.035826125, 0.035826597, 0.035835333, 0.035835806, 0.035844931, 0.035845403, 0.035850792, 0.035851264, 0.035857347, 0.035857819, 0.035867333, 0.035867875, 0.035873847, 0.035874319, 0.035878847, 0.035879319, 0.035889833, 0.035890306, 0.035896069, 0.035896542, 0.035907472, 0.035907944, 0.035918833, 0.035919306, 0.035928236, 0.035928708, 0.035935986, 0.035936458, 0.035947236, 0.035947708, 0.035957833, 0.035958375, 0.035964972, 0.035965444, 0.035970889, 0.035971431, 0.035977403, 0.035977875, 0.035982181, 0.035982653, 0.035989486, 0.035989958, 0.035994403, 0.035994875, 0.036003375, 0.036003847, 0.036012056, 0.036012528, 0.036021222, 0.036021694, 0.036031972, 0.036032444, 0.036040125, 0.036040597, 0.036046903, 0.036047375, 0.036055681, 0.036056153, 0.036066333, 0.036066806, 0.036073431, 0.036073903, 0.036083028, 0.0360835, 0.036091806, 0.036092278, 0.036101833, 0.036102306, 0.036109347, 0.036109819, 0.036118389, 0.036118931, 0.036128583, 0.036129056, 0.036139833, 0.036140306, 0.03614725, 0.036147722, 0.036154569, 0.036155042, 0.036165833, 0.036166306, 0.036175958, 0.036176431, 0.036182431, 0.036182903, 0.036190278, 0.03619075, 0.036200819, 0.036201292], 'diff': [0, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 9.514000000002132e-06, 5.419999999992098e-07, 5.971999999999922e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.7299999999389497e-07, 5.763000000005847e-06, 4.7299999999389497e-07, 1.0930000000006213e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 7.2780000000063905e-06, 4.7199999999442133e-07, 1.0778000000002952e-05, 4.720000000013602e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 5.444999999999756e-06, 5.419999999992098e-07, 5.971999999999922e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.720000000013602e-07, 8.693999999996593e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 8.569999999999411e-06, 5.419999999992098e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.0777000000003478e-05, 4.7299999999389497e-07, 6.944000000001782e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07], 'source_diff': [0, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 9.514000000002132e-06, 5.419999999992098e-07, 5.971999999999922e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.7299999999389497e-07, 5.763000000005847e-06, 4.7299999999389497e-07, 1.0930000000006213e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 7.2780000000063905e-06, 4.7199999999442133e-07, 1.0778000000002952e-05, 4.720000000013602e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 6.5969999999970774e-06, 4.720000000013602e-07, 5.444999999999756e-06, 5.419999999992098e-07, 5.971999999999922e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.720000000013602e-07, 8.693999999996593e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 8.569999999999411e-06, 5.419999999992098e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.0777000000003478e-05, 4.7299999999389497e-07, 6.944000000001782e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:53.899" endtime="20201112 09:42:53.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.889" endtime="20201112 09:42:53.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.920" level="INFO">${RESULT} = [{'time': 0.035783056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035792875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:53.911" endtime="20201112 09:42:53.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.950" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:53.922" endtime="20201112 09:42:53.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:53.958" endtime="20201112 09:42:53.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.966" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:53.963" endtime="20201112 09:42:53.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.952" endtime="20201112 09:42:53.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.975" endtime="20201112 09:42:53.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.984" endtime="20201112 09:42:54.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.979" endtime="20201112 09:42:54.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.970" endtime="20201112 09:42:54.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.366" endtime="20201112 09:42:54.010"></status>
</kw>
<msg timestamp="20201112 09:42:54.011" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.030" endtime="20201112 09:42:54.040"></status>
</kw>
<msg timestamp="20201112 09:42:54.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.027" endtime="20201112 09:42:54.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.048" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.044" endtime="20201112 09:42:54.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.050" endtime="20201112 09:42:54.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.020" endtime="20201112 09:42:54.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.015" endtime="20201112 09:42:54.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.073" endtime="20201112 09:42:54.413"></status>
</kw>
<msg timestamp="20201112 09:42:54.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035896778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.070" endtime="20201112 09:42:54.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035896778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.423" endtime="20201112 09:42:54.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.442" endtime="20201112 09:42:54.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.063" endtime="20201112 09:42:54.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.058" endtime="20201112 09:42:54.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.458" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:54.456" endtime="20201112 09:42:54.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.470" level="INFO">VALUE: [{'time': 0.035896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035896778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035902889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.035903361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035911764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.035912236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035919181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.035919653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035924708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.035925181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.035931042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035937667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035938139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035945903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035946375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035957181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.035957653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03596325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.035963722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035974417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000005006e-05, 'source_diff': 1.0695000000005006e-05}, {'time': 0.035974889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035983194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.035983667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035991861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.035992333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.036009, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.693999999996593e-06, 'source_diff': 8.693999999996593e-06}, {'time': 0.036009472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036016611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.036017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036024861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036025333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036035417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.036035889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036044917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036045389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036053694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036054167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036064542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036065014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036072083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.036072556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0360775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036077972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036088889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.036089361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036094333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.036094806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036104861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.036105333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036112903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036113375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036118806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036123875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036124347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036134111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.036134583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036141097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036141569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036150417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.036150889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036161056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036161528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036172139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036172611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036182792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.036183264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036187694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036188167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036194694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.036195167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036203569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.036204042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036210778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.03621125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036219361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.036219833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036229472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036229944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036240222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036240694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036251292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.036251764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036257653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036258125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.036264389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036272694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036273167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036281667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.036282139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036286681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036287153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036294833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679999999996023e-06, 'source_diff': 7.679999999996023e-06}, {'time': 0.036295306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036304708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.03630525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:54.461" endtime="20201112 09:42:54.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.450" endtime="20201112 09:42:54.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:54.531" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:54.476" endtime="20201112 09:42:54.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.540" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:54.538" endtime="20201112 09:42:54.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.549" level="INFO">VALUE: {'eventtime': [0.035896306, 0.035896778, 0.035902889, 0.035903361, 0.035911764, 0.035912236, 0.035919181, 0.035919653, 0.035924708, 0.035925181, 0.035930569, 0.035931042, 0.035937667, 0.035938139, 0.035945903, 0.035946375, 0.035957181, 0.035957653, 0.03596325, 0.035963722, 0.035974417, 0.035974889, 0.035983194, 0.035983667, 0.035991861, 0.035992333, 0.036000306, 0.036009, 0.036009472, 0.036016611, 0.036017083, 0.036024861, 0.036025333, 0.036035417, 0.036035889, 0.036044917, 0.036045389, 0.036053694, 0.036054167, 0.036064542, 0.036065014, 0.036072083, 0.036072556, 0.0360775, 0.036077972, 0.036088889, 0.036089361, 0.036094333, 0.036094806, 0.036104861, 0.036105333, 0.036112903, 0.036113375, 0.036118333, 0.036118806, 0.036123875, 0.036124347, 0.036134111, 0.036134583, 0.036141097, 0.036141569, 0.036150417, 0.036150889, 0.036161056, 0.036161528, 0.036172139, 0.036172611, 0.036182792, 0.036183264, 0.036187694, 0.036188167, 0.036194694, 0.036195167, 0.036203569, 0.036204042, 0.036210778, 0.03621125, 0.036219361, 0.036219833, 0.036229472, 0.036229944, 0.036240222, 0.036240694, 0.036251292, 0.036251764, 0.036257653, 0.036258125, 0.036263917, 0.036264389, 0.036272694, 0.036273167, 0.036281667, 0.036282139, 0.036286681, 0.036287153, 0.036294833, 0.036295306, 0.036304708, 0.03630525], 'diff': [0, 4.7199999999442133e-07, 6.111000000003086e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 5.388000000002002e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 5.597000000003016e-06, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.7299999999389497e-07, 8.194000000003032e-06, 4.720000000013602e-07, 7.973000000001396e-06, 8.693999999996593e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.679999999996023e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 5.419999999992098e-07], 'source_diff': [0, 4.7199999999442133e-07, 6.111000000003086e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 5.388000000002002e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 5.597000000003016e-06, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.7299999999389497e-07, 8.194000000003032e-06, 4.720000000013602e-07, 7.973000000001396e-06, 8.693999999996593e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.679999999996023e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:54.542" endtime="20201112 09:42:54.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.533" endtime="20201112 09:42:54.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.564" level="INFO">${RESULT} = [{'time': 0.035896778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035903361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:54.555" endtime="20201112 09:42:54.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.594" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:54.566" endtime="20201112 09:42:54.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.604" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:54.601" endtime="20201112 09:42:54.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.609" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 8.693999999996593e-06, 7.138999999996287e-06, 7.777999999999952e-06, 1.0084000000000481e-05, 9.028000000001202e-06, 8.305000000000118e-06, 1.0374999999999968e-05, 7.068999999998438e-06, 4.943999999999782e-06, 1.0916999999999177e-05, 4.971999999998922e-06, 1.0055000000001868e-05, 7.569999999998411e-06, 4.957999999999352e-06, 5.0689999999964375e-06, 9.763999999995443e-06, 6.513999999999132e-06, 8.847999999998801e-06, 1.0166999999998427e-05, 1.0611000000000648e-05, 1.0180999999997997e-05, 4.429999999999712e-06, 6.526999999999228e-06, 8.401999999997634e-06, 6.736000000000242e-06, 8.110999999998147e-06, 9.638999999998787e-06, 1.0278000000002452e-05, 1.0598000000000551e-05, 5.889000000001976e-06, 5.791999999997521e-06, 8.305000000000118e-06, 8.499999999994623e-06, 4.54200000000321e-06, 7.679999999996023e-06, 9.401999999998634e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.606" endtime="20201112 09:42:54.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.595" endtime="20201112 09:42:54.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.618" endtime="20201112 09:42:54.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.626" endtime="20201112 09:42:54.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.622" endtime="20201112 09:42:54.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.613" endtime="20201112 09:42:54.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.012" endtime="20201112 09:42:54.651"></status>
</kw>
<msg timestamp="20201112 09:42:54.652" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.672" endtime="20201112 09:42:54.682"></status>
</kw>
<msg timestamp="20201112 09:42:54.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.668" endtime="20201112 09:42:54.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.686" endtime="20201112 09:42:54.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.692" endtime="20201112 09:42:54.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.661" endtime="20201112 09:42:54.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.656" endtime="20201112 09:42:54.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.716" endtime="20201112 09:42:55.057"></status>
</kw>
<msg timestamp="20201112 09:42:55.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035797361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.713" endtime="20201112 09:42:55.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035797361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.067" endtime="20201112 09:42:55.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.087" endtime="20201112 09:42:55.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.705" endtime="20201112 09:42:55.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.701" endtime="20201112 09:42:55.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.103" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:55.101" endtime="20201112 09:42:55.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.115" level="INFO">VALUE: [{'time': 0.035797361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035802542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035803014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035810792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035811264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035821028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.0358215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035830958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.035831431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035838583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.035839056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.03584825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035856042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.035856514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035865028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.0358655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035876097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.035876569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035882583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.035883056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035890931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035891403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035896569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.035897042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035903056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.035903528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035911, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035911472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035916736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035917208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035921653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.035922125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.035928611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035935028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.0359355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035942125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035942597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035949431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.035949903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035957167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035957639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.035964222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035975042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.035975514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035979806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.035980278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035988292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.035988764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035999153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035999625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036008139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036008611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.036018514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036025667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.036026139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036032458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.036032931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036037875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036038347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03604875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036049222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036055903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036064431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036064903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036072875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.036073347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036080917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036081389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036088444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036088917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036097958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.036098431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03610725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036107722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036114458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036114931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036121569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6379999999963135e-06, 'source_diff': 6.6379999999963135e-06}, {'time': 0.036122042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036129208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.036129681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03613525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.036135722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036146694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036155444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036165986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0068999999994499e-05, 'source_diff': 1.0068999999994499e-05}, {'time': 0.036166458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036173486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036173958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036180486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036180958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036189903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036190375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:55.105" endtime="20201112 09:42:55.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.095" endtime="20201112 09:42:55.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:55.174" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:55.121" endtime="20201112 09:42:55.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.183" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:55.181" endtime="20201112 09:42:55.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.192" level="INFO">VALUE: {'eventtime': [0.035797361, 0.035797903, 0.035802542, 0.035803014, 0.035810792, 0.035811264, 0.035821028, 0.0358215, 0.035830958, 0.035831431, 0.035838583, 0.035839056, 0.035847778, 0.03584825, 0.035856042, 0.035856514, 0.035865028, 0.0358655, 0.035876097, 0.035876569, 0.035882583, 0.035883056, 0.035890931, 0.035891403, 0.035896569, 0.035897042, 0.035903056, 0.035903528, 0.035911, 0.035911472, 0.035916736, 0.035917208, 0.035921653, 0.035922125, 0.035928139, 0.035928611, 0.035935028, 0.0359355, 0.035942125, 0.035942597, 0.035949431, 0.035949903, 0.035957167, 0.035957639, 0.03596375, 0.035964222, 0.035975042, 0.035975514, 0.035979806, 0.035980278, 0.035988292, 0.035988764, 0.035999153, 0.035999625, 0.036008139, 0.036008611, 0.036018042, 0.036018514, 0.036025667, 0.036026139, 0.036032458, 0.036032931, 0.036037875, 0.036038347, 0.03604875, 0.036049222, 0.036055431, 0.036055903, 0.036064431, 0.036064903, 0.036072875, 0.036073347, 0.036080917, 0.036081389, 0.036088444, 0.036088917, 0.036097958, 0.036098431, 0.03610725, 0.036107722, 0.036114458, 0.036114931, 0.036121569, 0.036122042, 0.036129208, 0.036129681, 0.03613525, 0.036135722, 0.036146222, 0.036146694, 0.036155444, 0.036155917, 0.036165986, 0.036166458, 0.036173486, 0.036173958, 0.036180486, 0.036180958, 0.036189903, 0.036190375], 'diff': [0, 5.419999999992098e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7299999999389497e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7299999999389497e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 4.29200000000296e-06, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7299999999389497e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 5.569000000003876e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07], 'source_diff': [0, 5.419999999992098e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7299999999389497e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7299999999389497e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 4.29200000000296e-06, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.7299999999389497e-07, 4.943999999999782e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 5.569000000003876e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 09:42:55.185" endtime="20201112 09:42:55.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.176" endtime="20201112 09:42:55.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.207" level="INFO">${RESULT} = [{'time': 0.035797903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035803014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.198" endtime="20201112 09:42:55.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.237" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:55.209" endtime="20201112 09:42:55.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.247" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:55.245" endtime="20201112 09:42:55.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.252" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 09:42:55.249" endtime="20201112 09:42:55.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.239" endtime="20201112 09:42:55.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.261" endtime="20201112 09:42:55.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.269" endtime="20201112 09:42:55.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.265" endtime="20201112 09:42:55.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.256" endtime="20201112 09:42:55.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.653" endtime="20201112 09:42:55.295"></status>
</kw>
<msg timestamp="20201112 09:42:55.295" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.317" endtime="20201112 09:42:55.327"></status>
</kw>
<msg timestamp="20201112 09:42:55.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.312" endtime="20201112 09:42:55.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.331" endtime="20201112 09:42:55.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.337" endtime="20201112 09:42:55.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.304" endtime="20201112 09:42:55.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.300" endtime="20201112 09:42:55.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.360" endtime="20201112 09:42:55.696"></status>
</kw>
<msg timestamp="20201112 09:42:55.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037492125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037492667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.356" endtime="20201112 09:42:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037492125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037492667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.705" endtime="20201112 09:42:55.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.725" endtime="20201112 09:42:55.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.349" endtime="20201112 09:42:55.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.345" endtime="20201112 09:42:55.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.743" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:55.740" endtime="20201112 09:42:55.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.754" level="INFO">VALUE: [{'time': 0.037492125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037492667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037499792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.037500264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.037511458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037519069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000004586e-06, 'source_diff': 7.611000000004586e-06}, {'time': 0.037519611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037526861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037527333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037536667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.037537139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037542625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000005931e-06, 'source_diff': 5.486000000005931e-06}, {'time': 0.037543097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037551917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.037552389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037559014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.037559486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037564458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.037564931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037571972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.037572444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037582319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.037582792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037591306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037591778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037598819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.037599292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037606611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.037614028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037624444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.037624917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037632153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.037632625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037643347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.037643819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037651778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958999999994887e-06, 'source_diff': 7.958999999994887e-06}, {'time': 0.03765225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037660972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.037661444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037671528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.037672, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037677278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.03767775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037684292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.037684764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037695028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999995943e-05, 'source_diff': 1.0263999999995943e-05}, {'time': 0.0376955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037702083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037706625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.037707097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037715722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037716194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037724806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999998121e-06, 'source_diff': 8.611999999998121e-06}, {'time': 0.037725278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037732847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.037733319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037741611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037742083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0377485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.037748972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037758125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037758597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037764903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.037765375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037770486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.037779667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037788806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037789278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037798, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.037798472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037806569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037807042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037813972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.037814444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037819944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.037820417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.037825514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.037835431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037843694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.26299999999447e-06, 'source_diff': 8.26299999999447e-06}, {'time': 0.037844236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999995467e-06, 'source_diff': 5.874999999995467e-06}, {'time': 0.037850583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037857, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037857472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03786275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037863222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037873819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037874292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037883333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.037883806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037889167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.037889639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:55.745" endtime="20201112 09:42:55.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.734" endtime="20201112 09:42:55.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:55.815" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:55.760" endtime="20201112 09:42:55.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.824" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:55.822" endtime="20201112 09:42:55.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.833" level="INFO">VALUE: {'eventtime': [0.037492125, 0.037492667, 0.037499792, 0.037500264, 0.037510986, 0.037511458, 0.037519069, 0.037519611, 0.037526861, 0.037527333, 0.037536667, 0.037537139, 0.037542625, 0.037543097, 0.037551917, 0.037552389, 0.037559014, 0.037559486, 0.037564458, 0.037564931, 0.037571972, 0.037572444, 0.037582319, 0.037582792, 0.037591306, 0.037591778, 0.037598819, 0.037599292, 0.037606139, 0.037606611, 0.037613556, 0.037614028, 0.037624444, 0.037624917, 0.037632153, 0.037632625, 0.037643347, 0.037643819, 0.037651778, 0.03765225, 0.037660972, 0.037661444, 0.037671528, 0.037672, 0.037677278, 0.03767775, 0.037684292, 0.037684764, 0.037695028, 0.0376955, 0.037701611, 0.037702083, 0.037706625, 0.037707097, 0.037715722, 0.037716194, 0.037724806, 0.037725278, 0.037732847, 0.037733319, 0.037741611, 0.037742083, 0.0377485, 0.037748972, 0.037758125, 0.037758597, 0.037764903, 0.037765375, 0.037770014, 0.037770486, 0.037779194, 0.037779667, 0.037788806, 0.037789278, 0.037798, 0.037798472, 0.037806569, 0.037807042, 0.037813972, 0.037814444, 0.037819944, 0.037820417, 0.037825042, 0.037825514, 0.037834958, 0.037835431, 0.037843694, 0.037844236, 0.037850111, 0.037850583, 0.037857, 0.037857472, 0.03786275, 0.037863222, 0.037873819, 0.037874292, 0.037883333, 0.037883806, 0.037889167, 0.037889639], 'diff': [0, 5.419999999992098e-07, 7.124999999996717e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 8.819999999999661e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 7.958999999994887e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.7300000000083386e-07, 8.26299999999447e-06, 5.420000000061487e-07, 5.874999999995467e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 5.361000000002336e-06, 4.720000000013602e-07], 'source_diff': [0, 5.419999999992098e-07, 7.124999999996717e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 8.819999999999661e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.040999999999298e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 7.958999999994887e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.7300000000083386e-07, 8.26299999999447e-06, 5.420000000061487e-07, 5.874999999995467e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7299999999389497e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 5.361000000002336e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:55.826" endtime="20201112 09:42:55.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.816" endtime="20201112 09:42:55.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.847" level="INFO">${RESULT} = [{'time': 0.037492667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037500264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.838" endtime="20201112 09:42:55.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.878" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:55.849" endtime="20201112 09:42:55.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:55.886" endtime="20201112 09:42:55.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.894" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:55.891" endtime="20201112 09:42:55.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.880" endtime="20201112 09:42:55.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.903" endtime="20201112 09:42:55.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.911" endtime="20201112 09:42:55.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.906" endtime="20201112 09:42:55.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.898" endtime="20201112 09:42:55.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.296" endtime="20201112 09:42:55.936"></status>
</kw>
<msg timestamp="20201112 09:42:55.937" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.956" endtime="20201112 09:42:55.967"></status>
</kw>
<msg timestamp="20201112 09:42:55.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.953" endtime="20201112 09:42:55.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.970" endtime="20201112 09:42:55.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.976" endtime="20201112 09:42:55.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.946" endtime="20201112 09:42:55.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.941" endtime="20201112 09:42:55.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.999" endtime="20201112 09:42:56.332"></status>
</kw>
<msg timestamp="20201112 09:42:56.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035552403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035552875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.996" endtime="20201112 09:42:56.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035552403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035552875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.342" endtime="20201112 09:42:56.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.361" endtime="20201112 09:42:56.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.989" endtime="20201112 09:42:56.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.984" endtime="20201112 09:42:56.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.379" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:56.376" endtime="20201112 09:42:56.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.390" level="INFO">VALUE: [{'time': 0.035552403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035552875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035559625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.035560097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035567958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.035568431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035578292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035578764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035586028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.0355865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035596875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035597347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.035605389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035613056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.035613528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035619486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03562675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035627222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035635736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.035636208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035641972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.035642444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035650028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.0356505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035658264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035658736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.035665097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035673389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.035673861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035678625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.035679097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.035687014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035696778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.03569725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035706708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.035707181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035716111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.035716583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035724153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.035724625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035734611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.035735083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035742528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.035743, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035748986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000006431e-06, 'source_diff': 5.986000000006431e-06}, {'time': 0.035749458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035756083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035756556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035762347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035762819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035771861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.035772333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035779167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.035779639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035785097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.035785569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035790014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.035790486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035799611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.035800083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035807792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999994637e-06, 'source_diff': 7.708999999994637e-06}, {'time': 0.035808333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000005296e-06, 'source_diff': 9.653000000005296e-06}, {'time': 0.035818458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035827597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.035828069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035835653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.035836125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03584075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.624999999994217e-06, 'source_diff': 4.624999999994217e-06}, {'time': 0.035841222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035848278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.03584875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035860125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035866125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035866597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03587125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.035871722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035876028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.0358765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035884014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.035893528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.035901972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035906431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000005264e-06, 'source_diff': 4.459000000005264e-06}, {'time': 0.035906903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035911528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.035912, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03592175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.035922222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0359275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.035927972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035937431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458999999996387e-06, 'source_diff': 9.458999999996387e-06}, {'time': 0.035937903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:56.381" endtime="20201112 09:42:56.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.370" endtime="20201112 09:42:56.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:56.451" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:56.396" endtime="20201112 09:42:56.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.460" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:56.458" endtime="20201112 09:42:56.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.469" level="INFO">VALUE: {'eventtime': [0.035552403, 0.035552875, 0.035559625, 0.035560097, 0.035567958, 0.035568431, 0.035578292, 0.035578764, 0.035586028, 0.0355865, 0.035596875, 0.035597347, 0.035604917, 0.035605389, 0.035613056, 0.035613528, 0.035619014, 0.035619486, 0.03562675, 0.035627222, 0.035635736, 0.035636208, 0.035641972, 0.035642444, 0.035650028, 0.0356505, 0.035658264, 0.035658736, 0.035664625, 0.035665097, 0.035673389, 0.035673861, 0.035678625, 0.035679097, 0.035686542, 0.035687014, 0.035696778, 0.03569725, 0.035706708, 0.035707181, 0.035716111, 0.035716583, 0.035724153, 0.035724625, 0.035734611, 0.035735083, 0.035742528, 0.035743, 0.035748986, 0.035749458, 0.035756083, 0.035756556, 0.035762347, 0.035762819, 0.035771861, 0.035772333, 0.035779167, 0.035779639, 0.035785097, 0.035785569, 0.035790014, 0.035790486, 0.035799611, 0.035800083, 0.035807792, 0.035808333, 0.035817986, 0.035818458, 0.035827597, 0.035828069, 0.035835653, 0.035836125, 0.03584075, 0.035841222, 0.035848278, 0.03584875, 0.035859653, 0.035860125, 0.035866125, 0.035866597, 0.03587125, 0.035871722, 0.035876028, 0.0358765, 0.035883542, 0.035884014, 0.035893056, 0.035893528, 0.0359015, 0.035901972, 0.035906431, 0.035906903, 0.035911528, 0.035912, 0.03592175, 0.035922222, 0.0359275, 0.035927972, 0.035937431, 0.035937903], 'diff': [0, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.7199999999442133e-07, 5.986000000006431e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.708999999994637e-06, 5.409999999997361e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.58400000000492e-06, 4.720000000013602e-07, 4.624999999994217e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 4.459000000005264e-06, 4.7199999999442133e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07], 'source_diff': [0, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 5.888999999995037e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.445000000001756e-06, 4.7199999999442133e-07, 5.986000000006431e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.708999999994637e-06, 5.409999999997361e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 7.58400000000492e-06, 4.720000000013602e-07, 4.624999999994217e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 4.459000000005264e-06, 4.7199999999442133e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:56.462" endtime="20201112 09:42:56.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.453" endtime="20201112 09:42:56.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.484" level="INFO">${RESULT} = [{'time': 0.035552875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035560097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.475" endtime="20201112 09:42:56.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.514" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:56.486" endtime="20201112 09:42:56.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:56.522" endtime="20201112 09:42:56.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.530" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:56.527" endtime="20201112 09:42:56.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.516" endtime="20201112 09:42:56.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.539" endtime="20201112 09:42:56.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.547" endtime="20201112 09:42:56.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.543" endtime="20201112 09:42:56.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.534" endtime="20201112 09:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.938" endtime="20201112 09:42:56.572"></status>
</kw>
<msg timestamp="20201112 09:42:56.573" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.592" endtime="20201112 09:42:56.603"></status>
</kw>
<msg timestamp="20201112 09:42:56.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.589" endtime="20201112 09:42:56.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.606" endtime="20201112 09:42:56.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.612" endtime="20201112 09:42:56.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.582" endtime="20201112 09:42:56.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.577" endtime="20201112 09:42:56.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.637" endtime="20201112 09:42:56.974"></status>
</kw>
<msg timestamp="20201112 09:42:56.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035679292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035679764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.632" endtime="20201112 09:42:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035679292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035679764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.984" endtime="20201112 09:42:57.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.009" endtime="20201112 09:42:57.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.625" endtime="20201112 09:42:57.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.620" endtime="20201112 09:42:57.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.025" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:57.023" endtime="20201112 09:42:57.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.036" level="INFO">VALUE: [{'time': 0.035679292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035679764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035690472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.035690944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035699847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035700319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035711236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035711708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035719611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.035720083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035727514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.035727986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035738792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.035739264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035747264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.035747736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035753611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999995467e-06, 'source_diff': 5.874999999995467e-06}, {'time': 0.035754083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035758625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.035759097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035766569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035767042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.035775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035780667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035781139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035789764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000005156e-06, 'source_diff': 8.625000000005156e-06}, {'time': 0.035790236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035799986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.035800458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035805417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.035805889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0358145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.035814972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035821917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.035822389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035832583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.035833056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035843903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.035844444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035855222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0777999999996013e-05, 'source_diff': 1.0777999999996013e-05}, {'time': 0.035855694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0358665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.035866972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03587675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.035877222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035884472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035884944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035892194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035892667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035902639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.035903111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035912556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.035913028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035921972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000003782e-06, 'source_diff': 8.944000000003782e-06}, {'time': 0.035922444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035932403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000003826e-06, 'source_diff': 9.959000000003826e-06}, {'time': 0.035932875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035940708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.03594125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03594775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035948222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035954542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.035955014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035963847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.035964319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035971889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.035972361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035980139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035980611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035984917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.035985389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035989944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.035990417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035995181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.035995653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036001111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036001583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036011972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000006476e-05, 'source_diff': 1.0389000000006476e-05}, {'time': 0.036012444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036019125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.036019667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036023986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.036024458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036034431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999996457e-06, 'source_diff': 9.972999999996457e-06}, {'time': 0.036034903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036042986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036043458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036047903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.036048375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036052681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.036053153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036063903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.036074375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036081819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.036082292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.036089611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:57.027" endtime="20201112 09:42:57.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.017" endtime="20201112 09:42:57.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:57.095" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:57.042" endtime="20201112 09:42:57.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.105" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:57.102" endtime="20201112 09:42:57.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.114" level="INFO">VALUE: {'eventtime': [0.035679292, 0.035679764, 0.035690472, 0.035690944, 0.035699847, 0.035700319, 0.035711236, 0.035711708, 0.035719611, 0.035720083, 0.035727514, 0.035727986, 0.035738792, 0.035739264, 0.035747264, 0.035747736, 0.035753611, 0.035754083, 0.035758625, 0.035759097, 0.035766569, 0.035767042, 0.035774708, 0.035775181, 0.035780667, 0.035781139, 0.035789764, 0.035790236, 0.035799986, 0.035800458, 0.035805417, 0.035805889, 0.0358145, 0.035814972, 0.035821917, 0.035822389, 0.035832583, 0.035833056, 0.035843903, 0.035844444, 0.035855222, 0.035855694, 0.0358665, 0.035866972, 0.03587675, 0.035877222, 0.035884472, 0.035884944, 0.035892194, 0.035892667, 0.035902639, 0.035903111, 0.035912556, 0.035913028, 0.035921972, 0.035922444, 0.035932403, 0.035932875, 0.035940708, 0.03594125, 0.03594775, 0.035948222, 0.035954542, 0.035955014, 0.035963847, 0.035964319, 0.035971889, 0.035972361, 0.035980139, 0.035980611, 0.035984917, 0.035985389, 0.035989944, 0.035990417, 0.035995181, 0.035995653, 0.036001111, 0.036001583, 0.036011972, 0.036012444, 0.036019125, 0.036019667, 0.036023986, 0.036024458, 0.036034431, 0.036034903, 0.036042986, 0.036043458, 0.036047903, 0.036048375, 0.036052681, 0.036053153, 0.036063431, 0.036063903, 0.036073833, 0.036074375, 0.036081819, 0.036082292, 0.036089139, 0.036089611], 'diff': [0, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 5.874999999995467e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 5.409999999997361e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.944000000003782e-06, 4.7199999999442133e-07, 9.959000000003826e-06, 4.720000000013602e-07, 7.832999999998758e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 4.555000000003306e-06, 4.7299999999389497e-07, 4.76400000000432e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.681000000001436e-06, 5.419999999992098e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 9.929999999998274e-06, 5.419999999992098e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 7.431000000002186e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 5.874999999995467e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 5.409999999997361e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.944000000003782e-06, 4.7199999999442133e-07, 9.959000000003826e-06, 4.720000000013602e-07, 7.832999999998758e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 4.555000000003306e-06, 4.7299999999389497e-07, 4.76400000000432e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 1.0389000000006476e-05, 4.7199999999442133e-07, 6.681000000001436e-06, 5.419999999992098e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 9.929999999998274e-06, 5.419999999992098e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:57.107" endtime="20201112 09:42:57.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.097" endtime="20201112 09:42:57.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.128" level="INFO">${RESULT} = [{'time': 0.035679764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035690944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:57.119" endtime="20201112 09:42:57.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.158" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:57.130" endtime="20201112 09:42:57.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.169" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:57.166" endtime="20201112 09:42:57.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.174" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:57.171" endtime="20201112 09:42:57.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.160" endtime="20201112 09:42:57.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.183" endtime="20201112 09:42:57.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.191" endtime="20201112 09:42:57.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.187" endtime="20201112 09:42:57.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.178" endtime="20201112 09:42:57.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.574" endtime="20201112 09:42:57.216"></status>
</kw>
<msg timestamp="20201112 09:42:57.217" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.238" endtime="20201112 09:42:57.248"></status>
</kw>
<msg timestamp="20201112 09:42:57.250" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.235" endtime="20201112 09:42:57.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.252" endtime="20201112 09:42:57.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.258" endtime="20201112 09:42:57.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.228" endtime="20201112 09:42:57.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.222" endtime="20201112 09:42:57.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.281" endtime="20201112 09:42:57.611"></status>
</kw>
<msg timestamp="20201112 09:42:57.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037228431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.278" endtime="20201112 09:42:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037228431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.620" endtime="20201112 09:42:57.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.640" endtime="20201112 09:42:57.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.271" endtime="20201112 09:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.266" endtime="20201112 09:42:57.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.656" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:57.654" endtime="20201112 09:42:57.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.667" level="INFO">VALUE: [{'time': 0.037227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037228431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037236917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.037237389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037247569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.037248042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037256986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.037257458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037265014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037265486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0372715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037271972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037282347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037282819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037293528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.037294, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037299681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.037300153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037304694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.037305167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037310667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.037311139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037321986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037328194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037328667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037338319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.037338792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037345944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1519999999963835e-06, 'source_diff': 7.1519999999963835e-06}, {'time': 0.037346417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037352306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.037352778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03735825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.037358722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037363153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4310000000061245e-06, 'source_diff': 4.4310000000061245e-06}, {'time': 0.037363625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037370625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.037371167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037378514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.037378986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037385389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.037385861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037396667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037397139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037401472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999995257e-06, 'source_diff': 4.332999999995257e-06}, {'time': 0.037401944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037410444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.037410917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037415347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.037415819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037426, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.037426472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037431319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.037431792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037440972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000004462e-06, 'source_diff': 9.180000000004462e-06}, {'time': 0.037441514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037447194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.037447667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037452306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037452778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037463167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037463639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037468486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.037468958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037476417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.037476889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.037486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037490861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.037491333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819999999995661e-06, 'source_diff': 4.819999999995661e-06}, {'time': 0.037496625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037506389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037506861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037511625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.037512097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037520389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037520861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037531194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999994319e-05, 'source_diff': 1.0332999999994319e-05}, {'time': 0.037531736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037537708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.037538181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037546056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.037546528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037553917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.037554389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037560972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.037561514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.037568458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037575833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.037576306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037583139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.037583611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037593056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.037593528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.037600944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037606944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.037607417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:57.658" endtime="20201112 09:42:57.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.648" endtime="20201112 09:42:57.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:57.728" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:42:57.673" endtime="20201112 09:42:57.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.737" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:57.735" endtime="20201112 09:42:57.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.746" level="INFO">VALUE: {'eventtime': [0.037227958, 0.037228431, 0.037236917, 0.037237389, 0.037247569, 0.037248042, 0.037256986, 0.037257458, 0.037265014, 0.037265486, 0.0372715, 0.037271972, 0.037282347, 0.037282819, 0.037293528, 0.037294, 0.037299681, 0.037300153, 0.037304694, 0.037305167, 0.037310667, 0.037311139, 0.037321514, 0.037321986, 0.037328194, 0.037328667, 0.037338319, 0.037338792, 0.037345944, 0.037346417, 0.037352306, 0.037352778, 0.03735825, 0.037358722, 0.037363153, 0.037363625, 0.037370625, 0.037371167, 0.037378514, 0.037378986, 0.037385389, 0.037385861, 0.037396667, 0.037397139, 0.037401472, 0.037401944, 0.037410444, 0.037410917, 0.037415347, 0.037415819, 0.037426, 0.037426472, 0.037431319, 0.037431792, 0.037440972, 0.037441514, 0.037447194, 0.037447667, 0.037452306, 0.037452778, 0.037463167, 0.037463639, 0.037468486, 0.037468958, 0.037476417, 0.037476889, 0.037485528, 0.037486, 0.037490861, 0.037491333, 0.037496153, 0.037496625, 0.037506389, 0.037506861, 0.037511625, 0.037512097, 0.037520389, 0.037520861, 0.037531194, 0.037531736, 0.037537708, 0.037538181, 0.037546056, 0.037546528, 0.037553917, 0.037554389, 0.037560972, 0.037561514, 0.037567986, 0.037568458, 0.037575833, 0.037576306, 0.037583139, 0.037583611, 0.037593056, 0.037593528, 0.037600403, 0.037600944, 0.037606944, 0.037607417], 'diff': [0, 4.7300000000083386e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.943999999996843e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 7.000000000000062e-06, 5.419999999992098e-07, 7.347000000004766e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.332999999995257e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.846999999995327e-06, 4.7300000000083386e-07, 9.180000000004462e-06, 5.419999999992098e-07, 5.680000000000962e-06, 4.7299999999389497e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 7.459000000001326e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 4.819999999995661e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 5.420000000061487e-07, 5.971999999999922e-06, 4.7299999999389497e-07, 7.875000000004406e-06, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 6.472000000000422e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 6.874999999996467e-06, 5.409999999997361e-07, 6.0000000000060005e-06, 4.7299999999389497e-07], 'source_diff': [0, 4.7300000000083386e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.943999999996843e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07, 5.889000000001976e-06, 4.720000000013602e-07, 5.471999999999422e-06, 4.7199999999442133e-07, 4.4310000000061245e-06, 4.7199999999442133e-07, 7.000000000000062e-06, 5.419999999992098e-07, 7.347000000004766e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.332999999995257e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.846999999995327e-06, 4.7300000000083386e-07, 9.180000000004462e-06, 5.419999999992098e-07, 5.680000000000962e-06, 4.7299999999389497e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.847000000002266e-06, 4.7199999999442133e-07, 7.459000000001326e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 4.819999999995661e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 5.420000000061487e-07, 5.971999999999922e-06, 4.7299999999389497e-07, 7.875000000004406e-06, 4.720000000013602e-07, 7.388999999996537e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 6.472000000000422e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 6.874999999996467e-06, 5.409999999997361e-07, 6.0000000000060005e-06, 4.7299999999389497e-07], 'source}</msg>
<status status="PASS" starttime="20201112 09:42:57.739" endtime="20201112 09:42:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.730" endtime="20201112 09:42:57.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.761" level="INFO">${RESULT} = [{'time': 0.037228431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037237389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.752" endtime="20201112 09:42:57.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.792" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:57.763" endtime="20201112 09:42:57.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.803" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:57.801" endtime="20201112 09:42:57.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.809" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7299999999389497e-07]</msg>
<status status="PASS" starttime="20201112 09:42:57.805" endtime="20201112 09:42:57.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.794" endtime="20201112 09:42:57.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.818" endtime="20201112 09:42:57.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.826" endtime="20201112 09:42:57.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.821" endtime="20201112 09:42:57.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.813" endtime="20201112 09:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.218" endtime="20201112 09:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.997" endtime="20201112 09:42:57.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.862" endtime="20201112 09:42:57.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.858" endtime="20201112 09:42:57.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.855" endtime="20201112 09:42:57.886"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:44.803" endtime="20201112 09:42:57.887" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.905" endtime="20201112 09:42:57.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.901" endtime="20201112 09:42:57.928"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.961" endtime="20201112 09:42:57.984"></status>
</kw>
<msg timestamp="20201112 09:42:57.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.958" endtime="20201112 09:42:57.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.987" endtime="20201112 09:42:57.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.999" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.994" endtime="20201112 09:42:57.999"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.951" endtime="20201112 09:42:58.001"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.944" endtime="20201112 09:42:58.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.942" endtime="20201112 09:42:58.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.011" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.010" endtime="20201112 09:42:58.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.005" endtime="20201112 09:42:58.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.940" endtime="20201112 09:42:58.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.938" endtime="20201112 09:42:58.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.015" endtime="20201112 09:42:58.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.934" endtime="20201112 09:42:58.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.930" endtime="20201112 09:42:58.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.898" endtime="20201112 09:42:58.022"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:58.027" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.046" endtime="20201112 09:42:58.058"></status>
</kw>
<msg timestamp="20201112 09:42:58.059" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.043" endtime="20201112 09:42:58.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.061" endtime="20201112 09:42:58.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.067" endtime="20201112 09:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.036" endtime="20201112 09:42:58.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.031" endtime="20201112 09:42:58.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.091" endtime="20201112 09:42:58.435"></status>
</kw>
<msg timestamp="20201112 09:42:58.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132058375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132067125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.087" endtime="20201112 09:42:58.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132058375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132067125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.445" endtime="20201112 09:42:58.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.463" endtime="20201112 09:42:58.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.080" endtime="20201112 09:42:58.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.076" endtime="20201112 09:42:58.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.481" level="INFO">${RESULT} = [{'time': 0.132067125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.132081236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.472" endtime="20201112 09:42:58.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.511" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:58.483" endtime="20201112 09:42:58.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.523" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.521" endtime="20201112 09:42:58.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.529" level="INFO">VALUE: [8.750000000001812e-06, 9.278000000001452e-06, 9.58400000000692e-06, 9.098000000012929e-06, 8.750000000001812e-06, 9.097000000013455e-06, 9.083999999992542e-06, 8.76299999999497e-06, 9.083999999992542e-06, 9.249999999988434e-06, 9.597000000000078e-06, 9.333000000000258e-06, 9.111000000006086e-06, 8.764000000022198e-06, 8.750000000001812e-06, 9.582999999979691e-06, 9.736000000010181e-06, 8.930999999989808e-06, 9.290999999994609e-06, 8.902000000005073e-06, 9.097999999985174e-06, 8.929999999990335e-06, 9.417000000011555e-06, 9.263999999981065e-06, 9.430000000004712e-06, 9.26400000000882e-06, 9.610999999992709e-06, 9.403000000018924e-06, 9.597000000000078e-06, 9.403000000018924e-06, 8.916999999997177e-06, 9.403000000018924e-06, 9.0969999999857e-06, 9.083999999992542e-06, 9.417000000011555e-06, 9.597000000000078e-06, 8.763999999994443e-06, 9.097000000013455e-06, 9.263999999981065e-06, 9.082999999993069e-06, 8.750000000001812e-06, 9.084000000020298e-06, 9.249999999988434e-06, 8.916000000025459e-06, 9.431000000004186e-06, 9.583000000007447e-06, 9.26400000000882e-06, 9.625000000013095e-06, 9.458999999989448e-06, 9.082999999993069e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.526" endtime="20201112 09:42:58.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.514" endtime="20201112 09:42:58.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.538" endtime="20201112 09:42:58.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.546" endtime="20201112 09:42:58.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.541" endtime="20201112 09:42:58.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.533" endtime="20201112 09:42:58.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.028" endtime="20201112 09:42:58.571"></status>
</kw>
<msg timestamp="20201112 09:42:58.571" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.591" endtime="20201112 09:42:58.603"></status>
</kw>
<msg timestamp="20201112 09:42:58.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.588" endtime="20201112 09:42:58.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.610" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.606" endtime="20201112 09:42:58.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.613" endtime="20201112 09:42:58.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.581" endtime="20201112 09:42:58.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.576" endtime="20201112 09:42:58.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.636" endtime="20201112 09:42:58.973"></status>
</kw>
<msg timestamp="20201112 09:42:58.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03644975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036458847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:58.633" endtime="20201112 09:42:58.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03644975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036458847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:58.983" endtime="20201112 09:42:59.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.001" endtime="20201112 09:42:59.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.625" endtime="20201112 09:42:59.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.621" endtime="20201112 09:42:59.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.018" level="INFO">${RESULT} = [{'time': 0.036458847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.036477875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.010" endtime="20201112 09:42:59.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.049" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:59.021" endtime="20201112 09:42:59.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.057" endtime="20201112 09:42:59.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.066" level="INFO">VALUE: [9.096999999999578e-06, 9.597000000000078e-06, 8.943999999996843e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.235999999995803e-06, 9.597000000000078e-06, 8.750000000001812e-06, 9.429999999997773e-06, 9.569000000000938e-06, 9.110999999999148e-06, 9.777000000002478e-06, 9.431000000004186e-06, 9.666999999997927e-06, 9.250000000002312e-06, 9.111999999998621e-06, 9.583000000000508e-06, 9.291999999994083e-06, 9.278000000001452e-06, 8.902999999997607e-06, 8.930000000004212e-06, 8.903000000004546e-06, 8.749999999994873e-06, 9.583000000000508e-06, 9.570000000000412e-06, 8.750000000001812e-06, 9.429999999997773e-06, 9.014000000001632e-06, 9.569000000000938e-06, 9.417000000004616e-06, 8.764000000001382e-06, 9.430999999997247e-06, 9.444000000004282e-06, 9.083000000000008e-06, 9.208000000003602e-06, 8.763000000001908e-06, 9.277999999994513e-06, 9.263999999994943e-06, 8.749999999994873e-06, 8.749999999994873e-06, 9.402999999998107e-06, 9.083000000000008e-06, 8.915999999997704e-06, 9.096999999999578e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.431000000004186e-06, 9.264000000001882e-06, 9.096999999999578e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.063" endtime="20201112 09:42:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.051" endtime="20201112 09:42:59.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.075" endtime="20201112 09:42:59.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.083" endtime="20201112 09:42:59.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.079" endtime="20201112 09:42:59.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.070" endtime="20201112 09:42:59.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.573" endtime="20201112 09:42:59.109"></status>
</kw>
<msg timestamp="20201112 09:42:59.109" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.129" endtime="20201112 09:42:59.141"></status>
</kw>
<msg timestamp="20201112 09:42:59.142" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.125" endtime="20201112 09:42:59.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.144" endtime="20201112 09:42:59.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.150" endtime="20201112 09:42:59.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.118" endtime="20201112 09:42:59.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.114" endtime="20201112 09:42:59.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.173" endtime="20201112 09:42:59.508"></status>
</kw>
<msg timestamp="20201112 09:42:59.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036428139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036437542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.170" endtime="20201112 09:42:59.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036428139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036437542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.517" endtime="20201112 09:42:59.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.536" endtime="20201112 09:42:59.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.163" endtime="20201112 09:42:59.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.158" endtime="20201112 09:42:59.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.554" level="INFO">${RESULT} = [{'time': 0.036437542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.036457569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.545" endtime="20201112 09:42:59.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.587" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:42:59.556" endtime="20201112 09:42:59.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.597" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.595" endtime="20201112 09:42:59.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.602" level="INFO">VALUE: [9.403000000005046e-06, 9.250000000002312e-06, 9.401999999998634e-06, 8.763000000001908e-06, 9.083000000000008e-06, 9.597000000000078e-06, 8.749999999994873e-06, 8.929999999997273e-06, 8.76299999999497e-06, 9.415999999998204e-06, 9.069999999999911e-06, 9.430999999997247e-06, 9.486000000002992e-06, 9.250000000002312e-06, 9.611999999999121e-06, 9.583000000000508e-06, 9.278000000001452e-06, 9.597000000000078e-06, 9.430999999997247e-06, 8.750000000001812e-06, 9.610999999999648e-06, 9.610999999999648e-06, 8.930999999996747e-06, 9.250000000002312e-06, 9.235999999995803e-06, 9.431000000004186e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.042000000000772e-06, 9.583999999999981e-06, 9.443999999997343e-06, 8.915999999997704e-06, 8.764000000001382e-06, 9.083000000000008e-06, 8.985999999995553e-06, 9.583999999999981e-06, 9.430999999997247e-06, 9.583000000000508e-06, 9.665999999998454e-06, 8.902999999997607e-06, 8.915999999997704e-06, 9.278000000001452e-06, 9.417000000004616e-06, 9.430999999997247e-06, 9.250000000002312e-06, 8.778000000000952e-06, 9.415999999998204e-06, 8.736000000002242e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.599" endtime="20201112 09:42:59.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.589" endtime="20201112 09:42:59.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.612" endtime="20201112 09:42:59.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.620" endtime="20201112 09:42:59.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.616" endtime="20201112 09:42:59.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.608" endtime="20201112 09:42:59.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.110" endtime="20201112 09:42:59.646"></status>
</kw>
<msg timestamp="20201112 09:42:59.646" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.666" endtime="20201112 09:42:59.678"></status>
</kw>
<msg timestamp="20201112 09:42:59.679" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.663" endtime="20201112 09:42:59.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.681" endtime="20201112 09:42:59.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.687" endtime="20201112 09:42:59.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.655" endtime="20201112 09:42:59.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.651" endtime="20201112 09:42:59.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.710" endtime="20201112 09:43:00.045"></status>
</kw>
<msg timestamp="20201112 09:43:00.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.707" endtime="20201112 09:43:00.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.055" endtime="20201112 09:43:00.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.074" endtime="20201112 09:43:00.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.700" endtime="20201112 09:43:00.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.695" endtime="20201112 09:43:00.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.092" level="INFO">${RESULT} = [{'time': 0.036223569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036237542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.083" endtime="20201112 09:43:00.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.122" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:00.094" endtime="20201112 09:43:00.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.130" endtime="20201112 09:43:00.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.138" level="INFO">VALUE: [8.915999999997704e-06, 9.430999999997247e-06, 9.583000000000508e-06, 9.306000000000592e-06, 8.764000000001382e-06, 9.292000000001022e-06, 8.778000000000952e-06, 9.096999999999578e-06, 9.430000000004712e-06, 9.277999999994513e-06, 9.597999999999551e-06, 9.445000000003756e-06, 9.597000000000078e-06, 8.929999999997273e-06, 9.430000000004712e-06, 9.416999999997677e-06, 8.860999999998898e-06, 8.916999999997177e-06, 9.583999999999981e-06, 9.069999999999911e-06, 9.416000000005142e-06, 9.430000000004712e-06, 9.27699999999504e-06, 9.597000000000078e-06, 9.416999999997677e-06, 8.902999999997607e-06, 9.597000000000078e-06, 8.902999999997607e-06, 9.833000000000758e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.583000000000508e-06, 8.888999999998037e-06, 8.929999999997273e-06, 8.722000000002672e-06, 9.069999999999911e-06, 9.263999999994943e-06, 9.069000000000438e-06, 8.735999999995303e-06, 9.096999999999578e-06, 9.583999999999981e-06, 9.431000000004186e-06, 8.778000000000952e-06, 9.610999999999648e-06, 9.679999999998024e-06, 9.554999999994429e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.568999999993999e-06, 8.916999999997177e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.135" endtime="20201112 09:43:00.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.124" endtime="20201112 09:43:00.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.146" endtime="20201112 09:43:00.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.156" endtime="20201112 09:43:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.152" endtime="20201112 09:43:00.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.142" endtime="20201112 09:43:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.648" endtime="20201112 09:43:00.181"></status>
</kw>
<msg timestamp="20201112 09:43:00.182" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.202" endtime="20201112 09:43:00.213"></status>
</kw>
<msg timestamp="20201112 09:43:00.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.198" endtime="20201112 09:43:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.217" endtime="20201112 09:43:00.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.223" endtime="20201112 09:43:00.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.191" endtime="20201112 09:43:00.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.186" endtime="20201112 09:43:00.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.246" endtime="20201112 09:43:00.581"></status>
</kw>
<msg timestamp="20201112 09:43:00.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036372306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.243" endtime="20201112 09:43:00.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036372306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.591" endtime="20201112 09:43:00.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.610" endtime="20201112 09:43:00.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.236" endtime="20201112 09:43:00.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.231" endtime="20201112 09:43:00.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.628" level="INFO">${RESULT} = [{'time': 0.036372306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036388306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.619" endtime="20201112 09:43:00.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.658" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:00.630" endtime="20201112 09:43:00.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.668" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.666" endtime="20201112 09:43:00.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.674" level="INFO">VALUE: [9.570000000000412e-06, 9.278000000001452e-06, 9.416999999997677e-06, 9.583999999999981e-06, 9.277999999994513e-06, 9.443999999997343e-06, 9.402999999998107e-06, 9.429999999997773e-06, 9.097999999999051e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.083000000000008e-06, 9.264000000001882e-06, 9.583000000000508e-06, 9.264000000001882e-06, 9.083000000000008e-06, 8.958999999995887e-06, 9.110999999999148e-06, 8.764000000001382e-06, 9.430999999997247e-06, 8.861000000005836e-06, 9.209000000003076e-06, 9.597999999999551e-06, 8.930999999996747e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.096999999999578e-06, 8.764000000001382e-06, 9.249999999995373e-06, 8.750000000001812e-06, 8.931000000003686e-06, 8.916999999997177e-06, 9.415999999998204e-06, 9.263999999994943e-06, 9.459000000003326e-06, 8.750000000001812e-06, 9.110999999999148e-06, 9.778000000001952e-06, 8.888999999998037e-06, 8.929999999997273e-06, 8.764000000001382e-06, 8.763999999994443e-06, 9.610999999999648e-06, 9.042000000000772e-06, 9.597000000000078e-06, 9.151999999998384e-06, 9.097999999999051e-06, 9.083000000000008e-06, 9.306000000000592e-06, 9.26299999999547e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.671" endtime="20201112 09:43:00.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.660" endtime="20201112 09:43:00.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.683" endtime="20201112 09:43:00.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.691" endtime="20201112 09:43:00.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.687" endtime="20201112 09:43:00.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.678" endtime="20201112 09:43:00.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.183" endtime="20201112 09:43:00.716"></status>
</kw>
<msg timestamp="20201112 09:43:00.717" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.738" endtime="20201112 09:43:00.751"></status>
</kw>
<msg timestamp="20201112 09:43:00.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.735" endtime="20201112 09:43:00.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.758" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.754" endtime="20201112 09:43:00.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.760" endtime="20201112 09:43:00.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.727" endtime="20201112 09:43:00.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.721" endtime="20201112 09:43:00.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.784" endtime="20201112 09:43:01.120"></status>
</kw>
<msg timestamp="20201112 09:43:01.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038632653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038641736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.780" endtime="20201112 09:43:01.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038632653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038641736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.130" endtime="20201112 09:43:01.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.149" endtime="20201112 09:43:01.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.773" endtime="20201112 09:43:01.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.768" endtime="20201112 09:43:01.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.166" level="INFO">${RESULT} = [{'time': 0.038641736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.038660722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.157" endtime="20201112 09:43:01.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.197" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:01.168" endtime="20201112 09:43:01.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.207" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.204" endtime="20201112 09:43:01.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.212" level="INFO">VALUE: [9.083000000000008e-06, 9.278000000001452e-06, 8.930999999996747e-06, 9.083000000000008e-06, 9.444999999996817e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.292000000001022e-06, 9.096999999999578e-06, 9.388999999998537e-06, 8.916000000004642e-06, 8.901999999998134e-06, 8.931000000003686e-06, 8.778000000000952e-06, 9.597000000000078e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.750000000001812e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069999999999911e-06, 8.957999999996413e-06, 9.124999999998717e-06, 9.583000000000508e-06, 9.624999999999218e-06, 9.250000000002312e-06, 9.237000000002216e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.429999999997773e-06, 9.333000000000258e-06, 8.806000000000092e-06, 9.096999999999578e-06, 8.819999999999661e-06, 9.499999999995623e-06, 9.263999999994943e-06, 8.943999999996843e-06, 8.915999999997704e-06, 9.014000000001632e-06, 9.083000000000008e-06, 9.110999999999148e-06, 8.929999999997273e-06, 9.264000000001882e-06, 9.083000000000008e-06, 9.236000000002742e-06, 8.750000000001812e-06, 9.096999999999578e-06, 8.750000000001812e-06, 8.930999999996747e-06, 8.916999999997177e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.209" endtime="20201112 09:43:01.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.199" endtime="20201112 09:43:01.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.221" endtime="20201112 09:43:01.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.229" endtime="20201112 09:43:01.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.224" endtime="20201112 09:43:01.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.216" endtime="20201112 09:43:01.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.718" endtime="20201112 09:43:01.254"></status>
</kw>
<msg timestamp="20201112 09:43:01.255" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.274" endtime="20201112 09:43:01.286"></status>
</kw>
<msg timestamp="20201112 09:43:01.287" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.271" endtime="20201112 09:43:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.289" endtime="20201112 09:43:01.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.296" endtime="20201112 09:43:01.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.264" endtime="20201112 09:43:01.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.259" endtime="20201112 09:43:01.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.323" endtime="20201112 09:43:01.668"></status>
</kw>
<msg timestamp="20201112 09:43:01.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.318" endtime="20201112 09:43:01.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.678" endtime="20201112 09:43:01.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.697" endtime="20201112 09:43:01.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.311" endtime="20201112 09:43:01.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.306" endtime="20201112 09:43:01.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.714" level="INFO">${RESULT} = [{'time': 0.035917861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.035931917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.705" endtime="20201112 09:43:01.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.746" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:01.716" endtime="20201112 09:43:01.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.756" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.754" endtime="20201112 09:43:01.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.761" level="INFO">VALUE: [8.903000000004546e-06, 9.416999999997677e-06, 9.111999999998621e-06, 9.597000000000078e-06, 9.083999999999481e-06, 9.416999999997677e-06, 8.847999999998801e-06, 9.207999999996663e-06, 8.917000000004116e-06, 9.569000000000938e-06, 9.277999999994513e-06, 8.764000000001382e-06, 8.903000000004546e-06, 9.083000000000008e-06, 9.638999999998787e-06, 9.458000000003852e-06, 9.416999999997677e-06, 9.610999999999648e-06, 8.750000000001812e-06, 8.929999999997273e-06, 8.902999999997607e-06, 8.804999999993679e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.430999999997247e-06, 9.430999999997247e-06, 8.76299999999497e-06, 9.083000000000008e-06, 9.402999999998107e-06, 9.208000000003602e-06, 9.610999999999648e-06, 9.110999999999148e-06, 9.597000000000078e-06, 9.264000000001882e-06, 9.195000000003506e-06, 8.903000000004546e-06, 9.082999999993069e-06, 9.597000000000078e-06, 9.152999999997857e-06, 9.249999999995373e-06, 9.597000000000078e-06, 8.916000000004642e-06, 9.416999999997677e-06, 9.791999999994583e-06, 9.597000000000078e-06, 9.069000000000438e-06, 9.264000000001882e-06, 9.375000000005906e-06, 9.597000000000078e-06, 9.430000000004712e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.758" endtime="20201112 09:43:01.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.748" endtime="20201112 09:43:01.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.770" endtime="20201112 09:43:01.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.778" endtime="20201112 09:43:01.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.774" endtime="20201112 09:43:01.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.766" endtime="20201112 09:43:01.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.256" endtime="20201112 09:43:01.804"></status>
</kw>
<msg timestamp="20201112 09:43:01.804" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.824" endtime="20201112 09:43:01.836"></status>
</kw>
<msg timestamp="20201112 09:43:01.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.821" endtime="20201112 09:43:01.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.839" endtime="20201112 09:43:01.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.846" endtime="20201112 09:43:01.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.813" endtime="20201112 09:43:01.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.809" endtime="20201112 09:43:01.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.871" endtime="20201112 09:43:02.207"></status>
</kw>
<msg timestamp="20201112 09:43:02.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036215708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036224611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.867" endtime="20201112 09:43:02.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036215708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036224611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.216" endtime="20201112 09:43:02.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.235" endtime="20201112 09:43:02.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.859" endtime="20201112 09:43:02.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.854" endtime="20201112 09:43:02.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.252" level="INFO">${RESULT} = [{'time': 0.036224611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.036238639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.244" endtime="20201112 09:43:02.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.282" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:02.254" endtime="20201112 09:43:02.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.293" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:02.290" endtime="20201112 09:43:02.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.298" level="INFO">VALUE: [8.902999999997607e-06, 9.083000000000008e-06, 9.278000000001452e-06, 8.736000000002242e-06, 9.096999999999578e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.263999999994943e-06, 9.583000000000508e-06, 9.221999999996233e-06, 8.915999999997704e-06, 8.764000000001382e-06, 8.778000000000952e-06, 9.402999999998107e-06, 9.264000000001882e-06, 9.59800000000649e-06, 9.430999999997247e-06, 9.430000000004712e-06, 8.958000000003352e-06, 9.402999999998107e-06, 8.764000000001382e-06, 8.915999999997704e-06, 9.096999999999578e-06, 9.264000000001882e-06, 9.083999999999481e-06, 8.930999999996747e-06, 9.124999999998717e-06, 9.083000000000008e-06, 8.778000000000952e-06, 8.750000000001812e-06, 9.583000000000508e-06, 9.333000000000258e-06, 9.430999999997247e-06, 9.069000000000438e-06, 9.583000000000508e-06, 8.916999999997177e-06, 8.819000000000188e-06, 8.930999999996747e-06, 9.429999999997773e-06, 9.610999999999648e-06, 8.763000000001908e-06, 9.083999999999481e-06, 8.943999999996843e-06, 9.250000000002312e-06, 8.694000000003532e-06, 9.583000000000508e-06, 9.416999999997677e-06, 8.929999999997273e-06, 8.888999999998037e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.295" endtime="20201112 09:43:02.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.284" endtime="20201112 09:43:02.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.307" endtime="20201112 09:43:02.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.315" endtime="20201112 09:43:02.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.310" endtime="20201112 09:43:02.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.302" endtime="20201112 09:43:02.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.805" endtime="20201112 09:43:02.340"></status>
</kw>
<msg timestamp="20201112 09:43:02.341" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.360" endtime="20201112 09:43:02.379"></status>
</kw>
<msg timestamp="20201112 09:43:02.380" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.357" endtime="20201112 09:43:02.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.383" endtime="20201112 09:43:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.389" endtime="20201112 09:43:02.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.350" endtime="20201112 09:43:02.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.345" endtime="20201112 09:43:02.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.412" endtime="20201112 09:43:02.750"></status>
</kw>
<msg timestamp="20201112 09:43:02.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043415917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.409" endtime="20201112 09:43:02.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043415917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.759" endtime="20201112 09:43:02.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.778" endtime="20201112 09:43:02.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.402" endtime="20201112 09:43:02.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.397" endtime="20201112 09:43:02.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.796" level="INFO">${RESULT} = [{'time': 0.043424681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.043439736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.786" endtime="20201112 09:43:02.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.826" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:02.798" endtime="20201112 09:43:02.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.836" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:02.833" endtime="20201112 09:43:02.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.841" level="INFO">VALUE: [8.764000000001382e-06, 8.693999999996593e-06, 9.096999999999578e-06, 9.096999999999578e-06, 9.278000000001452e-06, 8.750000000001812e-06, 9.124999999998717e-06, 9.250000000002312e-06, 9.416999999997677e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.236000000002742e-06, 9.431000000004186e-06, 9.583000000000508e-06, 8.736000000002242e-06, 9.096999999999578e-06, 9.415999999998204e-06, 9.582999999993569e-06, 9.264000000001882e-06, 8.930999999996747e-06, 9.486000000002992e-06, 9.777000000002478e-06, 9.235999999995803e-06, 9.415999999998204e-06, 9.833000000000758e-06, 8.764000000001382e-06, 8.750000000001812e-06, 9.264000000001882e-06, 9.471999999996483e-06, 8.930999999996747e-06, 8.973000000002396e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.236000000002742e-06, 8.721999999995733e-06, 8.764000000001382e-06, 9.249999999995373e-06, 9.167000000004366e-06, 9.597000000000078e-06, 8.915999999997704e-06, 9.055000000000868e-06, 8.916000000004642e-06, 9.083000000000008e-06, 9.778000000001952e-06, 8.764000000001382e-06, 8.931000000003686e-06, 9.777999999995013e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.838" endtime="20201112 09:43:02.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.828" endtime="20201112 09:43:02.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.850" endtime="20201112 09:43:02.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.858" endtime="20201112 09:43:02.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.854" endtime="20201112 09:43:02.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.845" endtime="20201112 09:43:02.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.342" endtime="20201112 09:43:02.883"></status>
</kw>
<msg timestamp="20201112 09:43:02.884" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.904" endtime="20201112 09:43:02.916"></status>
</kw>
<msg timestamp="20201112 09:43:02.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.901" endtime="20201112 09:43:02.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.920" endtime="20201112 09:43:02.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.926" endtime="20201112 09:43:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.894" endtime="20201112 09:43:02.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.889" endtime="20201112 09:43:02.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.950" endtime="20201112 09:43:03.288"></status>
</kw>
<msg timestamp="20201112 09:43:03.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03719825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037207222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:02.946" endtime="20201112 09:43:03.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03719825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037207222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:03.298" endtime="20201112 09:43:03.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.316" endtime="20201112 09:43:03.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.939" endtime="20201112 09:43:03.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.934" endtime="20201112 09:43:03.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.334" level="INFO">${RESULT} = [{'time': 0.037207222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999995983e-06, 'source_diff': 8.971999999995983e-06}, {'time': 0.037221431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.325" endtime="20201112 09:43:03.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.364" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:03.336" endtime="20201112 09:43:03.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.374" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:03.372" endtime="20201112 09:43:03.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.379" level="INFO">VALUE: [8.971999999995983e-06, 8.958999999995887e-06, 9.430999999997247e-06, 9.583000000000508e-06, 9.597000000000078e-06, 8.916999999997177e-06, 9.583000000000508e-06, 9.264000000001882e-06, 8.945000000003256e-06, 8.777999999994013e-06, 8.860999999998898e-06, 9.401999999998634e-06, 8.778000000000952e-06, 8.764000000001382e-06, 9.096999999999578e-06, 9.499999999995623e-06, 9.610999999999648e-06, 9.083000000000008e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.263999999994943e-06, 9.597000000000078e-06, 9.263999999994943e-06, 9.570000000000412e-06, 8.930000000004212e-06, 9.431000000004186e-06, 9.277999999994513e-06, 9.277999999994513e-06, 8.736000000002242e-06, 9.083000000000008e-06, 8.930999999996747e-06, 8.915999999997704e-06, 9.236000000002742e-06, 9.431000000004186e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.249999999995373e-06, 9.430999999997247e-06, 9.097999999999051e-06, 9.443999999997343e-06, 9.083000000000008e-06, 9.305000000001118e-06, 9.236000000002742e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.402999999998107e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.429999999997773e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.376" endtime="20201112 09:43:03.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.366" endtime="20201112 09:43:03.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.388" endtime="20201112 09:43:03.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.396" endtime="20201112 09:43:03.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.392" endtime="20201112 09:43:03.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.383" endtime="20201112 09:43:03.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.885" endtime="20201112 09:43:03.422"></status>
</kw>
<msg timestamp="20201112 09:43:03.423" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.443" endtime="20201112 09:43:03.455"></status>
</kw>
<msg timestamp="20201112 09:43:03.456" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.439" endtime="20201112 09:43:03.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.462" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.458" endtime="20201112 09:43:03.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.464" endtime="20201112 09:43:03.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.432" endtime="20201112 09:43:03.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.427" endtime="20201112 09:43:03.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.487" endtime="20201112 09:43:03.823"></status>
</kw>
<msg timestamp="20201112 09:43:03.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036348222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036357153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.484" endtime="20201112 09:43:03.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036348222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036357153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.832" endtime="20201112 09:43:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.851" endtime="20201112 09:43:03.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.477" endtime="20201112 09:43:03.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.472" endtime="20201112 09:43:03.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.870" level="INFO">${RESULT} = [{'time': 0.036357153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036373153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.861" endtime="20201112 09:43:03.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.902" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:03.872" endtime="20201112 09:43:03.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:03.910" endtime="20201112 09:43:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.917" level="INFO">VALUE: [8.931000000003686e-06, 9.278000000001452e-06, 8.764000000001382e-06, 8.986999999995027e-06, 9.250000000002312e-06, 9.429999999997773e-06, 8.764000000001382e-06, 9.166000000004892e-06, 8.931000000003686e-06, 9.416000000005142e-06, 8.763999999994443e-06, 8.792000000000522e-06, 8.749999999994873e-06, 9.430999999997247e-06, 9.431000000004186e-06, 9.541000000001798e-06, 8.916999999997177e-06, 9.138999999998287e-06, 9.597000000000078e-06, 9.444000000004282e-06, 8.916999999997177e-06, 9.221999999996233e-06, 9.069999999999911e-06, 9.417000000004616e-06, 9.278000000001452e-06, 9.583000000000508e-06, 9.417000000004616e-06, 8.763999999994443e-06, 8.777000000001478e-06, 9.542000000001272e-06, 9.416999999997677e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.457999999996913e-06, 9.416999999997677e-06, 8.764000000001382e-06, 9.416999999997677e-06, 8.901999999998134e-06, 9.235999999995803e-06, 8.916000000004642e-06, 9.250000000002312e-06, 8.722000000002672e-06, 9.180999999996997e-06, 9.430999999997247e-06, 8.749999999994873e-06, 8.915999999997704e-06, 9.444000000004282e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.914" endtime="20201112 09:43:03.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.904" endtime="20201112 09:43:03.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.927" endtime="20201112 09:43:03.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.935" endtime="20201112 09:43:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.931" endtime="20201112 09:43:03.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.922" endtime="20201112 09:43:03.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.424" endtime="20201112 09:43:03.960"></status>
</kw>
<msg timestamp="20201112 09:43:03.961" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.981" endtime="20201112 09:43:03.994"></status>
</kw>
<msg timestamp="20201112 09:43:03.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.978" endtime="20201112 09:43:03.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.997" endtime="20201112 09:43:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.004" endtime="20201112 09:43:04.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.970" endtime="20201112 09:43:04.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.965" endtime="20201112 09:43:04.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.027" endtime="20201112 09:43:04.360"></status>
</kw>
<msg timestamp="20201112 09:43:04.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:04.024" endtime="20201112 09:43:04.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:04.369" endtime="20201112 09:43:04.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.388" endtime="20201112 09:43:04.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.016" endtime="20201112 09:43:04.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.012" endtime="20201112 09:43:04.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.405" level="INFO">${RESULT} = [{'time': 0.0371165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.582999999993569e-06, 'source_diff': 9.582999999993569e-06}, {'time': 0.037134486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:04.396" endtime="20201112 09:43:04.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.437" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:04.407" endtime="20201112 09:43:04.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.447" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:04.445" endtime="20201112 09:43:04.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.452" level="INFO">VALUE: [9.582999999993569e-06, 8.722000000002672e-06, 9.264000000001882e-06, 8.916999999997177e-06, 9.416999999997677e-06, 9.597000000000078e-06, 8.916999999997177e-06, 8.763999999994443e-06, 9.389000000005476e-06, 9.249999999995373e-06, 8.929999999997273e-06, 9.457999999996913e-06, 9.430999999997247e-06, 9.277999999994513e-06, 9.429999999997773e-06, 9.264000000001882e-06, 9.110999999999148e-06, 9.250000000002312e-06, 9.083000000000008e-06, 8.929999999997273e-06, 9.597000000000078e-06, 8.764000000001382e-06, 9.417000000004616e-06, 9.431000000004186e-06, 9.416999999997677e-06, 8.750000000001812e-06, 9.611999999999121e-06, 8.750000000001812e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.110999999999148e-06, 9.583000000000508e-06, 9.610999999999648e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.264000000001882e-06, 9.278000000001452e-06, 8.763999999994443e-06, 9.249999999995373e-06, 9.582999999993569e-06, 8.764000000001382e-06, 9.430999999997247e-06, 9.597999999999551e-06, 9.611999999999121e-06, 8.917000000004116e-06, 8.929999999997273e-06, 8.750000000001812e-06, 8.749999999994873e-06, 9.236000000002742e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.449" endtime="20201112 09:43:04.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.439" endtime="20201112 09:43:04.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.462" endtime="20201112 09:43:04.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.470" endtime="20201112 09:43:04.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.466" endtime="20201112 09:43:04.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.457" endtime="20201112 09:43:04.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.962" endtime="20201112 09:43:04.495"></status>
</kw>
<msg timestamp="20201112 09:43:04.496" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.515" endtime="20201112 09:43:04.527"></status>
</kw>
<msg timestamp="20201112 09:43:04.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.512" endtime="20201112 09:43:04.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.531" endtime="20201112 09:43:04.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.537" endtime="20201112 09:43:04.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.505" endtime="20201112 09:43:04.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.500" endtime="20201112 09:43:04.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.560" endtime="20201112 09:43:04.896"></status>
</kw>
<msg timestamp="20201112 09:43:04.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036252889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.557" endtime="20201112 09:43:04.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036252889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.905" endtime="20201112 09:43:04.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.924" endtime="20201112 09:43:04.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.550" endtime="20201112 09:43:04.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.545" endtime="20201112 09:43:04.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.941" level="INFO">${RESULT} = [{'time': 0.036252889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.036267917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:04.932" endtime="20201112 09:43:04.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.973" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:04.943" endtime="20201112 09:43:04.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.983" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:04.981" endtime="20201112 09:43:04.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.988" level="INFO">VALUE: [9.278000000001452e-06, 9.583999999999981e-06, 8.915999999997704e-06, 9.110999999999148e-06, 9.138999999998287e-06, 9.403000000005046e-06, 8.722000000002672e-06, 8.943999999996843e-06, 9.597999999999551e-06, 8.805000000000618e-06, 9.570000000000412e-06, 9.430999999997247e-06, 8.945000000003256e-06, 9.096999999999578e-06, 9.416999999997677e-06, 9.264000000001882e-06, 8.680000000003962e-06, 8.916000000004642e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.097999999999051e-06, 9.459000000003326e-06, 9.652999999998357e-06, 9.250000000002312e-06, 9.444000000004282e-06, 9.513000000002658e-06, 8.764000000001382e-06, 8.764000000001382e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.096999999999578e-06, 8.735999999995303e-06, 9.304999999994179e-06, 9.097999999999051e-06, 8.778000000000952e-06, 8.931000000003686e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.750000000002812e-06, 8.874999999998467e-06, 8.985999999995553e-06, 9.041000000001298e-06, 8.764000000001382e-06, 9.417000000004616e-06, 9.542000000001272e-06, 9.444999999996817e-06, 9.431000000004186e-06, 9.236000000002742e-06, 9.096999999999578e-06, 9.416999999997677e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.985" endtime="20201112 09:43:04.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.975" endtime="20201112 09:43:04.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.998" endtime="20201112 09:43:05.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.006" endtime="20201112 09:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.002" endtime="20201112 09:43:05.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.993" endtime="20201112 09:43:05.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.497" endtime="20201112 09:43:05.033"></status>
</kw>
<msg timestamp="20201112 09:43:05.033" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.053" endtime="20201112 09:43:05.065"></status>
</kw>
<msg timestamp="20201112 09:43:05.066" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.050" endtime="20201112 09:43:05.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.068" endtime="20201112 09:43:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.074" endtime="20201112 09:43:05.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.042" endtime="20201112 09:43:05.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.038" endtime="20201112 09:43:05.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.098" endtime="20201112 09:43:05.433"></status>
</kw>
<msg timestamp="20201112 09:43:05.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037037181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.095" endtime="20201112 09:43:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037037181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.443" endtime="20201112 09:43:05.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.461" endtime="20201112 09:43:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.087" endtime="20201112 09:43:05.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.082" endtime="20201112 09:43:05.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.479" level="INFO">${RESULT} = [{'time': 0.037045917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.037059861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:05.470" endtime="20201112 09:43:05.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:05.510" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:05.481" endtime="20201112 09:43:05.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.520" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:05.518" endtime="20201112 09:43:05.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.525" level="INFO">VALUE: [8.735999999995303e-06, 9.416999999997677e-06, 9.02699999999479e-06, 8.929999999997273e-06, 8.930999999996747e-06, 9.443999999997343e-06, 9.610999999999648e-06, 9.292000000001022e-06, 9.096999999999578e-06, 9.403000000005046e-06, 9.570000000000412e-06, 9.110999999999148e-06, 9.417000000004616e-06, 9.374999999998967e-06, 9.277000000001978e-06, 9.444000000004282e-06, 9.110999999999148e-06, 9.083000000000008e-06, 8.930000000004212e-06, 9.263999999994943e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.250000000002312e-06, 8.735999999995303e-06, 9.597000000000078e-06, 9.263999999994943e-06, 9.236000000002742e-06, 8.916999999997177e-06, 9.569000000000938e-06, 9.083000000000008e-06, 9.415999999998204e-06, 9.083000000000008e-06, 9.430000000004712e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.597000000000078e-06, 9.250000000002312e-06, 9.624999999999218e-06, 8.917000000004116e-06, 9.000000000002062e-06, 8.930999999996747e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.443999999997343e-06, 9.096999999999578e-06, 8.707999999996163e-06, 8.929999999997273e-06, 9.443999999997343e-06, 9.263000000002408e-06, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201112 09:43:05.522" endtime="20201112 09:43:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.512" endtime="20201112 09:43:05.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.535" endtime="20201112 09:43:05.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.543" endtime="20201112 09:43:05.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.539" endtime="20201112 09:43:05.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.530" endtime="20201112 09:43:05.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.034" endtime="20201112 09:43:05.568"></status>
</kw>
<msg timestamp="20201112 09:43:05.569" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.588" endtime="20201112 09:43:05.600"></status>
</kw>
<msg timestamp="20201112 09:43:05.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.585" endtime="20201112 09:43:05.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.604" endtime="20201112 09:43:05.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.610" endtime="20201112 09:43:05.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.578" endtime="20201112 09:43:05.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.573" endtime="20201112 09:43:05.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.633" endtime="20201112 09:43:05.968"></status>
</kw>
<msg timestamp="20201112 09:43:05.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036205792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036215028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.629" endtime="20201112 09:43:05.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036205792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036215028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.977" endtime="20201112 09:43:05.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.996" endtime="20201112 09:43:06.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.622" endtime="20201112 09:43:06.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.618" endtime="20201112 09:43:06.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.013" level="INFO">${RESULT} = [{'time': 0.036215028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036233125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.005" endtime="20201112 09:43:06.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:06.045" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:06.015" endtime="20201112 09:43:06.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.057" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:06.055" endtime="20201112 09:43:06.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.063" level="INFO">VALUE: [9.236000000002742e-06, 8.721999999995733e-06, 9.110999999999148e-06, 9.096999999999578e-06, 9.096999999999578e-06, 8.735999999995303e-06, 8.694000000003532e-06, 8.902999999997607e-06, 9.249999999995373e-06, 9.083000000000008e-06, 8.708000000003102e-06, 9.097999999999051e-06, 9.778000000001952e-06, 9.415999999998204e-06, 9.444999999996817e-06, 9.415999999998204e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.735999999996303e-06, 9.430000000004712e-06, 9.388999999998537e-06, 9.096999999999578e-06, 9.236000000002742e-06, 9.610999999999648e-06, 8.764000000001382e-06, 9.430000000004712e-06, 9.583000000000508e-06, 9.264000000001882e-06, 9.430000000004712e-06, 8.930000000004212e-06, 9.263999999994943e-06, 8.764000000001382e-06, 9.056000000000342e-06, 8.860999999998898e-06, 9.415999999998204e-06, 8.749999999994873e-06, 9.764000000002382e-06, 9.737000000002716e-06, 9.583999999999981e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.597000000000078e-06, 9.416000000005142e-06, 8.86200000000531e-06, 9.513999999995193e-06, 8.917000000004116e-06, 8.917000000004116e-06, 9.583000000000508e-06, 9.069999999999911e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.060" endtime="20201112 09:43:06.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.048" endtime="20201112 09:43:06.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.073" endtime="20201112 09:43:06.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.081" endtime="20201112 09:43:06.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.077" endtime="20201112 09:43:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.068" endtime="20201112 09:43:06.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.570" endtime="20201112 09:43:06.106"></status>
</kw>
<msg timestamp="20201112 09:43:06.107" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.126" endtime="20201112 09:43:06.139"></status>
</kw>
<msg timestamp="20201112 09:43:06.140" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.123" endtime="20201112 09:43:06.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.142" endtime="20201112 09:43:06.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.148" endtime="20201112 09:43:06.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.116" endtime="20201112 09:43:06.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.111" endtime="20201112 09:43:06.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.171" endtime="20201112 09:43:06.506"></status>
</kw>
<msg timestamp="20201112 09:43:06.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036132667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.168" endtime="20201112 09:43:06.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036132667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.515" endtime="20201112 09:43:06.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.534" endtime="20201112 09:43:06.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.161" endtime="20201112 09:43:06.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.156" endtime="20201112 09:43:06.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.552" level="INFO">${RESULT} = [{'time': 0.036132667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.036148736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.543" endtime="20201112 09:43:06.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:06.582" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:06.554" endtime="20201112 09:43:06.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.592" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:06.590" endtime="20201112 09:43:06.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.599" level="INFO">VALUE: [9.069999999999911e-06, 8.888999999998037e-06, 9.597000000000078e-06, 8.931000000003686e-06, 9.444000000004282e-06, 9.513999999995193e-06, 9.610999999999648e-06, 9.083999999999481e-06, 9.264000000001882e-06, 9.416999999997677e-06, 8.917000000004116e-06, 9.333000000000258e-06, 9.597999999999551e-06, 9.097999999999051e-06, 9.110999999999148e-06, 9.208999999996137e-06, 8.805000000000618e-06, 9.111000000006086e-06, 9.597000000000078e-06, 8.930999999996747e-06, 8.917000000004116e-06, 8.958000000003352e-06, 9.417000000004616e-06, 9.597000000000078e-06, 8.915999999997704e-06, 8.916999999997177e-06, 8.832999999999758e-06, 9.76299999999597e-06, 9.596999999993139e-06, 9.597000000000078e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.429999999997773e-06, 9.083999999999481e-06, 9.430999999997247e-06, 9.374999999998967e-06, 9.096999999999578e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.929999999997273e-06, 9.403000000005046e-06, 9.417000000004616e-06, 8.764000000001382e-06, 9.597000000000078e-06, 9.264000000001882e-06, 8.846999999999328e-06, 8.750000000001812e-06, 8.874999999998467e-06, 9.291000000001548e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.594" endtime="20201112 09:43:06.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.584" endtime="20201112 09:43:06.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.608" endtime="20201112 09:43:06.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.616" endtime="20201112 09:43:06.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.612" endtime="20201112 09:43:06.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.603" endtime="20201112 09:43:06.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.108" endtime="20201112 09:43:06.642"></status>
</kw>
<msg timestamp="20201112 09:43:06.642" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.662" endtime="20201112 09:43:06.673"></status>
</kw>
<msg timestamp="20201112 09:43:06.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.658" endtime="20201112 09:43:06.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.677" endtime="20201112 09:43:06.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.683" endtime="20201112 09:43:06.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.651" endtime="20201112 09:43:06.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.646" endtime="20201112 09:43:06.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.706" endtime="20201112 09:43:07.041"></status>
</kw>
<msg timestamp="20201112 09:43:07.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036020125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036029542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.703" endtime="20201112 09:43:07.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036020125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036029542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.050" endtime="20201112 09:43:07.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.069" endtime="20201112 09:43:07.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.695" endtime="20201112 09:43:07.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.691" endtime="20201112 09:43:07.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.087" level="INFO">${RESULT} = [{'time': 0.036029542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.036044597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.078" endtime="20201112 09:43:07.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:07.118" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:07.089" endtime="20201112 09:43:07.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.128" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:07.125" endtime="20201112 09:43:07.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.133" level="INFO">VALUE: [9.416999999997677e-06, 9.569000000000938e-06, 9.444000000004282e-06, 8.916000000004642e-06, 9.597000000000078e-06, 9.445000000003756e-06, 9.471999999996483e-06, 9.083000000000008e-06, 8.722000000002672e-06, 9.416999999997677e-06, 9.583999999999981e-06, 9.402999999998107e-06, 9.222000000003172e-06, 8.930999999996747e-06, 9.110999999999148e-06, 9.416999999997677e-06, 9.097999999999051e-06, 8.972000000002922e-06, 9.431000000004186e-06, 8.916999999997177e-06, 9.110999999999148e-06, 9.568999999993999e-06, 9.083000000000008e-06, 9.458000000003852e-06, 8.929999999997273e-06, 9.473000000002896e-06, 9.096999999999578e-06, 9.429999999997773e-06, 9.277999999994513e-06, 9.264000000001882e-06, 9.431000000004186e-06, 9.806000000001092e-06, 8.749999999994873e-06, 8.917000000004116e-06, 8.764000000001382e-06, 9.277999999994513e-06, 9.430999999997247e-06, 8.902999999997607e-06, 9.264000000001882e-06, 8.736000000002242e-06, 9.277999999994513e-06, 9.069999999999911e-06, 9.403000000005046e-06, 8.778000000000952e-06, 9.013999999994693e-06, 8.917000000004116e-06, 9.083000000000008e-06, 9.583000000000508e-06, 9.597000000000078e-06, 8.931000000003686e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.130" endtime="20201112 09:43:07.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.119" endtime="20201112 09:43:07.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.142" endtime="20201112 09:43:07.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.152" endtime="20201112 09:43:07.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.148" endtime="20201112 09:43:07.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.138" endtime="20201112 09:43:07.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.643" endtime="20201112 09:43:07.177"></status>
</kw>
<msg timestamp="20201112 09:43:07.178" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.198" endtime="20201112 09:43:07.209"></status>
</kw>
<msg timestamp="20201112 09:43:07.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.194" endtime="20201112 09:43:07.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.213" endtime="20201112 09:43:07.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.219" endtime="20201112 09:43:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.187" endtime="20201112 09:43:07.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.182" endtime="20201112 09:43:07.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.242" endtime="20201112 09:43:07.578"></status>
</kw>
<msg timestamp="20201112 09:43:07.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.239" endtime="20201112 09:43:07.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.588" endtime="20201112 09:43:07.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.606" endtime="20201112 09:43:07.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.232" endtime="20201112 09:43:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.227" endtime="20201112 09:43:07.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.624" level="INFO">${RESULT} = [{'time': 0.036368472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.036384611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.615" endtime="20201112 09:43:07.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:07.654" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:07.626" endtime="20201112 09:43:07.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.664" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:07.662" endtime="20201112 09:43:07.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.670" level="INFO">VALUE: [9.264000000001882e-06, 9.069000000000438e-06, 9.583000000000508e-06, 8.972000000002922e-06, 9.570000000000412e-06, 9.444999999996817e-06, 9.597000000000078e-06, 9.097999999999051e-06, 8.750000000001812e-06, 8.930000000004212e-06, 8.764000000001382e-06, 9.597000000000078e-06, 9.249999999995373e-06, 9.416000000005142e-06, 8.929999999997273e-06, 9.360999999999398e-06, 8.875000000005406e-06, 9.583000000000508e-06, 8.763999999994443e-06, 8.763999999994443e-06, 9.277000000001978e-06, 9.264000000001882e-06, 9.415999999998204e-06, 9.444999999996817e-06, 9.333000000000258e-06, 9.569999999993473e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.181000000003936e-06, 9.431000000004186e-06, 9.583000000000508e-06, 9.221999999996233e-06, 9.417000000004616e-06, 9.597000000000078e-06, 8.929999999997273e-06, 9.249999999995373e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.415999999998204e-06, 9.430999999997247e-06, 8.764000000001382e-06, 9.430000000004712e-06, 9.096999999999578e-06, 9.610999999999648e-06, 9.083000000000008e-06, 9.429999999997773e-06, 8.750000000001812e-06, 8.930999999996747e-06, 8.930999999996747e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.666" endtime="20201112 09:43:07.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.656" endtime="20201112 09:43:07.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.685" endtime="20201112 09:43:07.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.696" endtime="20201112 09:43:07.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.691" endtime="20201112 09:43:07.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.681" endtime="20201112 09:43:07.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.179" endtime="20201112 09:43:07.723"></status>
</kw>
<msg timestamp="20201112 09:43:07.723" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.743" endtime="20201112 09:43:07.755"></status>
</kw>
<msg timestamp="20201112 09:43:07.756" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.740" endtime="20201112 09:43:07.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.762" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.758" endtime="20201112 09:43:07.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.764" endtime="20201112 09:43:07.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.732" endtime="20201112 09:43:07.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.728" endtime="20201112 09:43:07.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.788" endtime="20201112 09:43:08.124"></status>
</kw>
<msg timestamp="20201112 09:43:08.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036380597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036389736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.784" endtime="20201112 09:43:08.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036380597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036389736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.134" endtime="20201112 09:43:08.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.153" endtime="20201112 09:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.777" endtime="20201112 09:43:08.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.772" endtime="20201112 09:43:08.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.170" level="INFO">${RESULT} = [{'time': 0.036389736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036406736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.161" endtime="20201112 09:43:08.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.202" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:08.172" endtime="20201112 09:43:08.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.212" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:08.210" endtime="20201112 09:43:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.218" level="INFO">VALUE: [9.138999999998287e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.429999999997773e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.583999999999981e-06, 9.749999999995873e-06, 9.430999999997247e-06, 8.931000000003686e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.152999999997857e-06, 9.333000000000258e-06, 9.556000000000842e-06, 9.083000000000008e-06, 9.416999999997677e-06, 8.778000000000952e-06, 8.806000000000092e-06, 9.096999999999578e-06, 9.445000000003756e-06, 9.416999999997677e-06, 9.583000000000508e-06, 9.278000000001452e-06, 9.264000000001882e-06, 9.444999999996817e-06, 9.096999999999578e-06, 9.429999999997773e-06, 8.902999999997607e-06, 9.250000000002312e-06, 9.056000000000342e-06, 8.778000000000952e-06, 9.597000000000078e-06, 9.194000000004032e-06, 9.417000000004616e-06, 8.778000000000952e-06, 9.305000000001118e-06, 9.528000000001702e-06, 9.611000000006586e-06, 9.597999999999551e-06, 8.778000000000952e-06, 9.597000000000078e-06, 8.903000000004546e-06, 9.250000000002312e-06, 9.028000000001202e-06, 9.597000000000078e-06, 9.430000000004712e-06, 9.249999999995373e-06, 8.915999999997704e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.215" endtime="20201112 09:43:08.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.204" endtime="20201112 09:43:08.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.227" endtime="20201112 09:43:08.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.235" endtime="20201112 09:43:08.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.231" endtime="20201112 09:43:08.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.223" endtime="20201112 09:43:08.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.724" endtime="20201112 09:43:08.261"></status>
</kw>
<msg timestamp="20201112 09:43:08.261" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.282" endtime="20201112 09:43:08.294"></status>
</kw>
<msg timestamp="20201112 09:43:08.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.279" endtime="20201112 09:43:08.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.298" endtime="20201112 09:43:08.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.304" endtime="20201112 09:43:08.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.272" endtime="20201112 09:43:08.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.266" endtime="20201112 09:43:08.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.327" endtime="20201112 09:43:08.665"></status>
</kw>
<msg timestamp="20201112 09:43:08.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037625819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.324" endtime="20201112 09:43:08.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037625819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.675" endtime="20201112 09:43:08.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.694" endtime="20201112 09:43:08.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.317" endtime="20201112 09:43:08.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.312" endtime="20201112 09:43:08.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.711" level="INFO">${RESULT} = [{'time': 0.037634958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.037651986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.702" endtime="20201112 09:43:08.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.741" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:08.713" endtime="20201112 09:43:08.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:08.749" endtime="20201112 09:43:08.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.757" level="INFO">VALUE: [9.139000000005226e-06, 8.764000000001382e-06, 8.764000000001382e-06, 9.083000000000008e-06, 9.610999999999648e-06, 9.264000000001882e-06, 8.778000000000952e-06, 9.610999999999648e-06, 9.610999999999648e-06, 9.263999999994943e-06, 8.750000000001812e-06, 9.083000000000008e-06, 9.096999999999578e-06, 8.971999999995983e-06, 9.08400000000642e-06, 9.083999999999481e-06, 9.429999999997773e-06, 9.624999999999218e-06, 8.930000000004212e-06, 8.902999999997607e-06, 9.570000000000412e-06, 9.250000000002312e-06, 9.443999999997343e-06, 8.750000000001812e-06, 9.292000000001022e-06, 8.764000000001382e-06, 8.846999999999328e-06, 9.597000000000078e-06, 9.59800000000649e-06, 8.958000000003352e-06, 8.777999999994013e-06, 8.915999999997704e-06, 9.445000000003756e-06, 9.264000000001882e-06, 9.096999999999578e-06, 9.485999999996053e-06, 8.930000000004212e-06, 9.151999999998384e-06, 9.069999999999911e-06, 9.401999999998634e-06, 9.056000000000342e-06, 9.096999999999578e-06, 9.429999999997773e-06, 8.763000000001908e-06, 9.097999999999051e-06, 8.749999999994873e-06, 9.110999999999148e-06, 9.222000000003172e-06, 9.610999999999648e-06, 8.917000000004116e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.754" endtime="20201112 09:43:08.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.743" endtime="20201112 09:43:08.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.766" endtime="20201112 09:43:08.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.775" endtime="20201112 09:43:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.770" endtime="20201112 09:43:08.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.762" endtime="20201112 09:43:08.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.262" endtime="20201112 09:43:08.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.025" endtime="20201112 09:43:08.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.812" endtime="20201112 09:43:08.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.808" endtime="20201112 09:43:08.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.805" endtime="20201112 09:43:08.836"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:57.892" endtime="20201112 09:43:08.837" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.857" endtime="20201112 09:43:08.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.853" endtime="20201112 09:43:08.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.915" endtime="20201112 09:43:08.941"></status>
</kw>
<msg timestamp="20201112 09:43:08.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.912" endtime="20201112 09:43:08.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.944" endtime="20201112 09:43:08.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.955" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:08.950" endtime="20201112 09:43:08.955"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:08.905" endtime="20201112 09:43:08.957"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:08.898" endtime="20201112 09:43:08.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.896" endtime="20201112 09:43:08.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:08.967" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:08.966" endtime="20201112 09:43:08.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.961" endtime="20201112 09:43:08.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.894" endtime="20201112 09:43:08.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.892" endtime="20201112 09:43:08.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.971" endtime="20201112 09:43:08.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.887" endtime="20201112 09:43:08.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.882" endtime="20201112 09:43:08.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.851" endtime="20201112 09:43:08.978"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.002" endtime="20201112 09:43:09.025"></status>
</kw>
<msg timestamp="20201112 09:43:09.027" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.998" endtime="20201112 09:43:09.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.033" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.029" endtime="20201112 09:43:09.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.035" endtime="20201112 09:43:09.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.991" endtime="20201112 09:43:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.985" endtime="20201112 09:43:09.042"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.046" endtime="20201112 09:43:09.051"></status>
</kw>
<msg timestamp="20201112 09:43:09.052" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:09.043" endtime="20201112 09:43:09.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.062" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:09.059" endtime="20201112 09:43:09.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.066" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:09.064" endtime="20201112 09:43:09.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.053" endtime="20201112 09:43:09.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.080" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:09.075" endtime="20201112 09:43:09.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.084" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:09.082" endtime="20201112 09:43:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.070" endtime="20201112 09:43:09.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.103" endtime="20201112 09:43:09.453"></status>
</kw>
<msg timestamp="20201112 09:43:09.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136744972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136760444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.099" endtime="20201112 09:43:09.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136744972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136760444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.463" endtime="20201112 09:43:09.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.482" endtime="20201112 09:43:09.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.092" endtime="20201112 09:43:09.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.088" endtime="20201112 09:43:09.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.499" level="INFO">${RESULT} = [{'time': 0.136760444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.547200000001636e-05, 'source_diff': 1.547200000001636e-05}, {'time': 0.136785389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.490" endtime="20201112 09:43:09.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:09.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:09.501" endtime="20201112 09:43:09.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.540" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:09.538" endtime="20201112 09:43:09.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.546" level="INFO">VALUE: [1.547200000001636e-05, 1.477800000002083e-05, 1.543099999998243e-05, 1.4917000000003178e-05, 1.562499999999134e-05, 1.5445000000002818e-05, 1.5637999999984498e-05, 1.4764000000000443e-05, 1.529100000000061e-05, 1.5125000000004718e-05, 1.561099999999871e-05, 1.5263000000015348e-05, 1.561099999999871e-05, 1.5597000000006078e-05, 1.4959000000008826e-05, 1.5639000000011727e-05, 1.5444000000003344e-05, 1.5417000000017556e-05, 1.4777999999993074e-05, 1.5249999999994435e-05, 1.5138999999997349e-05, 1.5278000000007452e-05, 1.47769999999936e-05, 1.5222000000009173e-05, 1.5263999999987066e-05, 1.5111000000012087e-05, 1.4791999999985705e-05, 1.50969999999917e-05, 1.511200000001156e-05, 1.5110999999984331e-05, 1.4764000000000443e-05, 1.5334000000005732e-05, 1.5777999999994075e-05, 1.4972000000001984e-05, 1.5263999999987066e-05, 1.5430000000010713e-05, 1.4972000000001984e-05, 1.5596999999978323e-05, 1.4777999999993074e-05, 1.50969999999917e-05, 1.4930999999995809e-05, 1.5278000000007452e-05, 1.5110999999984331e-05, 1.5097999999991174e-05, 1.477800000002083e-05, 1.526400000001482e-05, 1.5263999999987066e-05, 1.526400000001482e-05, 1.5110999999984331e-05, 1.4903000000010547e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.543" endtime="20201112 09:43:09.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.531" endtime="20201112 09:43:09.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.555" endtime="20201112 09:43:09.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.564" endtime="20201112 09:43:09.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.559" endtime="20201112 09:43:09.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.551" endtime="20201112 09:43:09.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.979" endtime="20201112 09:43:09.589"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:08.844" endtime="20201112 09:43:09.592" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.611" endtime="20201112 09:43:09.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.607" endtime="20201112 09:43:09.635"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.669" endtime="20201112 09:43:09.695"></status>
</kw>
<msg timestamp="20201112 09:43:09.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.666" endtime="20201112 09:43:09.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.698" endtime="20201112 09:43:09.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:09.705" endtime="20201112 09:43:09.710"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.659" endtime="20201112 09:43:09.711"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.651" endtime="20201112 09:43:09.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.648" endtime="20201112 09:43:09.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:09.721" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:09.720" endtime="20201112 09:43:09.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.715" endtime="20201112 09:43:09.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.646" endtime="20201112 09:43:09.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.645" endtime="20201112 09:43:09.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.725" endtime="20201112 09:43:09.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.641" endtime="20201112 09:43:09.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.636" endtime="20201112 09:43:09.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.605" endtime="20201112 09:43:09.732"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.756" endtime="20201112 09:43:09.854"></status>
</kw>
<msg timestamp="20201112 09:43:09.855" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.753" endtime="20201112 09:43:09.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.861" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.857" endtime="20201112 09:43:09.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.863" endtime="20201112 09:43:09.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.746" endtime="20201112 09:43:09.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.740" endtime="20201112 09:43:09.870"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.874" endtime="20201112 09:43:09.879"></status>
</kw>
<msg timestamp="20201112 09:43:09.880" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:09.871" endtime="20201112 09:43:09.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.890" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:09.887" endtime="20201112 09:43:09.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.894" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:09.892" endtime="20201112 09:43:09.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.881" endtime="20201112 09:43:09.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.906" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:09.903" endtime="20201112 09:43:09.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.910" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:09.908" endtime="20201112 09:43:09.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.898" endtime="20201112 09:43:09.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.931" endtime="20201112 09:43:10.278"></status>
</kw>
<msg timestamp="20201112 09:43:10.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138212861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138259917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.925" endtime="20201112 09:43:10.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138212861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138259917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.288" endtime="20201112 09:43:10.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.306" endtime="20201112 09:43:10.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.918" endtime="20201112 09:43:10.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.914" endtime="20201112 09:43:10.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.323" level="INFO">${RESULT} = [{'time': 0.138259917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.705600000001753e-05, 'source_diff': 4.705600000001753e-05}, {'time': 0.139765861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.314" endtime="20201112 09:43:10.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:10.353" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:10.325" endtime="20201112 09:43:10.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.365" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:10.363" endtime="20201112 09:43:10.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.370" level="INFO">VALUE: [4.705600000001753e-05, 4.663899999998722e-05, 4.6319000000016874e-05, 4.700000000001925e-05, 4.680499999998311e-05, 4.6653000000007605e-05, 4.615299999999323e-05, 4.6971999999978475e-05, 4.68190000000035e-05, 4.68190000000035e-05, 4.6805000000010866e-05, 4.662499999999459e-05, 4.698599999999886e-05, 4.6415999999993574e-05, 4.6971999999978475e-05, 4.698599999999886e-05, 4.683299999999613e-05, 4.615200000002151e-05, 4.706899999998293e-05, 4.624999999999768e-05, 4.650000000000487e-05, 4.650000000000487e-05, 4.680600000001034e-05, 4.6805000000010866e-05, 4.6805999999982584e-05, 4.6639000000014974e-05, 4.648699999998396e-05, 4.68190000000035e-05, 4.62780000000107e-05, 4.6347000000002136e-05, 4.6347000000002136e-05, 4.698600000002662e-05, 4.6485999999984484e-05, 4.633299999998175e-05, 4.626399999999031e-05, 4.6819999999975215e-05, 4.698599999999886e-05, 4.6667000000000236e-05, 4.6847000000016514e-05, 4.616699999998586e-05, 4.6291999999975575e-05, 4.6653000000007605e-05, 4.6277000000011226e-05, 4.715299999999423e-05, 4.665299999997985e-05, 4.6499999999977115e-05, 4.633299999998175e-05, 4.6667000000000236e-05, 4.6125000000007965e-05, 4.715300000002198e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.367" endtime="20201112 09:43:10.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.356" endtime="20201112 09:43:10.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.379" endtime="20201112 09:43:10.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.387" endtime="20201112 09:43:10.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.383" endtime="20201112 09:43:10.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.374" endtime="20201112 09:43:10.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.734" endtime="20201112 09:43:10.413"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:09.598" endtime="20201112 09:43:10.415" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.432" endtime="20201112 09:43:10.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.429" endtime="20201112 09:43:10.456"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.492" endtime="20201112 09:43:10.513"></status>
</kw>
<msg timestamp="20201112 09:43:10.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.485" endtime="20201112 09:43:10.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.521" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.516" endtime="20201112 09:43:10.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.527" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:10.523" endtime="20201112 09:43:10.528"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:10.478" endtime="20201112 09:43:10.530"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:10.472" endtime="20201112 09:43:10.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.469" endtime="20201112 09:43:10.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:10.540" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:10.538" endtime="20201112 09:43:10.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.534" endtime="20201112 09:43:10.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.467" endtime="20201112 09:43:10.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.465" endtime="20201112 09:43:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.544" endtime="20201112 09:43:10.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.462" endtime="20201112 09:43:10.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.457" endtime="20201112 09:43:10.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.426" endtime="20201112 09:43:10.551"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.574" endtime="20201112 09:43:10.834"></status>
</kw>
<msg timestamp="20201112 09:43:10.836" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.570" endtime="20201112 09:43:10.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.842" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.838" endtime="20201112 09:43:10.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.844" endtime="20201112 09:43:10.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.563" endtime="20201112 09:43:10.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.558" endtime="20201112 09:43:10.851"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.855" endtime="20201112 09:43:10.860"></status>
</kw>
<msg timestamp="20201112 09:43:10.861" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:10.852" endtime="20201112 09:43:10.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.871" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:10.868" endtime="20201112 09:43:10.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.875" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:10.873" endtime="20201112 09:43:10.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.862" endtime="20201112 09:43:10.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.886" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:10.884" endtime="20201112 09:43:10.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.891" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:10.889" endtime="20201112 09:43:10.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.878" endtime="20201112 09:43:10.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.909" endtime="20201112 09:43:11.251"></status>
</kw>
<msg timestamp="20201112 09:43:11.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137459542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:10.906" endtime="20201112 09:43:11.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137459542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:11.260" endtime="20201112 09:43:11.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.278" endtime="20201112 09:43:11.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.899" endtime="20201112 09:43:11.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.894" endtime="20201112 09:43:11.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.296" level="INFO">${RESULT} = [{'time': 0.137542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.245800000000747e-05, 'source_diff': 8.245800000000747e-05}, {'time': 0.142385431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:11.286" endtime="20201112 09:43:11.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:11.327" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:11.298" endtime="20201112 09:43:11.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.339" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:11.336" endtime="20201112 09:43:11.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.344" level="INFO">VALUE: [8.245800000000747e-05, 8.165300000001485e-05, 8.163899999999447e-05, 8.179200000002496e-05, 8.130499999997598e-05, 8.134700000000938e-05, 8.133399999998847e-05, 8.099999999999774e-05, 8.143099999999293e-05, 8.166600000000801e-05, 8.186100000001639e-05, 8.094499999999893e-05, 8.115300000000047e-05, 8.112500000001521e-05, 8.17919999999972e-05, 8.163899999999447e-05, 8.180499999999036e-05, 8.113799999998061e-05, 8.1152000000001e-05, 8.113900000000784e-05, 8.166599999998025e-05, 8.162500000000183e-05, 8.097200000001248e-05, 8.163899999999447e-05, 8.097200000001248e-05, 8.130500000003149e-05, 8.144399999998608e-05, 8.094400000002722e-05, 8.145900000000594e-05, 8.179200000002496e-05, 8.097200000001248e-05, 8.112500000001521e-05, 8.115300000000047e-05, 8.118099999998574e-05, 8.159699999998882e-05, 8.159800000001605e-05, 8.151399999994924e-05, 8.108400000000904e-05, 8.179199999996944e-05, 8.116700000004862e-05, 8.179200000002496e-05, 8.177799999997681e-05, 8.115300000000047e-05, 8.163900000002222e-05, 8.112500000001521e-05, 8.129200000001058e-05, 8.195900000002032e-05, 8.131999999999584e-05, 8.123599999998454e-05, 8.179200000002496e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.341" endtime="20201112 09:43:11.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.329" endtime="20201112 09:43:11.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.353" endtime="20201112 09:43:11.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.361" endtime="20201112 09:43:11.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.356" endtime="20201112 09:43:11.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.348" endtime="20201112 09:43:11.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.553" endtime="20201112 09:43:11.386"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:10.420" endtime="20201112 09:43:11.388" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.406" endtime="20201112 09:43:11.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.402" endtime="20201112 09:43:11.429"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.462" endtime="20201112 09:43:11.483"></status>
</kw>
<msg timestamp="20201112 09:43:11.484" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.458" endtime="20201112 09:43:11.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.486" endtime="20201112 09:43:11.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.499" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:11.493" endtime="20201112 09:43:11.500"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:11.451" endtime="20201112 09:43:11.501"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:11.445" endtime="20201112 09:43:11.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.442" endtime="20201112 09:43:11.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:11.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:11.511" endtime="20201112 09:43:11.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.505" endtime="20201112 09:43:11.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.441" endtime="20201112 09:43:11.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.439" endtime="20201112 09:43:11.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.516" endtime="20201112 09:43:11.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.435" endtime="20201112 09:43:11.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.431" endtime="20201112 09:43:11.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.400" endtime="20201112 09:43:11.523"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.545" endtime="20201112 09:43:11.566"></status>
</kw>
<msg timestamp="20201112 09:43:11.567" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.542" endtime="20201112 09:43:11.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.574" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.570" endtime="20201112 09:43:11.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.576" endtime="20201112 09:43:11.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.535" endtime="20201112 09:43:11.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.529" endtime="20201112 09:43:11.582"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.587" endtime="20201112 09:43:11.592"></status>
</kw>
<msg timestamp="20201112 09:43:11.593" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:11.584" endtime="20201112 09:43:11.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.603" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:11.600" endtime="20201112 09:43:11.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.607" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:11.605" endtime="20201112 09:43:11.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.594" endtime="20201112 09:43:11.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.619" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:11.616" endtime="20201112 09:43:11.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.623" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:11.621" endtime="20201112 09:43:11.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.611" endtime="20201112 09:43:11.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.642" endtime="20201112 09:43:11.988"></status>
</kw>
<msg timestamp="20201112 09:43:11.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131456486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131457972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.638" endtime="20201112 09:43:11.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131456486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131457972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.997" endtime="20201112 09:43:12.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.017" endtime="20201112 09:43:12.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.631" endtime="20201112 09:43:12.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.627" endtime="20201112 09:43:12.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.034" level="INFO">${RESULT} = [{'time': 0.131457972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999949913e-06, 'source_diff': 1.4859999999949913e-06}, {'time': 0.1314805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.025" endtime="20201112 09:43:12.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:12.066" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:12.036" endtime="20201112 09:43:12.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.077" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:12.075" endtime="20201112 09:43:12.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.083" level="INFO">VALUE: [1.4859999999949913e-06, 1.52800000000064e-06, 1.500000000015378e-06, 1.5409999999937973e-06, 1.486999999994465e-06, 1.4859999999949913e-06, 1.5409999999937973e-06, 1.4719999999746047e-06, 1.500000000015378e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.541999999993271e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4170000000035543e-06, 1.5409999999937973e-06, 1.4720000000023603e-06, 1.486000000022747e-06, 1.4170000000035543e-06, 1.4859999999949913e-06, 1.4999999999876223e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4999999999876223e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.4999999999876223e-06, 1.500000000015378e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4580000000097293e-06, 1.4299999999967117e-06, 1.4859999999949913e-06, 1.486000000022747e-06, 1.4859999999949913e-06, 1.4589999999814474e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.555000000014184e-06, 1.5560000000136576e-06, 1.4440000000170983e-06, 1.4999999999876223e-06, 1.52800000000064e-06, 1.500000000015378e-06, 1.555999999985902e-06, 1.4720000000023603e-06, 1.473000000001834e-06, 1.4999999999876223e-06, 1.486000000022747e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.080" endtime="20201112 09:43:12.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.068" endtime="20201112 09:43:12.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.091" endtime="20201112 09:43:12.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.100" endtime="20201112 09:43:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.095" endtime="20201112 09:43:12.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.087" endtime="20201112 09:43:12.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.524" endtime="20201112 09:43:12.125"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:11.393" endtime="20201112 09:43:12.127" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.145" endtime="20201112 09:43:12.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.141" endtime="20201112 09:43:12.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.201" endtime="20201112 09:43:12.222"></status>
</kw>
<msg timestamp="20201112 09:43:12.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.198" endtime="20201112 09:43:12.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.226" endtime="20201112 09:43:12.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.239" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:12.232" endtime="20201112 09:43:12.240"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:12.191" endtime="20201112 09:43:12.242"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:12.184" endtime="20201112 09:43:12.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.182" endtime="20201112 09:43:12.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:12.252" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:12.251" endtime="20201112 09:43:12.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.246" endtime="20201112 09:43:12.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.180" endtime="20201112 09:43:12.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.178" endtime="20201112 09:43:12.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.256" endtime="20201112 09:43:12.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.174" endtime="20201112 09:43:12.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.170" endtime="20201112 09:43:12.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.139" endtime="20201112 09:43:12.263"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.286" endtime="20201112 09:43:12.382"></status>
</kw>
<msg timestamp="20201112 09:43:12.383" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.283" endtime="20201112 09:43:12.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.389" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.385" endtime="20201112 09:43:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.392" endtime="20201112 09:43:12.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.276" endtime="20201112 09:43:12.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.270" endtime="20201112 09:43:12.398"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.403" endtime="20201112 09:43:12.408"></status>
</kw>
<msg timestamp="20201112 09:43:12.409" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:12.400" endtime="20201112 09:43:12.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.418" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:12.416" endtime="20201112 09:43:12.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.423" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:12.421" endtime="20201112 09:43:12.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.410" endtime="20201112 09:43:12.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.434" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:12.432" endtime="20201112 09:43:12.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.439" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:12.437" endtime="20201112 09:43:12.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.426" endtime="20201112 09:43:12.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.458" endtime="20201112 09:43:12.800"></status>
</kw>
<msg timestamp="20201112 09:43:12.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135110111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135122875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.454" endtime="20201112 09:43:12.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135110111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135122875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.817" endtime="20201112 09:43:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.835" endtime="20201112 09:43:12.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.447" endtime="20201112 09:43:12.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.442" endtime="20201112 09:43:12.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.853" level="INFO">${RESULT} = [{'time': 0.135122875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.136634472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:12.844" endtime="20201112 09:43:12.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:12.884" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:12.855" endtime="20201112 09:43:12.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.896" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:12.893" endtime="20201112 09:43:12.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.901" level="INFO">VALUE: [1.2763999999998443e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.276299999999897e-05, 1.27769999999916e-05, 1.2736000000013181e-05, 1.2763999999998443e-05, 1.2764000000026199e-05, 1.2763999999998443e-05, 1.2777000000019356e-05, 1.276299999999897e-05, 1.2763999999998443e-05, 1.2791000000011987e-05, 1.2763999999998443e-05, 1.277800000001883e-05, 1.2721999999992795e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2763999999998443e-05, 1.2764000000026199e-05, 1.276299999999897e-05, 1.27769999999916e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2805000000004618e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.2791000000011987e-05, 1.2763999999998443e-05, 1.2735999999985426e-05, 1.2708999999999637e-05, 1.277800000001883e-05, 1.2749999999978057e-05, 1.2805000000004618e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.2708000000000164e-05, 1.277800000001883e-05, 1.281899999999725e-05, 1.2721999999992795e-05, 1.2708000000000164e-05, 1.2777999999991074e-05, 1.2736000000013181e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2764000000026199e-05, 1.2777999999991074e-05, 1.2792000000011461e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.898" endtime="20201112 09:43:12.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.886" endtime="20201112 09:43:12.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.910" endtime="20201112 09:43:12.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.918" endtime="20201112 09:43:12.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.914" endtime="20201112 09:43:12.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.905" endtime="20201112 09:43:12.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.265" endtime="20201112 09:43:12.943"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:12.132" endtime="20201112 09:43:12.945" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.963" endtime="20201112 09:43:12.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.960" endtime="20201112 09:43:12.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.019" endtime="20201112 09:43:13.045"></status>
</kw>
<msg timestamp="20201112 09:43:13.047" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.016" endtime="20201112 09:43:13.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.049" endtime="20201112 09:43:13.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.060" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:13.056" endtime="20201112 09:43:13.061"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.009" endtime="20201112 09:43:13.063"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.003" endtime="20201112 09:43:13.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.000" endtime="20201112 09:43:13.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:13.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:13.071" endtime="20201112 09:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.067" endtime="20201112 09:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.998" endtime="20201112 09:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.996" endtime="20201112 09:43:13.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.076" endtime="20201112 09:43:13.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.992" endtime="20201112 09:43:13.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.988" endtime="20201112 09:43:13.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.957" endtime="20201112 09:43:13.083"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.106" endtime="20201112 09:43:13.369"></status>
</kw>
<msg timestamp="20201112 09:43:13.370" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.103" endtime="20201112 09:43:13.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.376" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.372" endtime="20201112 09:43:13.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.378" endtime="20201112 09:43:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.095" endtime="20201112 09:43:13.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.090" endtime="20201112 09:43:13.385"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.389" endtime="20201112 09:43:13.394"></status>
</kw>
<msg timestamp="20201112 09:43:13.395" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:43:13.387" endtime="20201112 09:43:13.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.405" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:13.403" endtime="20201112 09:43:13.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.409" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:13.407" endtime="20201112 09:43:13.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.397" endtime="20201112 09:43:13.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.421" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:13.419" endtime="20201112 09:43:13.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.425" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:13.423" endtime="20201112 09:43:13.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.413" endtime="20201112 09:43:13.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.445" endtime="20201112 09:43:13.785"></status>
</kw>
<msg timestamp="20201112 09:43:13.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139337403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139361694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.441" endtime="20201112 09:43:13.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139337403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139361694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.795" endtime="20201112 09:43:13.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.813" endtime="20201112 09:43:13.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.433" endtime="20201112 09:43:13.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.429" endtime="20201112 09:43:13.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.830" level="INFO">${RESULT} = [{'time': 0.139361694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.429100000000961e-05, 'source_diff': 2.429100000000961e-05}, {'time': 0.144225542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.821" endtime="20201112 09:43:13.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:13.862" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:13.832" endtime="20201112 09:43:13.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.873" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:13.871" endtime="20201112 09:43:13.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.879" level="INFO">VALUE: [2.429100000000961e-05, 2.4278000000016453e-05, 2.4250000000003435e-05, 2.4277999999988698e-05, 2.4263999999996066e-05, 2.4262999999996593e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.423599999998305e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.427700000001698e-05, 2.4278000000016453e-05, 2.423599999998305e-05, 2.4250000000003435e-05, 2.424999999997568e-05, 2.4221999999990418e-05, 2.4278000000016453e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.424999999997568e-05, 2.4236000000010804e-05, 2.430500000000224e-05, 2.4250000000003435e-05, 2.4208000000025542e-05, 2.429199999998133e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4277999999988698e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.4222000000018173e-05, 2.420799999997003e-05, 2.4250000000003435e-05, 2.4221999999962662e-05, 2.4222000000018173e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.4250000000003435e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.876" endtime="20201112 09:43:13.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.864" endtime="20201112 09:43:13.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.888" endtime="20201112 09:43:13.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.896" endtime="20201112 09:43:13.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.892" endtime="20201112 09:43:13.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.883" endtime="20201112 09:43:13.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.085" endtime="20201112 09:43:13.921"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:12.950" endtime="20201112 09:43:13.923" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:42.303" endtime="20201112 09:43:13.943"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.111" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:14.126" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:16.044" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:14.107" endtime="20201112 09:43:16.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.051" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:16.048" endtime="20201112 09:43:16.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.105" endtime="20201112 09:43:16.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.058" endtime="20201112 09:43:16.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.055" endtime="20201112 09:43:16.384"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.415" endtime="20201112 09:43:16.437"></status>
</kw>
<msg timestamp="20201112 09:43:16.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.412" endtime="20201112 09:43:16.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.441" endtime="20201112 09:43:16.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.451" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:16.447" endtime="20201112 09:43:16.452"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:16.406" endtime="20201112 09:43:16.454"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:16.400" endtime="20201112 09:43:16.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.397" endtime="20201112 09:43:16.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:16.464" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:16.463" endtime="20201112 09:43:16.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.458" endtime="20201112 09:43:16.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.395" endtime="20201112 09:43:16.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.394" endtime="20201112 09:43:16.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.468" endtime="20201112 09:43:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.390" endtime="20201112 09:43:16.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.474" endtime="20201112 09:43:16.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.386" endtime="20201112 09:43:16.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.102" endtime="20201112 09:43:16.480"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.496" endtime="20201112 09:43:16.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.492" endtime="20201112 09:43:16.520"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.552" endtime="20201112 09:43:16.573"></status>
</kw>
<msg timestamp="20201112 09:43:16.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.549" endtime="20201112 09:43:16.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.577" endtime="20201112 09:43:16.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.588" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:16.584" endtime="20201112 09:43:16.589"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:16.542" endtime="20201112 09:43:16.591"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:16.535" endtime="20201112 09:43:16.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.533" endtime="20201112 09:43:16.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:16.601" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:16.599" endtime="20201112 09:43:16.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.595" endtime="20201112 09:43:16.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.531" endtime="20201112 09:43:16.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.529" endtime="20201112 09:43:16.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.604" endtime="20201112 09:43:16.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.525" endtime="20201112 09:43:16.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.521" endtime="20201112 09:43:16.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.487" endtime="20201112 09:43:16.611"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.637" endtime="20201112 09:43:16.651"></status>
</kw>
<msg timestamp="20201112 09:43:16.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.633" endtime="20201112 09:43:16.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.654" endtime="20201112 09:43:16.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.661" endtime="20201112 09:43:16.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.626" endtime="20201112 09:43:16.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.620" endtime="20201112 09:43:16.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.686" endtime="20201112 09:43:17.033"></status>
</kw>
<msg timestamp="20201112 09:43:17.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132006278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132022806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.683" endtime="20201112 09:43:17.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132006278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132022806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.042" endtime="20201112 09:43:17.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.061" endtime="20201112 09:43:17.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.673" endtime="20201112 09:43:17.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.669" endtime="20201112 09:43:17.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.079" level="INFO">${RESULT} = [{'time': 0.132022806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6527999999987886e-05, 'source_diff': 1.6527999999987886e-05}, {'time': 0.132049042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:17.070" endtime="20201112 09:43:17.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.109" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:17.081" endtime="20201112 09:43:17.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.121" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.118" endtime="20201112 09:43:17.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.126" level="INFO">VALUE: [1.6527999999987886e-05, 1.5889000000018916e-05, 1.6041999999993894e-05, 1.6054999999987052e-05, 1.5903000000011547e-05, 1.6375000000012907e-05, 1.5916999999976422e-05, 1.601300000000916e-05, 1.5735999999988426e-05, 1.6292000000001083e-05, 1.5903000000011547e-05, 1.6388000000006064e-05, 1.588899999999116e-05, 1.6500000000002624e-05, 1.622299999998189e-05, 1.5708000000003164e-05, 1.64169999999908e-05, 1.636099999999252e-05, 1.6388000000006064e-05, 1.5709000000002638e-05, 1.5861000000005898e-05, 1.5709000000002638e-05, 1.5708000000003164e-05, 1.6375000000012907e-05, 1.588899999999116e-05, 1.613899999999835e-05, 1.587499999999853e-05, 1.587499999999853e-05, 1.5694000000010533e-05, 1.636099999999252e-05, 1.604200000002165e-05, 1.602700000000179e-05, 1.587499999999853e-05, 1.5709000000002638e-05, 1.6055999999986525e-05, 1.5708000000003164e-05, 1.5721999999995795e-05, 1.5791000000014987e-05, 1.6028000000001263e-05, 1.5708000000003164e-05, 1.588899999999116e-05, 1.6207999999989786e-05, 1.6055000000014807e-05, 1.6541999999980517e-05, 1.6541999999980517e-05, 1.6207999999989786e-05, 1.5902000000012073e-05, 1.6361000000020276e-05, 1.608300000000007e-05, 1.6554999999973674e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.123" endtime="20201112 09:43:17.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.111" endtime="20201112 09:43:17.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.135" endtime="20201112 09:43:17.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.143" endtime="20201112 09:43:17.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.139" endtime="20201112 09:43:17.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.130" endtime="20201112 09:43:17.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.616" endtime="20201112 09:43:17.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.615" endtime="20201112 09:43:17.169"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.191" endtime="20201112 09:43:17.205"></status>
</kw>
<msg timestamp="20201112 09:43:17.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.188" endtime="20201112 09:43:17.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.209" endtime="20201112 09:43:17.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.215" endtime="20201112 09:43:17.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.181" endtime="20201112 09:43:17.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.175" endtime="20201112 09:43:17.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.238" endtime="20201112 09:43:17.576"></status>
</kw>
<msg timestamp="20201112 09:43:17.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039783097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.235" endtime="20201112 09:43:17.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039783097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.585" endtime="20201112 09:43:17.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.604" endtime="20201112 09:43:17.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.228" endtime="20201112 09:43:17.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.223" endtime="20201112 09:43:17.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.622" level="INFO">${RESULT} = [{'time': 0.039799347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999995435e-05, 'source_diff': 1.6249999999995435e-05}, {'time': 0.039825361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:17.613" endtime="20201112 09:43:17.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.653" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:17.624" endtime="20201112 09:43:17.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.664" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.662" endtime="20201112 09:43:17.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.670" level="INFO">VALUE: [1.6249999999995435e-05, 1.6041999999993894e-05, 1.6028000000001263e-05, 1.6693999999997655e-05, 1.654100000000186e-05, 1.654100000000186e-05, 1.5749999999994935e-05, 1.6042000000000833e-05, 1.6222000000003234e-05, 1.5708000000003164e-05, 1.6570000000000473e-05, 1.6528000000001764e-05, 1.6222000000003234e-05, 1.587499999999853e-05, 1.604099999999442e-05, 1.6569000000001e-05, 1.6722000000003734e-05, 1.604099999999442e-05, 1.6556000000000903e-05, 1.640299999999817e-05, 1.604099999999442e-05, 1.5694000000003594e-05, 1.63889999999986e-05, 1.6209000000003138e-05, 1.6542000000001333e-05, 1.6193999999997155e-05, 1.609699999999964e-05, 1.6556000000000903e-05, 1.6222000000003234e-05, 1.63889999999986e-05, 1.6542000000001333e-05, 1.5694000000003594e-05, 1.637499999999903e-05, 1.622299999999577e-05, 1.587499999999853e-05, 1.6528000000001764e-05, 1.6056000000000403e-05, 1.6209000000003138e-05, 1.637499999999903e-05, 1.5722000000002734e-05, 1.6556000000000903e-05, 1.6223000000002707e-05, 1.63889999999986e-05, 1.6375000000005968e-05, 1.5679999999997085e-05, 1.5917000000004178e-05, 1.6264000000001944e-05, 1.57089999999957e-05, 1.6042000000000833e-05, 1.5875000000005468e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.667" endtime="20201112 09:43:17.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.655" endtime="20201112 09:43:17.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.679" endtime="20201112 09:43:17.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.687" endtime="20201112 09:43:17.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.683" endtime="20201112 09:43:17.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.674" endtime="20201112 09:43:17.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.171" endtime="20201112 09:43:17.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.170" endtime="20201112 09:43:17.713"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.735" endtime="20201112 09:43:17.750"></status>
</kw>
<msg timestamp="20201112 09:43:17.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.732" endtime="20201112 09:43:17.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.753" endtime="20201112 09:43:17.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.760" endtime="20201112 09:43:17.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.725" endtime="20201112 09:43:17.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.719" endtime="20201112 09:43:17.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.783" endtime="20201112 09:43:18.122"></status>
</kw>
<msg timestamp="20201112 09:43:18.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039798264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.780" endtime="20201112 09:43:18.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039798264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039814819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.132" endtime="20201112 09:43:18.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.151" endtime="20201112 09:43:18.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.773" endtime="20201112 09:43:18.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.768" endtime="20201112 09:43:18.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.177" level="INFO">${RESULT} = [{'time': 0.039814819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.655500000000143e-05, 'source_diff': 1.655500000000143e-05}, {'time': 0.039840889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.167" endtime="20201112 09:43:18.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.207" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:18.179" endtime="20201112 09:43:18.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.218" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.216" endtime="20201112 09:43:18.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.224" level="INFO">VALUE: [1.655500000000143e-05, 1.637499999999903e-05, 1.6014000000001694e-05, 1.654100000000186e-05, 1.586099999999896e-05, 1.5736000000002304e-05, 1.5889000000005038e-05, 1.5889000000005038e-05, 1.5735999999995365e-05, 1.6389000000005538e-05, 1.5707999999996225e-05, 1.6028000000001263e-05, 1.604100000000136e-05, 1.581900000000025e-05, 1.636099999999946e-05, 1.5778000000001013e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.6181000000003998e-05, 1.6207999999996725e-05, 1.6028000000001263e-05, 1.6556000000000903e-05, 1.654100000000186e-05, 1.6069999999999973e-05, 1.6207999999996725e-05, 1.5709000000002638e-05, 1.6375000000005968e-05, 1.5736000000002304e-05, 1.655500000000143e-05, 1.5875000000005468e-05, 1.6569000000001e-05, 1.5847999999998863e-05, 1.605500000000093e-05, 1.6542000000001333e-05, 1.5707999999996225e-05, 1.583299999999982e-05, 1.6056000000000403e-05, 1.63889999999986e-05, 1.5875000000005468e-05, 1.586099999999896e-05, 1.605500000000093e-05, 1.57089999999957e-05, 1.587499999999853e-05, 1.590299999999767e-05, 1.5681000000003498e-05, 1.636099999999946e-05, 1.6056000000000403e-05, 1.6375000000005968e-05, 1.637499999999903e-05, 1.6042000000000833e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.220" endtime="20201112 09:43:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.209" endtime="20201112 09:43:18.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.232" endtime="20201112 09:43:18.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.241" endtime="20201112 09:43:18.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.236" endtime="20201112 09:43:18.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.228" endtime="20201112 09:43:18.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.715" endtime="20201112 09:43:18.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.714" endtime="20201112 09:43:18.267"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.290" endtime="20201112 09:43:18.304"></status>
</kw>
<msg timestamp="20201112 09:43:18.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.286" endtime="20201112 09:43:18.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.308" endtime="20201112 09:43:18.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.314" endtime="20201112 09:43:18.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.279" endtime="20201112 09:43:18.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.273" endtime="20201112 09:43:18.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.338" endtime="20201112 09:43:18.677"></status>
</kw>
<msg timestamp="20201112 09:43:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.334" endtime="20201112 09:43:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040600486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.688" endtime="20201112 09:43:18.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.707" endtime="20201112 09:43:18.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.327" endtime="20201112 09:43:18.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.322" endtime="20201112 09:43:18.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.726" level="INFO">${RESULT} = [{'time': 0.040600486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6569000000001e-05, 'source_diff': 1.6569000000001e-05}, {'time': 0.040625583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201112 09:43:18.717" endtime="20201112 09:43:18.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.757" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:18.728" endtime="20201112 09:43:18.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.768" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.766" endtime="20201112 09:43:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.773" level="INFO">VALUE: [1.6569000000001e-05, 1.655500000000143e-05, 1.641699999999774e-05, 1.637499999999903e-05, 1.6056000000000403e-05, 1.654099999999492e-05, 1.5694000000003594e-05, 1.5708000000003164e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.63889999999986e-05, 1.6042000000000833e-05, 1.636099999999946e-05, 1.5903000000004608e-05, 1.58889999999981e-05, 1.6403000000005108e-05, 1.5875000000005468e-05, 1.5958000000003414e-05, 1.6375000000005968e-05, 1.5707999999996225e-05, 1.57089999999957e-05, 1.565299999999742e-05, 1.6569000000001e-05, 1.5931000000003748e-05, 1.587499999999853e-05, 1.5709000000002638e-05, 1.6208000000003664e-05, 1.5722000000002734e-05, 1.605500000000093e-05, 1.5750000000001874e-05, 1.586099999999896e-05, 1.658300000000057e-05, 1.654100000000186e-05, 1.5707999999996225e-05, 1.5764000000001444e-05, 1.655500000000143e-05, 1.6387999999999125e-05, 1.58889999999981e-05, 1.6541999999994395e-05, 1.604099999999442e-05, 1.6208000000003664e-05, 1.604100000000136e-05, 1.6542000000001333e-05, 1.5667000000003928e-05, 1.611099999999921e-05, 1.634699999999989e-05, 1.58889999999981e-05, 1.67089999999967e-05, 1.604099999999442e-05, 1.6500000000002624e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.770" endtime="20201112 09:43:18.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.759" endtime="20201112 09:43:18.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.782" endtime="20201112 09:43:18.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.791" endtime="20201112 09:43:18.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.786" endtime="20201112 09:43:18.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.778" endtime="20201112 09:43:18.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.269" endtime="20201112 09:43:18.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.268" endtime="20201112 09:43:18.817"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.840" endtime="20201112 09:43:18.854"></status>
</kw>
<msg timestamp="20201112 09:43:18.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.836" endtime="20201112 09:43:18.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.857" endtime="20201112 09:43:18.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.864" endtime="20201112 09:43:18.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.829" endtime="20201112 09:43:18.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.823" endtime="20201112 09:43:18.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.888" endtime="20201112 09:43:19.228"></status>
</kw>
<msg timestamp="20201112 09:43:19.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040373125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040389014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.885" endtime="20201112 09:43:19.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040373125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040389014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.238" endtime="20201112 09:43:19.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.257" endtime="20201112 09:43:19.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.877" endtime="20201112 09:43:19.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.872" endtime="20201112 09:43:19.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.276" level="INFO">${RESULT} = [{'time': 0.040389014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.58889999999981e-05, 'source_diff': 1.58889999999981e-05}, {'time': 0.040412111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:19.267" endtime="20201112 09:43:19.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.306" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:19.278" endtime="20201112 09:43:19.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.318" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.315" endtime="20201112 09:43:19.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.323" level="INFO">VALUE: [1.58889999999981e-05, 1.6208000000003664e-05, 1.604100000000136e-05, 1.654100000000186e-05, 1.58889999999981e-05, 1.5721999999995795e-05, 1.5679999999997085e-05, 1.579099999999417e-05, 1.572299999999527e-05, 1.6722000000003734e-05, 1.6250000000002374e-05, 1.57089999999957e-05, 1.637499999999903e-05, 1.5722000000002734e-05, 1.6584000000000043e-05, 1.6542000000001333e-05, 1.58889999999981e-05, 1.5889000000005038e-05, 1.6236000000002804e-05, 1.6348000000006302e-05, 1.6708000000004164e-05, 1.6235999999995865e-05, 1.637499999999903e-05, 1.6570000000000473e-05, 1.604099999999442e-05, 1.6389000000005538e-05, 1.6514000000002194e-05, 1.6499999999995685e-05, 1.587499999999853e-05, 1.6709000000003638e-05, 1.636099999999946e-05, 1.6264000000001944e-05, 1.6361000000006398e-05, 1.6056000000000403e-05, 1.5833999999999293e-05, 1.6221999999996295e-05, 1.63889999999986e-05, 1.587499999999853e-05, 1.5723000000002207e-05, 1.636099999999946e-05, 1.5707999999996225e-05, 1.6542000000001333e-05, 1.602700000000179e-05, 1.6250000000002374e-05, 1.572299999999527e-05, 1.6056000000000403e-05, 1.6486000000003054e-05, 1.636099999999946e-05, 1.6375000000005968e-05, 1.6041999999993894e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.320" endtime="20201112 09:43:19.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.308" endtime="20201112 09:43:19.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.332" endtime="20201112 09:43:19.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.340" endtime="20201112 09:43:19.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.336" endtime="20201112 09:43:19.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.328" endtime="20201112 09:43:19.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.819" endtime="20201112 09:43:19.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.818" endtime="20201112 09:43:19.366"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.389" endtime="20201112 09:43:19.404"></status>
</kw>
<msg timestamp="20201112 09:43:19.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.386" endtime="20201112 09:43:19.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.407" endtime="20201112 09:43:19.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.414" endtime="20201112 09:43:19.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.379" endtime="20201112 09:43:19.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.373" endtime="20201112 09:43:19.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.438" endtime="20201112 09:43:19.778"></status>
</kw>
<msg timestamp="20201112 09:43:19.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040427389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.434" endtime="20201112 09:43:19.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040411236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040427389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.788" endtime="20201112 09:43:19.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.807" endtime="20201112 09:43:19.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.427" endtime="20201112 09:43:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.423" endtime="20201112 09:43:19.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.827" level="INFO">${RESULT} = [{'time': 0.040427389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.615299999999792e-05, 'source_diff': 1.615299999999792e-05}, {'time': 0.040449458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.818" endtime="20201112 09:43:19.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.859" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:19.829" endtime="20201112 09:43:19.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.870" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.868" endtime="20201112 09:43:19.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.876" level="INFO">VALUE: [1.615299999999792e-05, 1.604100000000136e-05, 1.604100000000136e-05, 1.5901999999998195e-05, 1.6222000000003234e-05, 1.5707999999996225e-05, 1.5889000000005038e-05, 1.6458000000003914e-05, 1.6056000000000403e-05, 1.6556000000000903e-05, 1.6556000000000903e-05, 1.6388000000006064e-05, 1.5862000000005372e-05, 1.6222000000003234e-05, 1.6207999999996725e-05, 1.60690000000005e-05, 1.6207999999996725e-05, 1.5709000000002638e-05, 1.5903000000004608e-05, 1.608300000000007e-05, 1.5875000000005468e-05, 1.6167000000004428e-05, 1.58889999999981e-05, 1.5707999999996225e-05, 1.63889999999986e-05, 1.6042000000000833e-05, 1.6028000000001263e-05, 1.5709000000002638e-05, 1.587499999999853e-05, 1.6514000000002194e-05, 1.5986000000002554e-05, 1.5902000000005134e-05, 1.587499999999853e-05, 1.6722000000003734e-05, 1.604100000000136e-05, 1.636099999999946e-05, 1.6223000000002707e-05, 1.5945000000003318e-05, 1.6207999999996725e-05, 1.5875000000005468e-05, 1.605500000000093e-05, 1.6707999999997225e-05, 1.5721999999995795e-05, 1.6570000000000473e-05, 1.6569000000001e-05, 1.602700000000179e-05, 1.6389000000005538e-05, 1.587499999999853e-05, 1.6193999999997155e-05, 1.6194000000004094e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.873" endtime="20201112 09:43:19.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.861" endtime="20201112 09:43:19.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.885" endtime="20201112 09:43:19.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.893" endtime="20201112 09:43:19.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.888" endtime="20201112 09:43:19.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.880" endtime="20201112 09:43:19.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.369" endtime="20201112 09:43:19.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.367" endtime="20201112 09:43:19.919"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.942" endtime="20201112 09:43:19.957"></status>
</kw>
<msg timestamp="20201112 09:43:19.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.938" endtime="20201112 09:43:19.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.960" endtime="20201112 09:43:19.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.967" endtime="20201112 09:43:19.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.931" endtime="20201112 09:43:19.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.925" endtime="20201112 09:43:19.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.990" endtime="20201112 09:43:20.328"></status>
</kw>
<msg timestamp="20201112 09:43:20.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:19.987" endtime="20201112 09:43:20.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041115, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:20.337" endtime="20201112 09:43:20.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.356" endtime="20201112 09:43:20.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.980" endtime="20201112 09:43:20.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.975" endtime="20201112 09:43:20.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.374" level="INFO">${RESULT} = [{'time': 0.041115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6556000000000903e-05, 'source_diff': 1.6556000000000903e-05}, {'time': 0.041143, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201112 09:43:20.365" endtime="20201112 09:43:20.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.406" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:20.376" endtime="20201112 09:43:20.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.417" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.415" endtime="20201112 09:43:20.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.423" level="INFO">VALUE: [1.6556000000000903e-05, 1.6221999999996295e-05, 1.604100000000136e-05, 1.586099999999896e-05, 1.6056000000000403e-05, 1.5667000000003928e-05, 1.6042000000000833e-05, 1.6195000000003568e-05, 1.616699999999749e-05, 1.605500000000093e-05, 1.5917000000004178e-05, 1.6750000000002874e-05, 1.637499999999903e-05, 1.6542000000001333e-05, 1.6542000000001333e-05, 1.6056000000000403e-05, 1.6208000000003664e-05, 1.6042000000000833e-05, 1.5721999999995795e-05, 1.643099999999731e-05, 1.6415999999998265e-05, 1.586099999999896e-05, 1.58889999999981e-05, 1.6209000000003138e-05, 1.6222000000003234e-05, 1.6570000000000473e-05, 1.5708000000003164e-05, 1.5735999999995365e-05, 1.6221999999996295e-05, 1.58889999999981e-05, 1.5722000000002734e-05, 1.63889999999986e-05, 1.58889999999981e-05, 1.5764000000001444e-05, 1.586099999999896e-05, 1.6056000000000403e-05, 1.654100000000186e-05, 1.6153000000004858e-05, 1.60690000000005e-05, 1.6208000000003664e-05, 1.655499999999449e-05, 1.637499999999903e-05, 1.661099999999971e-05, 1.6541999999994395e-05, 1.6056000000000403e-05, 1.6735999999996365e-05, 1.637499999999903e-05, 1.672299999999627e-05, 1.6207999999996725e-05, 1.5709000000002638e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.419" endtime="20201112 09:43:20.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.408" endtime="20201112 09:43:20.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.432" endtime="20201112 09:43:20.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.440" endtime="20201112 09:43:20.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.435" endtime="20201112 09:43:20.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.427" endtime="20201112 09:43:20.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.921" endtime="20201112 09:43:20.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.920" endtime="20201112 09:43:20.466"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.489" endtime="20201112 09:43:20.504"></status>
</kw>
<msg timestamp="20201112 09:43:20.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.486" endtime="20201112 09:43:20.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.508" endtime="20201112 09:43:20.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.515" endtime="20201112 09:43:20.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.479" endtime="20201112 09:43:20.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.473" endtime="20201112 09:43:20.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.539" endtime="20201112 09:43:20.878"></status>
</kw>
<msg timestamp="20201112 09:43:20.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041079792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.536" endtime="20201112 09:43:20.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041079792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.888" endtime="20201112 09:43:20.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.907" endtime="20201112 09:43:20.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.528" endtime="20201112 09:43:20.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.523" endtime="20201112 09:43:20.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.925" level="INFO">${RESULT} = [{'time': 0.041079792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.344499999999694e-05, 'source_diff': 2.344499999999694e-05}, {'time': 0.041110875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:20.916" endtime="20201112 09:43:20.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.956" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:20.927" endtime="20201112 09:43:20.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.968" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.965" endtime="20201112 09:43:20.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.973" level="INFO">VALUE: [2.344499999999694e-05, 2.336099999999952e-05, 2.269500000000313e-05, 2.3347999999999425e-05, 2.334699999999995e-05, 2.337499999999909e-05, 2.3542000000001395e-05, 2.286099999999902e-05, 2.3528000000001825e-05, 2.316699999999755e-05, 2.284700000000639e-05, 2.3028000000001325e-05, 2.268100000000356e-05, 2.3513999999995316e-05, 2.3514000000002255e-05, 2.319499999999669e-05, 2.3028000000001325e-05, 2.2861999999998495e-05, 2.319499999999669e-05, 2.284699999999945e-05, 2.3042000000000895e-05, 2.286099999999902e-05, 2.356900000000106e-05, 2.3194000000004156e-05, 2.3028000000001325e-05, 2.333300000000038e-05, 2.2848000000005864e-05, 2.269499999999619e-05, 2.3527999999994886e-05, 2.37090000000037e-05, 2.2666000000004516e-05, 2.3000000000002185e-05, 2.319499999999669e-05, 2.2680000000004086e-05, 2.308300000000013e-05, 2.3000000000002185e-05, 2.306900000000056e-05, 2.3013999999994816e-05, 2.268100000000356e-05, 2.286099999999902e-05, 2.336099999999952e-05, 2.3028000000001325e-05, 2.3208000000003726e-05, 2.336099999999952e-05, 2.3513999999995316e-05, 2.362499999999934e-05, 2.319499999999669e-05, 2.3693999999997717e-05, 2.336099999999952e-05, 2.268100000000356e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.970" endtime="20201112 09:43:20.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.958" endtime="20201112 09:43:20.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.982" endtime="20201112 09:43:20.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.991" endtime="20201112 09:43:21.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.987" endtime="20201112 09:43:21.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.977" endtime="20201112 09:43:21.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.468" endtime="20201112 09:43:21.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.467" endtime="20201112 09:43:21.017"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.040" endtime="20201112 09:43:21.055"></status>
</kw>
<msg timestamp="20201112 09:43:21.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.037" endtime="20201112 09:43:21.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.058" endtime="20201112 09:43:21.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.065" endtime="20201112 09:43:21.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.029" endtime="20201112 09:43:21.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.024" endtime="20201112 09:43:21.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.088" endtime="20201112 09:43:21.427"></status>
</kw>
<msg timestamp="20201112 09:43:21.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040586889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040610292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.085" endtime="20201112 09:43:21.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040586889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040610292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.437" endtime="20201112 09:43:21.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.456" endtime="20201112 09:43:21.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.078" endtime="20201112 09:43:21.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.073" endtime="20201112 09:43:21.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.474" level="INFO">${RESULT} = [{'time': 0.040610292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.340299999999823e-05, 'source_diff': 2.340299999999823e-05}, {'time': 0.040638306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.464" endtime="20201112 09:43:21.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.505" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:21.476" endtime="20201112 09:43:21.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.516" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.514" endtime="20201112 09:43:21.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.522" level="INFO">VALUE: [2.340299999999823e-05, 2.2861999999998495e-05, 2.336099999999952e-05, 2.319500000000363e-05, 2.312499999999884e-05, 2.32090000000032e-05, 2.319499999999669e-05, 2.319499999999669e-05, 2.27090000000027e-05, 2.319499999999669e-05, 2.3014000000001755e-05, 2.3722000000003796e-05, 2.3541999999994456e-05, 2.2665999999997577e-05, 2.3028000000001325e-05, 2.2847999999998925e-05, 2.287499999999859e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.347300000000302e-05, 2.319499999999669e-05, 2.3014000000001755e-05, 2.301300000000228e-05, 2.287500000000553e-05, 2.3542000000001395e-05, 2.323700000000234e-05, 2.3179999999997647e-05, 2.2916000000004766e-05, 2.3528000000001825e-05, 2.3320000000000285e-05, 2.272300000000227e-05, 2.3513999999995316e-05, 2.334699999999995e-05, 2.322300000000277e-05, 2.2693999999996717e-05, 2.3042000000000895e-05, 2.318099999999712e-05, 2.3028000000001325e-05, 2.3179999999997647e-05, 2.3387999999999187e-05, 2.3527999999994886e-05, 2.369499999999719e-05, 2.3013999999994816e-05, 2.336099999999952e-05, 2.3013999999994816e-05, 2.2943999999996967e-05, 2.286100000000596e-05, 2.3514000000002255e-05, 2.336099999999952e-05, 2.3014000000001755e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.519" endtime="20201112 09:43:21.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.507" endtime="20201112 09:43:21.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.532" endtime="20201112 09:43:21.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.541" endtime="20201112 09:43:21.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.536" endtime="20201112 09:43:21.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.527" endtime="20201112 09:43:21.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.019" endtime="20201112 09:43:21.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.018" endtime="20201112 09:43:21.567"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.590" endtime="20201112 09:43:21.605"></status>
</kw>
<msg timestamp="20201112 09:43:21.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.586" endtime="20201112 09:43:21.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.608" endtime="20201112 09:43:21.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.614" endtime="20201112 09:43:21.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.579" endtime="20201112 09:43:21.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.573" endtime="20201112 09:43:21.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.638" endtime="20201112 09:43:21.976"></status>
</kw>
<msg timestamp="20201112 09:43:21.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040852264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040874972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.635" endtime="20201112 09:43:21.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040852264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040874972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.986" endtime="20201112 09:43:22.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.005" endtime="20201112 09:43:22.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.628" endtime="20201112 09:43:22.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.623" endtime="20201112 09:43:22.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.023" level="INFO">${RESULT} = [{'time': 0.040874972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2708000000003226e-05, 'source_diff': 2.2708000000003226e-05}, {'time': 0.040903958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.013" endtime="20201112 09:43:22.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.053" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:22.025" endtime="20201112 09:43:22.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.067" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.062" endtime="20201112 09:43:22.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.073" level="INFO">VALUE: [2.2708000000003226e-05, 2.287499999999859e-05, 2.3193999999997217e-05, 2.3528000000001825e-05, 2.3028000000001325e-05, 2.3042000000000895e-05, 2.336099999999952e-05, 2.286099999999902e-05, 2.334699999999995e-05, 2.336100000000646e-05, 2.3179999999997647e-05, 2.326300000000253e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.333300000000038e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.3528000000001825e-05, 2.3027999999994386e-05, 2.3014000000001755e-05, 2.3542000000001395e-05, 2.3430000000004836e-05, 2.2901999999998257e-05, 2.3527999999994886e-05, 2.301300000000228e-05, 2.32090000000032e-05, 2.2708000000003226e-05, 2.3528000000001825e-05, 2.32090000000032e-05, 2.2735999999995427e-05, 2.3042000000000895e-05, 2.3514000000002255e-05, 2.337499999999909e-05, 2.2750000000001935e-05, 2.3042000000000895e-05, 2.3514000000002255e-05, 2.284699999999945e-05, 2.3526999999995413e-05, 2.3499999999995747e-05, 2.336099999999952e-05, 2.2806000000000215e-05, 2.3042000000000895e-05, 2.3306000000000715e-05, 2.3000000000002185e-05, 2.337499999999909e-05, 2.2694000000003656e-05, 2.3514000000002255e-05, 2.3194000000004156e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.070" endtime="20201112 09:43:22.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.055" endtime="20201112 09:43:22.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.083" endtime="20201112 09:43:22.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.091" endtime="20201112 09:43:22.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.086" endtime="20201112 09:43:22.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.078" endtime="20201112 09:43:22.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.569" endtime="20201112 09:43:22.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.568" endtime="20201112 09:43:22.117"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.140" endtime="20201112 09:43:22.155"></status>
</kw>
<msg timestamp="20201112 09:43:22.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.136" endtime="20201112 09:43:22.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.158" endtime="20201112 09:43:22.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.164" endtime="20201112 09:43:22.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.129" endtime="20201112 09:43:22.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.123" endtime="20201112 09:43:22.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.188" endtime="20201112 09:43:22.526"></status>
</kw>
<msg timestamp="20201112 09:43:22.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.185" endtime="20201112 09:43:22.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.536" endtime="20201112 09:43:22.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.555" endtime="20201112 09:43:22.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.177" endtime="20201112 09:43:22.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.173" endtime="20201112 09:43:22.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.573" level="INFO">${RESULT} = [{'time': 0.040581722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2694000000003656e-05, 'source_diff': 2.2694000000003656e-05}, {'time': 0.040615764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.564" endtime="20201112 09:43:22.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.605" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:22.575" endtime="20201112 09:43:22.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.616" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.613" endtime="20201112 09:43:22.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.621" level="INFO">VALUE: [2.2694000000003656e-05, 2.318099999999712e-05, 2.2694000000003656e-05, 2.368099999999762e-05, 2.283299999999988e-05, 2.336099999999952e-05, 2.2680000000004086e-05, 2.3264000000002005e-05, 2.304100000000142e-05, 2.3013999999994816e-05, 2.268099999999662e-05, 2.3194000000004156e-05, 2.3014000000001755e-05, 2.268099999999662e-05, 2.3526999999995413e-05, 2.3042000000000895e-05, 2.3000000000002185e-05, 2.290300000000467e-05, 2.3528000000001825e-05, 2.3556000000000965e-05, 2.261099999999877e-05, 2.293100000000381e-05, 2.262499999999834e-05, 2.2806000000000215e-05, 2.262499999999834e-05, 2.336099999999952e-05, 2.32090000000032e-05, 2.3235999999995927e-05, 2.319500000000363e-05, 2.3194000000004156e-05, 2.3361999999998995e-05, 2.334699999999995e-05, 2.268100000000356e-05, 2.280500000000074e-05, 2.2693999999996717e-05, 2.336099999999952e-05, 2.283299999999988e-05, 2.2694000000003656e-05, 2.3207999999996787e-05, 2.302700000000185e-05, 2.286099999999902e-05, 2.354100000000192e-05, 2.270899999999576e-05, 2.3527999999994886e-05, 2.261099999999877e-05, 2.354100000000192e-05, 2.3542000000001395e-05, 2.3042000000000895e-05, 2.334699999999995e-05, 2.286100000000596e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.618" endtime="20201112 09:43:22.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.606" endtime="20201112 09:43:22.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.631" endtime="20201112 09:43:22.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.641" endtime="20201112 09:43:22.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.635" endtime="20201112 09:43:22.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.626" endtime="20201112 09:43:22.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.119" endtime="20201112 09:43:22.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.118" endtime="20201112 09:43:22.667"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.690" endtime="20201112 09:43:22.705"></status>
</kw>
<msg timestamp="20201112 09:43:22.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.686" endtime="20201112 09:43:22.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.709" endtime="20201112 09:43:22.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.715" endtime="20201112 09:43:22.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.679" endtime="20201112 09:43:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.673" endtime="20201112 09:43:22.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.739" endtime="20201112 09:43:23.077"></status>
</kw>
<msg timestamp="20201112 09:43:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040612583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.735" endtime="20201112 09:43:23.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040612583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.087" endtime="20201112 09:43:23.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.106" endtime="20201112 09:43:23.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.728" endtime="20201112 09:43:23.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.723" endtime="20201112 09:43:23.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.124" level="INFO">${RESULT} = [{'time': 0.040636125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3542000000001395e-05, 'source_diff': 2.3542000000001395e-05}, {'time': 0.04066925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:23.114" endtime="20201112 09:43:23.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.154" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:23.126" endtime="20201112 09:43:23.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.165" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.163" endtime="20201112 09:43:23.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.171" level="INFO">VALUE: [2.3542000000001395e-05, 2.3527999999994886e-05, 2.336099999999952e-05, 2.2986000000002615e-05, 2.3207999999996787e-05, 2.287499999999859e-05, 2.3193999999997217e-05, 2.291700000000424e-05, 2.2819999999999785e-05, 2.287500000000553e-05, 2.2680000000004086e-05, 2.316699999999755e-05, 2.3194000000004156e-05, 2.337499999999909e-05, 2.286099999999902e-05, 2.334699999999995e-05, 2.283299999999988e-05, 2.3027999999994386e-05, 2.32090000000032e-05, 2.315300000000492e-05, 2.318099999999712e-05, 2.2708000000003226e-05, 2.286099999999902e-05, 2.3527999999994886e-05, 2.286099999999902e-05, 2.319500000000363e-05, 2.3041999999993956e-05, 2.3528000000001825e-05, 2.3362000000005934e-05, 2.283299999999988e-05, 2.2735999999995427e-05, 2.338899999999866e-05, 2.3208000000003726e-05, 2.305500000000099e-05, 2.288899999999816e-05, 2.334699999999995e-05, 2.33890000000056e-05, 2.337499999999909e-05, 2.3542000000001395e-05, 2.2847999999998925e-05, 2.2916000000004766e-05, 2.336099999999952e-05, 2.352700000000235e-05, 2.319499999999669e-05, 2.3347999999999425e-05, 2.3542000000001395e-05, 2.368100000000456e-05, 2.334699999999995e-05, 2.2693999999996717e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.167" endtime="20201112 09:43:23.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.156" endtime="20201112 09:43:23.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.185" endtime="20201112 09:43:23.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.193" endtime="20201112 09:43:23.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.189" endtime="20201112 09:43:23.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.180" endtime="20201112 09:43:23.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.669" endtime="20201112 09:43:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.668" endtime="20201112 09:43:23.221"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.243" endtime="20201112 09:43:23.258"></status>
</kw>
<msg timestamp="20201112 09:43:23.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.240" endtime="20201112 09:43:23.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.262" endtime="20201112 09:43:23.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.268" endtime="20201112 09:43:23.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.233" endtime="20201112 09:43:23.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.227" endtime="20201112 09:43:23.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.292" endtime="20201112 09:43:23.630"></status>
</kw>
<msg timestamp="20201112 09:43:23.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040657819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:23.288" endtime="20201112 09:43:23.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040657819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:23.640" endtime="20201112 09:43:23.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.659" endtime="20201112 09:43:23.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.281" endtime="20201112 09:43:23.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.276" endtime="20201112 09:43:23.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.677" level="INFO">${RESULT} = [{'time': 0.040681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.318100000000406e-05, 'source_diff': 2.318100000000406e-05}, {'time': 0.040710153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:23.667" endtime="20201112 09:43:23.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.707" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:23.679" endtime="20201112 09:43:23.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.718" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.716" endtime="20201112 09:43:23.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.724" level="INFO">VALUE: [2.318100000000406e-05, 2.320899999999626e-05, 2.336099999999952e-05, 2.3000000000002185e-05, 2.336099999999952e-05, 2.2651999999998007e-05, 2.3542000000001395e-05, 2.336099999999952e-05, 2.287499999999859e-05, 2.3208000000003726e-05, 2.32090000000032e-05, 2.336099999999952e-05, 2.333300000000038e-05, 2.32090000000032e-05, 2.3556000000000965e-05, 2.286099999999902e-05, 2.2680000000004086e-05, 2.284699999999945e-05, 2.312500000000578e-05, 2.3056000000000465e-05, 2.284699999999945e-05, 2.266699999999705e-05, 2.2750000000001935e-05, 2.3000000000002185e-05, 2.2819999999999785e-05, 2.2764000000001505e-05, 2.319499999999669e-05, 2.269500000000313e-05, 2.2679999999997147e-05, 2.3000000000002185e-05, 2.2721999999995857e-05, 2.272300000000227e-05, 2.304100000000142e-05, 2.320899999999626e-05, 2.3707999999997287e-05, 2.3540999999994983e-05, 2.286099999999902e-05, 2.3056000000000465e-05, 2.319500000000363e-05, 2.2861999999998495e-05, 2.2848000000005864e-05, 2.3500000000002685e-05, 2.284699999999945e-05, 2.3027999999994386e-05, 2.3194000000004156e-05, 2.27090000000027e-05, 2.3028000000001325e-05, 2.3194000000004156e-05, 2.3028000000001325e-05, 2.338899999999866e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.720" endtime="20201112 09:43:23.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.709" endtime="20201112 09:43:23.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.733" endtime="20201112 09:43:23.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.742" endtime="20201112 09:43:23.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.737" endtime="20201112 09:43:23.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.729" endtime="20201112 09:43:23.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.223" endtime="20201112 09:43:23.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.222" endtime="20201112 09:43:23.768"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.792" endtime="20201112 09:43:23.807"></status>
</kw>
<msg timestamp="20201112 09:43:23.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.789" endtime="20201112 09:43:23.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.811" endtime="20201112 09:43:23.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.817" endtime="20201112 09:43:23.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.782" endtime="20201112 09:43:23.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.774" endtime="20201112 09:43:23.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.841" endtime="20201112 09:43:24.180"></status>
</kw>
<msg timestamp="20201112 09:43:24.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042305181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.837" endtime="20201112 09:43:24.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042305181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.190" endtime="20201112 09:43:24.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.209" endtime="20201112 09:43:24.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.830" endtime="20201112 09:43:24.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.825" endtime="20201112 09:43:24.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.226" level="INFO">${RESULT} = [{'time': 0.042305181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3013999999994816e-05, 'source_diff': 2.3013999999994816e-05}, {'time': 0.042338278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:24.217" endtime="20201112 09:43:24.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.257" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:24.228" endtime="20201112 09:43:24.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.268" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.266" endtime="20201112 09:43:24.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.273" level="INFO">VALUE: [2.3013999999994816e-05, 2.286099999999902e-05, 2.336099999999952e-05, 2.311099999999927e-05, 2.3222000000003296e-05, 2.337499999999909e-05, 2.3512999999995843e-05, 2.3014000000001755e-05, 2.281900000000031e-05, 2.319499999999669e-05, 2.266700000000399e-05, 2.2985999999995677e-05, 2.268100000000356e-05, 2.2693999999996717e-05, 2.340299999999823e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.318099999999712e-05, 2.3028000000001325e-05, 2.337499999999909e-05, 2.318099999999712e-05, 2.334699999999995e-05, 2.286099999999902e-05, 2.3028000000001325e-05, 2.2819999999999785e-05, 2.334699999999995e-05, 2.284699999999945e-05, 2.3680000000005086e-05, 2.3026999999994913e-05, 2.337500000000603e-05, 2.3028000000001325e-05, 2.345899999999651e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.3014000000001755e-05, 2.3527999999994886e-05, 2.3236000000002865e-05, 2.283299999999988e-05, 2.3736000000003366e-05, 2.294500000000338e-05, 2.27090000000027e-05, 2.3499999999995747e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.334699999999995e-05, 2.336099999999952e-05, 2.3486000000003115e-05, 2.318100000000406e-05, 2.286099999999902e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.270" endtime="20201112 09:43:24.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.259" endtime="20201112 09:43:24.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.283" endtime="20201112 09:43:24.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.292" endtime="20201112 09:43:24.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.287" endtime="20201112 09:43:24.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.279" endtime="20201112 09:43:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.770" endtime="20201112 09:43:24.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.769" endtime="20201112 09:43:24.318"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.341" endtime="20201112 09:43:24.358"></status>
</kw>
<msg timestamp="20201112 09:43:24.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.337" endtime="20201112 09:43:24.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.361" endtime="20201112 09:43:24.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.368" endtime="20201112 09:43:24.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.330" endtime="20201112 09:43:24.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.324" endtime="20201112 09:43:24.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.391" endtime="20201112 09:43:24.730"></status>
</kw>
<msg timestamp="20201112 09:43:24.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040721139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.388" endtime="20201112 09:43:24.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040721139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.740" endtime="20201112 09:43:24.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.759" endtime="20201112 09:43:24.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.381" endtime="20201112 09:43:24.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.376" endtime="20201112 09:43:24.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.777" level="INFO">${RESULT} = [{'time': 0.040750972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.040788125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:24.768" endtime="20201112 09:43:24.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.807" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:24.779" endtime="20201112 09:43:24.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.818" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.816" endtime="20201112 09:43:24.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.824" level="INFO">VALUE: [2.9832999999999943e-05, 3.0152999999998042e-05, 2.96379999999985e-05, 3.0319000000000873e-05, 3.016599999999814e-05, 2.9819000000000373e-05, 3.048599999999624e-05, 3.0513999999995378e-05, 3.0500000000002747e-05, 3.048599999999624e-05, 3.0500000000002747e-05, 3.0000000000002247e-05, 3.0000000000002247e-05, 3.0319000000000873e-05, 3.0055000000001053e-05, 3.0000000000002247e-05, 3.044399999999753e-05, 2.9986000000002677e-05, 3.0388999999998723e-05, 2.9832999999999943e-05, 2.9846999999999513e-05, 3.016599999999814e-05, 3.0318999999993934e-05, 3.016599999999814e-05, 3.0347000000000013e-05, 3.0166999999997612e-05, 3.068099999999768e-05, 3.0166999999997612e-05, 3.0083000000000193e-05, 3.0500000000002747e-05, 3.069499999999725e-05, 3.0347999999999486e-05, 3.0152999999998042e-05, 3.0513999999995378e-05, 3.0166999999997612e-05, 2.967999999999721e-05, 2.9666999999997112e-05, 2.9874999999998653e-05, 3.0472000000003607e-05, 3.0166000000005078e-05, 3.0500000000002747e-05, 3.0000000000002247e-05, 3.066699999999811e-05, 3.016700000000455e-05, 3.0512999999995905e-05, 2.9832999999999943e-05, 2.9833999999999417e-05, 3.066699999999811e-05, 3.0500000000002747e-05, 2.9832999999999943e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.821" endtime="20201112 09:43:24.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.809" endtime="20201112 09:43:24.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.834" endtime="20201112 09:43:24.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.842" endtime="20201112 09:43:24.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.838" endtime="20201112 09:43:24.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.829" endtime="20201112 09:43:24.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.320" endtime="20201112 09:43:24.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.318" endtime="20201112 09:43:24.868"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.891" endtime="20201112 09:43:24.906"></status>
</kw>
<msg timestamp="20201112 09:43:24.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.888" endtime="20201112 09:43:24.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.910" endtime="20201112 09:43:24.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.916" endtime="20201112 09:43:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.880" endtime="20201112 09:43:24.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.874" endtime="20201112 09:43:24.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.941" endtime="20201112 09:43:25.280"></status>
</kw>
<msg timestamp="20201112 09:43:25.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040633472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.938" endtime="20201112 09:43:25.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040633472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.289" endtime="20201112 09:43:25.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.308" endtime="20201112 09:43:25.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.929" endtime="20201112 09:43:25.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.924" endtime="20201112 09:43:25.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.326" level="INFO">${RESULT} = [{'time': 0.040663806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0333999999999917e-05, 'source_diff': 3.0333999999999917e-05}, {'time': 0.040699764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.317" endtime="20201112 09:43:25.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.356" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:25.328" endtime="20201112 09:43:25.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.368" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.365" endtime="20201112 09:43:25.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.373" level="INFO">VALUE: [3.0333999999999917e-05, 3.0347000000000013e-05, 3.052700000000241e-05, 3.052800000000189e-05, 2.967999999999721e-05, 3.016599999999814e-05, 3.0486999999995712e-05, 3.0319000000000873e-05, 2.9833999999999417e-05, 3.044500000000394e-05, 3.0333999999999917e-05, 3.0347000000000013e-05, 3.0027000000001913e-05, 3.0180999999997182e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 2.9860999999999083e-05, 3.0194000000004217e-05, 2.9819000000000373e-05, 3.0513999999995378e-05, 3.0514000000002317e-05, 2.9833999999999417e-05, 3.0166000000005078e-05, 3.0513999999995378e-05, 2.9806000000000277e-05, 3.0194999999996752e-05, 2.9832999999999943e-05, 2.9846999999999513e-05, 2.967999999999721e-05, 3.0166999999997612e-05, 2.9805000000000803e-05, 3.017999999999771e-05, 2.9832999999999943e-05, 3.0028000000001387e-05, 2.9819000000000373e-05, 3.0236000000002927e-05, 3.069500000000419e-05, 3.0124999999998903e-05, 3.0111999999998806e-05, 3.0347000000000013e-05, 3.059700000000026e-05, 3.068100000000462e-05, 3.0013999999994878e-05, 3.068100000000462e-05, 2.966700000000405e-05, 3.0430999999997432e-05, 3.0180999999997182e-05, 3.0180999999997182e-05, 2.967999999999721e-05, 3.0347000000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.370" endtime="20201112 09:43:25.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.358" endtime="20201112 09:43:25.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.383" endtime="20201112 09:43:25.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.391" endtime="20201112 09:43:25.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.387" endtime="20201112 09:43:25.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.378" endtime="20201112 09:43:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.870" endtime="20201112 09:43:25.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.869" endtime="20201112 09:43:25.417"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.440" endtime="20201112 09:43:25.455"></status>
</kw>
<msg timestamp="20201112 09:43:25.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.437" endtime="20201112 09:43:25.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.459" endtime="20201112 09:43:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.465" endtime="20201112 09:43:25.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.429" endtime="20201112 09:43:25.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.423" endtime="20201112 09:43:25.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.489" endtime="20201112 09:43:25.830"></status>
</kw>
<msg timestamp="20201112 09:43:25.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040500167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.485" endtime="20201112 09:43:25.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040500167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.840" endtime="20201112 09:43:25.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.859" endtime="20201112 09:43:25.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.478" endtime="20201112 09:43:25.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.473" endtime="20201112 09:43:25.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.877" level="INFO">${RESULT} = [{'time': 0.040530347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0180000000004648e-05, 'source_diff': 3.0180000000004648e-05}, {'time': 0.040568333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.868" endtime="20201112 09:43:25.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.907" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:25.879" endtime="20201112 09:43:25.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.918" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.916" endtime="20201112 09:43:25.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.924" level="INFO">VALUE: [3.0180000000004648e-05, 2.9846999999999513e-05, 3.066599999999864e-05, 3.052700000000241e-05, 3.0013000000002343e-05, 2.9874999999998653e-05, 2.963900000000491e-05, 3.0486000000003177e-05, 3.0513999999995378e-05, 3.0333000000000443e-05, 3.018100000000412e-05, 3.0333000000000443e-05, 3.069500000000419e-05, 3.018100000000412e-05, 3.036100000000652e-05, 3.0360999999999583e-05, 2.9860999999999083e-05, 2.9999999999995308e-05, 3.052800000000189e-05, 3.0180999999997182e-05, 3.0514000000002317e-05, 3.0194000000004217e-05, 3.0028000000001387e-05, 3.070800000000429e-05, 2.9832999999999943e-05, 3.0166999999997612e-05, 3.067999999999821e-05, 3.068099999999768e-05, 3.0514000000002317e-05, 3.068100000000462e-05, 3.0000000000002247e-05, 2.9666999999997112e-05, 3.017999999999771e-05, 2.9832999999999943e-05, 3.066599999999864e-05, 3.0513000000002843e-05, 3.0000000000002247e-05, 3.0512999999995905e-05, 3.0110999999999333e-05, 3.015199999999857e-05, 2.9847999999998986e-05, 3.0499999999995808e-05, 2.9846999999999513e-05, 3.0014000000001817e-05, 3.0208999999996322e-05, 2.9819999999999847e-05, 3.0014000000001817e-05, 3.0486000000003177e-05, 3.0166999999997612e-05, 2.9819000000000373e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.921" endtime="20201112 09:43:25.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.909" endtime="20201112 09:43:25.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.934" endtime="20201112 09:43:25.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.942" endtime="20201112 09:43:25.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.938" endtime="20201112 09:43:25.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.929" endtime="20201112 09:43:25.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.419" endtime="20201112 09:43:25.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.418" endtime="20201112 09:43:25.968"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.991" endtime="20201112 09:43:26.006"></status>
</kw>
<msg timestamp="20201112 09:43:26.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.988" endtime="20201112 09:43:26.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.010" endtime="20201112 09:43:26.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.016" endtime="20201112 09:43:26.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.980" endtime="20201112 09:43:26.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.974" endtime="20201112 09:43:26.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.040" endtime="20201112 09:43:26.380"></status>
</kw>
<msg timestamp="20201112 09:43:26.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040749722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.036" endtime="20201112 09:43:26.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040749722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.389" endtime="20201112 09:43:26.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.408" endtime="20201112 09:43:26.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.029" endtime="20201112 09:43:26.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.024" endtime="20201112 09:43:26.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.426" level="INFO">${RESULT} = [{'time': 0.040749722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9666000000004578e-05, 'source_diff': 2.9666000000004578e-05}, {'time': 0.040787847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.417" endtime="20201112 09:43:26.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.456" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:26.428" endtime="20201112 09:43:26.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.467" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.465" endtime="20201112 09:43:26.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.473" level="INFO">VALUE: [2.9666000000004578e-05, 3.0500000000002747e-05, 3.0347000000000013e-05, 3.0347999999999486e-05, 3.0069000000000623e-05, 2.9792000000000707e-05, 3.069499999999725e-05, 3.0486000000003177e-05, 2.969500000000319e-05, 2.9986000000002677e-05, 2.962500000000534e-05, 3.0458999999996572e-05, 3.068100000000462e-05, 3.0347000000000013e-05, 3.0360999999999583e-05, 2.9999999999995308e-05, 3.0500000000002747e-05, 3.059700000000026e-05, 3.0514000000002317e-05, 2.9666999999997112e-05, 3.0333999999999917e-05, 3.066699999999811e-05, 3.0333000000000443e-05, 3.066699999999811e-05, 3.016599999999814e-05, 3.069499999999725e-05, 3.0360999999999583e-05, 3.016700000000455e-05, 3.0500000000002747e-05, 3.068099999999768e-05, 2.9833999999999417e-05, 3.0014000000001817e-05, 3.0513999999995378e-05, 3.055500000000155e-05, 3.017999999999771e-05, 3.067999999999821e-05, 3.0472000000003607e-05, 3.019500000000369e-05, 3.0320000000000347e-05, 3.015199999999857e-05, 3.0584000000000167e-05, 3.0042000000000957e-05, 3.016700000000455e-05, 3.0264000000002067e-05, 3.0083999999999667e-05, 2.9846999999999513e-05, 3.0499999999995808e-05, 3.052800000000189e-05, 2.9999999999995308e-05, 2.966700000000405e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.470" endtime="20201112 09:43:26.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.458" endtime="20201112 09:43:26.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.483" endtime="20201112 09:43:26.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.491" endtime="20201112 09:43:26.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.486" endtime="20201112 09:43:26.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.478" endtime="20201112 09:43:26.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.970" endtime="20201112 09:43:26.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.969" endtime="20201112 09:43:26.517"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.540" endtime="20201112 09:43:26.555"></status>
</kw>
<msg timestamp="20201112 09:43:26.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.537" endtime="20201112 09:43:26.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.559" endtime="20201112 09:43:26.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.565" endtime="20201112 09:43:26.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.529" endtime="20201112 09:43:26.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.523" endtime="20201112 09:43:26.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.589" endtime="20201112 09:43:26.928"></status>
</kw>
<msg timestamp="20201112 09:43:26.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040911125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.585" endtime="20201112 09:43:26.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040911125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.938" endtime="20201112 09:43:26.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.957" endtime="20201112 09:43:26.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.578" endtime="20201112 09:43:26.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.573" endtime="20201112 09:43:26.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.978" level="INFO">${RESULT} = [{'time': 0.040911125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0014000000001817e-05, 'source_diff': 3.0014000000001817e-05}, {'time': 0.04095325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:26.969" endtime="20201112 09:43:26.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.009" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:26.980" endtime="20201112 09:43:27.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.020" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.017" endtime="20201112 09:43:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.025" level="INFO">VALUE: [3.0014000000001817e-05, 3.054199999999452e-05, 3.0319000000000873e-05, 3.0360999999999583e-05, 3.0416000000005328e-05, 2.9666999999997112e-05, 3.0514000000002317e-05, 3.0166999999997612e-05, 3.0347000000000013e-05, 2.9652000000005008e-05, 2.9833999999999417e-05, 3.052800000000189e-05, 2.965300000000448e-05, 3.066600000000558e-05, 3.0499999999995808e-05, 3.0180999999997182e-05, 3.069499999999725e-05, 3.0236000000002927e-05, 3.018100000000412e-05, 3.0333000000000443e-05, 3.0333000000000443e-05, 3.052800000000189e-05, 3.0360999999999583e-05, 2.9986000000002677e-05, 3.0028000000001387e-05, 3.0124999999998903e-05, 2.9833999999999417e-05, 3.0333999999999917e-05, 3.017999999999771e-05, 3.0513999999995378e-05, 3.052700000000241e-05, 3.0027999999994448e-05, 3.0347000000000013e-05, 3.066700000000505e-05, 3.0514000000002317e-05, 2.9805000000000803e-05, 3.069399999999778e-05, 3.047199999999667e-05, 3.066699999999811e-05, 2.9832999999999943e-05, 3.069399999999778e-05, 2.966700000000405e-05, 3.0319000000000873e-05, 3.0000000000002247e-05, 2.991599999999789e-05, 2.9832999999999943e-05, 3.0014000000001817e-05, 3.0333000000000443e-05, 3.072199999999692e-05, 3.0320000000000347e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.022" endtime="20201112 09:43:27.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.010" endtime="20201112 09:43:27.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.035" endtime="20201112 09:43:27.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.043" endtime="20201112 09:43:27.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.039" endtime="20201112 09:43:27.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.030" endtime="20201112 09:43:27.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.519" endtime="20201112 09:43:27.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.518" endtime="20201112 09:43:27.069"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.092" endtime="20201112 09:43:27.108"></status>
</kw>
<msg timestamp="20201112 09:43:27.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.089" endtime="20201112 09:43:27.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.111" endtime="20201112 09:43:27.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.117" endtime="20201112 09:43:27.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.081" endtime="20201112 09:43:27.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.076" endtime="20201112 09:43:27.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.141" endtime="20201112 09:43:27.480"></status>
</kw>
<msg timestamp="20201112 09:43:27.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040594056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.138" endtime="20201112 09:43:27.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040594056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.490" endtime="20201112 09:43:27.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.509" endtime="20201112 09:43:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.130" endtime="20201112 09:43:27.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.125" endtime="20201112 09:43:27.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.528" level="INFO">${RESULT} = [{'time': 0.040623889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.040663972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:27.519" endtime="20201112 09:43:27.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.559" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:27.530" endtime="20201112 09:43:27.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.570" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.568" endtime="20201112 09:43:27.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.575" level="INFO">VALUE: [2.9832999999999943e-05, 3.069399999999778e-05, 3.0013999999994878e-05, 3.044500000000394e-05, 3.066599999999864e-05, 3.0194999999996752e-05, 2.9833000000006882e-05, 3.0486000000003177e-05, 3.0513000000002843e-05, 2.9680999999996682e-05, 2.9832999999999943e-05, 2.987500000000559e-05, 2.9999999999995308e-05, 3.0514000000002317e-05, 2.9999999999995308e-05, 3.036100000000652e-05, 2.9860999999999083e-05, 2.9680999999996682e-05, 3.0347999999999486e-05, 2.966599999999764e-05, 2.9846999999999513e-05, 3.059700000000026e-05, 2.9832999999999943e-05, 2.966700000000405e-05, 2.9860999999999083e-05, 3.0055000000001053e-05, 3.0347000000000013e-05, 3.0124999999998903e-05, 3.0333000000000443e-05, 3.069499999999725e-05, 2.9832999999999943e-05, 3.0347000000000013e-05, 2.966599999999764e-05, 3.066699999999811e-05, 3.0360999999999583e-05, 3.0333999999999917e-05, 3.0486000000003177e-05, 3.0513999999995378e-05, 2.9805000000000803e-05, 3.0014000000001817e-05, 2.9999999999995308e-05, 3.0347999999999486e-05, 2.991599999999789e-05, 2.9832999999999943e-05, 3.0554999999994614e-05, 2.9860999999999083e-05, 3.0360999999999583e-05, 2.9792000000000707e-05, 3.0333999999999917e-05, 3.017999999999771e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.572" endtime="20201112 09:43:27.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.561" endtime="20201112 09:43:27.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.585" endtime="20201112 09:43:27.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.594" endtime="20201112 09:43:27.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.590" endtime="20201112 09:43:27.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.581" endtime="20201112 09:43:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.071" endtime="20201112 09:43:27.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.070" endtime="20201112 09:43:27.620"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.643" endtime="20201112 09:43:27.659"></status>
</kw>
<msg timestamp="20201112 09:43:27.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.640" endtime="20201112 09:43:27.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.662" endtime="20201112 09:43:27.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.668" endtime="20201112 09:43:27.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.632" endtime="20201112 09:43:27.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.627" endtime="20201112 09:43:27.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.692" endtime="20201112 09:43:28.034"></status>
</kw>
<msg timestamp="20201112 09:43:28.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040553667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.689" endtime="20201112 09:43:28.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040553667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.043" endtime="20201112 09:43:28.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.062" endtime="20201112 09:43:28.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.681" endtime="20201112 09:43:28.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.676" endtime="20201112 09:43:28.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.081" level="INFO">${RESULT} = [{'time': 0.040583667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9999999999995308e-05, 'source_diff': 2.9999999999995308e-05}, {'time': 0.040619806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:28.072" endtime="20201112 09:43:28.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.112" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:28.083" endtime="20201112 09:43:28.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.123" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.120" endtime="20201112 09:43:28.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.128" level="INFO">VALUE: [2.9999999999995308e-05, 3.0500000000002747e-05, 3.0000000000002247e-05, 3.013900000000541e-05, 3.0166999999997612e-05, 3.0333000000000443e-05, 3.0333000000000443e-05, 2.994500000000344e-05, 3.0360999999999583e-05, 3.0472000000003607e-05, 2.9846999999999513e-05, 3.0486000000003177e-05, 3.052800000000189e-05, 3.0042000000000957e-05, 3.0000000000002247e-05, 2.9860999999999083e-05, 2.9986000000002677e-05, 3.017999999999771e-05, 3.0540999999995044e-05, 3.0166000000005078e-05, 3.0374999999999153e-05, 3.0320000000000347e-05, 2.969500000000319e-05, 3.0500000000002747e-05, 2.963900000000491e-05, 3.066699999999811e-05, 2.966700000000405e-05, 2.9832999999999943e-05, 2.9833999999999417e-05, 2.9680000000004148e-05, 3.0138999999998473e-05, 3.06249999999994e-05, 3.0499999999995808e-05, 3.0347000000000013e-05, 3.066699999999811e-05, 2.9708999999995822e-05, 3.015300000000498e-05, 3.0347000000000013e-05, 3.0472000000003607e-05, 3.0333000000000443e-05, 3.0180000000004648e-05, 3.0388999999998723e-05, 3.048599999999624e-05, 2.9999999999995308e-05, 2.9819999999999847e-05, 2.9736000000002427e-05, 3.068099999999768e-05, 2.9819000000000373e-05, 2.9666999999997112e-05, 3.038900000000566e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.125" endtime="20201112 09:43:28.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.114" endtime="20201112 09:43:28.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.138" endtime="20201112 09:43:28.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.146" endtime="20201112 09:43:28.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.141" endtime="20201112 09:43:28.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.133" endtime="20201112 09:43:28.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.622" endtime="20201112 09:43:28.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.621" endtime="20201112 09:43:28.173"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.198" endtime="20201112 09:43:28.214"></status>
</kw>
<msg timestamp="20201112 09:43:28.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.195" endtime="20201112 09:43:28.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.217" endtime="20201112 09:43:28.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.223" endtime="20201112 09:43:28.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.187" endtime="20201112 09:43:28.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.180" endtime="20201112 09:43:28.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.247" endtime="20201112 09:43:28.583"></status>
</kw>
<msg timestamp="20201112 09:43:28.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043910944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.243" endtime="20201112 09:43:28.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043910944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.593" endtime="20201112 09:43:28.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.612" endtime="20201112 09:43:28.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.236" endtime="20201112 09:43:28.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.231" endtime="20201112 09:43:28.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.631" level="INFO">${RESULT} = [{'time': 0.043910944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7319000000000935e-05, 'source_diff': 3.7319000000000935e-05}, {'time': 0.043958181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:28.622" endtime="20201112 09:43:28.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.660" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:28.633" endtime="20201112 09:43:28.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.671" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.669" endtime="20201112 09:43:28.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.676" level="INFO">VALUE: [3.7319000000000935e-05, 3.700000000000231e-05, 3.708399999999973e-05, 3.6833000000000005e-05, 3.700000000000231e-05, 3.7569000000001185e-05, 3.691599999999795e-05, 3.699999999999537e-05, 3.6833000000000005e-05, 3.66659999999977e-05, 3.750000000000281e-05, 3.700000000000231e-05, 3.680600000000034e-05, 3.683399999999948e-05, 3.767999999999827e-05, 3.7319000000000935e-05, 3.6833000000000005e-05, 3.770800000000435e-05, 3.7708999999996884e-05, 3.700000000000231e-05, 3.7347000000000075e-05, 3.7305000000001365e-05, 3.698600000000274e-05, 3.6819000000000435e-05, 3.697200000000317e-05, 3.699999999999537e-05, 3.680600000000034e-05, 3.7138999999998534e-05, 3.700000000000231e-05, 3.6805000000000865e-05, 3.698600000000274e-05, 3.765199999999913e-05, 3.7624999999999464e-05, 3.74859999999963e-05, 3.752799999999501e-05, 3.7166999999997674e-05, 3.748600000000324e-05, 3.745900000000357e-05, 3.7110999999999394e-05, 3.697199999999623e-05, 3.7666999999998174e-05, 3.7569000000001185e-05, 3.71659999999982e-05, 3.733399999999998e-05, 3.705600000000059e-05, 3.6847000000006513e-05, 3.6819000000000435e-05, 3.7638999999999034e-05, 3.7152999999998104e-05, 3.7152999999998104e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.673" endtime="20201112 09:43:28.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.662" endtime="20201112 09:43:28.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.691" endtime="20201112 09:43:28.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.699" endtime="20201112 09:43:28.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.695" endtime="20201112 09:43:28.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.686" endtime="20201112 09:43:28.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.175" endtime="20201112 09:43:28.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.174" endtime="20201112 09:43:28.725"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.748" endtime="20201112 09:43:28.764"></status>
</kw>
<msg timestamp="20201112 09:43:28.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.745" endtime="20201112 09:43:28.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.767" endtime="20201112 09:43:28.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.774" endtime="20201112 09:43:28.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.737" endtime="20201112 09:43:28.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.731" endtime="20201112 09:43:28.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.800" endtime="20201112 09:43:29.134"></status>
</kw>
<msg timestamp="20201112 09:43:29.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040686083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.797" endtime="20201112 09:43:29.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040686083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.144" endtime="20201112 09:43:29.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.162" endtime="20201112 09:43:29.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.789" endtime="20201112 09:43:29.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.784" endtime="20201112 09:43:29.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.183" level="INFO">${RESULT} = [{'time': 0.040686083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.715199999999863e-05, 'source_diff': 3.715199999999863e-05}, {'time': 0.040735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.174" endtime="20201112 09:43:29.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.213" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:29.185" endtime="20201112 09:43:29.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.224" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.221" endtime="20201112 09:43:29.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.229" level="INFO">VALUE: [3.715199999999863e-05, 3.7638999999999034e-05, 3.765200000000607e-05, 3.69859999999958e-05, 3.745900000000357e-05, 3.675000000000206e-05, 3.720799999999691e-05, 3.7152999999998104e-05, 3.7138999999998534e-05, 3.747300000000314e-05, 3.74580000000041e-05, 3.679200000000077e-05, 3.7652999999998604e-05, 3.745799999999716e-05, 3.681999999999991e-05, 3.697200000000317e-05, 3.7666999999998174e-05, 3.6805000000000865e-05, 3.665199999999813e-05, 3.701399999999494e-05, 3.69580000000036e-05, 3.680600000000034e-05, 3.732000000000041e-05, 3.7486999999995774e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.750000000000281e-05, 3.7652999999998604e-05, 3.742999999999802e-05, 3.723599999999605e-05, 3.69859999999958e-05, 3.7638999999999034e-05, 3.730600000000084e-05, 3.695900000000307e-05, 3.726400000000213e-05, 3.730600000000084e-05, 3.681999999999991e-05, 3.680600000000034e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.7304999999994426e-05, 3.7138000000006e-05, 3.7527000000002475e-05, 3.665300000000454e-05, 3.681999999999991e-05, 3.750000000000281e-05, 3.700000000000231e-05, 3.681999999999991e-05, 3.697200000000317e-05, 3.747200000000367e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.226" endtime="20201112 09:43:29.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.215" endtime="20201112 09:43:29.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.239" endtime="20201112 09:43:29.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.247" endtime="20201112 09:43:29.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.243" endtime="20201112 09:43:29.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.234" endtime="20201112 09:43:29.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.727" endtime="20201112 09:43:29.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.726" endtime="20201112 09:43:29.273"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.295" endtime="20201112 09:43:29.311"></status>
</kw>
<msg timestamp="20201112 09:43:29.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.292" endtime="20201112 09:43:29.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.314" endtime="20201112 09:43:29.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.320" endtime="20201112 09:43:29.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.285" endtime="20201112 09:43:29.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.279" endtime="20201112 09:43:29.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.343" endtime="20201112 09:43:29.677"></status>
</kw>
<msg timestamp="20201112 09:43:29.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039904653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.340" endtime="20201112 09:43:29.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039904653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.686" endtime="20201112 09:43:29.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.705" endtime="20201112 09:43:29.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.333" endtime="20201112 09:43:29.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.328" endtime="20201112 09:43:29.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.724" level="INFO">${RESULT} = [{'time': 0.039942111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.74580000000041e-05, 'source_diff': 3.74580000000041e-05}, {'time': 0.039984083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:29.715" endtime="20201112 09:43:29.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.754" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:29.726" endtime="20201112 09:43:29.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.765" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.763" endtime="20201112 09:43:29.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.770" level="INFO">VALUE: [3.74580000000041e-05, 3.6638999999998034e-05, 3.676400000000163e-05, 3.766700000000511e-05, 3.693000000000446e-05, 3.749999999999587e-05, 3.7152999999998104e-05, 3.730600000000084e-05, 3.688900000000522e-05, 3.748600000000324e-05, 3.69580000000036e-05, 3.7638999999999034e-05, 3.681999999999991e-05, 3.729200000000127e-05, 3.7638999999999034e-05, 3.765300000000554e-05, 3.730600000000084e-05, 3.7152999999998104e-05, 3.688900000000522e-05, 3.732000000000041e-05, 3.6846999999999575e-05, 3.6791000000001295e-05, 3.7486999999995774e-05, 3.6791000000001295e-05, 3.6819000000000435e-05, 3.7138999999998534e-05, 3.680600000000034e-05, 3.7305000000001365e-05, 3.692999999999752e-05, 3.698600000000274e-05, 3.679199999999383e-05, 3.697200000000317e-05, 3.715300000000504e-05, 3.71659999999982e-05, 3.698600000000274e-05, 3.750000000000281e-05, 3.74859999999963e-05, 3.7318999999993996e-05, 3.715300000000504e-05, 3.730600000000084e-05, 3.698600000000274e-05, 3.766700000000511e-05, 3.7124999999998964e-05, 3.6833000000000005e-05, 3.680600000000034e-05, 3.680600000000034e-05, 3.6818999999993496e-05, 3.6638999999998034e-05, 3.698600000000274e-05, 3.7138999999998534e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.767" endtime="20201112 09:43:29.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.756" endtime="20201112 09:43:29.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.780" endtime="20201112 09:43:29.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.788" endtime="20201112 09:43:29.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.784" endtime="20201112 09:43:29.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.775" endtime="20201112 09:43:29.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.275" endtime="20201112 09:43:29.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.274" endtime="20201112 09:43:29.814"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.838" endtime="20201112 09:43:29.853"></status>
</kw>
<msg timestamp="20201112 09:43:29.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.834" endtime="20201112 09:43:29.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.857" endtime="20201112 09:43:29.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.863" endtime="20201112 09:43:29.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.827" endtime="20201112 09:43:29.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.821" endtime="20201112 09:43:29.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.886" endtime="20201112 09:43:30.221"></status>
</kw>
<msg timestamp="20201112 09:43:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041243889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041280694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.883" endtime="20201112 09:43:30.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041243889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041280694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.231" endtime="20201112 09:43:30.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.249" endtime="20201112 09:43:30.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.876" endtime="20201112 09:43:30.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.871" endtime="20201112 09:43:30.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.268" level="INFO">${RESULT} = [{'time': 0.041280694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6805000000000865e-05, 'source_diff': 3.6805000000000865e-05}, {'time': 0.041325847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:30.259" endtime="20201112 09:43:30.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.298" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:30.270" endtime="20201112 09:43:30.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.309" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.307" endtime="20201112 09:43:30.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.315" level="INFO">VALUE: [3.6805000000000865e-05, 3.7583000000000755e-05, 3.7666999999998174e-05, 3.679200000000077e-05, 3.747300000000314e-05, 3.6805000000000865e-05, 3.7624999999999464e-05, 3.683400000000642e-05, 3.7305000000001365e-05, 3.750000000000281e-05, 3.7402999999998354e-05, 3.7304999999994426e-05, 3.748700000000271e-05, 3.69859999999958e-05, 3.7430999999997494e-05, 3.732000000000041e-05, 3.729200000000127e-05, 3.74859999999963e-05, 3.697200000000317e-05, 3.7638999999999034e-05, 3.730600000000084e-05, 3.750000000000281e-05, 3.6860999999999144e-05, 3.7138000000006e-05, 3.751400000000238e-05, 3.752800000000195e-05, 3.7319000000000935e-05, 3.697200000000317e-05, 3.747199999999673e-05, 3.7124999999998964e-05, 3.720800000000385e-05, 3.730600000000084e-05, 3.765199999999913e-05, 3.752800000000195e-05, 3.680600000000034e-05, 3.697200000000317e-05, 3.747199999999673e-05, 3.697200000000317e-05, 3.7304999999994426e-05, 3.7152999999998104e-05, 3.704200000000102e-05, 3.7124999999998964e-05, 3.681999999999991e-05, 3.7318999999993996e-05, 3.697200000000317e-05, 3.723600000000299e-05, 3.73059999999939e-05, 3.7402999999998354e-05, 3.748600000000324e-05, 3.7666999999998174e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.311" endtime="20201112 09:43:30.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.300" endtime="20201112 09:43:30.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.324" endtime="20201112 09:43:30.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.332" endtime="20201112 09:43:30.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.328" endtime="20201112 09:43:30.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.320" endtime="20201112 09:43:30.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.817" endtime="20201112 09:43:30.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.815" endtime="20201112 09:43:30.358"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.380" endtime="20201112 09:43:30.396"></status>
</kw>
<msg timestamp="20201112 09:43:30.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.377" endtime="20201112 09:43:30.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.399" endtime="20201112 09:43:30.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.405" endtime="20201112 09:43:30.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.370" endtime="20201112 09:43:30.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.364" endtime="20201112 09:43:30.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.428" endtime="20201112 09:43:30.761"></status>
</kw>
<msg timestamp="20201112 09:43:30.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039734694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.425" endtime="20201112 09:43:30.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039734694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.771" endtime="20201112 09:43:30.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.790" endtime="20201112 09:43:30.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.418" endtime="20201112 09:43:30.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.413" endtime="20201112 09:43:30.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.808" level="INFO">${RESULT} = [{'time': 0.039772167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7472999999996204e-05, 'source_diff': 3.7472999999996204e-05}, {'time': 0.039820153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:30.800" endtime="20201112 09:43:30.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.839" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:30.810" endtime="20201112 09:43:30.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.850" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.848" endtime="20201112 09:43:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.856" level="INFO">VALUE: [3.7472999999996204e-05, 3.7458999999996634e-05, 3.7110999999999394e-05, 3.748600000000324e-05, 3.7638999999999034e-05, 3.747200000000367e-05, 3.747300000000314e-05, 3.747200000000367e-05, 3.73059999999939e-05, 3.6846999999999575e-05, 3.7124999999998964e-05, 3.733399999999998e-05, 3.7083000000000255e-05, 3.715199999999863e-05, 3.6888999999998284e-05, 3.698600000000274e-05, 3.7152999999998104e-05, 3.7138999999998534e-05, 3.7319000000000935e-05, 3.732000000000041e-05, 3.7305000000001365e-05, 3.7138999999998534e-05, 3.750000000000281e-05, 3.6819000000000435e-05, 3.6944999999996564e-05, 3.749999999999587e-05, 3.765199999999913e-05, 3.6819000000000435e-05, 3.750000000000281e-05, 3.7638999999999034e-05, 3.741599999999845e-05, 3.71250000000059e-05, 3.713900000000547e-05, 3.7138999999998534e-05, 3.7652999999998604e-05, 3.763799999999956e-05, 3.73059999999939e-05, 3.70979999999993e-05, 3.733399999999998e-05, 3.7305000000001365e-05, 3.729200000000127e-05, 3.732000000000041e-05, 3.7652999999998604e-05, 3.72780000000017e-05, 3.7638999999999034e-05, 3.697300000000264e-05, 3.7305000000001365e-05, 3.702800000000145e-05, 3.729200000000127e-05, 3.7138999999998534e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.852" endtime="20201112 09:43:30.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.841" endtime="20201112 09:43:30.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.866" endtime="20201112 09:43:30.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.874" endtime="20201112 09:43:30.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.870" endtime="20201112 09:43:30.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.861" endtime="20201112 09:43:30.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.360" endtime="20201112 09:43:30.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.359" endtime="20201112 09:43:30.900"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.922" endtime="20201112 09:43:30.938"></status>
</kw>
<msg timestamp="20201112 09:43:30.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.919" endtime="20201112 09:43:30.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.941" endtime="20201112 09:43:30.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.947" endtime="20201112 09:43:30.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.912" endtime="20201112 09:43:30.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.906" endtime="20201112 09:43:30.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.970" endtime="20201112 09:43:31.304"></status>
</kw>
<msg timestamp="20201112 09:43:31.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.967" endtime="20201112 09:43:31.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.313" endtime="20201112 09:43:31.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.332" endtime="20201112 09:43:31.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.960" endtime="20201112 09:43:31.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.955" endtime="20201112 09:43:31.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.353" level="INFO">${RESULT} = [{'time': 0.039868681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.765300000000554e-05, 'source_diff': 3.765300000000554e-05}, {'time': 0.039911778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.344" endtime="20201112 09:43:31.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.382" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:31.355" endtime="20201112 09:43:31.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.393" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.391" endtime="20201112 09:43:31.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.399" level="INFO">VALUE: [3.765300000000554e-05, 3.766700000000511e-05, 3.7402999999998354e-05, 3.683399999999948e-05, 3.73059999999939e-05, 3.7610999999999895e-05, 3.733399999999998e-05, 3.748600000000324e-05, 3.7319000000000935e-05, 3.6819000000000435e-05, 3.74859999999963e-05, 3.7124999999998964e-05, 3.7138999999998534e-05, 3.749999999999587e-05, 3.679200000000077e-05, 3.683399999999948e-05, 3.747200000000367e-05, 3.6986999999995274e-05, 3.7152999999998104e-05, 3.7166999999997674e-05, 3.7333000000000505e-05, 3.697300000000264e-05, 3.730600000000084e-05, 3.7360999999999644e-05, 3.6846999999999575e-05, 3.7652999999998604e-05, 3.715300000000504e-05, 3.7319000000000935e-05, 3.6805000000000865e-05, 3.750000000000281e-05, 3.680600000000034e-05, 3.749999999999587e-05, 3.665300000000454e-05, 3.767999999999827e-05, 3.765300000000554e-05, 3.7138999999998534e-05, 3.732000000000041e-05, 3.697199999999623e-05, 3.72780000000017e-05, 3.7652999999998604e-05, 3.6652999999997604e-05, 3.730600000000084e-05, 3.7652999999998604e-05, 3.722200000000342e-05, 3.680600000000034e-05, 3.750000000000281e-05, 3.7638999999999034e-05, 3.7444999999997064e-05, 3.6986999999995274e-05, 3.7638999999999034e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.395" endtime="20201112 09:43:31.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.384" endtime="20201112 09:43:31.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.408" endtime="20201112 09:43:31.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.416" endtime="20201112 09:43:31.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.412" endtime="20201112 09:43:31.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.403" endtime="20201112 09:43:31.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.902" endtime="20201112 09:43:31.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.901" endtime="20201112 09:43:31.442"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.464" endtime="20201112 09:43:31.480"></status>
</kw>
<msg timestamp="20201112 09:43:31.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.461" endtime="20201112 09:43:31.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.483" endtime="20201112 09:43:31.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.489" endtime="20201112 09:43:31.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.454" endtime="20201112 09:43:31.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.448" endtime="20201112 09:43:31.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.512" endtime="20201112 09:43:31.846"></status>
</kw>
<msg timestamp="20201112 09:43:31.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039788319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039825306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.509" endtime="20201112 09:43:31.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039788319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039825306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.856" endtime="20201112 09:43:31.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.875" endtime="20201112 09:43:31.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.502" endtime="20201112 09:43:31.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.497" endtime="20201112 09:43:31.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.895" level="INFO">${RESULT} = [{'time': 0.039825306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6986999999995274e-05, 'source_diff': 3.6986999999995274e-05}, {'time': 0.039868528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:31.885" endtime="20201112 09:43:31.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.925" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:31.897" endtime="20201112 09:43:31.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.935" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.933" endtime="20201112 09:43:31.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.941" level="INFO">VALUE: [3.6986999999995274e-05, 3.748600000000324e-05, 3.748700000000271e-05, 3.6972999999995704e-05, 3.747200000000367e-05, 3.713799999999906e-05, 3.732000000000041e-05, 3.74580000000041e-05, 3.683399999999948e-05, 3.7652999999998604e-05, 3.7152999999998104e-05, 3.700000000000231e-05, 3.720800000000385e-05, 3.7652999999998604e-05, 3.752800000000195e-05, 3.698600000000274e-05, 3.663900000000497e-05, 3.6805000000000865e-05, 3.7138999999998534e-05, 3.7652999999998604e-05, 3.7138999999998534e-05, 3.7152999999998104e-05, 3.723600000000299e-05, 3.7624999999999464e-05, 3.7332999999993566e-05, 3.7304999999994426e-05, 3.7319000000000935e-05, 3.73059999999939e-05, 3.69859999999958e-05, 3.7319000000000935e-05, 3.6805000000000865e-05, 3.747300000000314e-05, 3.7666999999998174e-05, 3.747199999999673e-05, 3.6819000000000435e-05, 3.707000000000016e-05, 3.7124999999998964e-05, 3.7138999999998534e-05, 3.766700000000511e-05, 3.69580000000036e-05, 3.701399999999494e-05, 3.747200000000367e-05, 3.713900000000547e-05, 3.747199999999673e-05, 3.7180999999997244e-05, 3.6819000000000435e-05, 3.6888999999998284e-05, 3.69859999999958e-05, 3.7304999999994426e-05, 3.698600000000274e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.938" endtime="20201112 09:43:31.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.926" endtime="20201112 09:43:31.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.950" endtime="20201112 09:43:31.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.959" endtime="20201112 09:43:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.954" endtime="20201112 09:43:31.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.946" endtime="20201112 09:43:31.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.444" endtime="20201112 09:43:31.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.443" endtime="20201112 09:43:31.985"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.008" endtime="20201112 09:43:32.024"></status>
</kw>
<msg timestamp="20201112 09:43:32.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.004" endtime="20201112 09:43:32.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.027" endtime="20201112 09:43:32.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.033" endtime="20201112 09:43:32.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.997" endtime="20201112 09:43:32.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.991" endtime="20201112 09:43:32.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.056" endtime="20201112 09:43:32.391"></status>
</kw>
<msg timestamp="20201112 09:43:32.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:32.053" endtime="20201112 09:43:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040375361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:32.401" endtime="20201112 09:43:32.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.420" endtime="20201112 09:43:32.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.046" endtime="20201112 09:43:32.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.041" endtime="20201112 09:43:32.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.439" level="INFO">${RESULT} = [{'time': 0.0404195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4138999999998596e-05, 'source_diff': 4.4138999999998596e-05}, {'time': 0.040470722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.430" endtime="20201112 09:43:32.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.468" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:32.441" endtime="20201112 09:43:32.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.479" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.477" endtime="20201112 09:43:32.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.485" level="INFO">VALUE: [4.4138999999998596e-05, 4.4124999999999026e-05, 4.429199999999439e-05, 4.4417000000004925e-05, 4.4597000000000386e-05, 4.394400000000409e-05, 4.445800000000416e-05, 4.459799999999986e-05, 4.4624999999999526e-05, 4.401400000000194e-05, 4.397200000000323e-05, 4.445799999999722e-05, 4.477800000000226e-05, 4.377800000000126e-05, 4.4096999999999886e-05, 4.444399999999765e-05, 4.4610999999999956e-05, 4.395800000000366e-05, 4.4625000000006465e-05, 4.4111000000006395e-05, 4.377800000000126e-05, 4.394399999999715e-05, 4.469400000000484e-05, 4.379199999999389e-05, 4.3958999999996196e-05, 4.4166999999997736e-05, 4.4124999999999026e-05, 4.4652999999998666e-05, 4.4624999999999526e-05, 4.427800000000176e-05, 4.4083000000000316e-05, 4.445799999999722e-05, 4.4444999999997126e-05, 4.459799999999986e-05, 4.4110999999999456e-05, 4.4124999999999026e-05, 4.4444999999997126e-05, 4.4459000000003635e-05, 4.392999999999758e-05, 4.4125000000005965e-05, 4.445800000000416e-05, 4.4139000000005535e-05, 4.441599999999851e-05, 4.394399999999715e-05, 4.4124999999999026e-05, 4.4333000000000566e-05, 4.395799999999672e-05, 4.4305000000001427e-05, 4.376300000000222e-05, 4.445800000000416e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.482" endtime="20201112 09:43:32.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.470" endtime="20201112 09:43:32.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.494" endtime="20201112 09:43:32.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.502" endtime="20201112 09:43:32.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.498" endtime="20201112 09:43:32.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.490" endtime="20201112 09:43:32.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.987" endtime="20201112 09:43:32.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.986" endtime="20201112 09:43:32.528"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.551" endtime="20201112 09:43:32.568"></status>
</kw>
<msg timestamp="20201112 09:43:32.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.548" endtime="20201112 09:43:32.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.571" endtime="20201112 09:43:32.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.577" endtime="20201112 09:43:32.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.540" endtime="20201112 09:43:32.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.535" endtime="20201112 09:43:32.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.600" endtime="20201112 09:43:32.934"></status>
</kw>
<msg timestamp="20201112 09:43:32.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040002167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.597" endtime="20201112 09:43:32.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040002167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.944" endtime="20201112 09:43:32.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.962" endtime="20201112 09:43:32.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.590" endtime="20201112 09:43:32.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.585" endtime="20201112 09:43:32.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.981" level="INFO">${RESULT} = [{'time': 0.040002167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.898600000000086e-05, 'source_diff': 4.898600000000086e-05}, {'time': 0.040069361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.972" endtime="20201112 09:43:32.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.011" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:32.983" endtime="20201112 09:43:33.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.022" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.020" endtime="20201112 09:43:33.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.028" level="INFO">VALUE: [4.898600000000086e-05, 4.900000000000043e-05, 4.8903000000002916e-05, 4.8889000000003346e-05, 4.8931000000002056e-05, 4.929099999999992e-05, 4.8959000000001196e-05, 4.958299999999888e-05, 4.9375000000004277e-05, 4.913899999999666e-05, 4.925000000000068e-05, 4.880499999999899e-05, 4.908400000000479e-05, 4.920800000000197e-05, 4.9473000000001266e-05, 4.884800000000411e-05, 4.898600000000086e-05, 4.929099999999992e-05, 4.8931000000002056e-05, 4.890299999999598e-05, 4.961099999999802e-05, 4.88469999999977e-05, 4.954199999999964e-05, 4.898600000000086e-05, 4.927799999999982e-05, 4.875000000000018e-05, 4.873600000000061e-05, 4.950000000000093e-05, 4.906899999999881e-05, 4.9459000000001696e-05, 4.925000000000068e-05, 4.929199999999939e-05, 4.9695000000002376e-05, 4.959699999999845e-05, 4.9695000000002376e-05, 4.904099999999967e-05, 4.958400000000529e-05, 4.888800000000387e-05, 4.9443999999995714e-05, 4.9693999999995964e-05, 4.947200000000179e-05, 4.959699999999845e-05, 4.952800000000007e-05, 4.875000000000018e-05, 4.958400000000529e-05, 4.887499999999684e-05, 4.940299999999648e-05, 4.956999999999878e-05, 4.955499999999974e-05, 4.972200000000204e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.024" endtime="20201112 09:43:33.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.013" endtime="20201112 09:43:33.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.037" endtime="20201112 09:43:33.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.045" endtime="20201112 09:43:33.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.041" endtime="20201112 09:43:33.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.032" endtime="20201112 09:43:33.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.530" endtime="20201112 09:43:33.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.529" endtime="20201112 09:43:33.071"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.093" endtime="20201112 09:43:33.110"></status>
</kw>
<msg timestamp="20201112 09:43:33.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.090" endtime="20201112 09:43:33.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.113" endtime="20201112 09:43:33.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.119" endtime="20201112 09:43:33.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.083" endtime="20201112 09:43:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.077" endtime="20201112 09:43:33.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.142" endtime="20201112 09:43:33.479"></status>
</kw>
<msg timestamp="20201112 09:43:33.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039711931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.139" endtime="20201112 09:43:33.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039711931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.488" endtime="20201112 09:43:33.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.507" endtime="20201112 09:43:33.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.132" endtime="20201112 09:43:33.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.127" endtime="20201112 09:43:33.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.528" level="INFO">${RESULT} = [{'time': 0.039762139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.020800000000297e-05, 'source_diff': 5.020800000000297e-05}, {'time': 0.039832333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.519" endtime="20201112 09:43:33.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.557" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:33.530" endtime="20201112 09:43:33.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.568" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.566" endtime="20201112 09:43:33.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.574" level="INFO">VALUE: [5.020800000000297e-05, 5.0707999999996534e-05, 5.009699999999895e-05, 5.036200000000518e-05, 5.056900000000031e-05, 4.987499999999784e-05, 5.000000000000143e-05, 5.056999999999978e-05, 5.036099999999877e-05, 5.073600000000261e-05, 5.023600000000211e-05, 5.0014000000001e-05, 5.0179999999996894e-05, 4.9721999999995103e-05, 5.073600000000261e-05, 4.990299999999698e-05, 5.031900000000006e-05, 5.0445000000003126e-05, 5.00270000000011e-05, 5.073600000000261e-05, 5.0181000000003306e-05, 5.065299999999773e-05, 5.054100000000117e-05, 5.065299999999773e-05, 5.056999999999978e-05, 4.997200000000229e-05, 4.98339999999986e-05, 5.002800000000057e-05, 5.006999999999928e-05, 4.997200000000229e-05, 5.072200000000304e-05, 5.068099999999687e-05, 5.056900000000031e-05, 5.0695000000003376e-05, 5.0139000000004597e-05, 5.0721999999996104e-05, 4.979100000000042e-05, 5.018099999999637e-05, 5.0637999999998684e-05, 5.037500000000528e-05, 5.055500000000074e-05, 5.031999999999953e-05, 5.059699999999945e-05, 5.011100000000546e-05, 5.055600000000021e-05, 4.972200000000204e-05, 5.015299999999723e-05, 5.026400000000125e-05, 4.979199999999989e-05, 4.994400000000315e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.571" endtime="20201112 09:43:33.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.559" endtime="20201112 09:43:33.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.583" endtime="20201112 09:43:33.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.591" endtime="20201112 09:43:33.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.587" endtime="20201112 09:43:33.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.579" endtime="20201112 09:43:33.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.073" endtime="20201112 09:43:33.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.072" endtime="20201112 09:43:33.617"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.639" endtime="20201112 09:43:33.656"></status>
</kw>
<msg timestamp="20201112 09:43:33.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.636" endtime="20201112 09:43:33.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.660" endtime="20201112 09:43:33.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.666" endtime="20201112 09:43:33.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.629" endtime="20201112 09:43:33.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.623" endtime="20201112 09:43:33.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.689" endtime="20201112 09:43:34.025"></status>
</kw>
<msg timestamp="20201112 09:43:34.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039882111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.685" endtime="20201112 09:43:34.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039882111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.035" endtime="20201112 09:43:34.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.053" endtime="20201112 09:43:34.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.678" endtime="20201112 09:43:34.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.674" endtime="20201112 09:43:34.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.072" level="INFO">${RESULT} = [{'time': 0.039882111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0985999999995923e-05, 'source_diff': 5.0985999999995923e-05}, {'time': 0.039955319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:34.063" endtime="20201112 09:43:34.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.102" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:34.074" endtime="20201112 09:43:34.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.113" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.111" endtime="20201112 09:43:34.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.118" level="INFO">VALUE: [5.0985999999995923e-05, 5.120800000000397e-05, 5.155500000000174e-05, 5.120899999999651e-05, 5.0695000000003376e-05, 5.104200000000114e-05, 5.127799999999488e-05, 5.100000000000243e-05, 5.088899999999841e-05, 5.158299999999394e-05, 5.126399999999531e-05, 5.170899999999701e-05, 5.090299999999798e-05, 5.159700000000045e-05, 5.077700000000185e-05, 5.159699999999351e-05, 5.137499999999934e-05, 5.1665999999998824e-05, 5.140299999999848e-05, 5.137499999999934e-05, 5.080600000000046e-05, 5.108399999999985e-05, 5.0735999999995673e-05, 5.075000000000218e-05, 5.080500000000099e-05, 5.125000000000268e-05, 5.088899999999841e-05, 5.112499999999909e-05, 5.138899999999891e-05, 5.158400000000035e-05, 5.1443999999997714e-05, 5.0971999999996354e-05, 5.094400000000415e-05, 5.0707999999996534e-05, 5.088900000000535e-05, 5.162499999999959e-05, 5.154200000000164e-05, 5.1235999999996173e-05, 5.158400000000035e-05, 5.088899999999841e-05, 5.112499999999909e-05, 5.081899999999362e-05, 5.087499999999884e-05, 5.098600000000286e-05, 5.137499999999934e-05, 5.11669999999978e-05, 5.102799999999463e-05, 5.122200000000354e-05, 5.1667000000005237e-05, 5.101299999999559e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.115" endtime="20201112 09:43:34.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.104" endtime="20201112 09:43:34.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.128" endtime="20201112 09:43:34.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.136" endtime="20201112 09:43:34.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.132" endtime="20201112 09:43:34.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.123" endtime="20201112 09:43:34.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.619" endtime="20201112 09:43:34.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.618" endtime="20201112 09:43:34.162"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.184" endtime="20201112 09:43:34.201"></status>
</kw>
<msg timestamp="20201112 09:43:34.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.181" endtime="20201112 09:43:34.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.204" endtime="20201112 09:43:34.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.211" endtime="20201112 09:43:34.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.174" endtime="20201112 09:43:34.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.168" endtime="20201112 09:43:34.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.233" endtime="20201112 09:43:34.567"></status>
</kw>
<msg timestamp="20201112 09:43:34.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.230" endtime="20201112 09:43:34.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039826417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.576" endtime="20201112 09:43:34.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.595" endtime="20201112 09:43:34.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.223" endtime="20201112 09:43:34.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.218" endtime="20201112 09:43:34.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.614" level="INFO">${RESULT} = [{'time': 0.039826417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.188899999999941e-05, 'source_diff': 5.188899999999941e-05}, {'time': 0.039896583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.605" endtime="20201112 09:43:34.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.644" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:34.616" endtime="20201112 09:43:34.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.655" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.653" endtime="20201112 09:43:34.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.660" level="INFO">VALUE: [5.188899999999941e-05, 5.1957999999997784e-05, 5.227799999999588e-05, 5.256900000000231e-05, 5.233300000000163e-05, 5.1737000000003086e-05, 5.2235999999997174e-05, 5.236099999999383e-05, 5.1971999999997354e-05, 5.218099999999837e-05, 5.193099999999812e-05, 5.183299999999419e-05, 5.229199999999545e-05, 5.254200000000264e-05, 5.2638000000000684e-05, 5.261100000000102e-05, 5.209700000000095e-05, 5.237500000000034e-05, 5.263900000000016e-05, 5.183299999999419e-05, 5.245800000000522e-05, 5.273600000000461e-05, 5.188899999999941e-05, 5.2679999999999394e-05, 5.179200000000189e-05, 5.1901999999999504e-05, 5.206899999999487e-05, 5.212500000000009e-05, 5.265299999999973e-05, 5.256899999999537e-05, 5.2513999999996563e-05, 5.211100000000052e-05, 5.263900000000016e-05, 5.2487000000003836e-05, 5.202799999999563e-05, 5.237500000000034e-05, 5.232000000000153e-05, 5.1915999999999074e-05, 5.213899999999966e-05, 5.2429999999999144e-05, 5.2221999999997604e-05, 5.2429999999999144e-05, 5.223600000000411e-05, 5.183300000000113e-05, 5.183299999999419e-05, 5.182000000000103e-05, 5.2693999999998964e-05, 5.2667000000006237e-05, 5.2415999999999574e-05, 5.181900000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.657" endtime="20201112 09:43:34.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.646" endtime="20201112 09:43:34.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.670" endtime="20201112 09:43:34.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.678" endtime="20201112 09:43:34.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.674" endtime="20201112 09:43:34.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.665" endtime="20201112 09:43:34.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.164" endtime="20201112 09:43:34.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.163" endtime="20201112 09:43:34.704"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.726" endtime="20201112 09:43:34.743"></status>
</kw>
<msg timestamp="20201112 09:43:34.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.723" endtime="20201112 09:43:34.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.747" endtime="20201112 09:43:34.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.753" endtime="20201112 09:43:34.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.716" endtime="20201112 09:43:34.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.710" endtime="20201112 09:43:34.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.776" endtime="20201112 09:43:35.110"></status>
</kw>
<msg timestamp="20201112 09:43:35.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.773" endtime="20201112 09:43:35.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039868681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.120" endtime="20201112 09:43:35.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.139" endtime="20201112 09:43:35.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.766" endtime="20201112 09:43:35.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.761" endtime="20201112 09:43:35.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.158" level="INFO">${RESULT} = [{'time': 0.039922403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3721999999999104e-05, 'source_diff': 5.3721999999999104e-05}, {'time': 0.039992569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:35.149" endtime="20201112 09:43:35.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.187" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:35.160" endtime="20201112 09:43:35.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.198" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.196" endtime="20201112 09:43:35.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.204" level="INFO">VALUE: [5.3721999999999104e-05, 5.287500000000084e-05, 5.341700000000005e-05, 5.330599999999602e-05, 5.3166000000000324e-05, 5.28470000000017e-05, 5.291699999999955e-05, 5.362499999999465e-05, 5.337500000000134e-05, 5.284800000000117e-05, 5.288900000000041e-05, 5.3485999999998424e-05, 5.3693999999999964e-05, 5.279199999999595e-05, 5.3721999999999104e-05, 5.276400000000375e-05, 5.338900000000091e-05, 5.344499999999919e-05, 5.344499999999919e-05, 5.3499999999997994e-05, 5.304099999999673e-05, 5.28470000000017e-05, 5.356999999999584e-05, 5.3152000000000754e-05, 5.288900000000041e-05, 5.3666000000000824e-05, 5.362500000000159e-05, 5.326400000000425e-05, 5.3013999999997063e-05, 5.330499999999655e-05, 5.279200000000289e-05, 5.3499999999997994e-05, 5.275000000000418e-05, 5.352699999999766e-05, 5.3277999999996883e-05, 5.294499999999869e-05, 5.365300000000073e-05, 5.290299999999998e-05, 5.3249999999997744e-05, 5.3499999999997994e-05, 5.3207999999999034e-05, 5.300000000000443e-05, 5.2929999999999644e-05, 5.358300000000288e-05, 5.363899999999422e-05, 5.297200000000529e-05, 5.336200000000124e-05, 5.280600000000246e-05, 5.359700000000245e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.201" endtime="20201112 09:43:35.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.189" endtime="20201112 09:43:35.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.213" endtime="20201112 09:43:35.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.221" endtime="20201112 09:43:35.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.217" endtime="20201112 09:43:35.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.209" endtime="20201112 09:43:35.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.706" endtime="20201112 09:43:35.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.705" endtime="20201112 09:43:35.247"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.270" endtime="20201112 09:43:35.287"></status>
</kw>
<msg timestamp="20201112 09:43:35.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.266" endtime="20201112 09:43:35.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.290" endtime="20201112 09:43:35.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.296" endtime="20201112 09:43:35.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.259" endtime="20201112 09:43:35.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.253" endtime="20201112 09:43:35.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.319" endtime="20201112 09:43:35.654"></status>
</kw>
<msg timestamp="20201112 09:43:35.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.316" endtime="20201112 09:43:35.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.664" endtime="20201112 09:43:35.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.682" endtime="20201112 09:43:35.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.309" endtime="20201112 09:43:35.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.304" endtime="20201112 09:43:35.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.703" level="INFO">${RESULT} = [{'time': 0.039906097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4666000000001824e-05, 'source_diff': 5.4666000000001824e-05}, {'time': 0.039982306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:35.694" endtime="20201112 09:43:35.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.733" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:35.705" endtime="20201112 09:43:35.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.744" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.742" endtime="20201112 09:43:35.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.749" level="INFO">VALUE: [5.4666000000001824e-05, 5.409800000000242e-05, 5.4430000000001144e-05, 5.457000000000378e-05, 5.4401999999995065e-05, 5.40270000000051e-05, 5.4208000000000034e-05, 5.418099999999343e-05, 5.463900000000216e-05, 5.441699999999411e-05, 5.4180000000000894e-05, 5.458300000000388e-05, 5.3999999999998494e-05, 5.388900000000141e-05, 5.380600000000346e-05, 5.365300000000073e-05, 5.461100000000302e-05, 5.3749999999998244e-05, 5.401299999999859e-05, 5.390300000000098e-05, 5.3888000000001934e-05, 5.443099999999368e-05, 5.465300000000173e-05, 5.3957999999999784e-05, 5.401299999999859e-05, 5.386099999999533e-05, 5.3957999999999784e-05, 5.462499999999565e-05, 5.376299999999834e-05, 5.4471999999999854e-05, 5.455599999999727e-05, 5.419499999999994e-05, 5.4457999999993345e-05, 5.426400000000525e-05, 5.388899999999447e-05, 5.415300000000123e-05, 5.3999999999998494e-05, 5.415300000000123e-05, 5.3987000000005336e-05, 5.4471999999999854e-05, 5.450000000000593e-05, 5.384699999999576e-05, 5.383300000000313e-05, 5.431899999999712e-05, 5.468100000000087e-05, 5.438899999999497e-05, 5.436100000000277e-05, 5.384699999999576e-05, 5.4541999999997703e-05, 5.412500000000209e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.746" endtime="20201112 09:43:35.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.735" endtime="20201112 09:43:35.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.759" endtime="20201112 09:43:35.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.767" endtime="20201112 09:43:35.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.762" endtime="20201112 09:43:35.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.754" endtime="20201112 09:43:35.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.249" endtime="20201112 09:43:35.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.248" endtime="20201112 09:43:35.793"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.815" endtime="20201112 09:43:35.832"></status>
</kw>
<msg timestamp="20201112 09:43:35.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.812" endtime="20201112 09:43:35.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.835" endtime="20201112 09:43:35.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.842" endtime="20201112 09:43:35.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.805" endtime="20201112 09:43:35.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.799" endtime="20201112 09:43:35.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.865" endtime="20201112 09:43:36.200"></status>
</kw>
<msg timestamp="20201112 09:43:36.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039906583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.861" endtime="20201112 09:43:36.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039906583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039961375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.209" endtime="20201112 09:43:36.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.228" endtime="20201112 09:43:36.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.854" endtime="20201112 09:43:36.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.850" endtime="20201112 09:43:36.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.247" level="INFO">${RESULT} = [{'time': 0.039961375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4791999999997953e-05, 'source_diff': 5.4791999999997953e-05}, {'time': 0.040036528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:36.238" endtime="20201112 09:43:36.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.277" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:36.249" endtime="20201112 09:43:36.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.288" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.285" endtime="20201112 09:43:36.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.293" level="INFO">VALUE: [5.4791999999997953e-05, 5.5263999999999314e-05, 5.488899999999547e-05, 5.534699999999726e-05, 5.4735999999999674e-05, 5.495900000000026e-05, 5.512499999999615e-05, 5.5416000000002574e-05, 5.5499999999999994e-05, 5.477800000000532e-05, 5.5430000000002144e-05, 5.5458000000001284e-05, 5.4999999999999494e-05, 5.540300000000248e-05, 5.53749999999964e-05, 5.56670000000023e-05, 5.513900000000266e-05, 5.540299999999554e-05, 5.484699999999676e-05, 5.53749999999964e-05, 5.530600000000496e-05, 5.5236000000000174e-05, 5.5708000000001534e-05, 5.4930000000001644e-05, 5.536099999999683e-05, 5.5263999999999314e-05, 5.5179999999994955e-05, 5.4985999999999924e-05, 5.4929999999994705e-05, 5.4943999999994275e-05, 5.559699999999751e-05, 5.5472000000000854e-05, 5.4708000000000534e-05, 5.551300000000009e-05, 5.4694000000000964e-05, 5.475000000000618e-05, 5.5472000000000854e-05, 5.512499999999615e-05, 5.5152000000002754e-05, 5.513900000000266e-05, 5.487500000000284e-05, 5.5722000000001104e-05, 5.506899999999787e-05, 5.491700000000155e-05, 5.4735999999999674e-05, 5.5263999999999314e-05, 5.511099999999658e-05, 5.51670000000018e-05, 5.558299999999794e-05, 5.558399999999741e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.290" endtime="20201112 09:43:36.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.279" endtime="20201112 09:43:36.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.302" endtime="20201112 09:43:36.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.311" endtime="20201112 09:43:36.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.306" endtime="20201112 09:43:36.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.298" endtime="20201112 09:43:36.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.795" endtime="20201112 09:43:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.793" endtime="20201112 09:43:36.336"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.359" endtime="20201112 09:43:36.376"></status>
</kw>
<msg timestamp="20201112 09:43:36.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.355" endtime="20201112 09:43:36.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.379" endtime="20201112 09:43:36.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.385" endtime="20201112 09:43:36.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.348" endtime="20201112 09:43:36.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.343" endtime="20201112 09:43:36.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.409" endtime="20201112 09:43:36.744"></status>
</kw>
<msg timestamp="20201112 09:43:36.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039837361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:36.405" endtime="20201112 09:43:36.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039837361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:36.754" endtime="20201112 09:43:36.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.773" endtime="20201112 09:43:36.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.398" endtime="20201112 09:43:36.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.393" endtime="20201112 09:43:36.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.792" level="INFO">${RESULT} = [{'time': 0.039837361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611100000000452e-05, 'source_diff': 5.611100000000452e-05}, {'time': 0.039911542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.783" endtime="20201112 09:43:36.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.821" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:36.794" endtime="20201112 09:43:36.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.832" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.830" endtime="20201112 09:43:36.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.838" level="INFO">VALUE: [5.611100000000452e-05, 5.6000000000000494e-05, 5.6694000000002964e-05, 5.6277999999999884e-05, 5.6000000000000494e-05, 5.5777999999999384e-05, 5.580499999999905e-05, 5.6305999999999023e-05, 5.618100000000237e-05, 5.586099999999733e-05, 5.588899999999647e-05, 5.588900000000341e-05, 5.661100000000502e-05, 5.634699999999826e-05, 5.6458000000002284e-05, 5.6722000000002104e-05, 5.640299999999654e-05, 5.643099999999568e-05, 5.6722000000002104e-05, 5.6319999999998593e-05, 5.6485999999994485e-05, 5.5902000000003504e-05, 5.6541999999999704e-05, 5.581899999999862e-05, 5.6277999999999884e-05, 5.6722000000002104e-05, 5.6569999999998843e-05, 5.672300000000158e-05, 5.659799999999798e-05, 5.659699999999851e-05, 5.591700000000255e-05, 5.5958000000001784e-05, 5.6165999999996385e-05, 5.638900000000391e-05, 5.609800000000442e-05, 5.6528000000000134e-05, 5.58749999999969e-05, 5.634699999999826e-05, 5.652700000000066e-05, 5.6194999999995e-05, 5.663900000000416e-05, 5.65549999999998e-05, 5.672300000000158e-05, 5.6151999999996816e-05, 5.641700000000305e-05, 5.638900000000391e-05, 5.63749999999974e-05, 5.6014000000000064e-05, 5.595900000000126e-05, 5.638899999999697e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.835" endtime="20201112 09:43:36.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.823" endtime="20201112 09:43:36.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.847" endtime="20201112 09:43:36.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.855" endtime="20201112 09:43:36.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.851" endtime="20201112 09:43:36.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.843" endtime="20201112 09:43:36.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.339" endtime="20201112 09:43:36.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.337" endtime="20201112 09:43:36.881"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.903" endtime="20201112 09:43:36.920"></status>
</kw>
<msg timestamp="20201112 09:43:36.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.900" endtime="20201112 09:43:36.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.924" endtime="20201112 09:43:36.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.930" endtime="20201112 09:43:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.893" endtime="20201112 09:43:36.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.887" endtime="20201112 09:43:36.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.953" endtime="20201112 09:43:37.288"></status>
</kw>
<msg timestamp="20201112 09:43:37.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.950" endtime="20201112 09:43:37.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039658986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.297" endtime="20201112 09:43:37.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.316" endtime="20201112 09:43:37.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.943" endtime="20201112 09:43:37.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.938" endtime="20201112 09:43:37.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.335" level="INFO">${RESULT} = [{'time': 0.039716333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.734699999999926e-05, 'source_diff': 5.734699999999926e-05}, {'time': 0.039793486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.326" endtime="20201112 09:43:37.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.365" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:37.337" endtime="20201112 09:43:37.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.376" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.373" endtime="20201112 09:43:37.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.381" level="INFO">VALUE: [5.734699999999926e-05, 5.737500000000534e-05, 5.6887999999997996e-05, 5.733299999999969e-05, 5.6986000000001924e-05, 5.6791999999999954e-05, 5.6805999999999524e-05, 5.7528000000001134e-05, 5.706899999999987e-05, 5.740299999999754e-05, 5.702700000000116e-05, 5.705499999999336e-05, 5.763899999999822e-05, 5.680500000000005e-05, 5.73749999999984e-05, 5.754100000000123e-05, 5.7472000000002854e-05, 5.695899999999532e-05, 5.718100000000337e-05, 5.709699999999901e-05, 5.758299999999994e-05, 5.7707999999996595e-05, 5.6819999999999093e-05, 5.7764000000001814e-05, 5.761099999999908e-05, 5.7014000000001064e-05, 5.7569999999999844e-05, 5.7679999999997456e-05, 5.738900000000491e-05, 5.679100000000048e-05, 5.7069999999999343e-05, 5.756900000000037e-05, 5.6819999999999093e-05, 5.693099999999618e-05, 5.734699999999926e-05, 5.745900000000276e-05, 5.7013999999994125e-05, 5.6986000000001924e-05, 5.766699999999736e-05, 5.679100000000048e-05, 5.7236000000002174e-05, 5.676300000000134e-05, 5.7471999999995915e-05, 5.6972000000002354e-05, 5.7415999999997636e-05, 5.691700000000355e-05, 5.713900000000466e-05, 5.7388000000005435e-05, 5.7193999999996525e-05, 5.743099999999668e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.378" endtime="20201112 09:43:37.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.367" endtime="20201112 09:43:37.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.391" endtime="20201112 09:43:37.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.399" endtime="20201112 09:43:37.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.394" endtime="20201112 09:43:37.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.386" endtime="20201112 09:43:37.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.883" endtime="20201112 09:43:37.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.882" endtime="20201112 09:43:37.425"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.447" endtime="20201112 09:43:37.464"></status>
</kw>
<msg timestamp="20201112 09:43:37.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.444" endtime="20201112 09:43:37.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.468" endtime="20201112 09:43:37.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.474" endtime="20201112 09:43:37.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.437" endtime="20201112 09:43:37.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.431" endtime="20201112 09:43:37.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.497" endtime="20201112 09:43:37.831"></status>
</kw>
<msg timestamp="20201112 09:43:37.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.494" endtime="20201112 09:43:37.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.840" endtime="20201112 09:43:37.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.859" endtime="20201112 09:43:37.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.487" endtime="20201112 09:43:37.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.482" endtime="20201112 09:43:37.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.880" level="INFO">${RESULT} = [{'time': 0.039942819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8637999999999746e-05, 'source_diff': 5.8637999999999746e-05}, {'time': 0.040021028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:37.871" endtime="20201112 09:43:37.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.910" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:37.882" endtime="20201112 09:43:37.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.921" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.918" endtime="20201112 09:43:37.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.926" level="INFO">VALUE: [5.8637999999999746e-05, 5.7986000000002924e-05, 5.78749999999989e-05, 5.8070000000000344e-05, 5.8665999999998886e-05, 5.843099999999768e-05, 5.8458000000004284e-05, 5.7820000000000094e-05, 5.806900000000087e-05, 5.776300000000234e-05, 5.8278000000001884e-05, 5.802700000000216e-05, 5.784799999999923e-05, 5.8556000000001274e-05, 5.854100000000223e-05, 5.7957999999996845e-05, 5.8472000000003854e-05, 5.7806000000000524e-05, 5.812499999999915e-05, 5.8097999999999483e-05, 5.8513999999995625e-05, 5.7820000000000094e-05, 5.783300000000019e-05, 5.7750000000002244e-05, 5.863899999999922e-05, 5.7750000000002244e-05, 5.8721999999997165e-05, 5.834700000000026e-05, 5.781900000000062e-05, 5.8306000000001024e-05, 5.862499999999965e-05, 5.8486000000003424e-05, 5.812500000000609e-05, 5.8013999999995125e-05, 5.866699999999836e-05, 5.868099999999793e-05, 5.8166000000005325e-05, 5.858300000000094e-05, 5.8000000000002494e-05, 5.790299999999804e-05, 5.7915999999998136e-05, 5.819500000000394e-05, 5.780500000000105e-05, 5.83749999999994e-05, 5.858300000000094e-05, 5.841699999999811e-05, 5.794499999999675e-05, 5.777700000000191e-05, 5.866699999999836e-05, 5.830500000000155e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.923" endtime="20201112 09:43:37.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.912" endtime="20201112 09:43:37.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.935" endtime="20201112 09:43:37.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.944" endtime="20201112 09:43:37.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.939" endtime="20201112 09:43:37.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.931" endtime="20201112 09:43:37.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.427" endtime="20201112 09:43:37.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.425" endtime="20201112 09:43:37.969"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.992" endtime="20201112 09:43:38.009"></status>
</kw>
<msg timestamp="20201112 09:43:38.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.988" endtime="20201112 09:43:38.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.012" endtime="20201112 09:43:38.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.019" endtime="20201112 09:43:38.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.981" endtime="20201112 09:43:38.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.976" endtime="20201112 09:43:38.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.041" endtime="20201112 09:43:38.376"></status>
</kw>
<msg timestamp="20201112 09:43:38.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039828014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.038" endtime="20201112 09:43:38.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039828014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.385" endtime="20201112 09:43:38.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.404" endtime="20201112 09:43:38.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.031" endtime="20201112 09:43:38.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.026" endtime="20201112 09:43:38.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.423" level="INFO">${RESULT} = [{'time': 0.039887361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.934700000000126e-05, 'source_diff': 5.934700000000126e-05}, {'time': 0.039967556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.414" endtime="20201112 09:43:38.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.453" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:38.425" endtime="20201112 09:43:38.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.464" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.462" endtime="20201112 09:43:38.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.469" level="INFO">VALUE: [5.934700000000126e-05, 5.913899999999972e-05, 5.922300000000408e-05, 5.9471999999997915e-05, 5.891699999999861e-05, 5.8763999999995875e-05, 5.908300000000144e-05, 5.8971999999997415e-05, 5.8902000000006505e-05, 5.970899999999807e-05, 5.9250000000003744e-05, 5.93750000000004e-05, 5.9527999999996195e-05, 5.9264000000003314e-05, 5.945900000000476e-05, 5.9514000000003564e-05, 5.8915999999999136e-05, 5.895899999999732e-05, 5.9264000000003314e-05, 5.9193999999998526e-05, 5.9000000000003494e-05, 5.9736000000004674e-05, 5.883300000000119e-05, 5.9112000000000053e-05, 5.9652000000000316e-05, 5.909700000000101e-05, 5.938899999999997e-05, 5.883299999999425e-05, 5.90829999999945e-05, 5.9235999999997235e-05, 5.929100000000298e-05, 5.9264000000003314e-05, 5.8806000000001524e-05, 5.879100000000248e-05, 5.9471999999997915e-05, 5.8749999999996305e-05, 5.933300000000169e-05, 5.941699999999911e-05, 5.9527999999996195e-05, 5.893099999999818e-05, 5.93750000000004e-05, 5.956900000000237e-05, 5.8901999999999566e-05, 5.911100000000058e-05, 5.944500000000519e-05, 5.90829999999945e-05, 5.9471999999997915e-05, 5.961100000000108e-05, 5.8901999999999566e-05, 5.9457999999998346e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.466" endtime="20201112 09:43:38.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.455" endtime="20201112 09:43:38.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.479" endtime="20201112 09:43:38.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.487" endtime="20201112 09:43:38.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.483" endtime="20201112 09:43:38.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.474" endtime="20201112 09:43:38.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.971" endtime="20201112 09:43:38.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.970" endtime="20201112 09:43:38.513"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.535" endtime="20201112 09:43:38.552"></status>
</kw>
<msg timestamp="20201112 09:43:38.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.532" endtime="20201112 09:43:38.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.556" endtime="20201112 09:43:38.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.562" endtime="20201112 09:43:38.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.525" endtime="20201112 09:43:38.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.519" endtime="20201112 09:43:38.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.585" endtime="20201112 09:43:38.919"></status>
</kw>
<msg timestamp="20201112 09:43:38.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039888028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.582" endtime="20201112 09:43:38.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039888028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.928" endtime="20201112 09:43:38.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.947" endtime="20201112 09:43:38.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.575" endtime="20201112 09:43:38.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.570" endtime="20201112 09:43:38.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.966" level="INFO">${RESULT} = [{'time': 0.039888028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0194999999999e-05, 'source_diff': 6.0194999999999e-05}, {'time': 0.039971222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:43:38.957" endtime="20201112 09:43:38.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.996" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:38.968" endtime="20201112 09:43:38.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.007" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.005" endtime="20201112 09:43:39.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.012" level="INFO">VALUE: [6.0194999999999e-05, 6.034700000000226e-05, 5.984700000000176e-05, 6.045899999999882e-05, 6.009699999999507e-05, 5.994499999999875e-05, 6.012500000000115e-05, 6.0278000000003884e-05, 5.9749999999997305e-05, 6.0499999999998055e-05, 6.0055999999995835e-05, 5.9763999999996875e-05, 6.0028000000003634e-05, 6.006900000000287e-05, 6.0485999999998485e-05, 6.011100000000158e-05, 5.986099999999439e-05, 5.991699999999961e-05, 6.016699999999986e-05, 5.9820000000002094e-05, 6.0513999999997625e-05, 6.0735999999998735e-05, 6.0277999999996945e-05, 6.059700000000251e-05, 5.9791999999996015e-05, 6.05550000000038e-05, 6.040300000000054e-05, 6.061099999999514e-05, 6.063900000000122e-05, 6.0471999999998916e-05, 6.0348000000001734e-05, 6.062500000000165e-05, 6.0277999999996945e-05, 6.0485999999998485e-05, 5.9735999999997735e-05, 5.993100000000612e-05, 6.037499999999446e-05, 6.0056000000002774e-05, 6.036100000000183e-05, 6.040300000000054e-05, 6.0471999999998916e-05, 5.9749999999997305e-05, 6.0652000000001316e-05, 6.0583999999995475e-05, 6.0222000000005604e-05, 6.06949999999995e-05, 5.984700000000176e-05, 6.070899999999907e-05, 6.062500000000165e-05, 6.0471999999998916e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.009" endtime="20201112 09:43:39.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.998" endtime="20201112 09:43:39.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.022" endtime="20201112 09:43:39.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.030" endtime="20201112 09:43:39.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.026" endtime="20201112 09:43:39.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.017" endtime="20201112 09:43:39.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.515" endtime="20201112 09:43:39.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.514" endtime="20201112 09:43:39.056"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.078" endtime="20201112 09:43:39.096"></status>
</kw>
<msg timestamp="20201112 09:43:39.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.075" endtime="20201112 09:43:39.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.099" endtime="20201112 09:43:39.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.106" endtime="20201112 09:43:39.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.068" endtime="20201112 09:43:39.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.062" endtime="20201112 09:43:39.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.130" endtime="20201112 09:43:39.465"></status>
</kw>
<msg timestamp="20201112 09:43:39.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.127" endtime="20201112 09:43:39.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.474" endtime="20201112 09:43:39.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.493" endtime="20201112 09:43:39.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.119" endtime="20201112 09:43:39.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.114" endtime="20201112 09:43:39.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.512" level="INFO">${RESULT} = [{'time': 0.039979208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.116600000000139e-05, 'source_diff': 6.116600000000139e-05}, {'time': 0.040063431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.503" endtime="20201112 09:43:39.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:39.514" endtime="20201112 09:43:39.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.552" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.550" endtime="20201112 09:43:39.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.557" level="INFO">VALUE: [6.116600000000139e-05, 6.149999999999906e-05, 6.112500000000215e-05, 6.0749999999998305e-05, 6.168100000000093e-05, 6.147299999999939e-05, 6.10829999999965e-05, 6.081900000000362e-05, 6.155599999999734e-05, 6.0792000000003954e-05, 6.17080000000006e-05, 6.141700000000111e-05, 6.081899999999668e-05, 6.115299999999435e-05, 6.0764000000004814e-05, 6.0749999999998305e-05, 6.173699999999921e-05, 6.090300000000104e-05, 6.169400000000103e-05, 6.112499999999521e-05, 6.117999999999402e-05, 6.137499999999546e-05, 6.154199999999777e-05, 6.168100000000093e-05, 6.163900000000222e-05, 6.131899999999718e-05, 6.13750000000024e-05, 6.166700000000136e-05, 6.113900000000172e-05, 6.105499999999736e-05, 6.116700000000086e-05, 6.0763999999997875e-05, 6.129199999999752e-05, 6.119400000000053e-05, 6.107000000000334e-05, 6.161099999999614e-05, 6.0819999999996155e-05, 6.154199999999777e-05, 6.079100000000448e-05, 6.088900000000147e-05, 6.109699999999607e-05, 6.149999999999906e-05, 6.118100000000043e-05, 6.0971999999999416e-05, 6.155600000000427e-05, 6.118100000000043e-05, 6.12499999999988e-05, 6.162499999999571e-05, 6.086100000000233e-05, 6.090300000000104e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.554" endtime="20201112 09:43:39.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.543" endtime="20201112 09:43:39.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.572" endtime="20201112 09:43:39.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.580" endtime="20201112 09:43:39.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.576" endtime="20201112 09:43:39.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.567" endtime="20201112 09:43:39.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.058" endtime="20201112 09:43:39.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.057" endtime="20201112 09:43:39.606"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.630" endtime="20201112 09:43:39.650"></status>
</kw>
<msg timestamp="20201112 09:43:39.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.626" endtime="20201112 09:43:39.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.653" endtime="20201112 09:43:39.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.659" endtime="20201112 09:43:39.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.619" endtime="20201112 09:43:39.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.613" endtime="20201112 09:43:39.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.683" endtime="20201112 09:43:40.034"></status>
</kw>
<msg timestamp="20201112 09:43:40.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041263792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:39.680" endtime="20201112 09:43:40.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041263792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:40.044" endtime="20201112 09:43:40.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.063" endtime="20201112 09:43:40.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.672" endtime="20201112 09:43:40.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.668" endtime="20201112 09:43:40.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.084" level="INFO">${RESULT} = [{'time': 0.041326, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.22080000000011e-05, 'source_diff': 6.22080000000011e-05}, {'time': 0.041406167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6....</msg>
<status status="PASS" starttime="20201112 09:43:40.075" endtime="20201112 09:43:40.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.194" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:40.086" endtime="20201112 09:43:40.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.205" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.203" endtime="20201112 09:43:40.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.211" level="INFO">VALUE: [6.22080000000011e-05, 6.229199999999852e-05, 6.229199999999852e-05, 6.25699999999979e-05, 6.215300000000229e-05, 6.215200000000282e-05, 6.211099999999664e-05, 6.257000000000484e-05, 6.233299999999775e-05, 6.236099999999689e-05, 6.262499999999671e-05, 6.263899999999628e-05, 6.198599999999999e-05, 6.194400000000128e-05, 6.2582999999998e-05, 6.23750000000034e-05, 6.263899999999628e-05, 6.193100000000118e-05, 6.180500000000505e-05, 6.177799999999845e-05, 6.23200000000046e-05, 6.231900000000512e-05, 6.2582999999998e-05, 6.227799999999895e-05, 6.176399999999888e-05, 6.205600000000477e-05, 6.218100000000143e-05, 6.259699999999757e-05, 6.222200000000067e-05, 6.259699999999757e-05, 6.172200000000017e-05, 6.186099999999639e-05, 6.181999999999716e-05, 6.19159999999952e-05, 6.255499999999886e-05, 6.230599999999809e-05, 6.234699999999732e-05, 6.188900000000247e-05, 6.252699999999972e-05, 6.198599999999999e-05, 6.250000000000006e-05, 6.263899999999628e-05, 6.187499999999596e-05, 6.231999999999766e-05, 6.273600000000074e-05, 6.197299999999989e-05, 6.266600000000289e-05, 6.201399999999913e-05, 6.201399999999913e-05, 6.272199999999423e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.207" endtime="20201112 09:43:40.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.196" endtime="20201112 09:43:40.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.220" endtime="20201112 09:43:40.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.229" endtime="20201112 09:43:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.224" endtime="20201112 09:43:40.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.216" endtime="20201112 09:43:40.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.609" endtime="20201112 09:43:40.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.607" endtime="20201112 09:43:40.255"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.280" endtime="20201112 09:43:40.300"></status>
</kw>
<msg timestamp="20201112 09:43:40.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.275" endtime="20201112 09:43:40.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.303" endtime="20201112 09:43:40.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.310" endtime="20201112 09:43:40.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.268" endtime="20201112 09:43:40.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.262" endtime="20201112 09:43:40.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.333" endtime="20201112 09:43:40.680"></status>
</kw>
<msg timestamp="20201112 09:43:40.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042342819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.330" endtime="20201112 09:43:40.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042342819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.690" endtime="20201112 09:43:40.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.708" endtime="20201112 09:43:40.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.323" endtime="20201112 09:43:40.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.318" endtime="20201112 09:43:40.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.726" level="INFO">${RESULT} = [{'time': 0.042406514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.36950000000025e-05, 'source_diff': 6.36950000000025e-05}, {'time': 0.042488722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:40.717" endtime="20201112 09:43:40.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.755" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:40.728" endtime="20201112 09:43:40.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.766" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.764" endtime="20201112 09:43:40.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.772" level="INFO">VALUE: [6.36950000000025e-05, 6.336099999999789e-05, 6.290199999999663e-05, 6.315299999999635e-05, 6.316700000000286e-05, 6.297200000000142e-05, 6.304099999999979e-05, 6.36950000000025e-05, 6.338900000000397e-05, 6.363899999999728e-05, 6.368099999999599e-05, 6.284700000000476e-05, 6.283400000000466e-05, 6.308399999999798e-05, 6.365199999999738e-05, 6.291700000000261e-05, 6.333299999999875e-05, 6.309699999999807e-05, 6.361100000000508e-05, 6.322200000000167e-05, 6.286099999999739e-05, 6.351400000000063e-05, 6.298600000000099e-05, 6.345800000000235e-05, 6.29300000000027e-05, 6.359800000000498e-05, 6.315299999999635e-05, 6.363899999999728e-05, 6.344500000000225e-05, 6.334699999999832e-05, 6.34029999999966e-05, 6.329199999999952e-05, 6.327799999999995e-05, 6.362499999999771e-05, 6.355599999999934e-05, 6.334699999999832e-05, 6.290300000000304e-05, 6.368100000000293e-05, 6.301300000000065e-05, 6.372199999999523e-05, 6.277799999999945e-05, 6.344399999999584e-05, 6.30279999999997e-05, 6.300000000000056e-05, 6.361100000000508e-05, 6.317999999999602e-05, 6.280599999999859e-05, 6.338899999999703e-05, 6.322200000000167e-05, 6.28750000000039e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.769" endtime="20201112 09:43:40.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.757" endtime="20201112 09:43:40.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.781" endtime="20201112 09:43:40.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.789" endtime="20201112 09:43:40.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.785" endtime="20201112 09:43:40.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.777" endtime="20201112 09:43:40.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.257" endtime="20201112 09:43:40.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.256" endtime="20201112 09:43:40.815"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.838" endtime="20201112 09:43:40.856"></status>
</kw>
<msg timestamp="20201112 09:43:40.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.834" endtime="20201112 09:43:40.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.860" endtime="20201112 09:43:40.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.866" endtime="20201112 09:43:40.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.827" endtime="20201112 09:43:40.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.822" endtime="20201112 09:43:40.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.889" endtime="20201112 09:43:41.224"></status>
</kw>
<msg timestamp="20201112 09:43:41.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041236806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.886" endtime="20201112 09:43:41.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041236806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.233" endtime="20201112 09:43:41.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.252" endtime="20201112 09:43:41.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.879" endtime="20201112 09:43:41.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.874" endtime="20201112 09:43:41.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.270" level="INFO">${RESULT} = [{'time': 0.041236806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444500000000325e-05, 'source_diff': 6.444500000000325e-05}, {'time': 0.041318972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.261" endtime="20201112 09:43:41.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.300" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:41.272" endtime="20201112 09:43:41.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.310" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.308" endtime="20201112 09:43:41.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.316" level="INFO">VALUE: [6.444500000000325e-05, 6.39300000000037e-05, 6.450000000000206e-05, 6.415300000000429e-05, 6.427800000000095e-05, 6.459699999999957e-05, 6.466699999999742e-05, 6.39300000000037e-05, 6.447199999999598e-05, 6.455500000000086e-05, 6.397199999999548e-05, 6.437499999999846e-05, 6.429199999999358e-05, 6.394400000000328e-05, 6.437499999999846e-05, 6.405599999999984e-05, 6.449999999999512e-05, 6.412499999999821e-05, 6.4583e-05, 6.37500000000013e-05, 6.419399999999659e-05, 6.461099999999914e-05, 6.474999999999537e-05, 6.388899999999753e-05, 6.417999999999702e-05, 6.37500000000013e-05, 6.463899999999828e-05, 6.447200000000292e-05, 6.381899999999968e-05, 6.394500000000275e-05, 6.42359999999953e-05, 6.468100000000393e-05, 6.404100000000079e-05, 6.430600000000009e-05, 6.436100000000583e-05, 6.437499999999846e-05, 6.423600000000224e-05, 6.377800000000045e-05, 6.44159999999977e-05, 6.450000000000206e-05, 6.379100000000054e-05, 6.400000000000156e-05, 6.376400000000088e-05, 6.387499999999796e-05, 6.391600000000414e-05, 6.412499999999821e-05, 6.427800000000095e-05, 6.383400000000566e-05, 6.369400000000303e-05, 6.463899999999828e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.313" endtime="20201112 09:43:41.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.301" endtime="20201112 09:43:41.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.325" endtime="20201112 09:43:41.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.333" endtime="20201112 09:43:41.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.329" endtime="20201112 09:43:41.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.321" endtime="20201112 09:43:41.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.817" endtime="20201112 09:43:41.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.816" endtime="20201112 09:43:41.359"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.381" endtime="20201112 09:43:41.399"></status>
</kw>
<msg timestamp="20201112 09:43:41.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.378" endtime="20201112 09:43:41.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.402" endtime="20201112 09:43:41.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.408" endtime="20201112 09:43:41.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.371" endtime="20201112 09:43:41.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.365" endtime="20201112 09:43:41.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.433" endtime="20201112 09:43:41.768"></status>
</kw>
<msg timestamp="20201112 09:43:41.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.430" endtime="20201112 09:43:41.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.777" endtime="20201112 09:43:41.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.796" endtime="20201112 09:43:41.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.421" endtime="20201112 09:43:41.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.416" endtime="20201112 09:43:41.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.813" level="INFO">${RESULT} = [{'time': 0.039761056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.501400000000213e-05, 'source_diff': 6.501400000000213e-05}, {'time': 0.039845194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.804" endtime="20201112 09:43:41.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.843" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:41.815" endtime="20201112 09:43:41.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.854" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.852" endtime="20201112 09:43:41.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.859" level="INFO">VALUE: [6.501400000000213e-05, 6.494399999999734e-05, 6.477800000000145e-05, 6.509700000000007e-05, 6.497300000000289e-05, 6.516599999999845e-05, 6.54029999999986e-05, 6.527800000000195e-05, 6.548599999999655e-05, 6.566599999999895e-05, 6.550000000000306e-05, 6.559700000000057e-05, 6.534700000000032e-05, 6.522199999999673e-05, 6.47359999999958e-05, 6.561100000000014e-05, 6.52500000000028e-05, 6.5583000000001e-05, 6.515300000000529e-05, 6.52500000000028e-05, 6.480600000000059e-05, 6.563899999999928e-05, 6.533300000000075e-05, 6.513900000000572e-05, 6.52229999999962e-05, 6.552799999999526e-05, 6.480600000000059e-05, 6.47500000000023e-05, 6.518099999999749e-05, 6.47779999999945e-05, 6.561199999999962e-05, 6.497199999999648e-05, 6.536099999999989e-05, 6.511099999999964e-05, 6.50830000000005e-05, 6.547199999999698e-05, 6.473600000000274e-05, 6.526399999999544e-05, 6.527800000000195e-05, 6.52500000000028e-05, 6.547199999999698e-05, 6.497199999999648e-05, 6.562499999999971e-05, 6.497200000000342e-05, 6.479200000000102e-05, 6.563899999999928e-05, 6.561100000000014e-05, 6.524999999999587e-05, 6.480600000000059e-05, 6.55559999999944e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.856" endtime="20201112 09:43:41.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.845" endtime="20201112 09:43:41.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.869" endtime="20201112 09:43:41.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.877" endtime="20201112 09:43:41.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.873" endtime="20201112 09:43:41.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.864" endtime="20201112 09:43:41.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.361" endtime="20201112 09:43:41.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.360" endtime="20201112 09:43:41.903"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.926" endtime="20201112 09:43:41.943"></status>
</kw>
<msg timestamp="20201112 09:43:41.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.922" endtime="20201112 09:43:41.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.947" endtime="20201112 09:43:41.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.953" endtime="20201112 09:43:41.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.915" endtime="20201112 09:43:41.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.910" endtime="20201112 09:43:41.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.976" endtime="20201112 09:43:42.315"></status>
</kw>
<msg timestamp="20201112 09:43:42.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:41.973" endtime="20201112 09:43:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:42.325" endtime="20201112 09:43:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.344" endtime="20201112 09:43:42.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.966" endtime="20201112 09:43:42.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.961" endtime="20201112 09:43:42.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.361" level="INFO">${RESULT} = [{'time': 0.0400955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.620799999999816e-05, 'source_diff': 6.620799999999816e-05}, {'time': 0.040182708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:42.352" endtime="20201112 09:43:42.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.392" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:42.363" endtime="20201112 09:43:42.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.403" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.401" endtime="20201112 09:43:42.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.409" level="INFO">VALUE: [6.620799999999816e-05, 6.663900000000028e-05, 6.595799999999791e-05, 6.618100000000543e-05, 6.642999999999927e-05, 6.648700000000396e-05, 6.650000000000406e-05, 6.66950000000055e-05, 6.601399999999619e-05, 6.580599999999465e-05, 6.644399999999884e-05, 6.667999999999952e-05, 6.659700000000157e-05, 6.580600000000159e-05, 6.630599999999515e-05, 6.577800000000245e-05, 6.605500000000236e-05, 6.629200000000252e-05, 6.599999999999662e-05, 6.620799999999816e-05, 6.601399999999619e-05, 6.587499999999996e-05, 6.592999999999877e-05, 6.654200000000277e-05, 6.593099999999824e-05, 6.641699999999917e-05, 6.62500000000038e-05, 6.668100000000593e-05, 6.647199999999798e-05, 6.626399999999644e-05, 6.593100000000518e-05, 6.641699999999917e-05, 6.576400000000288e-05, 6.674999999999737e-05, 6.597199999999748e-05, 6.599999999999662e-05, 6.60830000000015e-05, 6.638900000000003e-05, 6.59029999999991e-05, 6.64159999999997e-05, 6.602799999999576e-05, 6.655500000000286e-05, 6.665299999999985e-05, 6.623699999999677e-05, 6.67080000000056e-05, 6.659700000000157e-05, 6.658299999999506e-05, 6.595799999999791e-05, 6.630500000000261e-05, 6.64159999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.406" endtime="20201112 09:43:42.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.394" endtime="20201112 09:43:42.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.418" endtime="20201112 09:43:42.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.426" endtime="20201112 09:43:42.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.422" endtime="20201112 09:43:42.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.414" endtime="20201112 09:43:42.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.905" endtime="20201112 09:43:42.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.904" endtime="20201112 09:43:42.452"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.475" endtime="20201112 09:43:42.494"></status>
</kw>
<msg timestamp="20201112 09:43:42.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.472" endtime="20201112 09:43:42.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.498" endtime="20201112 09:43:42.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.504" endtime="20201112 09:43:42.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.464" endtime="20201112 09:43:42.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.459" endtime="20201112 09:43:42.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.527" endtime="20201112 09:43:42.873"></status>
</kw>
<msg timestamp="20201112 09:43:42.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.523" endtime="20201112 09:43:42.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.882" endtime="20201112 09:43:42.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.901" endtime="20201112 09:43:42.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.516" endtime="20201112 09:43:42.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.512" endtime="20201112 09:43:42.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.920" level="INFO">${RESULT} = [{'time': 0.040126083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.672199999999823e-05, 'source_diff': 6.672199999999823e-05}, {'time': 0.040216278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.911" endtime="20201112 09:43:42.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.949" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:42.922" endtime="20201112 09:43:42.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.960" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.958" endtime="20201112 09:43:42.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.965" level="INFO">VALUE: [6.672199999999823e-05, 6.769499999999956e-05, 6.772199999999923e-05, 6.761100000000214e-05, 6.706899999999599e-05, 6.770799999999966e-05, 6.724999999999787e-05, 6.709800000000155e-05, 6.708299999999556e-05, 6.74030000000006e-05, 6.72359999999983e-05, 6.747199999999898e-05, 6.680500000000311e-05, 6.730600000000309e-05, 6.72500000000048e-05, 6.756899999999649e-05, 6.768099999999999e-05, 6.708400000000198e-05, 6.747199999999898e-05, 6.770799999999966e-05, 6.734700000000232e-05, 6.695899999999838e-05, 6.709700000000207e-05, 6.727800000000395e-05, 6.748599999999855e-05, 6.679199999999608e-05, 6.766700000000042e-05, 6.686099999999445e-05, 6.682000000000216e-05, 6.759700000000257e-05, 6.748599999999855e-05, 6.718099999999949e-05, 6.758299999999606e-05, 6.677799999999651e-05, 6.688800000000106e-05, 6.766700000000042e-05, 6.713900000000078e-05, 6.761100000000214e-05, 6.686100000000139e-05, 6.743099999999974e-05, 6.76109999999952e-05, 6.719399999999959e-05, 6.701399999999719e-05, 6.754199999999683e-05, 6.726399999999744e-05, 6.730500000000361e-05, 6.692999999999977e-05, 6.776399999999794e-05, 6.708299999999556e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.962" endtime="20201112 09:43:42.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.951" endtime="20201112 09:43:42.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.975" endtime="20201112 09:43:42.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.983" endtime="20201112 09:43:43.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.979" endtime="20201112 09:43:43.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.970" endtime="20201112 09:43:43.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.455" endtime="20201112 09:43:43.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.453" endtime="20201112 09:43:43.009"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.032" endtime="20201112 09:43:43.051"></status>
</kw>
<msg timestamp="20201112 09:43:43.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.028" endtime="20201112 09:43:43.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.054" endtime="20201112 09:43:43.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.061" endtime="20201112 09:43:43.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.021" endtime="20201112 09:43:43.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.015" endtime="20201112 09:43:43.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.084" endtime="20201112 09:43:43.430"></status>
</kw>
<msg timestamp="20201112 09:43:43.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040234042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.080" endtime="20201112 09:43:43.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040234042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.439" endtime="20201112 09:43:43.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.458" endtime="20201112 09:43:43.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.073" endtime="20201112 09:43:43.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.069" endtime="20201112 09:43:43.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.477" level="INFO">${RESULT} = [{'time': 0.040302278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.82359999999993e-05, 'source_diff': 6.82359999999993e-05}, {'time': 0.040391542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:43.468" endtime="20201112 09:43:43.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.506" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:43.479" endtime="20201112 09:43:43.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.517" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.515" endtime="20201112 09:43:43.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.523" level="INFO">VALUE: [6.82359999999993e-05, 6.779200000000402e-05, 6.870800000000066e-05, 6.786099999999545e-05, 6.86109999999962e-05, 6.862499999999577e-05, 6.812499999999527e-05, 6.790200000000163e-05, 6.869400000000109e-05, 6.829199999999758e-05, 6.844500000000031e-05, 6.844500000000031e-05, 6.866700000000142e-05, 6.87909999999986e-05, 6.862499999999577e-05, 6.806999999999647e-05, 6.799999999999862e-05, 6.854199999999783e-05, 6.866600000000195e-05, 6.852799999999826e-05, 6.848599999999955e-05, 6.816700000000092e-05, 6.819400000000059e-05, 6.819400000000059e-05, 6.800000000000556e-05, 6.869400000000109e-05, 6.832000000000366e-05, 6.849999999999912e-05, 6.87359999999998e-05, 6.80559999999969e-05, 6.82359999999993e-05, 6.87359999999998e-05, 6.830499999999767e-05, 6.780600000000359e-05, 6.822199999999973e-05, 6.866600000000195e-05, 6.845899999999988e-05, 6.837500000000246e-05, 6.862500000000271e-05, 6.836100000000289e-05, 6.795899999999938e-05, 6.798599999999905e-05, 6.866699999999448e-05, 6.798599999999905e-05, 6.793100000000024e-05, 6.795899999999938e-05, 6.822199999999973e-05, 6.797199999999948e-05, 6.787499999999502e-05, 6.805600000000384e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.520" endtime="20201112 09:43:43.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.508" endtime="20201112 09:43:43.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.532" endtime="20201112 09:43:43.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.540" endtime="20201112 09:43:43.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.536" endtime="20201112 09:43:43.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.528" endtime="20201112 09:43:43.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.011" endtime="20201112 09:43:43.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.010" endtime="20201112 09:43:43.566"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.589" endtime="20201112 09:43:43.606"></status>
</kw>
<msg timestamp="20201112 09:43:43.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.585" endtime="20201112 09:43:43.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.610" endtime="20201112 09:43:43.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.616" endtime="20201112 09:43:43.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.578" endtime="20201112 09:43:43.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.572" endtime="20201112 09:43:43.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.639" endtime="20201112 09:43:43.973"></status>
</kw>
<msg timestamp="20201112 09:43:43.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.636" endtime="20201112 09:43:43.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.983" endtime="20201112 09:43:44.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.002" endtime="20201112 09:43:44.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.628" endtime="20201112 09:43:44.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.624" endtime="20201112 09:43:44.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.020" level="INFO">${RESULT} = [{'time': 0.040041653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943100000000174e-05, 'source_diff': 6.943100000000174e-05}, {'time': 0.040133889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.011" endtime="20201112 09:43:44.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.050" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:44.023" endtime="20201112 09:43:44.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.061" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.059" endtime="20201112 09:43:44.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.066" level="INFO">VALUE: [6.943100000000174e-05, 6.906999999999747e-05, 6.938899999999609e-05, 6.919400000000159e-05, 6.902699999999928e-05, 6.918100000000149e-05, 6.97230000000007e-05, 6.906900000000493e-05, 6.906900000000493e-05, 6.941700000000217e-05, 6.966600000000295e-05, 6.886099999999645e-05, 6.95559999999984e-05, 6.943100000000174e-05, 6.958399999999754e-05, 6.909699999999713e-05, 6.977700000000003e-05, 6.918100000000149e-05, 6.963900000000328e-05, 6.937500000000346e-05, 6.938900000000303e-05, 6.931999999999772e-05, 6.895800000000091e-05, 6.880600000000459e-05, 6.902799999999876e-05, 6.983299999999831e-05, 6.909699999999713e-05, 6.901399999999919e-05, 6.919500000000106e-05, 6.902799999999876e-05, 6.916599999999551e-05, 6.904199999999833e-05, 6.965300000000285e-05, 6.9583000000005e-05, 6.929199999999858e-05, 6.887499999999602e-05, 6.958299999999806e-05, 6.893100000000124e-05, 6.897200000000048e-05, 6.952799999999926e-05, 6.901400000000613e-05, 6.894500000000081e-05, 6.929199999999858e-05, 6.881999999999722e-05, 6.956899999999849e-05, 6.901400000000613e-05, 6.887499999999602e-05, 6.937500000000346e-05, 6.962500000000371e-05, 6.898600000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.063" endtime="20201112 09:43:44.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.052" endtime="20201112 09:43:44.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.076" endtime="20201112 09:43:44.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.084" endtime="20201112 09:43:44.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.080" endtime="20201112 09:43:44.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.071" endtime="20201112 09:43:44.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.568" endtime="20201112 09:43:44.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.567" endtime="20201112 09:43:44.110"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.132" endtime="20201112 09:43:44.150"></status>
</kw>
<msg timestamp="20201112 09:43:44.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.129" endtime="20201112 09:43:44.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.153" endtime="20201112 09:43:44.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.159" endtime="20201112 09:43:44.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.122" endtime="20201112 09:43:44.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.116" endtime="20201112 09:43:44.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.182" endtime="20201112 09:43:44.518"></status>
</kw>
<msg timestamp="20201112 09:43:44.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039836792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.179" endtime="20201112 09:43:44.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039836792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.527" endtime="20201112 09:43:44.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.546" endtime="20201112 09:43:44.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.172" endtime="20201112 09:43:44.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.167" endtime="20201112 09:43:44.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.565" level="INFO">${RESULT} = [{'time': 0.039836792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068100000000299e-05, 'source_diff': 7.068100000000299e-05}, {'time': 0.039930042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.556" endtime="20201112 09:43:44.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.597" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:44.567" endtime="20201112 09:43:44.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.608" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.606" endtime="20201112 09:43:44.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.613" level="INFO">VALUE: [7.068100000000299e-05, 6.990299999999616e-05, 7.016700000000292e-05, 6.988900000000353e-05, 7.031899999999924e-05, 7.070900000000213e-05, 6.995799999999497e-05, 7.005499999999942e-05, 7.065200000000438e-05, 7.051300000000121e-05, 7.051400000000069e-05, 7.019399999999565e-05, 7.048599999999461e-05, 7.012500000000421e-05, 7.069400000000309e-05, 7.054100000000035e-05, 7.020899999999469e-05, 7.069500000000256e-05, 6.976399999999994e-05, 7.052800000000026e-05, 7.041700000000317e-05, 7.026400000000044e-05, 7.047300000000145e-05, 7.033400000000523e-05, 7.026400000000044e-05, 7.034700000000532e-05, 7.04439999999959e-05, 7.050000000000112e-05, 7.031999999999872e-05, 7.027800000000001e-05, 7.01109999999977e-05, 7.018100000000249e-05, 7.072200000000223e-05, 7.042999999999633e-05, 7.040199999999719e-05, 7.072199999999529e-05, 7.052800000000026e-05, 7.006899999999899e-05, 7.030599999999915e-05, 7.063899999999734e-05, 6.981899999999874e-05, 7.00559999999989e-05, 7.051400000000069e-05, 7.068100000000299e-05, 7.062500000000471e-05, 7.065199999999744e-05, 7.072199999999529e-05, 7.068000000000352e-05, 7.006899999999899e-05, 6.995800000000191e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.610" endtime="20201112 09:43:44.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.599" endtime="20201112 09:43:44.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.636" endtime="20201112 09:43:44.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.644" endtime="20201112 09:43:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.640" endtime="20201112 09:43:44.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.632" endtime="20201112 09:43:44.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.112" endtime="20201112 09:43:44.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.110" endtime="20201112 09:43:44.670"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.692" endtime="20201112 09:43:44.710"></status>
</kw>
<msg timestamp="20201112 09:43:44.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.689" endtime="20201112 09:43:44.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.714" endtime="20201112 09:43:44.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.720" endtime="20201112 09:43:44.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.682" endtime="20201112 09:43:44.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.676" endtime="20201112 09:43:44.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.743" endtime="20201112 09:43:45.076"></status>
</kw>
<msg timestamp="20201112 09:43:45.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039777875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039849333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.740" endtime="20201112 09:43:45.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039777875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039849333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.086" endtime="20201112 09:43:45.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.105" endtime="20201112 09:43:45.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.732" endtime="20201112 09:43:45.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.728" endtime="20201112 09:43:45.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.122" level="INFO">${RESULT} = [{'time': 0.039849333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.145800000000341e-05, 'source_diff': 7.145800000000341e-05}, {'time': 0.039944528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.113" endtime="20201112 09:43:45.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.153" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:45.124" endtime="20201112 09:43:45.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.164" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.162" endtime="20201112 09:43:45.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.169" level="INFO">VALUE: [7.145800000000341e-05, 7.165299999999791e-05, 7.097200000000248e-05, 7.108299999999956e-05, 7.136099999999895e-05, 7.126400000000144e-05, 7.126400000000144e-05, 7.116700000000392e-05, 7.125000000000187e-05, 7.149999999999518e-05, 7.16109999999992e-05, 7.158300000000006e-05, 7.15690000000005e-05, 7.141699999999723e-05, 7.07910000000006e-05, 7.095800000000291e-05, 7.133299999999981e-05, 7.168099999999705e-05, 7.12910000000011e-05, 7.127700000000153e-05, 7.158399999999954e-05, 7.104200000000033e-05, 7.133299999999981e-05, 7.081899999999974e-05, 7.168099999999705e-05, 7.142999999999733e-05, 7.134799999999886e-05, 7.086100000000539e-05, 7.091599999999726e-05, 7.168099999999705e-05, 7.166700000000442e-05, 7.095800000000291e-05, 7.077800000000051e-05, 7.084699999999888e-05, 7.162499999999877e-05, 7.175000000000237e-05, 7.154200000000083e-05, 7.151400000000169e-05, 7.108299999999956e-05, 7.091700000000367e-05, 7.12910000000011e-05, 7.133399999999929e-05, 7.170800000000366e-05, 7.091599999999726e-05, 7.147200000000298e-05, 7.15560000000004e-05, 7.175000000000237e-05, 7.156999999999997e-05, 7.148599999999561e-05, 7.117999999999708e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.166" endtime="20201112 09:43:45.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.155" endtime="20201112 09:43:45.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.178" endtime="20201112 09:43:45.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.187" endtime="20201112 09:43:45.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.182" endtime="20201112 09:43:45.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.174" endtime="20201112 09:43:45.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.672" endtime="20201112 09:43:45.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.671" endtime="20201112 09:43:45.212"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.235" endtime="20201112 09:43:45.253"></status>
</kw>
<msg timestamp="20201112 09:43:45.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.232" endtime="20201112 09:43:45.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.256" endtime="20201112 09:43:45.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.262" endtime="20201112 09:43:45.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.224" endtime="20201112 09:43:45.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.219" endtime="20201112 09:43:45.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.285" endtime="20201112 09:43:45.620"></status>
</kw>
<msg timestamp="20201112 09:43:45.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039734833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039807583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.282" endtime="20201112 09:43:45.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039734833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039807583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.630" endtime="20201112 09:43:45.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.648" endtime="20201112 09:43:45.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.275" endtime="20201112 09:43:45.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.270" endtime="20201112 09:43:45.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.666" level="INFO">${RESULT} = [{'time': 0.039807583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.275000000000337e-05, 'source_diff': 7.275000000000337e-05}, {'time': 0.039897736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.657" endtime="20201112 09:43:45.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.697" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:45.668" endtime="20201112 09:43:45.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.708" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.706" endtime="20201112 09:43:45.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.713" level="INFO">VALUE: [7.275000000000337e-05, 7.215300000000535e-05, 7.25690000000015e-05, 7.188899999999859e-05, 7.245800000000441e-05, 7.236099999999995e-05, 7.192999999999783e-05, 7.277799999999557e-05, 7.202799999999482e-05, 7.200000000000262e-05, 7.200000000000262e-05, 7.237499999999952e-05, 7.184699999999988e-05, 7.234700000000038e-05, 7.220899999999669e-05, 7.207000000000047e-05, 7.237499999999952e-05, 7.181900000000074e-05, 7.205599999999396e-05, 7.202800000000176e-05, 7.269400000000509e-05, 7.213899999999884e-05, 7.190299999999816e-05, 7.238900000000603e-05, 7.22639999999955e-05, 7.22910000000021e-05, 7.238899999999909e-05, 7.195799999999697e-05, 7.26110000000002e-05, 7.224999999999593e-05, 7.25690000000015e-05, 7.229199999999464e-05, 7.208400000000004e-05, 7.241699999999823e-05, 7.272200000000423e-05, 7.273599999999686e-05, 7.2069000000001e-05, 7.177700000000203e-05, 7.255500000000192e-05, 7.202800000000176e-05, 7.212499999999927e-05, 7.195799999999697e-05, 7.222200000000373e-05, 7.188899999999859e-05, 7.216599999999851e-05, 7.234799999999986e-05, 7.252800000000226e-05, 7.252800000000226e-05, 7.198599999999611e-05, 7.244500000000431e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.710" endtime="20201112 09:43:45.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.699" endtime="20201112 09:43:45.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.723" endtime="20201112 09:43:45.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.731" endtime="20201112 09:43:45.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.726" endtime="20201112 09:43:45.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.718" endtime="20201112 09:43:45.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.214" endtime="20201112 09:43:45.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.213" endtime="20201112 09:43:45.757"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.779" endtime="20201112 09:43:45.797"></status>
</kw>
<msg timestamp="20201112 09:43:45.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.776" endtime="20201112 09:43:45.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.800" endtime="20201112 09:43:45.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.806" endtime="20201112 09:43:45.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.769" endtime="20201112 09:43:45.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.763" endtime="20201112 09:43:45.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.830" endtime="20201112 09:43:46.164"></status>
</kw>
<msg timestamp="20201112 09:43:46.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.826" endtime="20201112 09:43:46.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039918819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.174" endtime="20201112 09:43:46.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.193" endtime="20201112 09:43:46.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.819" endtime="20201112 09:43:46.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.814" endtime="20201112 09:43:46.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.210" level="INFO">${RESULT} = [{'time': 0.039991847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.302799999999582e-05, 'source_diff': 7.302799999999582e-05}, {'time': 0.040086069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.201" endtime="20201112 09:43:46.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:46.212" endtime="20201112 09:43:46.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.252" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.250" endtime="20201112 09:43:46.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.258" level="INFO">VALUE: [7.302799999999582e-05, 7.287500000000002e-05, 7.357000000000197e-05, 7.30560000000019e-05, 7.366699999999948e-05, 7.357000000000197e-05, 7.288899999999959e-05, 7.320799999999822e-05, 7.298600000000405e-05, 7.379099999999666e-05, 7.334700000000138e-05, 7.340299999999966e-05, 7.298599999999711e-05, 7.345899999999794e-05, 7.3069000000002e-05, 7.315299999999941e-05, 7.36110000000012e-05, 7.359700000000163e-05, 7.295799999999797e-05, 7.295799999999797e-05, 7.352800000000326e-05, 7.327799999999607e-05, 7.373599999999786e-05, 7.327800000000301e-05, 7.366600000000001e-05, 7.336100000000095e-05, 7.355599999999546e-05, 7.316599999999951e-05, 7.27360000000038e-05, 7.359700000000163e-05, 7.295799999999797e-05, 7.347200000000498e-05, 7.317999999999908e-05, 7.374999999999743e-05, 7.366600000000001e-05, 7.351400000000369e-05, 7.354200000000283e-05, 7.338900000000009e-05, 7.287500000000002e-05, 7.349999999999718e-05, 7.320899999999769e-05, 7.309700000000113e-05, 7.340299999999966e-05, 7.358400000000154e-05, 7.350000000000412e-05, 7.367999999999958e-05, 7.320900000000463e-05, 7.341599999999976e-05, 7.304099999999591e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.255" endtime="20201112 09:43:46.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.243" endtime="20201112 09:43:46.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.267" endtime="20201112 09:43:46.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.275" endtime="20201112 09:43:46.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.271" endtime="20201112 09:43:46.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.262" endtime="20201112 09:43:46.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.759" endtime="20201112 09:43:46.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.758" endtime="20201112 09:43:46.301"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.324" endtime="20201112 09:43:46.342"></status>
</kw>
<msg timestamp="20201112 09:43:46.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.320" endtime="20201112 09:43:46.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.345" endtime="20201112 09:43:46.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.352" endtime="20201112 09:43:46.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.313" endtime="20201112 09:43:46.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.307" endtime="20201112 09:43:46.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.375" endtime="20201112 09:43:46.708"></status>
</kw>
<msg timestamp="20201112 09:43:46.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040407111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.372" endtime="20201112 09:43:46.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040407111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.717" endtime="20201112 09:43:46.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.736" endtime="20201112 09:43:46.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.365" endtime="20201112 09:43:46.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.360" endtime="20201112 09:43:46.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.753" level="INFO">${RESULT} = [{'time': 0.040407111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443000000000033e-05, 'source_diff': 7.443000000000033e-05}, {'time': 0.040503333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.744" endtime="20201112 09:43:46.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.786" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:46.755" endtime="20201112 09:43:46.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.797" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.795" endtime="20201112 09:43:46.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.803" level="INFO">VALUE: [7.443000000000033e-05, 7.431900000000324e-05, 7.451299999999828e-05, 7.441700000000023e-05, 7.415300000000041e-05, 7.386099999999451e-05, 7.466700000000048e-05, 7.454099999999741e-05, 7.469400000000015e-05, 7.466600000000101e-05, 7.416600000000051e-05, 7.423599999999836e-05, 7.412499999999433e-05, 7.406899999999605e-05, 7.412500000000127e-05, 7.441600000000076e-05, 7.401299999999778e-05, 7.438900000000109e-05, 7.399999999999768e-05, 7.467999999999364e-05, 7.373599999999786e-05, 7.381999999999528e-05, 7.432000000000272e-05, 7.418099999999955e-05, 7.415300000000041e-05, 7.404199999999639e-05, 7.416699999999998e-05, 7.394499999999887e-05, 7.401400000000419e-05, 7.461099999999526e-05, 7.466699999999354e-05, 7.383300000000231e-05, 7.398600000000505e-05, 7.397300000000495e-05, 7.401399999999725e-05, 7.436100000000195e-05, 7.418000000000008e-05, 7.415200000000094e-05, 7.390299999999322e-05, 7.381999999999528e-05, 7.422199999999879e-05, 7.412500000000127e-05, 7.474999999999843e-05, 7.422199999999879e-05, 7.397199999999854e-05, 7.433299999999587e-05, 7.418099999999955e-05, 7.44309999999998e-05, 7.391699999999973e-05, 7.454200000000383e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.800" endtime="20201112 09:43:46.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.788" endtime="20201112 09:43:46.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.812" endtime="20201112 09:43:46.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.820" endtime="20201112 09:43:46.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.816" endtime="20201112 09:43:46.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.808" endtime="20201112 09:43:46.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.303" endtime="20201112 09:43:46.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.302" endtime="20201112 09:43:46.846"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.869" endtime="20201112 09:43:46.887"></status>
</kw>
<msg timestamp="20201112 09:43:46.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.865" endtime="20201112 09:43:46.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.890" endtime="20201112 09:43:46.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.896" endtime="20201112 09:43:46.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.858" endtime="20201112 09:43:46.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.852" endtime="20201112 09:43:46.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.919" endtime="20201112 09:43:47.252"></status>
</kw>
<msg timestamp="20201112 09:43:47.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040015028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.916" endtime="20201112 09:43:47.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040015028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.262" endtime="20201112 09:43:47.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.281" endtime="20201112 09:43:47.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.909" endtime="20201112 09:43:47.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.904" endtime="20201112 09:43:47.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.298" level="INFO">${RESULT} = [{'time': 0.040090139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.511099999999576e-05, 'source_diff': 7.511099999999576e-05}, {'time': 0.040186361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.289" endtime="20201112 09:43:47.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.328" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:47.300" endtime="20201112 09:43:47.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.341" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.337" endtime="20201112 09:43:47.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.346" level="INFO">VALUE: [7.511099999999576e-05, 7.523599999999936e-05, 7.544500000000037e-05, 7.524999999999893e-05, 7.565300000000191e-05, 7.550000000000612e-05, 7.566700000000148e-05, 7.555599999999746e-05, 7.570800000000072e-05, 7.551399999999875e-05, 7.527799999999807e-05, 7.568099999999411e-05, 7.480599999999671e-05, 7.531999999999678e-05, 7.49440000000004e-05, 7.499999999999868e-05, 7.568000000000158e-05, 7.487500000000202e-05, 7.526299999999903e-05, 7.490300000000116e-05, 7.554199999999789e-05, 7.483400000000279e-05, 7.570899999999325e-05, 7.51389999999949e-05, 7.495799999999997e-05, 7.505500000000442e-05, 7.570900000000019e-05, 7.516700000000098e-05, 7.491700000000073e-05, 7.551399999999875e-05, 7.474999999999843e-05, 7.513900000000184e-05, 7.512500000000227e-05, 7.480499999999723e-05, 7.529200000000458e-05, 7.563799999999593e-05, 7.558300000000406e-05, 7.53890000000021e-05, 7.515300000000141e-05, 7.49310000000003e-05, 7.52769999999986e-05, 7.563800000000287e-05, 7.505500000000442e-05, 7.58189999999978e-05, 7.524999999999893e-05, 7.569500000000062e-05, 7.497199999999954e-05, 7.497199999999954e-05, 7.508300000000356e-05, 7.579200000000508e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.343" endtime="20201112 09:43:47.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.330" endtime="20201112 09:43:47.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.355" endtime="20201112 09:43:47.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.364" endtime="20201112 09:43:47.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.360" endtime="20201112 09:43:47.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.351" endtime="20201112 09:43:47.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.848" endtime="20201112 09:43:47.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.847" endtime="20201112 09:43:47.391"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.413" endtime="20201112 09:43:47.431"></status>
</kw>
<msg timestamp="20201112 09:43:47.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.410" endtime="20201112 09:43:47.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.434" endtime="20201112 09:43:47.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.441" endtime="20201112 09:43:47.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.403" endtime="20201112 09:43:47.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.397" endtime="20201112 09:43:47.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.464" endtime="20201112 09:43:47.799"></status>
</kw>
<msg timestamp="20201112 09:43:47.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040306431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040383056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.460" endtime="20201112 09:43:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040306431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040383056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.809" endtime="20201112 09:43:47.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.828" endtime="20201112 09:43:47.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.453" endtime="20201112 09:43:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.449" endtime="20201112 09:43:47.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.845" level="INFO">${RESULT} = [{'time': 0.040383056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.662500000000377e-05, 'source_diff': 7.662500000000377e-05}, {'time': 0.040483333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.836" endtime="20201112 09:43:47.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.875" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:47.847" endtime="20201112 09:43:47.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.886" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.884" endtime="20201112 09:43:47.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.892" level="INFO">VALUE: [7.662500000000377e-05, 7.658300000000506e-05, 7.615300000000241e-05, 7.650000000000018e-05, 7.683399999999785e-05, 7.637500000000352e-05, 7.662499999999683e-05, 7.645800000000147e-05, 7.65690000000055e-05, 7.654199999999889e-05, 7.662499999999683e-05, 7.606999999999753e-05, 7.605599999999796e-05, 7.630600000000515e-05, 7.623600000000036e-05, 7.63890000000031e-05, 7.616700000000198e-05, 7.594500000000087e-05, 7.591600000000226e-05, 7.656899999999855e-05, 7.66110000000042e-05, 7.598600000000011e-05, 7.629199999999864e-05, 7.636100000000395e-05, 7.677799999999957e-05, 7.648600000000061e-05, 7.683300000000531e-05, 7.61389999999959e-05, 7.630599999999821e-05, 7.597300000000001e-05, 7.662500000000377e-05, 7.636199999999649e-05, 7.615300000000241e-05, 7.606899999999805e-05, 7.609700000000413e-05, 7.679199999999914e-05, 7.650000000000018e-05, 7.602699999999935e-05, 7.591599999999532e-05, 7.680499999999923e-05, 7.591700000000173e-05, 7.645800000000147e-05, 7.634799999999692e-05, 7.605499999999848e-05, 7.675000000000043e-05, 7.644500000000137e-05, 7.6764e-05, 7.61389999999959e-05, 7.577799999999857e-05, 7.604199999999839e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.889" endtime="20201112 09:43:47.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.877" endtime="20201112 09:43:47.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.902" endtime="20201112 09:43:47.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.911" endtime="20201112 09:43:47.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.906" endtime="20201112 09:43:47.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.898" endtime="20201112 09:43:47.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.393" endtime="20201112 09:43:47.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.391" endtime="20201112 09:43:47.937"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.961" endtime="20201112 09:43:47.979"></status>
</kw>
<msg timestamp="20201112 09:43:47.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.957" endtime="20201112 09:43:47.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.982" endtime="20201112 09:43:47.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.988" endtime="20201112 09:43:47.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.950" endtime="20201112 09:43:47.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.944" endtime="20201112 09:43:47.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.012" endtime="20201112 09:43:48.347"></status>
</kw>
<msg timestamp="20201112 09:43:48.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.008" endtime="20201112 09:43:48.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041668139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.357" endtime="20201112 09:43:48.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.376" endtime="20201112 09:43:48.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.001" endtime="20201112 09:43:48.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.996" endtime="20201112 09:43:48.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.393" level="INFO">${RESULT} = [{'time': 0.041745111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.697200000000154e-05, 'source_diff': 7.697200000000154e-05}, {'time': 0.041844236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.384" endtime="20201112 09:43:48.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.424" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:48.395" endtime="20201112 09:43:48.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.435" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.432" endtime="20201112 09:43:48.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.440" level="INFO">VALUE: [7.697200000000154e-05, 7.701400000000025e-05, 7.745800000000247e-05, 7.729100000000017e-05, 7.701400000000025e-05, 7.700000000000068e-05, 7.750000000000118e-05, 7.692999999999589e-05, 7.737500000000452e-05, 7.702799999999982e-05, 7.751400000000075e-05, 7.688899999999665e-05, 7.704199999999939e-05, 7.741700000000323e-05, 7.755499999999999e-05, 7.741700000000323e-05, 7.688899999999665e-05, 7.705599999999896e-05, 7.74169999999963e-05, 7.736099999999801e-05, 7.740299999999672e-05, 7.770900000000219e-05, 7.711099999999776e-05, 7.73189999999993e-05, 7.763900000000434e-05, 7.702799999999982e-05, 7.687500000000402e-05, 7.725000000000093e-05, 7.731999999999878e-05, 7.766599999999707e-05, 7.744499999999543e-05, 7.688899999999665e-05, 7.736099999999801e-05, 7.755499999999999e-05, 7.766599999999707e-05, 7.731999999999878e-05, 7.702799999999982e-05, 7.772200000000229e-05, 7.69169999999958e-05, 7.704099999999992e-05, 7.725000000000093e-05, 7.682000000000522e-05, 7.691700000000273e-05, 7.7069000000006e-05, 7.769399999999621e-05, 7.765299999999697e-05, 7.723600000000136e-05, 7.690299999999622e-05, 7.755499999999999e-05, 7.761099999999826e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.437" endtime="20201112 09:43:48.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.426" endtime="20201112 09:43:48.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.450" endtime="20201112 09:43:48.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.460" endtime="20201112 09:43:48.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.455" endtime="20201112 09:43:48.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.445" endtime="20201112 09:43:48.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.939" endtime="20201112 09:43:48.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.938" endtime="20201112 09:43:48.486"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.508" endtime="20201112 09:43:48.526"></status>
</kw>
<msg timestamp="20201112 09:43:48.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.505" endtime="20201112 09:43:48.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.530" endtime="20201112 09:43:48.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.536" endtime="20201112 09:43:48.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.498" endtime="20201112 09:43:48.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.492" endtime="20201112 09:43:48.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.559" endtime="20201112 09:43:48.893"></status>
</kw>
<msg timestamp="20201112 09:43:48.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.556" endtime="20201112 09:43:48.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040090444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.903" endtime="20201112 09:43:48.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.922" endtime="20201112 09:43:48.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.549" endtime="20201112 09:43:48.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.544" endtime="20201112 09:43:48.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.939" level="INFO">${RESULT} = [{'time': 0.040090444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.829100000000117e-05, 'source_diff': 7.829100000000117e-05}, {'time': 0.040187681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.930" endtime="20201112 09:43:48.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.971" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:48.941" endtime="20201112 09:43:48.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.982" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.980" endtime="20201112 09:43:48.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.987" level="INFO">VALUE: [7.829100000000117e-05, 7.797300000000201e-05, 7.865299999999797e-05, 7.791700000000373e-05, 7.838899999999815e-05, 7.855600000000046e-05, 7.801400000000125e-05, 7.862499999999883e-05, 7.865300000000491e-05, 7.836099999999901e-05, 7.811099999999876e-05, 7.782000000000622e-05, 7.822199999999585e-05, 7.862500000000577e-05, 7.788899999999765e-05, 7.822199999999585e-05, 7.856900000000056e-05, 7.858300000000012e-05, 7.791700000000373e-05, 7.78189999999998e-05, 7.798600000000211e-05, 7.808299999999962e-05, 7.818100000000355e-05, 7.852800000000132e-05, 7.820799999999628e-05, 7.830500000000074e-05, 7.787499999999808e-05, 7.829100000000117e-05, 7.867999999999764e-05, 7.825000000000193e-05, 7.872199999999635e-05, 7.819399999999671e-05, 7.856900000000056e-05, 7.856900000000056e-05, 7.876300000000253e-05, 7.777800000000057e-05, 7.825000000000193e-05, 7.833299999999987e-05, 7.786099999999851e-05, 7.876399999999506e-05, 7.849999999999524e-05, 7.874999999999549e-05, 7.800000000000168e-05, 7.855600000000046e-05, 7.872199999999635e-05, 7.801399999999431e-05, 7.80969999999992e-05, 7.845900000000294e-05, 7.833299999999987e-05, 7.85969999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.984" endtime="20201112 09:43:48.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.973" endtime="20201112 09:43:48.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.997" endtime="20201112 09:43:49.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.005" endtime="20201112 09:43:49.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.001" endtime="20201112 09:43:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.992" endtime="20201112 09:43:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.488" endtime="20201112 09:43:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.486" endtime="20201112 09:43:49.032"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.055" endtime="20201112 09:43:49.073"></status>
</kw>
<msg timestamp="20201112 09:43:49.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.052" endtime="20201112 09:43:49.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.076" endtime="20201112 09:43:49.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.083" endtime="20201112 09:43:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.044" endtime="20201112 09:43:49.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.039" endtime="20201112 09:43:49.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.105" endtime="20201112 09:43:49.439"></status>
</kw>
<msg timestamp="20201112 09:43:49.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04125225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041331361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:49.102" endtime="20201112 09:43:49.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04125225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041331361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:49.449" endtime="20201112 09:43:49.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.468" endtime="20201112 09:43:49.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.095" endtime="20201112 09:43:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.091" endtime="20201112 09:43:49.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.486" level="INFO">${RESULT} = [{'time': 0.041331361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.911099999999976e-05, 'source_diff': 7.911099999999976e-05}, {'time': 0.041429625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.477" endtime="20201112 09:43:49.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.516" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:49.488" endtime="20201112 09:43:49.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.527" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.524" endtime="20201112 09:43:49.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.532" level="INFO">VALUE: [7.911099999999976e-05, 7.972199999999735e-05, 7.88890000000056e-05, 7.941700000000523e-05, 7.95840000000006e-05, 7.893099999999736e-05, 7.933400000000035e-05, 7.883399999999985e-05, 7.900000000000268e-05, 7.929200000000164e-05, 7.89589999999965e-05, 7.911099999999976e-05, 7.972199999999735e-05, 7.942999999999839e-05, 7.941599999999882e-05, 7.965299999999897e-05, 7.886099999999951e-05, 7.879099999999473e-05, 7.938899999999915e-05, 7.887499999999908e-05, 7.922199999999685e-05, 7.969499999999768e-05, 7.96389999999994e-05, 7.952800000000232e-05, 7.884699999999994e-05, 7.950000000000318e-05, 7.94719999999971e-05, 7.9764000000003e-05, 7.883300000000037e-05, 7.890299999999822e-05, 7.94440000000049e-05, 7.886100000000645e-05, 7.974999999999649e-05, 7.938899999999915e-05, 7.89169999999978e-05, 7.923600000000336e-05, 7.955600000000146e-05, 7.957000000000103e-05, 7.926299999999609e-05, 7.911099999999976e-05, 7.898599999999617e-05, 7.89440000000044e-05, 7.879200000000114e-05, 7.976399999999606e-05, 7.947200000000404e-05, 7.912499999999933e-05, 7.9151999999999e-05, 7.893099999999736e-05, 7.900000000000268e-05, 7.94310000000048e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.529" endtime="20201112 09:43:49.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.518" endtime="20201112 09:43:49.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.541" endtime="20201112 09:43:49.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.550" endtime="20201112 09:43:49.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.545" endtime="20201112 09:43:49.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.537" endtime="20201112 09:43:49.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.034" endtime="20201112 09:43:49.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.033" endtime="20201112 09:43:49.575"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.600" endtime="20201112 09:43:49.618"></status>
</kw>
<msg timestamp="20201112 09:43:49.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.596" endtime="20201112 09:43:49.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.621" endtime="20201112 09:43:49.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.628" endtime="20201112 09:43:49.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.589" endtime="20201112 09:43:49.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.582" endtime="20201112 09:43:49.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.651" endtime="20201112 09:43:49.984"></status>
</kw>
<msg timestamp="20201112 09:43:49.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04162, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041699875, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:49.647" endtime="20201112 09:43:49.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04162, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041699875, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:49.994" endtime="20201112 09:43:50.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.012" endtime="20201112 09:43:50.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.640" endtime="20201112 09:43:50.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.635" endtime="20201112 09:43:50.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.030" level="INFO">${RESULT} = [{'time': 0.041699875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.987500000000008e-05, 'source_diff': 7.987500000000008e-05}, {'time': 0.041798097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.021" endtime="20201112 09:43:50.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.060" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:50.032" endtime="20201112 09:43:50.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.071" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.069" endtime="20201112 09:43:50.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.076" level="INFO">VALUE: [7.987500000000008e-05, 8.03190000000023e-05, 8.022200000000479e-05, 8.066699999999954e-05, 7.998599999999717e-05, 8.055600000000246e-05, 8.019499999999818e-05, 8.038900000000015e-05, 8.043099999999886e-05, 8.048599999999767e-05, 7.984700000000094e-05, 8.054200000000289e-05, 8.015299999999947e-05, 8.026299999999709e-05, 8.044399999999896e-05, 8.043099999999886e-05, 8.079100000000367e-05, 8.054100000000342e-05, 7.975000000000343e-05, 7.993099999999836e-05, 8.044499999999843e-05, 8.018099999999861e-05, 8.048599999999767e-05, 7.986100000000051e-05, 8.05840000000016e-05, 8.02640000000035e-05, 7.979200000000214e-05, 8.051399999999681e-05, 8.008300000000163e-05, 8.019499999999818e-05, 7.974999999999649e-05, 8.074999999999749e-05, 7.987500000000008e-05, 8.004199999999545e-05, 8.04719999999981e-05, 7.988899999999965e-05, 8.048600000000461e-05, 8.015299999999947e-05, 8.02770000000036e-05, 8.0764000000004e-05, 8.058300000000213e-05, 8.042999999999939e-05, 8.057000000000203e-05, 8.049999999999724e-05, 8.015299999999947e-05, 8.001399999999631e-05, 7.986099999999358e-05, 8.017999999999914e-05, 8.033400000000135e-05, 8.076399999999706e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.073" endtime="20201112 09:43:50.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.062" endtime="20201112 09:43:50.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.086" endtime="20201112 09:43:50.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.095" endtime="20201112 09:43:50.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.090" endtime="20201112 09:43:50.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.081" endtime="20201112 09:43:50.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.578" endtime="20201112 09:43:50.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.576" endtime="20201112 09:43:50.120"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.143" endtime="20201112 09:43:50.161"></status>
</kw>
<msg timestamp="20201112 09:43:50.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.140" endtime="20201112 09:43:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.164" endtime="20201112 09:43:50.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.171" endtime="20201112 09:43:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.132" endtime="20201112 09:43:50.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.127" endtime="20201112 09:43:50.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.196" endtime="20201112 09:43:50.528"></status>
</kw>
<msg timestamp="20201112 09:43:50.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039861611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.193" endtime="20201112 09:43:50.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039861611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.538" endtime="20201112 09:43:50.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.556" endtime="20201112 09:43:50.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.185" endtime="20201112 09:43:50.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.180" endtime="20201112 09:43:50.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.574" level="INFO">${RESULT} = [{'time': 0.039943056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.144499999999943e-05, 'source_diff': 8.144499999999943e-05}, {'time': 0.040042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.565" endtime="20201112 09:43:50.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:50.576" endtime="20201112 09:43:50.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.615" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.612" endtime="20201112 09:43:50.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.620" level="INFO">VALUE: [8.144499999999943e-05, 8.108300000000263e-05, 8.124999999999799e-05, 8.149999999999824e-05, 8.158300000000313e-05, 8.120799999999928e-05, 8.079200000000314e-05, 8.147299999999857e-05, 8.122199999999885e-05, 8.165300000000097e-05, 8.108300000000263e-05, 8.104200000000339e-05, 8.154200000000389e-05, 8.112500000000133e-05, 8.169499999999968e-05, 8.130599999999627e-05, 8.136100000000202e-05, 8.104200000000339e-05, 8.172199999999935e-05, 8.175000000000543e-05, 8.148599999999867e-05, 8.158299999999619e-05, 8.134700000000245e-05, 8.111099999999483e-05, 8.147299999999857e-05, 8.17369999999984e-05, 8.165300000000097e-05, 8.14719999999991e-05, 8.148599999999867e-05, 8.122299999999832e-05, 8.14170000000003e-05, 8.151399999999781e-05, 8.105600000000296e-05, 8.087500000000108e-05, 8.094399999999946e-05, 8.116700000000004e-05, 8.154099999999748e-05, 8.16390000000014e-05, 8.14170000000003e-05, 8.092999999999989e-05, 8.155499999999705e-05, 8.148599999999867e-05, 8.120799999999928e-05, 8.172200000000629e-05, 8.125000000000493e-05, 8.149999999999824e-05, 8.16390000000014e-05, 8.159800000000217e-05, 8.086200000000099e-05, 8.079099999999673e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.617" endtime="20201112 09:43:50.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.606" endtime="20201112 09:43:50.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.630" endtime="20201112 09:43:50.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.638" endtime="20201112 09:43:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.633" endtime="20201112 09:43:50.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.625" endtime="20201112 09:43:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.122" endtime="20201112 09:43:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.121" endtime="20201112 09:43:50.664"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.686" endtime="20201112 09:43:50.704"></status>
</kw>
<msg timestamp="20201112 09:43:50.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.683" endtime="20201112 09:43:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.708" endtime="20201112 09:43:50.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.714" endtime="20201112 09:43:50.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.675" endtime="20201112 09:43:50.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.670" endtime="20201112 09:43:50.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.739" endtime="20201112 09:43:51.073"></status>
</kw>
<msg timestamp="20201112 09:43:51.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039987111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.735" endtime="20201112 09:43:51.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039987111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.083" endtime="20201112 09:43:51.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.101" endtime="20201112 09:43:51.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.726" endtime="20201112 09:43:51.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.722" endtime="20201112 09:43:51.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.119" level="INFO">${RESULT} = [{'time': 0.040069722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.261100000000327e-05, 'source_diff': 8.261100000000327e-05}, {'time': 0.040169972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.110" endtime="20201112 09:43:51.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.150" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:51.121" endtime="20201112 09:43:51.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.161" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.159" endtime="20201112 09:43:51.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.167" level="INFO">VALUE: [8.261100000000327e-05, 8.266599999999513e-05, 8.265300000000197e-05, 8.259699999999676e-05, 8.256999999999709e-05, 8.268000000000164e-05, 8.27919999999982e-05, 8.211099999999583e-05, 8.26249999999959e-05, 8.230600000000421e-05, 8.252700000000585e-05, 8.269500000000068e-05, 8.24170000000013e-05, 8.273599999999992e-05, 8.19719999999996e-05, 8.19719999999996e-05, 8.211099999999583e-05, 8.230599999999727e-05, 8.259699999999676e-05, 8.258399999999666e-05, 8.265300000000197e-05, 8.236100000000302e-05, 8.195800000000003e-05, 8.208299999999669e-05, 8.270800000000078e-05, 8.245800000000053e-05, 8.26799999999947e-05, 8.245800000000053e-05, 8.259699999999676e-05, 8.256899999999762e-05, 8.244400000000096e-05, 8.224999999999899e-05, 8.18049999999973e-05, 8.244400000000096e-05, 8.211099999999583e-05, 8.240299999999479e-05, 8.187500000000208e-05, 8.176399999999806e-05, 8.231999999999684e-05, 8.262500000000284e-05, 8.188900000000165e-05, 8.266700000000154e-05, 8.236100000000302e-05, 8.272200000000035e-05, 8.263899999999547e-05, 8.198599999999917e-05, 8.252799999999838e-05, 8.187500000000208e-05, 8.248599999999967e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.164" endtime="20201112 09:43:51.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.152" endtime="20201112 09:43:51.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.176" endtime="20201112 09:43:51.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.184" endtime="20201112 09:43:51.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.180" endtime="20201112 09:43:51.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.171" endtime="20201112 09:43:51.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.666" endtime="20201112 09:43:51.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.664" endtime="20201112 09:43:51.210"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.232" endtime="20201112 09:43:51.251"></status>
</kw>
<msg timestamp="20201112 09:43:51.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.229" endtime="20201112 09:43:51.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.254" endtime="20201112 09:43:51.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.260" endtime="20201112 09:43:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.222" endtime="20201112 09:43:51.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.216" endtime="20201112 09:43:51.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.283" endtime="20201112 09:43:51.620"></status>
</kw>
<msg timestamp="20201112 09:43:51.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.280" endtime="20201112 09:43:51.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.630" endtime="20201112 09:43:51.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.649" endtime="20201112 09:43:51.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.273" endtime="20201112 09:43:51.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.268" endtime="20201112 09:43:51.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.666" level="INFO">${RESULT} = [{'time': 0.039862264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.345800000000153e-05, 'source_diff': 8.345800000000153e-05}, {'time': 0.0399635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:51.657" endtime="20201112 09:43:51.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.696" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:51.668" endtime="20201112 09:43:51.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.707" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.704" endtime="20201112 09:43:51.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.712" level="INFO">VALUE: [8.345800000000153e-05, 8.290300000000222e-05, 8.352799999999938e-05, 8.352799999999938e-05, 8.319400000000171e-05, 8.352799999999938e-05, 8.375000000000049e-05, 8.355599999999852e-05, 8.287500000000309e-05, 8.377799999999963e-05, 8.280599999999777e-05, 8.356999999999809e-05, 8.375000000000049e-05, 8.352799999999938e-05, 8.283300000000438e-05, 8.290300000000222e-05, 8.351399999999981e-05, 8.301399999999931e-05, 8.31390000000029e-05, 8.293100000000136e-05, 8.319400000000171e-05, 8.32919999999987e-05, 8.29590000000005e-05, 8.311100000000377e-05, 8.290199999999581e-05, 8.283300000000438e-05, 8.380600000000571e-05, 8.365300000000297e-05, 8.308299999999769e-05, 8.319400000000171e-05, 8.32919999999987e-05, 8.290299999999529e-05, 8.318000000000214e-05, 8.298600000000017e-05, 8.322200000000085e-05, 8.298600000000017e-05, 8.377799999999963e-05, 8.379099999999973e-05, 8.355499999999905e-05, 8.347199999999416e-05, 8.331899999999837e-05, 8.281899999999787e-05, 8.348600000000067e-05, 8.298600000000017e-05, 8.351399999999981e-05, 8.337500000000359e-05, 8.304199999999845e-05, 8.377799999999963e-05, 8.332000000000478e-05, 8.35970000000047e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.709" endtime="20201112 09:43:51.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.698" endtime="20201112 09:43:51.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.722" endtime="20201112 09:43:51.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.730" endtime="20201112 09:43:51.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.725" endtime="20201112 09:43:51.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.717" endtime="20201112 09:43:51.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.212" endtime="20201112 09:43:51.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.211" endtime="20201112 09:43:51.756"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.778" endtime="20201112 09:43:51.797"></status>
</kw>
<msg timestamp="20201112 09:43:51.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.775" endtime="20201112 09:43:51.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.800" endtime="20201112 09:43:51.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.806" endtime="20201112 09:43:51.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.768" endtime="20201112 09:43:51.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.762" endtime="20201112 09:43:51.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.829" endtime="20201112 09:43:52.165"></status>
</kw>
<msg timestamp="20201112 09:43:52.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040161319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.826" endtime="20201112 09:43:52.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040161319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.175" endtime="20201112 09:43:52.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.194" endtime="20201112 09:43:52.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.819" endtime="20201112 09:43:52.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.814" endtime="20201112 09:43:52.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.211" level="INFO">${RESULT} = [{'time': 0.040161319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466600000000407e-05, 'source_diff': 8.466600000000407e-05}, {'time': 0.040266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.202" endtime="20201112 09:43:52.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:52.213" endtime="20201112 09:43:52.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.252" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.250" endtime="20201112 09:43:52.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.257" level="INFO">VALUE: [8.466600000000407e-05, 8.448600000000167e-05, 8.444399999999602e-05, 8.444400000000296e-05, 8.42919999999997e-05, 8.390300000000323e-05, 8.425000000000099e-05, 8.397199999999466e-05, 8.40970000000052e-05, 8.43469999999985e-05, 8.451400000000081e-05, 8.405499999999955e-05, 8.391599999999638e-05, 8.458300000000613e-05, 8.383399999999791e-05, 8.390199999999681e-05, 8.393000000000289e-05, 8.437500000000459e-05, 8.458299999999919e-05, 8.468100000000311e-05, 8.465299999999704e-05, 8.398599999999423e-05, 8.416600000000357e-05, 8.383299999999844e-05, 8.473600000000192e-05, 8.381899999999887e-05, 8.44999999999943e-05, 8.468100000000311e-05, 8.393100000000236e-05, 8.416600000000357e-05, 8.473600000000192e-05, 8.438900000000416e-05, 8.427800000000013e-05, 8.44720000000021e-05, 8.425000000000099e-05, 8.401400000000031e-05, 8.452700000000091e-05, 8.406999999999859e-05, 8.459699999999876e-05, 8.472300000000182e-05, 8.41390000000039e-05, 8.452800000000038e-05, 8.381999999999834e-05, 8.452800000000038e-05, 8.400000000000074e-05, 8.451400000000081e-05, 8.425000000000099e-05, 8.451400000000081e-05, 8.427800000000013e-05, 8.447300000000157e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.254" endtime="20201112 09:43:52.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.243" endtime="20201112 09:43:52.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.266" endtime="20201112 09:43:52.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.275" endtime="20201112 09:43:52.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.270" endtime="20201112 09:43:52.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.262" endtime="20201112 09:43:52.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.758" endtime="20201112 09:43:52.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.756" endtime="20201112 09:43:52.300"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.323" endtime="20201112 09:43:52.341"></status>
</kw>
<msg timestamp="20201112 09:43:52.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.320" endtime="20201112 09:43:52.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.345" endtime="20201112 09:43:52.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.351" endtime="20201112 09:43:52.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.312" endtime="20201112 09:43:52.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.307" endtime="20201112 09:43:52.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.374" endtime="20201112 09:43:52.709"></status>
</kw>
<msg timestamp="20201112 09:43:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039928611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.371" endtime="20201112 09:43:52.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039928611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.719" endtime="20201112 09:43:52.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.738" endtime="20201112 09:43:52.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.364" endtime="20201112 09:43:52.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.359" endtime="20201112 09:43:52.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.757" level="INFO">${RESULT} = [{'time': 0.039928611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.505500000000055e-05, 'source_diff': 8.505500000000055e-05}, {'time': 0.040031847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.748" endtime="20201112 09:43:52.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.786" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:52.759" endtime="20201112 09:43:52.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.797" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.795" endtime="20201112 09:43:52.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.803" level="INFO">VALUE: [8.505500000000055e-05, 8.483299999999944e-05, 8.575000000000249e-05, 8.559699999999976e-05, 8.570800000000378e-05, 8.56520000000055e-05, 8.563899999999847e-05, 8.487500000000509e-05, 8.537500000000559e-05, 8.550000000000224e-05, 8.577799999999469e-05, 8.561099999999933e-05, 8.500000000000174e-05, 8.565299999999804e-05, 8.566599999999813e-05, 8.548600000000267e-05, 8.538899999999822e-05, 8.568100000000411e-05, 8.533299999999994e-05, 8.576399999999512e-05, 8.513899999999797e-05, 8.501400000000131e-05, 8.515199999999806e-05, 8.542999999999745e-05, 8.56799999999977e-05, 8.51249999999984e-05, 8.506999999999959e-05, 8.54999999999953e-05, 8.520800000000328e-05, 8.566700000000455e-05, 8.52920000000007e-05, 8.505500000000055e-05, 8.511099999999883e-05, 8.520799999999634e-05, 8.547199999999616e-05, 8.525000000000199e-05, 8.479100000000073e-05, 8.480599999999977e-05, 8.524999999999505e-05, 8.52920000000007e-05, 8.509699999999926e-05, 8.502700000000141e-05, 8.501400000000131e-05, 8.501400000000131e-05, 8.57920000000012e-05, 8.516700000000405e-05, 8.56390000000054e-05, 8.570799999999684e-05, 8.480599999999977e-05, 8.523699999999496e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.800" endtime="20201112 09:43:52.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.788" endtime="20201112 09:43:52.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.812" endtime="20201112 09:43:52.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.820" endtime="20201112 09:43:52.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.816" endtime="20201112 09:43:52.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.808" endtime="20201112 09:43:52.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.302" endtime="20201112 09:43:52.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.301" endtime="20201112 09:43:52.846"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.869" endtime="20201112 09:43:52.887"></status>
</kw>
<msg timestamp="20201112 09:43:52.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.865" endtime="20201112 09:43:52.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.891" endtime="20201112 09:43:52.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.897" endtime="20201112 09:43:52.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.858" endtime="20201112 09:43:52.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.852" endtime="20201112 09:43:52.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.920" endtime="20201112 09:43:53.255"></status>
</kw>
<msg timestamp="20201112 09:43:53.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.916" endtime="20201112 09:43:53.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.264" endtime="20201112 09:43:53.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.283" endtime="20201112 09:43:53.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.909" endtime="20201112 09:43:53.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.905" endtime="20201112 09:43:53.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.302" level="INFO">${RESULT} = [{'time': 0.040078153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.627799999999519e-05, 'source_diff': 8.627799999999519e-05}, {'time': 0.040187458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.293" endtime="20201112 09:43:53.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.334" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:53.304" endtime="20201112 09:43:53.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.345" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.343" endtime="20201112 09:43:53.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.351" level="INFO">VALUE: [8.627799999999519e-05, 8.595800000000403e-05, 8.611099999999983e-05, 8.595899999999657e-05, 8.637499999999965e-05, 8.608300000000069e-05, 8.587499999999915e-05, 8.5847e-05, 8.602800000000188e-05, 8.602700000000241e-05, 8.590299999999829e-05, 8.640299999999879e-05, 8.640300000000573e-05, 8.63470000000005e-05, 8.654099999999554e-05, 8.594400000000446e-05, 8.609700000000026e-05, 8.590299999999829e-05, 8.61249999999994e-05, 8.613899999999897e-05, 8.590299999999829e-05, 8.604200000000145e-05, 8.601300000000284e-05, 8.611099999999983e-05, 8.641699999999836e-05, 8.604200000000145e-05, 8.618100000000462e-05, 8.638899999999922e-05, 8.606900000000112e-05, 8.608300000000069e-05, 8.637499999999965e-05, 8.640199999999931e-05, 8.64999999999963e-05, 8.638899999999922e-05, 8.595800000000403e-05, 8.587500000000609e-05, 8.582000000000034e-05, 8.588899999999872e-05, 8.665199999999956e-05, 8.600000000000274e-05, 8.62920000000017e-05, 8.674999999999655e-05, 8.665299999999904e-05, 8.609700000000026e-05, 8.622200000000385e-05, 8.619399999999777e-05, 8.615299999999854e-05, 8.588899999999872e-05, 8.655500000000205e-05, 8.619399999999777e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.348" endtime="20201112 09:43:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.336" endtime="20201112 09:43:53.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.360" endtime="20201112 09:43:53.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.368" endtime="20201112 09:43:53.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.364" endtime="20201112 09:43:53.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.355" endtime="20201112 09:43:53.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.848" endtime="20201112 09:43:53.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.847" endtime="20201112 09:43:53.394"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.416" endtime="20201112 09:43:53.435"></status>
</kw>
<msg timestamp="20201112 09:43:53.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.413" endtime="20201112 09:43:53.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.438" endtime="20201112 09:43:53.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.444" endtime="20201112 09:43:53.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.406" endtime="20201112 09:43:53.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.400" endtime="20201112 09:43:53.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.468" endtime="20201112 09:43:53.802"></status>
</kw>
<msg timestamp="20201112 09:43:53.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039797333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.464" endtime="20201112 09:43:53.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039797333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.812" endtime="20201112 09:43:53.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.830" endtime="20201112 09:43:53.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.457" endtime="20201112 09:43:53.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.453" endtime="20201112 09:43:53.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.848" level="INFO">${RESULT} = [{'time': 0.039884806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.747300000000457e-05, 'source_diff': 8.747300000000457e-05}, {'time': 0.039995097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.839" endtime="20201112 09:43:53.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.879" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:53.850" endtime="20201112 09:43:53.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.890" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.887" endtime="20201112 09:43:53.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.895" level="INFO">VALUE: [8.747300000000457e-05, 8.731900000000237e-05, 8.752700000000391e-05, 8.759699999999482e-05, 8.704099999999604e-05, 8.736100000000108e-05, 8.71669999999991e-05, 8.720899999999782e-05, 8.698599999999723e-05, 8.733400000000141e-05, 8.733400000000141e-05, 8.702799999999594e-05, 8.737500000000065e-05, 8.698599999999723e-05, 8.761100000000133e-05, 8.731900000000237e-05, 8.71250000000004e-05, 8.727799999999619e-05, 8.687500000000015e-05, 8.71669999999991e-05, 8.763900000000047e-05, 8.772199999999841e-05, 8.733300000000194e-05, 8.680600000000177e-05, 8.705600000000202e-05, 8.718099999999868e-05, 8.758300000000219e-05, 8.713800000000049e-05, 8.777800000000363e-05, 8.734800000000098e-05, 8.688899999999972e-05, 8.713800000000049e-05, 8.702800000000288e-05, 8.686200000000005e-05, 8.68199999999944e-05, 8.745899999999807e-05, 8.68199999999944e-05, 8.737500000000065e-05, 8.702699999999647e-05, 8.726400000000356e-05, 8.693099999999843e-05, 8.697199999999766e-05, 8.691699999999886e-05, 8.76250000000009e-05, 8.783300000000244e-05, 8.723600000000442e-05, 8.733400000000141e-05, 8.76799999999997e-05, 8.738899999999328e-05, 8.719499999999825e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.892" endtime="20201112 09:43:53.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.881" endtime="20201112 09:43:53.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.904" endtime="20201112 09:43:53.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.913" endtime="20201112 09:43:53.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.908" endtime="20201112 09:43:53.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.900" endtime="20201112 09:43:53.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.396" endtime="20201112 09:43:53.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.395" endtime="20201112 09:43:53.938"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.961" endtime="20201112 09:43:53.979"></status>
</kw>
<msg timestamp="20201112 09:43:53.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.957" endtime="20201112 09:43:53.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.983" endtime="20201112 09:43:53.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.989" endtime="20201112 09:43:53.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.950" endtime="20201112 09:43:53.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.945" endtime="20201112 09:43:53.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.012" endtime="20201112 09:43:54.347"></status>
</kw>
<msg timestamp="20201112 09:43:54.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039776167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.009" endtime="20201112 09:43:54.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039776167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.357" endtime="20201112 09:43:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.376" endtime="20201112 09:43:54.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.002" endtime="20201112 09:43:54.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.997" endtime="20201112 09:43:54.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.393" level="INFO">${RESULT} = [{'time': 0.039776167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.824999999999805e-05, 'source_diff': 8.824999999999805e-05}, {'time': 0.039886417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.384" endtime="20201112 09:43:54.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.424" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:54.395" endtime="20201112 09:43:54.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.435" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.433" endtime="20201112 09:43:54.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.441" level="INFO">VALUE: [8.824999999999805e-05, 8.851399999999787e-05, 8.784799999999454e-05, 8.793099999999943e-05, 8.819499999999925e-05, 8.787500000000115e-05, 8.86250000000019e-05, 8.863900000000147e-05, 8.872199999999941e-05, 8.837499999999471e-05, 8.852799999999744e-05, 8.798599999999823e-05, 8.826399999999762e-05, 8.811099999999489e-05, 8.829199999999676e-05, 8.779100000000373e-05, 8.815300000000054e-05, 8.877699999999822e-05, 8.847199999999916e-05, 8.787500000000115e-05, 8.792999999999995e-05, 8.791600000000038e-05, 8.801399999999737e-05, 8.792999999999995e-05, 8.831900000000337e-05, 8.816600000000063e-05, 8.81250000000014e-05, 8.879099999999779e-05, 8.818099999999968e-05, 8.815300000000054e-05, 8.838800000000174e-05, 8.802700000000441e-05, 8.81120000000013e-05, 8.827700000000466e-05, 8.784700000000201e-05, 8.841600000000088e-05, 8.815200000000106e-05, 8.798599999999823e-05, 8.874999999999855e-05, 8.84999999999983e-05, 8.802799999999694e-05, 8.86800000000007e-05, 8.804199999999651e-05, 8.84999999999983e-05, 8.858299999999625e-05, 8.81670000000001e-05, 8.825000000000499e-05, 8.782000000000234e-05, 8.798700000000464e-05, 8.866600000000113e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.438" endtime="20201112 09:43:54.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.426" endtime="20201112 09:43:54.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.450" endtime="20201112 09:43:54.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.459" endtime="20201112 09:43:54.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.454" endtime="20201112 09:43:54.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.446" endtime="20201112 09:43:54.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.940" endtime="20201112 09:43:54.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.939" endtime="20201112 09:43:54.484"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.507" endtime="20201112 09:43:54.526"></status>
</kw>
<msg timestamp="20201112 09:43:54.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.504" endtime="20201112 09:43:54.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.529" endtime="20201112 09:43:54.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.535" endtime="20201112 09:43:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.496" endtime="20201112 09:43:54.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.491" endtime="20201112 09:43:54.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.558" endtime="20201112 09:43:54.893"></status>
</kw>
<msg timestamp="20201112 09:43:54.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.555" endtime="20201112 09:43:54.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.902" endtime="20201112 09:43:54.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.921" endtime="20201112 09:43:54.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.548" endtime="20201112 09:43:54.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.543" endtime="20201112 09:43:54.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.938" level="INFO">${RESULT} = [{'time': 0.040055903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.898599999999923e-05, 'source_diff': 8.898599999999923e-05}, {'time': 0.040165194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.929" endtime="20201112 09:43:54.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.970" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:54.940" endtime="20201112 09:43:54.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.980" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.978" endtime="20201112 09:43:54.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.986" level="INFO">VALUE: [8.898599999999923e-05, 8.886100000000258e-05, 8.948599999999973e-05, 8.963899999999553e-05, 8.96529999999951e-05, 8.888900000000172e-05, 8.926400000000556e-05, 8.883300000000344e-05, 8.968099999999424e-05, 8.936099999999614e-05, 8.94450000000005e-05, 8.884700000000301e-05, 8.91250000000024e-05, 8.96250000000029e-05, 8.941700000000136e-05, 8.936099999999614e-05, 8.936100000000308e-05, 8.968100000000118e-05, 8.919500000000025e-05, 8.91120000000023e-05, 8.906899999999718e-05, 8.89999999999988e-05, 8.98329999999975e-05, 8.8945e-05, 8.96670000000016e-05, 8.930599999999733e-05, 8.94999999999993e-05, 8.973599999999998e-05, 8.909700000000326e-05, 8.963899999999553e-05, 8.920899999999982e-05, 8.898599999999923e-05, 8.958300000000419e-05, 8.959800000000323e-05, 8.976399999999912e-05, 8.970900000000032e-05, 8.937500000000265e-05, 8.979199999999826e-05, 8.968100000000118e-05, 8.888899999999478e-05, 8.948599999999973e-05, 8.96250000000029e-05, 8.884800000000248e-05, 8.923599999999948e-05, 8.944400000000102e-05, 8.96529999999951e-05, 8.927799999999819e-05, 8.933300000000394e-05, 8.952799999999844e-05, 8.888900000000172e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.983" endtime="20201112 09:43:54.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.971" endtime="20201112 09:43:54.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.995" endtime="20201112 09:43:54.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.004" endtime="20201112 09:43:55.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.999" endtime="20201112 09:43:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.991" endtime="20201112 09:43:55.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.486" endtime="20201112 09:43:55.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.485" endtime="20201112 09:43:55.029"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.052" endtime="20201112 09:43:55.071"></status>
</kw>
<msg timestamp="20201112 09:43:55.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.048" endtime="20201112 09:43:55.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.074" endtime="20201112 09:43:55.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.080" endtime="20201112 09:43:55.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.041" endtime="20201112 09:43:55.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.036" endtime="20201112 09:43:55.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.103" endtime="20201112 09:43:55.437"></status>
</kw>
<msg timestamp="20201112 09:43:55.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039832986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.100" endtime="20201112 09:43:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039832986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.447" endtime="20201112 09:43:55.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.465" endtime="20201112 09:43:55.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.093" endtime="20201112 09:43:55.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.088" endtime="20201112 09:43:55.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.483" level="INFO">${RESULT} = [{'time': 0.039832986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.015300000000254e-05, 'source_diff': 9.015300000000254e-05}, {'time': 0.039942236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.474" endtime="20201112 09:43:55.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.515" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:55.485" endtime="20201112 09:43:55.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.526" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.524" endtime="20201112 09:43:55.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.532" level="INFO">VALUE: [9.015300000000254e-05, 8.981899999999793e-05, 9.034700000000451e-05, 9.005500000000555e-05, 9.045800000000159e-05, 8.980499999999836e-05, 9.018100000000168e-05, 8.986200000000305e-05, 9.072300000000089e-05, 8.997200000000066e-05, 9.044499999999456e-05, 9.036100000000408e-05, 9.040300000000279e-05, 9.055499999999911e-05, 9.033300000000494e-05, 9.051299999999346e-05, 9.001399999999937e-05, 9.075000000000055e-05, 9.044400000000202e-05, 9.01800000000022e-05, 9.048600000000073e-05, 9.03050000000058e-05, 9.076399999999318e-05, 9.051399999999987e-05, 9.063900000000347e-05, 9.065300000000304e-05, 9.020800000000134e-05, 8.99999999999998e-05, 9.04870000000002e-05, 9.056899999999868e-05, 9.011099999999689e-05, 9.020800000000134e-05, 8.994400000000152e-05, 8.987499999999621e-05, 9.069500000000175e-05, 9.043100000000193e-05, 8.988899999999578e-05, 9.033300000000494e-05, 9.063899999999653e-05, 9.048600000000073e-05, 8.984699999999707e-05, 9.008400000000416e-05, 9.034700000000451e-05, 9.020800000000134e-05, 9.03199999999979e-05, 9.06670000000026e-05, 9.034800000000398e-05, 9.00129999999999e-05, 9.012499999999646e-05, 9.025000000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.528" endtime="20201112 09:43:55.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.517" endtime="20201112 09:43:55.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.545" endtime="20201112 09:43:55.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.553" endtime="20201112 09:43:55.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.549" endtime="20201112 09:43:55.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.540" endtime="20201112 09:43:55.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.031" endtime="20201112 09:43:55.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.030" endtime="20201112 09:43:55.579"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.601" endtime="20201112 09:43:55.620"></status>
</kw>
<msg timestamp="20201112 09:43:55.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.598" endtime="20201112 09:43:55.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.624" endtime="20201112 09:43:55.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.630" endtime="20201112 09:43:55.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.591" endtime="20201112 09:43:55.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.585" endtime="20201112 09:43:55.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.654" endtime="20201112 09:43:55.989"></status>
</kw>
<msg timestamp="20201112 09:43:55.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040035736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.651" endtime="20201112 09:43:55.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040035736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.998" endtime="20201112 09:43:56.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.017" endtime="20201112 09:43:56.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.644" endtime="20201112 09:43:56.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.639" endtime="20201112 09:43:56.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.034" level="INFO">${RESULT} = [{'time': 0.040035736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.080499999999936e-05, 'source_diff': 9.080499999999936e-05}, {'time': 0.040150042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.026" endtime="20201112 09:43:56.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.065" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:56.037" endtime="20201112 09:43:56.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.077" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.074" endtime="20201112 09:43:56.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.082" level="INFO">VALUE: [9.080499999999936e-05, 9.177799999999375e-05, 9.134699999999857e-05, 9.109699999999832e-05, 9.145800000000259e-05, 9.113899999999703e-05, 9.109699999999832e-05, 9.129199999999976e-05, 9.136099999999814e-05, 9.127799999999325e-05, 9.091600000000338e-05, 9.173600000000198e-05, 9.133399999999847e-05, 9.15000000000013e-05, 9.154200000000001e-05, 9.11529999999966e-05, 9.14870000000012e-05, 9.179100000000079e-05, 9.18329999999995e-05, 9.120900000000182e-05, 9.120900000000182e-05, 9.098600000000123e-05, 9.116699999999617e-05, 9.180599999999983e-05, 9.088899999999678e-05, 9.149999999999436e-05, 9.158299999999925e-05, 9.129199999999976e-05, 9.125000000000105e-05, 9.115199999999712e-05, 9.125000000000105e-05, 9.120800000000234e-05, 9.13199999999989e-05, 9.104100000000004e-05, 9.109699999999832e-05, 9.105599999999908e-05, 9.088899999999678e-05, 9.16250000000049e-05, 9.098600000000123e-05, 9.093000000000295e-05, 9.151400000000087e-05, 9.14859999999948e-05, 9.163900000000447e-05, 9.102799999999994e-05, 9.167999999999676e-05, 9.175000000000155e-05, 9.152699999999403e-05, 9.17079999999959e-05, 9.109799999999779e-05, 9.163799999999805e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.079" endtime="20201112 09:43:56.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.067" endtime="20201112 09:43:56.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.092" endtime="20201112 09:43:56.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.100" endtime="20201112 09:43:56.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.096" endtime="20201112 09:43:56.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.087" endtime="20201112 09:43:56.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.581" endtime="20201112 09:43:56.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.580" endtime="20201112 09:43:56.126"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.148" endtime="20201112 09:43:56.167"></status>
</kw>
<msg timestamp="20201112 09:43:56.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.145" endtime="20201112 09:43:56.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.170" endtime="20201112 09:43:56.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.176" endtime="20201112 09:43:56.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.138" endtime="20201112 09:43:56.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.132" endtime="20201112 09:43:56.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.200" endtime="20201112 09:43:56.535"></status>
</kw>
<msg timestamp="20201112 09:43:56.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.196" endtime="20201112 09:43:56.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039776264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.545" endtime="20201112 09:43:56.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.563" endtime="20201112 09:43:56.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.189" endtime="20201112 09:43:56.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.184" endtime="20201112 09:43:56.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.581" level="INFO">${RESULT} = [{'time': 0.039868819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.255500000000111e-05, 'source_diff': 9.255500000000111e-05}, {'time': 0.039980153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.572" endtime="20201112 09:43:56.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.611" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:56.583" endtime="20201112 09:43:56.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.622" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.620" endtime="20201112 09:43:56.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.627" level="INFO">VALUE: [9.255500000000111e-05, 9.206999999999965e-05, 9.205600000000008e-05, 9.187499999999821e-05, 9.198600000000223e-05, 9.205600000000008e-05, 9.241700000000436e-05, 9.270899999999638e-05, 9.238899999999828e-05, 9.195899999999563e-05, 9.277799999999475e-05, 9.254200000000101e-05, 9.237499999999871e-05, 9.20000000000018e-05, 9.241699999999742e-05, 9.279199999999432e-05, 9.267999999999776e-05, 9.204100000000104e-05, 9.202800000000094e-05, 9.190300000000429e-05, 9.206900000000018e-05, 9.244499999999656e-05, 9.270800000000384e-05, 9.21529999999976e-05, 9.229199999999382e-05, 9.238899999999828e-05, 9.230500000000086e-05, 9.259699999999982e-05, 9.25000000000023e-05, 9.218099999999674e-05, 9.258300000000025e-05, 9.276400000000212e-05, 9.2333e-05, 9.227800000000119e-05, 9.206999999999965e-05, 9.26659999999982e-05, 9.27079999999969e-05, 9.197200000000266e-05, 9.238899999999828e-05, 9.286099999999964e-05, 9.248600000000273e-05, 9.263899999999853e-05, 9.26529999999981e-05, 9.211099999999889e-05, 9.222199999999597e-05, 9.236099999999914e-05, 9.247199999999622e-05, 9.227800000000119e-05, 9.183399999999897e-05, 9.244400000000402e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.624" endtime="20201112 09:43:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.613" endtime="20201112 09:43:56.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.638" endtime="20201112 09:43:56.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.646" endtime="20201112 09:43:56.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.642" endtime="20201112 09:43:56.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.633" endtime="20201112 09:43:56.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.128" endtime="20201112 09:43:56.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.127" endtime="20201112 09:43:56.672"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.695" endtime="20201112 09:43:56.714"></status>
</kw>
<msg timestamp="20201112 09:43:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.692" endtime="20201112 09:43:56.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.718" endtime="20201112 09:43:56.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.724" endtime="20201112 09:43:56.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.685" endtime="20201112 09:43:56.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.679" endtime="20201112 09:43:56.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.747" endtime="20201112 09:43:57.081"></status>
</kw>
<msg timestamp="20201112 09:43:57.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041058097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0411515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:56.744" endtime="20201112 09:43:57.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041058097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0411515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:57.091" endtime="20201112 09:43:57.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.110" endtime="20201112 09:43:57.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.737" endtime="20201112 09:43:57.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.732" endtime="20201112 09:43:57.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.127" level="INFO">${RESULT} = [{'time': 0.0411515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340299999999885e-05, 'source_diff': 9.340299999999885e-05}, {'time': 0.041268778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:57.118" endtime="20201112 09:43:57.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.157" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:57.129" endtime="20201112 09:43:57.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.168" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.166" endtime="20201112 09:43:57.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.173" level="INFO">VALUE: [9.340299999999885e-05, 9.361100000000039e-05, 9.299999999999586e-05, 9.320800000000434e-05, 9.359699999999388e-05, 9.281900000000093e-05, 9.36529999999991e-05, 9.311099999999989e-05, 9.325000000000305e-05, 9.309799999999979e-05, 9.327799999999525e-05, 9.287499999999921e-05, 9.329200000000176e-05, 9.327800000000219e-05, 9.348600000000373e-05, 9.327799999999525e-05, 9.373600000000398e-05, 9.28879999999993e-05, 9.367999999999876e-05, 9.379100000000279e-05, 9.311099999999989e-05, 9.376399999999618e-05, 9.279200000000126e-05, 9.304199999999457e-05, 9.299999999999586e-05, 9.336100000000014e-05, 9.319399999999783e-05, 9.341599999999894e-05, 9.359800000000029e-05, 9.313899999999903e-05, 9.338899999999928e-05, 9.302800000000194e-05, 9.313899999999903e-05, 9.361100000000039e-05, 9.322199999999697e-05, 9.326399999999568e-05, 9.336100000000014e-05, 9.337500000000665e-05, 9.281899999999399e-05, 9.283299999999356e-05, 9.308300000000075e-05, 9.290199999999887e-05, 9.367999999999876e-05, 9.367999999999876e-05, 9.351399999999593e-05, 9.309700000000032e-05, 9.295800000000409e-05, 9.354200000000201e-05, 9.355600000000158e-05, 9.291699999999792e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.170" endtime="20201112 09:43:57.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.159" endtime="20201112 09:43:57.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.183" endtime="20201112 09:43:57.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.192" endtime="20201112 09:43:57.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.188" endtime="20201112 09:43:57.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.178" endtime="20201112 09:43:57.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.675" endtime="20201112 09:43:57.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.673" endtime="20201112 09:43:57.218"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.240" endtime="20201112 09:43:57.259"></status>
</kw>
<msg timestamp="20201112 09:43:57.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.237" endtime="20201112 09:43:57.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.263" endtime="20201112 09:43:57.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.269" endtime="20201112 09:43:57.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.230" endtime="20201112 09:43:57.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.224" endtime="20201112 09:43:57.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.292" endtime="20201112 09:43:57.627"></status>
</kw>
<msg timestamp="20201112 09:43:57.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03967575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:57.289" endtime="20201112 09:43:57.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03967575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:57.636" endtime="20201112 09:43:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.655" endtime="20201112 09:43:57.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.282" endtime="20201112 09:43:57.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.277" endtime="20201112 09:43:57.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.672" level="INFO">${RESULT} = [{'time': 0.039770056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43059999999954e-05, 'source_diff': 9.43059999999954e-05}, {'time': 0.039883347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:57.663" endtime="20201112 09:43:57.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.702" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:57.674" endtime="20201112 09:43:57.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.714" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.711" endtime="20201112 09:43:57.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.719" level="INFO">VALUE: [9.43059999999954e-05, 9.4333000000002e-05, 9.473600000000498e-05, 9.443099999999899e-05, 9.437500000000071e-05, 9.458400000000172e-05, 9.444399999999908e-05, 9.476399999999718e-05, 9.390199999999987e-05, 9.41659999999997e-05, 9.404200000000251e-05, 9.387500000000021e-05, 9.401399999999643e-05, 9.394399999999858e-05, 9.470800000000584e-05, 9.474999999999761e-05, 9.451399999999693e-05, 9.468099999999924e-05, 9.45000000000043e-05, 9.408299999999481e-05, 9.469499999999881e-05, 9.40409999999961e-05, 9.419499999999831e-05, 9.469399999999933e-05, 9.411200000000036e-05, 9.381899999999499e-05, 9.444399999999908e-05, 9.41529999999996e-05, 9.434800000000104e-05, 9.480500000000336e-05, 9.411100000000089e-05, 9.394499999999806e-05, 9.442999999999951e-05, 9.427800000000319e-05, 9.455600000000258e-05, 9.411200000000036e-05, 9.481899999999599e-05, 9.466699999999967e-05, 9.387500000000021e-05, 9.411100000000089e-05, 9.479199999999632e-05, 9.433299999999506e-05, 9.388899999999978e-05, 9.39729999999972e-05, 9.404200000000251e-05, 9.409700000000132e-05, 9.479100000000379e-05, 9.404200000000251e-05, 9.391599999999944e-05, 9.451399999999693e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.716" endtime="20201112 09:43:57.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.704" endtime="20201112 09:43:57.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.729" endtime="20201112 09:43:57.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.737" endtime="20201112 09:43:57.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.733" endtime="20201112 09:43:57.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.724" endtime="20201112 09:43:57.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.220" endtime="20201112 09:43:57.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.219" endtime="20201112 09:43:57.766"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.788" endtime="20201112 09:43:57.808"></status>
</kw>
<msg timestamp="20201112 09:43:57.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.785" endtime="20201112 09:43:57.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.811" endtime="20201112 09:43:57.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.817" endtime="20201112 09:43:57.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.778" endtime="20201112 09:43:57.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.772" endtime="20201112 09:43:57.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.840" endtime="20201112 09:43:58.173"></status>
</kw>
<msg timestamp="20201112 09:43:58.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040339431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.837" endtime="20201112 09:43:58.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040339431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.183" endtime="20201112 09:43:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.202" endtime="20201112 09:43:58.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.830" endtime="20201112 09:43:58.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.825" endtime="20201112 09:43:58.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.219" level="INFO">${RESULT} = [{'time': 0.040339431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.536200000000161e-05, 'source_diff': 9.536200000000161e-05}, {'time': 0.040453722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.210" endtime="20201112 09:43:58.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.249" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:58.221" endtime="20201112 09:43:58.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.260" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.257" endtime="20201112 09:43:58.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.265" level="INFO">VALUE: [9.536200000000161e-05, 9.540300000000085e-05, 9.529200000000376e-05, 9.529200000000376e-05, 9.529200000000376e-05, 9.537499999999477e-05, 9.487500000000121e-05, 9.561100000000239e-05, 9.537500000000171e-05, 9.495799999999915e-05, 9.547200000000616e-05, 9.56530000000011e-05, 9.531900000000343e-05, 9.559699999999588e-05, 9.526399999999768e-05, 9.55279999999975e-05, 9.523599999999854e-05, 9.511100000000189e-05, 9.545799999999965e-05, 9.541700000000042e-05, 9.566700000000067e-05, 9.558399999999578e-05, 9.493000000000001e-05, 9.568100000000024e-05, 9.580500000000436e-05, 9.570899999999938e-05, 9.487500000000121e-05, 9.49859999999983e-05, 9.562500000000196e-05, 9.505500000000361e-05, 9.566700000000067e-05, 9.537500000000171e-05, 9.491600000000044e-05, 9.543099999999999e-05, 9.541700000000042e-05, 9.524999999999811e-05, 9.527799999999725e-05, 9.569499999999981e-05, 9.555499999999717e-05, 9.512499999999452e-05, 9.51530000000006e-05, 9.569400000000033e-05, 9.549999999999836e-05, 9.505599999999614e-05, 9.497200000000566e-05, 9.488900000000078e-05, 9.562500000000196e-05, 9.543099999999999e-05, 9.499999999999786e-05, 9.565299999999416e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.262" endtime="20201112 09:43:58.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.251" endtime="20201112 09:43:58.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.274" endtime="20201112 09:43:58.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.283" endtime="20201112 09:43:58.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.278" endtime="20201112 09:43:58.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.270" endtime="20201112 09:43:58.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.768" endtime="20201112 09:43:58.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.767" endtime="20201112 09:43:58.308"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.332" endtime="20201112 09:43:58.351"></status>
</kw>
<msg timestamp="20201112 09:43:58.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.329" endtime="20201112 09:43:58.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.355" endtime="20201112 09:43:58.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.361" endtime="20201112 09:43:58.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.322" endtime="20201112 09:43:58.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.315" endtime="20201112 09:43:58.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.384" endtime="20201112 09:43:58.719"></status>
</kw>
<msg timestamp="20201112 09:43:58.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.381" endtime="20201112 09:43:58.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.729" endtime="20201112 09:43:58.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.748" endtime="20201112 09:43:58.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.373" endtime="20201112 09:43:58.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.369" endtime="20201112 09:43:58.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.766" level="INFO">${RESULT} = [{'time': 0.041415889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.604199999999757e-05, 'source_diff': 9.604199999999757e-05}, {'time': 0.041532153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.757" endtime="20201112 09:43:58.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.796" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:58.768" endtime="20201112 09:43:58.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.807" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.804" endtime="20201112 09:43:58.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.812" level="INFO">VALUE: [9.604199999999757e-05, 9.593100000000049e-05, 9.64859999999998e-05, 9.638899999999534e-05, 9.62080000000004e-05, 9.649999999999936e-05, 9.587500000000221e-05, 9.604199999999757e-05, 9.612500000000246e-05, 9.591700000000092e-05, 9.676400000000612e-05, 9.606999999999671e-05, 9.595800000000015e-05, 9.655600000000458e-05, 9.665299999999516e-05, 9.616700000000117e-05, 9.622299999999945e-05, 9.623599999999954e-05, 9.668000000000176e-05, 9.587500000000221e-05, 9.676399999999918e-05, 9.680499999999842e-05, 9.625000000000605e-05, 9.618100000000074e-05, 9.65279999999985e-05, 9.594400000000058e-05, 9.668000000000176e-05, 9.586100000000264e-05, 9.67080000000009e-05, 9.587500000000221e-05, 9.618100000000074e-05, 9.63059999999974e-05, 9.6027999999998e-05, 9.627799999999825e-05, 9.651399999999893e-05, 9.666700000000167e-05, 9.613900000000203e-05, 9.606899999999724e-05, 9.593100000000049e-05, 9.661100000000339e-05, 9.655500000000511e-05, 9.65279999999985e-05, 9.622199999999997e-05, 9.672200000000047e-05, 9.636100000000314e-05, 9.638899999999534e-05, 9.605600000000408e-05, 9.604100000000504e-05, 9.659699999999688e-05, 9.676299999999971e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.809" endtime="20201112 09:43:58.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.798" endtime="20201112 09:43:58.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.822" endtime="20201112 09:43:58.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.830" endtime="20201112 09:43:58.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.825" endtime="20201112 09:43:58.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.817" endtime="20201112 09:43:58.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.310" endtime="20201112 09:43:58.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.309" endtime="20201112 09:43:58.856"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.878" endtime="20201112 09:43:58.899"></status>
</kw>
<msg timestamp="20201112 09:43:58.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.875" endtime="20201112 09:43:58.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.902" endtime="20201112 09:43:58.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.909" endtime="20201112 09:43:58.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.868" endtime="20201112 09:43:58.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.862" endtime="20201112 09:43:58.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.934" endtime="20201112 09:43:59.269"></status>
</kw>
<msg timestamp="20201112 09:43:59.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040051167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.930" endtime="20201112 09:43:59.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040051167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.278" endtime="20201112 09:43:59.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.297" endtime="20201112 09:43:59.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.923" endtime="20201112 09:43:59.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.919" endtime="20201112 09:43:59.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.314" level="INFO">${RESULT} = [{'time': 0.040148542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.737500000000371e-05, 'source_diff': 9.737500000000371e-05}, {'time': 0.040267806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.305" endtime="20201112 09:43:59.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.344" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:59.316" endtime="20201112 09:43:59.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.355" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.353" endtime="20201112 09:43:59.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.360" level="INFO">VALUE: [9.737500000000371e-05, 9.76530000000031e-05, 9.684699999999713e-05, 9.70409999999991e-05, 9.74860000000008e-05, 9.744500000000156e-05, 9.708300000000475e-05, 9.74860000000008e-05, 9.75279999999995e-05, 9.701399999999943e-05, 9.733299999999806e-05, 9.726399999999968e-05, 9.741700000000242e-05, 9.747200000000122e-05, 9.786100000000464e-05, 9.705599999999814e-05, 9.747200000000122e-05, 9.725000000000011e-05, 9.705599999999814e-05, 9.679099999999885e-05, 9.718000000000226e-05, 9.73609999999972e-05, 9.701400000000637e-05, 9.769500000000181e-05, 9.745800000000165e-05, 9.681899999999799e-05, 9.727799999999925e-05, 9.708399999999728e-05, 9.779099999999985e-05, 9.697200000000072e-05, 9.750000000000036e-05, 9.751399999999993e-05, 9.709799999999685e-05, 9.725000000000011e-05, 9.681900000000493e-05, 9.687499999999627e-05, 9.731899999999849e-05, 9.729199999999882e-05, 9.716699999999523e-05, 9.755499999999917e-05, 9.701399999999943e-05, 9.780600000000583e-05, 9.695799999999422e-05, 9.733299999999806e-05, 9.741700000000242e-05, 9.751300000000046e-05, 9.777799999999975e-05, 9.772200000000147e-05, 9.745799999999472e-05, 9.77080000000019e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.357" endtime="20201112 09:43:59.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.346" endtime="20201112 09:43:59.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.370" endtime="20201112 09:43:59.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.378" endtime="20201112 09:43:59.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.374" endtime="20201112 09:43:59.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.365" endtime="20201112 09:43:59.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.858" endtime="20201112 09:43:59.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.857" endtime="20201112 09:43:59.404"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.426" endtime="20201112 09:43:59.446"></status>
</kw>
<msg timestamp="20201112 09:43:59.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.423" endtime="20201112 09:43:59.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.449" endtime="20201112 09:43:59.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.455" endtime="20201112 09:43:59.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.416" endtime="20201112 09:43:59.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.410" endtime="20201112 09:43:59.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.480" endtime="20201112 09:43:59.816"></status>
</kw>
<msg timestamp="20201112 09:43:59.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.477" endtime="20201112 09:43:59.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.826" endtime="20201112 09:43:59.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.845" endtime="20201112 09:43:59.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.468" endtime="20201112 09:43:59.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.463" endtime="20201112 09:43:59.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.862" level="INFO">${RESULT} = [{'time': 0.039978875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.795799999999522e-05, 'source_diff': 9.795799999999522e-05}, {'time': 0.040096181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.853" endtime="20201112 09:43:59.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:43:59.864" endtime="20201112 09:43:59.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.903" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.901" endtime="20201112 09:43:59.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.909" level="INFO">VALUE: [9.795799999999522e-05, 9.823700000000102e-05, 9.78609999999977e-05, 9.83609999999982e-05, 9.800000000000086e-05, 9.837499999999777e-05, 9.813900000000403e-05, 9.827800000000025e-05, 9.883399999999903e-05, 9.78479999999976e-05, 9.883299999999956e-05, 9.849999999999443e-05, 9.826400000000068e-05, 9.863899999999759e-05, 9.797199999999479e-05, 9.794399999999565e-05, 9.809699999999838e-05, 9.880500000000042e-05, 9.844399999999615e-05, 9.840300000000385e-05, 9.82359999999946e-05, 9.859699999999888e-05, 9.82359999999946e-05, 9.794500000000206e-05, 9.879100000000085e-05, 9.834699999999863e-05, 9.822199999999504e-05, 9.81809999999958e-05, 9.779099999999985e-05, 9.865199999999769e-05, 9.813900000000403e-05, 9.844499999999562e-05, 9.804199999999957e-05, 9.863900000000453e-05, 9.848599999999486e-05, 9.812499999999752e-05, 9.868000000000376e-05, 9.837499999999777e-05, 9.851400000000093e-05, 9.858299999999931e-05, 9.869500000000281e-05, 9.834700000000557e-05, 9.818000000000326e-05, 9.794399999999565e-05, 9.831999999999896e-05, 9.797200000000172e-05, 9.787499999999727e-05, 9.872200000000247e-05, 9.877800000000075e-05, 9.818100000000274e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.905" endtime="20201112 09:43:59.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.894" endtime="20201112 09:43:59.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.918" endtime="20201112 09:43:59.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.926" endtime="20201112 09:43:59.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.922" endtime="20201112 09:43:59.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.914" endtime="20201112 09:43:59.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.406" endtime="20201112 09:43:59.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.405" endtime="20201112 09:43:59.952"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.975" endtime="20201112 09:43:59.994"></status>
</kw>
<msg timestamp="20201112 09:43:59.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.972" endtime="20201112 09:43:59.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.997" endtime="20201112 09:44:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.004" endtime="20201112 09:44:00.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.964" endtime="20201112 09:44:00.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.959" endtime="20201112 09:44:00.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.027" endtime="20201112 09:44:00.364"></status>
</kw>
<msg timestamp="20201112 09:44:00.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.023" endtime="20201112 09:44:00.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.374" endtime="20201112 09:44:00.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.393" endtime="20201112 09:44:00.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.016" endtime="20201112 09:44:00.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.012" endtime="20201112 09:44:00.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.410" level="INFO">${RESULT} = [{'time': 0.040243708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.955500000000117e-05, 'source_diff': 9.955500000000117e-05}, {'time': 0.040364986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.401" endtime="20201112 09:44:00.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.440" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:00.412" endtime="20201112 09:44:00.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.451" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.448" endtime="20201112 09:44:00.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.456" level="INFO">VALUE: [9.955500000000117e-05, 9.95280000000015e-05, 9.901400000000143e-05, 9.977800000000175e-05, 9.92359999999956e-05, 9.965299999999816e-05, 9.941699999999748e-05, 9.917999999999733e-05, 9.891700000000392e-05, 9.94860000000028e-05, 9.901400000000143e-05, 9.979100000000185e-05, 9.950000000000236e-05, 9.954200000000107e-05, 9.950000000000236e-05, 9.902700000000153e-05, 9.954199999999414e-05, 9.916699999999723e-05, 9.911100000000589e-05, 9.937499999999877e-05, 9.890300000000435e-05, 9.987499999999927e-05, 9.893099999999655e-05, 9.905500000000067e-05, 9.912499999999852e-05, 9.96660000000052e-05, 9.940299999999791e-05, 9.937499999999877e-05, 9.895800000000315e-05, 9.905600000000014e-05, 9.966700000000467e-05, 9.983400000000003e-05, 9.892999999999708e-05, 9.884699999999913e-05, 9.944499999999662e-05, 9.908299999999981e-05, 9.93060000000004e-05, 9.945899999999619e-05, 9.96939999999974e-05, 9.887499999999827e-05, 9.976300000000271e-05, 9.965299999999816e-05, 9.929099999999441e-05, 9.97359999999961e-05, 9.955500000000117e-05, 9.912499999999852e-05, 9.905500000000067e-05, 9.927799999999432e-05, 9.970899999999644e-05, 9.929200000000082e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.453" endtime="20201112 09:44:00.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.442" endtime="20201112 09:44:00.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.465" endtime="20201112 09:44:00.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.474" endtime="20201112 09:44:00.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.469" endtime="20201112 09:44:00.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.461" endtime="20201112 09:44:00.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.954" endtime="20201112 09:44:00.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.953" endtime="20201112 09:44:00.499"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.522" endtime="20201112 09:44:00.541"></status>
</kw>
<msg timestamp="20201112 09:44:00.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.518" endtime="20201112 09:44:00.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.544" endtime="20201112 09:44:00.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.551" endtime="20201112 09:44:00.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.511" endtime="20201112 09:44:00.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.506" endtime="20201112 09:44:00.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.574" endtime="20201112 09:44:00.910"></status>
</kw>
<msg timestamp="20201112 09:44:00.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039993417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.570" endtime="20201112 09:44:00.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039993417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.919" endtime="20201112 09:44:00.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.938" endtime="20201112 09:44:00.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.563" endtime="20201112 09:44:00.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.559" endtime="20201112 09:44:00.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.955" level="INFO">${RESULT} = [{'time': 0.039993417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010055600000000164, 'source_diff': 0.00010055600000000164}, {'time': 0.040113667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.946" endtime="20201112 09:44:00.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.984" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:00.957" endtime="20201112 09:44:00.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.995" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.993" endtime="20201112 09:44:00.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.001" level="INFO">VALUE: [0.00010055600000000164, 9.993099999999755e-05, 9.999999999999593e-05, 0.00010037499999999977, 9.98609999999997e-05, 0.0001008610000000007, 0.00010016699999999823, 0.0001000139999999955, 0.00010083300000000156, 0.00010059700000000088, 0.00010038899999999934, 0.00010048700000000327, 0.00010050000000000336, 0.00010063899999999959, 9.994499999999712e-05, 0.00010027800000000225, 0.00010011099999999995, 0.00010072200000000447, 0.0001001939999999979, 9.988899999999884e-05, 0.00010032000000000096, 0.00010015299999999866, 0.00010004200000000157, 0.00010016599999999876, 0.00010072299999999701, 0.00010056900000000174, 0.0001008610000000007, 0.0001007359999999971, 0.00010056900000000174, 0.00010002700000000253, 0.00010005600000000114, 0.00010070799999999797, 0.00010001400000000243, 0.00010076299999999677, 9.990299999999841e-05, 0.00010037499999999977, 0.00010080599999999496, 0.00010044399999999815, 0.00010016599999999876, 0.00010012499999999952, 0.00010020900000000388, 0.0001008610000000007, 0.00010006900000000124, 9.994399999999765e-05, 0.0001001939999999979, 0.00010056900000000174, 0.00010082000000000146, 0.00010011099999999995, 0.00010037499999999977, 0.00010026400000000268]</msg>
<status status="PASS" starttime="20201112 09:44:00.998" endtime="20201112 09:44:01.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.986" endtime="20201112 09:44:01.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.011" endtime="20201112 09:44:01.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.019" endtime="20201112 09:44:01.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.015" endtime="20201112 09:44:01.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.006" endtime="20201112 09:44:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.501" endtime="20201112 09:44:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.500" endtime="20201112 09:44:01.045"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.067" endtime="20201112 09:44:01.086"></status>
</kw>
<msg timestamp="20201112 09:44:01.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.064" endtime="20201112 09:44:01.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.090" endtime="20201112 09:44:01.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.096" endtime="20201112 09:44:01.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.057" endtime="20201112 09:44:01.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.051" endtime="20201112 09:44:01.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.119" endtime="20201112 09:44:01.454"></status>
</kw>
<msg timestamp="20201112 09:44:01.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.116" endtime="20201112 09:44:01.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.464" endtime="20201112 09:44:01.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.485" endtime="20201112 09:44:01.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.109" endtime="20201112 09:44:01.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.104" endtime="20201112 09:44:01.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.506" level="INFO">${RESULT} = [{'time': 0.039991125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001014860000000048, 'source_diff': 0.0001014860000000048}, {'time': 0.040114417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.497" endtime="20201112 09:44:01.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:01.509" endtime="20201112 09:44:01.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.554" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.551" endtime="20201112 09:44:01.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.561" level="INFO">VALUE: [0.0001014860000000048, 0.00010111100000000095, 0.00010120799999999847, 0.00010091699999999898, 0.00010158300000000231, 0.00010125000000000411, 0.00010134700000000163, 0.00010172199999999854, 0.00010092999999999908, 0.00010161100000000145, 0.00010165300000000016, 0.00010140299999999991, 0.00010116599999999976, 0.00010161100000000145, 0.00010154199999999614, 0.00010158300000000231, 0.00010159700000000188, 0.00010177700000000428, 0.00010179099999999691, 0.00010091699999999898, 0.00010172199999999854, 0.00010176399999999725, 0.00010148700000000427, 0.00010180499999999648, 0.0001012359999999976, 0.0001010139999999965, 0.00010124999999999718, 0.00010177799999999682, 0.00010083300000000156, 0.00010140299999999991, 0.00010180500000000342, 0.00010108399999999435, 0.00010087500000000027, 0.00010158300000000231, 0.00010180499999999648, 0.00010143099999999905, 0.00010108399999999435, 0.00010151400000000393, 0.00010158300000000231, 0.00010143099999999905, 0.00010166700000000667, 0.00010095799999999822, 0.00010155500000000317, 0.0001015689999999958, 0.00010091700000000592, 0.00010111099999999401, 0.00010179199999999639, 0.00010159700000000188, 0.00010138800000000087, 0.00010126400000000368]</msg>
<status status="PASS" starttime="20201112 09:44:01.557" endtime="20201112 09:44:01.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.544" endtime="20201112 09:44:01.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.572" endtime="20201112 09:44:01.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.581" endtime="20201112 09:44:01.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.577" endtime="20201112 09:44:01.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.566" endtime="20201112 09:44:01.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.047" endtime="20201112 09:44:01.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.046" endtime="20201112 09:44:01.608"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.631" endtime="20201112 09:44:01.650"></status>
</kw>
<msg timestamp="20201112 09:44:01.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.627" endtime="20201112 09:44:01.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.653" endtime="20201112 09:44:01.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.660" endtime="20201112 09:44:01.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.620" endtime="20201112 09:44:01.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.614" endtime="20201112 09:44:01.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.683" endtime="20201112 09:44:02.017"></status>
</kw>
<msg timestamp="20201112 09:44:02.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040435097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.679" endtime="20201112 09:44:02.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040435097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.027" endtime="20201112 09:44:02.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.045" endtime="20201112 09:44:02.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.672" endtime="20201112 09:44:02.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.668" endtime="20201112 09:44:02.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.064" level="INFO">${RESULT} = [{'time': 0.040435097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001025410000000046, 'source_diff': 0.0001025410000000046}, {'time': 0.040558444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.055" endtime="20201112 09:44:02.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.093" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:02.066" endtime="20201112 09:44:02.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.104" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.102" endtime="20201112 09:44:02.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.109" level="INFO">VALUE: [0.0001025410000000046, 0.00010261100000000245, 0.00010265300000000116, 0.00010242999999999364, 0.00010205500000000367, 0.00010259800000000235, 0.0001020559999999962, 0.00010212500000000152, 0.0001020139999999975, 0.0001019160000000005, 0.00010194399999999965, 0.0001026810000000003, 0.00010226399999999775, 0.00010197199999999879, 0.0001027080000000069, 0.0001028610000000027, 0.00010277799999999782, 0.00010222299999999851, 0.00010254200000000407, 0.00010216700000000023, 0.0001028610000000027, 0.00010262499999999508, 0.00010262500000000202, 0.00010252799999999757, 0.0001023610000000022, 0.00010224999999999818, 0.0001019160000000005, 0.0001026810000000003, 0.00010193000000000008, 0.00010274999999999868, 0.00010287499999999533, 0.00010222299999999851, 0.00010244400000000015, 0.00010274999999999868, 0.00010265300000000116, 0.00010237500000000177, 0.0001027359999999991, 0.00010279200000000432, 0.00010291700000000098, 0.00010284699999999619, 0.00010276399999999825, 0.00010274999999999868, 0.00010227699999999784, 0.00010244499999999962, 0.0001027359999999991, 0.00010204200000000357, 0.00010240300000000091, 0.0001027359999999991, 0.00010274999999999868, 0.00010252699999999809]</msg>
<status status="PASS" starttime="20201112 09:44:02.106" endtime="20201112 09:44:02.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.095" endtime="20201112 09:44:02.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.118" endtime="20201112 09:44:02.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.127" endtime="20201112 09:44:02.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.122" endtime="20201112 09:44:02.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.114" endtime="20201112 09:44:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.610" endtime="20201112 09:44:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.609" endtime="20201112 09:44:02.152"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.175" endtime="20201112 09:44:02.194"></status>
</kw>
<msg timestamp="20201112 09:44:02.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.172" endtime="20201112 09:44:02.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.198" endtime="20201112 09:44:02.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.204" endtime="20201112 09:44:02.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.164" endtime="20201112 09:44:02.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.159" endtime="20201112 09:44:02.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.227" endtime="20201112 09:44:02.561"></status>
</kw>
<msg timestamp="20201112 09:44:02.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039828903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039931917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.224" endtime="20201112 09:44:02.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039828903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039931917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.570" endtime="20201112 09:44:02.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.588" endtime="20201112 09:44:02.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.216" endtime="20201112 09:44:02.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.212" endtime="20201112 09:44:02.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.609" level="INFO">${RESULT} = [{'time': 0.039931917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030139999999985, 'source_diff': 0.0001030139999999985}, {'time': 0.04005825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:02.600" endtime="20201112 09:44:02.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:02.611" endtime="20201112 09:44:02.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.649" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.647" endtime="20201112 09:44:02.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.654" level="INFO">VALUE: [0.0001030139999999985, 0.00010320799999999353, 0.00010382000000000446, 0.00010290200000000194, 0.00010343100000000105, 0.0001036940000000014, 0.0001038339999999971, 0.00010381899999999805, 0.0001038480000000036, 0.00010295800000000022, 0.00010288900000000184, 0.00010305499999999773, 0.00010338900000000234, 0.00010344500000000062, 0.00010298599999999936, 0.00010297299999999926, 0.0001037360000000001, 0.00010363900000000259, 0.00010295899999999969, 0.0001035689999999978, 0.00010351299999999952, 0.00010345800000000072, 0.0001035280000000055, 0.00010288900000000184, 0.00010302799999999807, 0.00010302799999999807, 0.0001029160000000015, 0.00010358299999999737, 0.00010380499999999848, 0.00010366700000000173, 0.0001031940000000009, 0.00010354200000000507, 0.00010290300000000141, 0.0001030139999999985, 0.00010299999999999893, 0.00010326399999999875, 0.0001032359999999996, 0.00010320899999999994, 0.00010374999999999968, 0.00010365200000000269, 0.00010363899999999565, 0.00010327799999999832, 0.0001032359999999996, 0.00010309699999999644, 0.00010291599999999457, 0.00010377799999999882, 0.00010284700000000313, 0.00010334799999999617, 0.00010377799999999882, 0.0001030559999999972]</msg>
<status status="PASS" starttime="20201112 09:44:02.651" endtime="20201112 09:44:02.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.640" endtime="20201112 09:44:02.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.664" endtime="20201112 09:44:02.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.672" endtime="20201112 09:44:02.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.668" endtime="20201112 09:44:02.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.659" endtime="20201112 09:44:02.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.155" endtime="20201112 09:44:02.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.153" endtime="20201112 09:44:02.698"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.720" endtime="20201112 09:44:02.740"></status>
</kw>
<msg timestamp="20201112 09:44:02.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.717" endtime="20201112 09:44:02.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.743" endtime="20201112 09:44:02.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.749" endtime="20201112 09:44:02.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.710" endtime="20201112 09:44:02.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.704" endtime="20201112 09:44:02.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.772" endtime="20201112 09:44:03.106"></status>
</kw>
<msg timestamp="20201112 09:44:03.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039974125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.769" endtime="20201112 09:44:03.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039974125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.115" endtime="20201112 09:44:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.134" endtime="20201112 09:44:03.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.762" endtime="20201112 09:44:03.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.757" endtime="20201112 09:44:03.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.152" level="INFO">${RESULT} = [{'time': 0.040078958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010483299999999862, 'source_diff': 0.00010483299999999862}, {'time': 0.040206278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.144" endtime="20201112 09:44:03.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:03.154" endtime="20201112 09:44:03.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.192" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.190" endtime="20201112 09:44:03.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.198" level="INFO">VALUE: [0.00010483299999999862, 0.00010450000000000043, 0.00010469500000000187, 0.00010468000000000283, 0.00010437500000000377, 0.00010438900000000334, 0.00010447200000000129, 0.0001045559999999987, 0.00010412500000000352, 0.00010390300000000241, 0.00010461099999999751, 0.00010433300000000506, 0.00010443100000000205, 0.00010411100000000395, 0.00010447199999999435, 0.0001040689999999983, 0.00010388800000000337, 0.00010429099999999941, 0.0001041810000000018, 0.00010417999999999539, 0.00010462499999999708, 0.00010443100000000205, 0.00010466699999999579, 0.00010420800000000147, 0.00010433400000000453, 0.00010450000000000043, 0.00010402799999999907, 0.00010381999999999753, 0.00010404199999999864, 0.0001046940000000024, 0.00010426399999999975, 0.00010454199999999914, 0.00010458399999999785, 0.00010476400000000025, 0.00010455499999999923, 0.00010431899999999855, 0.0001047360000000011, 0.00010434699999999769, 0.0001040559999999982, 0.00010405499999999873, 0.00010437500000000377, 0.00010476400000000025, 0.00010416700000000223, 0.00010416600000000276, 0.00010431899999999855, 0.00010443000000000258, 0.00010444400000000215, 0.0001040139999999995, 0.00010444500000000162, 0.00010391599999999557]</msg>
<status status="PASS" starttime="20201112 09:44:03.195" endtime="20201112 09:44:03.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.183" endtime="20201112 09:44:03.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.207" endtime="20201112 09:44:03.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.215" endtime="20201112 09:44:03.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.211" endtime="20201112 09:44:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.203" endtime="20201112 09:44:03.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.700" endtime="20201112 09:44:03.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.699" endtime="20201112 09:44:03.241"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.263" endtime="20201112 09:44:03.283"></status>
</kw>
<msg timestamp="20201112 09:44:03.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.260" endtime="20201112 09:44:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.286" endtime="20201112 09:44:03.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.292" endtime="20201112 09:44:03.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.253" endtime="20201112 09:44:03.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.247" endtime="20201112 09:44:03.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.315" endtime="20201112 09:44:03.650"></status>
</kw>
<msg timestamp="20201112 09:44:03.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039783, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:03.312" endtime="20201112 09:44:03.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039783, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:03.659" endtime="20201112 09:44:03.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.678" endtime="20201112 09:44:03.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.305" endtime="20201112 09:44:03.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.300" endtime="20201112 09:44:03.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.696" level="INFO">${RESULT} = [{'time': 0.039783, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543099999999611, 'source_diff': 0.00010543099999999611}, {'time': 0.039909347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:03.688" endtime="20201112 09:44:03.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.725" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:03.698" endtime="20201112 09:44:03.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.736" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.734" endtime="20201112 09:44:03.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.742" level="INFO">VALUE: [0.00010543099999999611, 0.00010515299999999672, 0.00010493000000000308, 0.00010499999999999399, 0.00010500000000000093, 0.00010533299999999912, 0.00010541599999999707, 0.0001053889999999974, 0.00010509700000000538, 0.00010527800000000032, 0.0001051810000000028, 0.00010569500000000287, 0.00010511099999999801, 0.00010500000000000093, 0.00010515300000000366, 0.00010512499999999758, 0.00010495800000000222, 0.00010519399999999596, 0.00010537499999999783, 0.00010568000000000383, 0.00010587499999999833, 0.00010534699999999869, 0.00010572200000000254, 0.00010559699999999894, 0.00010575000000000168, 0.00010544500000000262, 0.00010530599999999946, 0.00010497200000000179, 0.00010554100000000066, 0.00010572200000000254, 0.00010547199999999535, 0.00010487500000000427, 0.0001058889999999979, 0.0001058610000000057, 0.00010526400000000075, 0.00010577800000000082, 0.00010512499999999758, 0.00010502800000000007, 0.00010555500000000023, 0.00010537500000000477, 0.00010497300000000126, 0.00010498600000000136, 0.00010575000000000168, 0.00010572300000000201, 0.00010557000000000621, 0.00010494500000000212, 0.00010554200000000014, 0.00010544500000000262, 0.00010491599999999657, 0.00010512499999999758]</msg>
<status status="PASS" starttime="20201112 09:44:03.739" endtime="20201112 09:44:03.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.727" endtime="20201112 09:44:03.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.751" endtime="20201112 09:44:03.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.759" endtime="20201112 09:44:03.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.755" endtime="20201112 09:44:03.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.746" endtime="20201112 09:44:03.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.243" endtime="20201112 09:44:03.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.242" endtime="20201112 09:44:03.785"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.808" endtime="20201112 09:44:03.827"></status>
</kw>
<msg timestamp="20201112 09:44:03.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.804" endtime="20201112 09:44:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.831" endtime="20201112 09:44:03.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.837" endtime="20201112 09:44:03.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.797" endtime="20201112 09:44:03.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.791" endtime="20201112 09:44:03.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.860" endtime="20201112 09:44:04.195"></status>
</kw>
<msg timestamp="20201112 09:44:04.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040085056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.856" endtime="20201112 09:44:04.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040085056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.205" endtime="20201112 09:44:04.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.223" endtime="20201112 09:44:04.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.849" endtime="20201112 09:44:04.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.845" endtime="20201112 09:44:04.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.242" level="INFO">${RESULT} = [{'time': 0.040191028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010597199999999585, 'source_diff': 0.00010597199999999585}, {'time': 0.040316403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.233" endtime="20201112 09:44:04.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.271" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:04.244" endtime="20201112 09:44:04.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.282" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.279" endtime="20201112 09:44:04.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.287" level="INFO">VALUE: [0.00010597199999999585, 0.00010666699999999779, 0.0001060690000000003, 0.0001062219999999961, 0.00010591699999999704, 0.00010615300000000466, 0.00010629200000000089, 0.00010645899999999625, 0.00010647199999999635, 0.0001067360000000031, 0.00010611099999999901, 0.00010690299999999847, 0.0001067219999999966, 0.00010662499999999908, 0.00010611099999999901, 0.0001060140000000015, 0.00010665300000000516, 0.00010661099999999951, 0.00010637499999999883, 0.00010666700000000473, 0.00010675000000000268, 0.00010688799999999943, 0.00010677700000000234, 0.00010608399999999935, 0.00010604100000000116, 0.00010673599999999617, 0.00010630599999999352, 0.00010602800000000107, 0.00010606999999999978, 0.00010686099999999976, 0.00010636099999999926, 0.00010657000000000028, 0.00010669500000000387, 0.00010636099999999926, 0.00010636099999999926, 0.00010629200000000089, 0.00010672200000000354, 0.00010615299999999772, 0.00010684799999999967, 0.00010641700000000448, 0.00010640299999999797, 0.00010655500000000123, 0.0001061810000000038, 0.0001065560000000007, 0.00010645800000000372, 0.00010665299999999822, 0.00010618099999999686, 0.00010593099999999661, 0.00010587499999999833, 0.00010602700000000159]</msg>
<status status="PASS" starttime="20201112 09:44:04.284" endtime="20201112 09:44:04.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.273" endtime="20201112 09:44:04.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.296" endtime="20201112 09:44:04.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.305" endtime="20201112 09:44:04.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.300" endtime="20201112 09:44:04.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.292" endtime="20201112 09:44:04.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.787" endtime="20201112 09:44:04.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.786" endtime="20201112 09:44:04.330"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.353" endtime="20201112 09:44:04.372"></status>
</kw>
<msg timestamp="20201112 09:44:04.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.350" endtime="20201112 09:44:04.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.376" endtime="20201112 09:44:04.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.382" endtime="20201112 09:44:04.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.342" endtime="20201112 09:44:04.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.337" endtime="20201112 09:44:04.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.405" endtime="20201112 09:44:04.740"></status>
</kw>
<msg timestamp="20201112 09:44:04.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039906986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040014569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.402" endtime="20201112 09:44:04.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039906986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040014569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.749" endtime="20201112 09:44:04.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.768" endtime="20201112 09:44:04.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.395" endtime="20201112 09:44:04.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.390" endtime="20201112 09:44:04.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.788" level="INFO">${RESULT} = [{'time': 0.040014569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010758300000000137, 'source_diff': 0.00010758300000000137}, {'time': 0.040139889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.780" endtime="20201112 09:44:04.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.817" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:04.790" endtime="20201112 09:44:04.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.828" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.826" endtime="20201112 09:44:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.833" level="INFO">VALUE: [0.00010758300000000137, 0.00010755599999999477, 0.00010715199999999925, 0.00010779200000000239, 0.00010738900000000634, 0.000107902, 0.00010766599999999932, 0.00010745899999999725, 0.00010768000000000583, 0.00010761100000000051, 0.00010732000000000103, 0.00010722200000000404, 0.00010762500000000008, 0.0001077360000000041, 0.00010782000000000153, 0.00010709799999999992, 0.0001073889999999994, 0.00010699999999999599, 0.00010702700000000259, 0.00010701399999999556, 0.0001074019999999995, 0.00010766699999999879, 0.00010737499999999983, 0.00010751399999999606, 0.0001068889999999989, 0.00010747200000000429, 0.00010716599999999882, 0.0001077219999999976, 0.00010752699999999615, 0.00010776400000000325, 0.00010734700000000069, 0.00010711199999999949, 0.00010693099999999761, 0.00010697199999999685, 0.00010766699999999879, 0.00010779200000000239, 0.00010712499999999958, 0.00010773699999999664, 0.00010709700000000044, 0.0001070140000000025, 0.00010755599999999477, 0.00010724999999999624, 0.0001077219999999976, 0.00010724999999999624, 0.00010726400000000275, 0.00010741599999999907, 0.0001070560000000012, 0.00010767999999999889, 0.0001070690000000013, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201112 09:44:04.830" endtime="20201112 09:44:04.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.819" endtime="20201112 09:44:04.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.843" endtime="20201112 09:44:04.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.851" endtime="20201112 09:44:04.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.847" endtime="20201112 09:44:04.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.838" endtime="20201112 09:44:04.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.332" endtime="20201112 09:44:04.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.331" endtime="20201112 09:44:04.877"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.899" endtime="20201112 09:44:04.919"></status>
</kw>
<msg timestamp="20201112 09:44:04.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.896" endtime="20201112 09:44:04.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.923" endtime="20201112 09:44:04.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.929" endtime="20201112 09:44:04.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.889" endtime="20201112 09:44:04.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.883" endtime="20201112 09:44:04.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.953" endtime="20201112 09:44:05.288"></status>
</kw>
<msg timestamp="20201112 09:44:05.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040035958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.950" endtime="20201112 09:44:05.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040035958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.297" endtime="20201112 09:44:05.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.316" endtime="20201112 09:44:05.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.943" endtime="20201112 09:44:05.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.938" endtime="20201112 09:44:05.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.334" level="INFO">${RESULT} = [{'time': 0.040035958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001087360000000051, 'source_diff': 0.0001087360000000051}, {'time': 0.040164319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.326" endtime="20201112 09:44:05.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.364" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:05.336" endtime="20201112 09:44:05.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.374" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.372" endtime="20201112 09:44:05.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.380" level="INFO">VALUE: [0.0001087360000000051, 0.00010874999999999774, 0.00010844399999999921, 0.00010880599999999602, 0.00010809800000000092, 0.00010859700000000194, 0.00010854200000000314, 0.0001087219999999986, 0.0001080419999999957, 0.00010842999999999964, 0.00010809800000000092, 0.000108514000000004, 0.00010868099999999936, 0.00010879200000000339, 0.00010826399999999681, 0.00010807000000000178, 0.00010832000000000203, 0.00010873599999999817, 0.00010784700000000119, 0.00010811100000000101, 0.00010844499999999868, 0.00010800000000000393, 0.0001088890000000009, 0.00010877700000000434, 0.00010837500000000083, 0.00010851399999999706, 0.0001080690000000023, 0.000108514000000004, 0.00010813900000000015, 0.00010859700000000194, 0.0001087360000000051, 0.00010858299999999543, 0.00010797199999999785, 0.00010807000000000178, 0.00010830599999999552, 0.0001082219999999981, 0.00010863900000000065, 0.00010804200000000264, 0.00010884800000000167, 0.00010811100000000101, 0.00010826300000000427, 0.00010861200000000099, 0.00010866699999999979, 0.00010883300000000262, 0.00010832000000000203, 0.00010791699999999904, 0.00010795799999999828, 0.00010794499999999818, 0.00010863900000000065, 0.00010804099999999622]</msg>
<status status="PASS" starttime="20201112 09:44:05.377" endtime="20201112 09:44:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.365" endtime="20201112 09:44:05.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.389" endtime="20201112 09:44:05.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.397" endtime="20201112 09:44:05.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.393" endtime="20201112 09:44:05.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.385" endtime="20201112 09:44:05.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.879" endtime="20201112 09:44:05.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.878" endtime="20201112 09:44:05.423"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.446" endtime="20201112 09:44:05.465"></status>
</kw>
<msg timestamp="20201112 09:44:05.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.442" endtime="20201112 09:44:05.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.469" endtime="20201112 09:44:05.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.475" endtime="20201112 09:44:05.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.435" endtime="20201112 09:44:05.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.430" endtime="20201112 09:44:05.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.498" endtime="20201112 09:44:05.831"></status>
</kw>
<msg timestamp="20201112 09:44:05.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04001725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:05.495" endtime="20201112 09:44:05.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04001725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040126917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:05.840" endtime="20201112 09:44:05.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.859" endtime="20201112 09:44:05.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.488" endtime="20201112 09:44:05.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.483" endtime="20201112 09:44:05.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.877" level="INFO">${RESULT} = [{'time': 0.040126917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010966700000000079, 'source_diff': 0.00010966700000000079}, {'time': 0.040256264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.869" endtime="20201112 09:44:05.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.907" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:05.879" endtime="20201112 09:44:05.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.917" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.915" endtime="20201112 09:44:05.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.923" level="INFO">VALUE: [0.00010966700000000079, 0.00010902799999999713, 0.00010929099999999747, 0.00010919399999999996, 0.00010899999999999799, 0.00010961099999999557, 0.0001097769999999984, 0.00010913900000000115, 0.00010938800000000193, 0.00010915299999999378, 0.00010924999999999824, 0.00010929199999999695, 0.00010909700000000244, 0.000109596999999996, 0.00010936200000000174, 0.0001090560000000032, 0.00010943100000000011, 0.00010930499999999704, 0.00010916600000000082, 0.00010952799999999763, 0.0001092219999999991, 0.00010976399999999831, 0.00010973599999999917, 0.00010907000000000278, 0.00010990300000000147, 0.00010968000000000089, 0.0001090419999999967, 0.00010890300000000047, 0.00010930500000000398, 0.00010891600000000057, 0.00010974999999999874, 0.00010974999999999874, 0.00010934699999999575, 0.00010888899999999396, 0.00010966600000000132, 0.00010976399999999831, 0.0001097219999999996, 0.00010965300000000122, 0.00010895800000000622, 0.0001097219999999996, 0.00010948599999999892, 0.00010913799999999474, 0.0001097219999999996, 0.00010944499999999968, 0.00010966700000000079, 0.00010922299999999857, 0.00010974999999999874, 0.00010973599999999917, 0.00010919399999999996, 0.00010968100000000036]</msg>
<status status="PASS" starttime="20201112 09:44:05.920" endtime="20201112 09:44:05.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.908" endtime="20201112 09:44:05.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.932" endtime="20201112 09:44:05.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.941" endtime="20201112 09:44:05.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.936" endtime="20201112 09:44:05.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.928" endtime="20201112 09:44:05.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.425" endtime="20201112 09:44:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.424" endtime="20201112 09:44:05.967"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.990" endtime="20201112 09:44:06.010"></status>
</kw>
<msg timestamp="20201112 09:44:06.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.987" endtime="20201112 09:44:06.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.013" endtime="20201112 09:44:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.020" endtime="20201112 09:44:06.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.980" endtime="20201112 09:44:06.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.974" endtime="20201112 09:44:06.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.043" endtime="20201112 09:44:06.375"></status>
</kw>
<msg timestamp="20201112 09:44:06.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041124472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0412345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:06.039" endtime="20201112 09:44:06.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041124472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0412345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:06.385" endtime="20201112 09:44:06.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.403" endtime="20201112 09:44:06.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.032" endtime="20201112 09:44:06.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.028" endtime="20201112 09:44:06.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.422" level="INFO">${RESULT} = [{'time': 0.0412345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011002799999999813, 'source_diff': 0.00011002799999999813}, {'time': 0.041364819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.413" endtime="20201112 09:44:06.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.451" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:06.424" endtime="20201112 09:44:06.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.462" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.460" endtime="20201112 09:44:06.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.467" level="INFO">VALUE: [0.00011002799999999813, 0.0001104299999999947, 0.00010991700000000104, 0.0001105549999999983, 0.00011018100000000086, 0.00011069400000000146, 0.00011013800000000268, 0.00011024999999999924, 0.00011019400000000096, 0.00011065199999999581, 0.00011043099999999417, 0.0001100549999999978, 0.00010990300000000147, 0.00010994500000000018, 0.000109902000000002, 0.00011074999999999974, 0.00011081899999999811, 0.00010997199999999985, 0.00011076399999999931, 0.00010993000000000114, 0.00011059799999999648, 0.00011040300000000197, 0.00011006999999999684, 0.00011030599999999752, 0.00011052799999999863, 0.00011080499999999854, 0.0001105419999999982, 0.00011054099999999872, 0.0001102220000000001, 0.00011043100000000111, 0.00011019400000000096, 0.00011074999999999974, 0.00010990300000000147, 0.00011037499999999589, 0.00010998599999999942, 0.00011088899999999596, 0.00011087500000000333, 0.00011069500000000093, 0.00011007000000000378, 0.00011044500000000068, 0.00010999999999999899, 0.00011013900000000215, 0.00011061099999999657, 0.00011058300000000437, 0.0001098619999999953, 0.00011087500000000333, 0.0001100419999999977, 0.00010991600000000157, 0.00011036100000000326, 0.00011001300000000602]</msg>
<status status="PASS" starttime="20201112 09:44:06.464" endtime="20201112 09:44:06.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.453" endtime="20201112 09:44:06.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.483" endtime="20201112 09:44:06.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.491" endtime="20201112 09:44:06.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.487" endtime="20201112 09:44:06.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.479" endtime="20201112 09:44:06.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.969" endtime="20201112 09:44:06.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.968" endtime="20201112 09:44:06.517"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.540" endtime="20201112 09:44:06.560"></status>
</kw>
<msg timestamp="20201112 09:44:06.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.536" endtime="20201112 09:44:06.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.563" endtime="20201112 09:44:06.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.569" endtime="20201112 09:44:06.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.529" endtime="20201112 09:44:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.523" endtime="20201112 09:44:06.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.592" endtime="20201112 09:44:06.925"></status>
</kw>
<msg timestamp="20201112 09:44:06.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040102389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.589" endtime="20201112 09:44:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040102389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.935" endtime="20201112 09:44:06.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.953" endtime="20201112 09:44:06.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.582" endtime="20201112 09:44:06.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.577" endtime="20201112 09:44:06.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.973" level="INFO">${RESULT} = [{'time': 0.040102389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011108300000000487, 'source_diff': 0.00011108300000000487}, {'time': 0.040234736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:06.965" endtime="20201112 09:44:06.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.004" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:06.976" endtime="20201112 09:44:07.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.014" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.012" endtime="20201112 09:44:07.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.020" level="INFO">VALUE: [0.00011108300000000487, 0.00011125000000000024, 0.00011116700000000229, 0.00011170899999999456, 0.00011150000000000049, 0.00011144400000000221, 0.00011113900000000315, 0.00011119500000000143, 0.00011133299999999818, 0.00011113900000000315, 0.00011156999999999834, 0.00011129199999999895, 0.00011168099999999542, 0.00011184699999999825, 0.00011087500000000333, 0.00011099999999999999, 0.00011084800000000367, 0.00011166700000000279, 0.00011126399999999981, 0.00011104099999999922, 0.00011169500000000193, 0.00011161100000000451, 0.00011156999999999834, 0.00011101399999999956, 0.00011190299999999653, 0.00011169400000000246, 0.00011136200000000374, 0.00011133399999999766, 0.00011136099999999732, 0.00011150000000000049, 0.00011111100000000401, 0.00011170800000000203, 0.00011144499999999474, 0.00011166700000000279, 0.00011187500000000433, 0.000111209000000001, 0.00011167999999999595, 0.00011165300000000322, 0.0001117220000000016, 0.00011094499999999424, 0.00011087499999999639, 0.0001117220000000016, 0.00011123600000000067, 0.00011102800000000607, 0.00011169500000000193, 0.00011111099999999707, 0.00011144400000000221, 0.00011098600000000042, 0.00011133399999999766, 0.00011111100000000401]</msg>
<status status="PASS" starttime="20201112 09:44:07.017" endtime="20201112 09:44:07.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.005" endtime="20201112 09:44:07.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.029" endtime="20201112 09:44:07.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.037" endtime="20201112 09:44:07.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.033" endtime="20201112 09:44:07.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.025" endtime="20201112 09:44:07.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.519" endtime="20201112 09:44:07.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.518" endtime="20201112 09:44:07.063"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.086" endtime="20201112 09:44:07.106"></status>
</kw>
<msg timestamp="20201112 09:44:07.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.083" endtime="20201112 09:44:07.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.109" endtime="20201112 09:44:07.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.115" endtime="20201112 09:44:07.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.075" endtime="20201112 09:44:07.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.070" endtime="20201112 09:44:07.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.138" endtime="20201112 09:44:07.473"></status>
</kw>
<msg timestamp="20201112 09:44:07.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03992725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040040069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:07.135" endtime="20201112 09:44:07.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03992725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040040069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:07.482" endtime="20201112 09:44:07.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.500" endtime="20201112 09:44:07.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.128" endtime="20201112 09:44:07.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.123" endtime="20201112 09:44:07.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.519" level="INFO">${RESULT} = [{'time': 0.040040069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011281900000000011, 'source_diff': 0.00011281900000000011}, {'time': 0.040175347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:07.510" endtime="20201112 09:44:07.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.548" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:07.521" endtime="20201112 09:44:07.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.559" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.556" endtime="20201112 09:44:07.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.564" level="INFO">VALUE: [0.00011281900000000011, 0.00011252800000000063, 0.00011223599999999473, 0.00011286100000000576, 0.00011223600000000167, 0.00011234699999999875, 0.00011211100000000501, 0.00011250000000000149, 0.00011217999999999645, 0.00011230500000000004, 0.00011225000000000124, 0.00011275000000000174, 0.00011240300000000397, 0.0001123890000000044, 0.00011290300000000447, 0.00011273599999999523, 0.00011222299999999463, 0.00011276400000000131, 0.0001119169999999961, 0.00011266599999999738, 0.00011223600000000167, 0.0001124169999999966, 0.00011276400000000131, 0.00011233399999999866, 0.00011195799999999534, 0.00011195799999999534, 0.00011241599999999713, 0.00011270799999999609, 0.00011256899999999986, 0.00011244500000000268, 0.00011263899999999771, 0.00011245899999999531, 0.00011195799999999534, 0.00011288899999999796, 0.00011254100000000072, 0.00011229200000000689, 0.00011268099999999642, 0.00011191600000000357, 0.0001120419999999997, 0.00011248599999999498, 0.0001124299999999967, 0.00011209700000000544, 0.00011211099999999807, 0.0001128749999999984, 0.00011220800000000253, 0.00011263899999999771, 0.00011265300000000422, 0.00011200000000000099, 0.00011269399999999652, 0.00011251400000000106]</msg>
<status status="PASS" starttime="20201112 09:44:07.561" endtime="20201112 09:44:07.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.550" endtime="20201112 09:44:07.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.573" endtime="20201112 09:44:07.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.582" endtime="20201112 09:44:07.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.577" endtime="20201112 09:44:07.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.569" endtime="20201112 09:44:07.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.065" endtime="20201112 09:44:07.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.064" endtime="20201112 09:44:07.607"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.630" endtime="20201112 09:44:07.650"></status>
</kw>
<msg timestamp="20201112 09:44:07.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.626" endtime="20201112 09:44:07.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.653" endtime="20201112 09:44:07.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.659" endtime="20201112 09:44:07.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.619" endtime="20201112 09:44:07.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.614" endtime="20201112 09:44:07.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.682" endtime="20201112 09:44:08.019"></status>
</kw>
<msg timestamp="20201112 09:44:08.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039869903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039983194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.679" endtime="20201112 09:44:08.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039869903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039983194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.029" endtime="20201112 09:44:08.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.049" endtime="20201112 09:44:08.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.672" endtime="20201112 09:44:08.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.667" endtime="20201112 09:44:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.067" level="INFO">${RESULT} = [{'time': 0.039983194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011329100000000147, 'source_diff': 0.00011329100000000147}, {'time': 0.040116528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:08.058" endtime="20201112 09:44:08.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.097" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:08.069" endtime="20201112 09:44:08.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.108" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.105" endtime="20201112 09:44:08.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.113" level="INFO">VALUE: [0.00011329100000000147, 0.00011352800000000163, 0.00011366699999999785, 0.00011306900000000036, 0.00011295799999999634, 0.00011305600000000027, 0.00011302800000000113, 0.00011349999999999555, 0.00011372199999999666, 0.00011293099999999667, 0.0001130969999999995, 0.00011354199999999426, 0.00011376399999999537, 0.00011334699999999975, 0.0001138749999999994, 0.00011311099999999907, 0.00011357000000000034, 0.00011313899999999821, 0.00011305600000000027, 0.00011352800000000163, 0.00011361099999999957, 0.00011363899999999871, 0.00011320800000000353, 0.0001130550000000008, 0.0001137220000000036, 0.00011351399999999512, 0.00011330500000000104, 0.00011366699999999785, 0.00011369499999999699, 0.00011295800000000328, 0.00011288899999999796, 0.00011330600000000052, 0.00011347200000000335, 0.00011369499999999699, 0.00011368100000000436, 0.00011323599999999573, 0.00011368100000000436, 0.00011362499999999914, 0.00011370800000000403, 0.00011286200000000524, 0.0001137770000000024, 0.00011336099999999932, 0.00011301400000000156, 0.00011302700000000165, 0.00011362499999999914, 0.00011354100000000172, 0.00011308299999999993, 0.00011329100000000147, 0.00011379200000000145, 0.00011355600000000077]</msg>
<status status="PASS" starttime="20201112 09:44:08.110" endtime="20201112 09:44:08.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.098" endtime="20201112 09:44:08.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.122" endtime="20201112 09:44:08.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.131" endtime="20201112 09:44:08.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.126" endtime="20201112 09:44:08.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.118" endtime="20201112 09:44:08.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.609" endtime="20201112 09:44:08.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.608" endtime="20201112 09:44:08.157"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.179" endtime="20201112 09:44:08.199"></status>
</kw>
<msg timestamp="20201112 09:44:08.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.176" endtime="20201112 09:44:08.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.203" endtime="20201112 09:44:08.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.209" endtime="20201112 09:44:08.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.169" endtime="20201112 09:44:08.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.163" endtime="20201112 09:44:08.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.233" endtime="20201112 09:44:08.569"></status>
</kw>
<msg timestamp="20201112 09:44:08.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039841, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:08.230" endtime="20201112 09:44:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039841, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:08.578" endtime="20201112 09:44:08.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.596" endtime="20201112 09:44:08.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.222" endtime="20201112 09:44:08.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.218" endtime="20201112 09:44:08.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.615" level="INFO">${RESULT} = [{'time': 0.039955514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011451399999999612, 'source_diff': 0.00011451399999999612}, {'time': 0.040091875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:08.606" endtime="20201112 09:44:08.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.645" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:08.617" endtime="20201112 09:44:08.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.655" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.653" endtime="20201112 09:44:08.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.661" level="INFO">VALUE: [0.00011451399999999612, 0.00011448599999999698, 0.00011483300000000168, 0.00011417999999999845, 0.00011397299999999638, 0.0001142220000000041, 0.00011391599999999863, 0.00011401400000000256, 0.00011447200000000435, 0.00011427800000000238, 0.00011395799999999734, 0.0001143049999999951, 0.00011419499999999749, 0.00011431900000000161, 0.00011438899999999946, 0.00011394499999999724, 0.000114597000000001, 0.00011399999999999605, 0.00011479200000000245, 0.00011390199999999906, 0.00011426400000000281, 0.00011436100000000032, 0.00011412499999999964, 0.0001148750000000004, 0.00011422199999999716, 0.00011450000000000349, 0.00011452800000000263, 0.00011483400000000116, 0.00011465299999999928, 0.00011405600000000127, 0.00011417999999999845, 0.00011473700000000364, 0.00011468099999999842, 0.00011423599999999673, 0.0001142220000000041, 0.00011400000000000299, 0.00011441599999999913, 0.00011423600000000367, 0.00011473599999999723, 0.00011395900000000375, 0.00011465299999999928, 0.00011476400000000331, 0.00011393099999999767, 0.0001140550000000018, 0.00011438899999999946, 0.00011415199999999931, 0.0001140550000000018, 0.00011475000000000374, 0.00011397299999999638, 0.00011488899999999996]</msg>
<status status="PASS" starttime="20201112 09:44:08.658" endtime="20201112 09:44:08.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.646" endtime="20201112 09:44:08.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.670" endtime="20201112 09:44:08.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.678" endtime="20201112 09:44:08.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.674" endtime="20201112 09:44:08.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.666" endtime="20201112 09:44:08.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.159" endtime="20201112 09:44:08.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.158" endtime="20201112 09:44:08.704"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.727" endtime="20201112 09:44:08.747"></status>
</kw>
<msg timestamp="20201112 09:44:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.724" endtime="20201112 09:44:08.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.751" endtime="20201112 09:44:08.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.757" endtime="20201112 09:44:08.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.716" endtime="20201112 09:44:08.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.711" endtime="20201112 09:44:08.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.780" endtime="20201112 09:44:09.115"></status>
</kw>
<msg timestamp="20201112 09:44:09.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.776" endtime="20201112 09:44:09.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.124" endtime="20201112 09:44:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.142" endtime="20201112 09:44:09.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.769" endtime="20201112 09:44:09.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.765" endtime="20201112 09:44:09.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.163" level="INFO">${RESULT} = [{'time': 0.040333389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011497199999999791, 'source_diff': 0.00011497199999999791}, {'time': 0.040465722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:09.154" endtime="20201112 09:44:09.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.192" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:09.165" endtime="20201112 09:44:09.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.203" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.201" endtime="20201112 09:44:09.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.209" level="INFO">VALUE: [0.00011497199999999791, 0.00011515299999999978, 0.0001152499999999973, 0.00011511100000000107, 0.00011495900000000475, 0.00011572199999999866, 0.00011511100000000107, 0.00011502699999999672, 0.00011583399999999522, 0.00011558300000000243, 0.00011551400000000406, 0.00011523600000000467, 0.00011488800000000049, 0.00011577800000000388, 0.00011509699999999456, 0.00011515299999999978, 0.0001150420000000027, 0.00011561100000000157, 0.00011515200000000031, 0.00011565300000000028, 0.00011494399999999877, 0.00011500000000000399, 0.00011581999999999565, 0.0001156249999999942, 0.00011576399999999737, 0.00011498699999999695, 0.00011490299999999953, 0.00011497200000000485, 0.0001153750000000009, 0.0001158049999999966, 0.00011572199999999866, 0.00011563800000000124, 0.00011497300000000432, 0.00011488899999999996, 0.00011543099999999917, 0.00011504100000000322, 0.00011566600000000038, 0.00011544399999999927, 0.00011558300000000243, 0.00011494399999999877, 0.00011577699999999747, 0.00011554099999999679, 0.00011561100000000157, 0.00011527800000000338, 0.0001149299999999992, 0.00011504100000000322, 0.00011583299999999574, 0.00011538900000000046, 0.00011525000000000424, 0.00011565199999999387]</msg>
<status status="PASS" starttime="20201112 09:44:09.206" endtime="20201112 09:44:09.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.194" endtime="20201112 09:44:09.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.218" endtime="20201112 09:44:09.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.226" endtime="20201112 09:44:09.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.222" endtime="20201112 09:44:09.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.213" endtime="20201112 09:44:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.706" endtime="20201112 09:44:09.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.705" endtime="20201112 09:44:09.252"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.274" endtime="20201112 09:44:09.295"></status>
</kw>
<msg timestamp="20201112 09:44:09.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.271" endtime="20201112 09:44:09.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.298" endtime="20201112 09:44:09.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.304" endtime="20201112 09:44:09.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.264" endtime="20201112 09:44:09.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.258" endtime="20201112 09:44:09.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.327" endtime="20201112 09:44:09.661"></status>
</kw>
<msg timestamp="20201112 09:44:09.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03997325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:09.324" endtime="20201112 09:44:09.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03997325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:09.670" endtime="20201112 09:44:09.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.689" endtime="20201112 09:44:09.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.317" endtime="20201112 09:44:09.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.312" endtime="20201112 09:44:09.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.707" level="INFO">${RESULT} = [{'time': 0.03997325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011661100000000257, 'source_diff': 0.00011661100000000257}, {'time': 0.040111583, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:09.699" endtime="20201112 09:44:09.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.737" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:09.709" endtime="20201112 09:44:09.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.748" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.745" endtime="20201112 09:44:09.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.753" level="INFO">VALUE: [0.00011661100000000257, 0.000116082999999996, 0.0001162499999999983, 0.00011604099999999729, 0.00011634700000000275, 0.00011595899999999881, 0.00011633300000000318, 0.00011661099999999563, 0.00011666700000000085, 0.00011632000000000309, 0.0001168750000000024, 0.00011648599999999898, 0.00011602699999999772, 0.00011670899999999956, 0.0001158750000000014, 0.00011602699999999772, 0.0001161379999999948, 0.0001167499999999988, 0.00011601399999999762, 0.00011645799999999984, 0.00011611099999999513, 0.00011619400000000002, 0.00011632000000000309, 0.00011632000000000309, 0.00011638900000000146, 0.00011648699999999845, 0.0001169029999999946, 0.00011597199999999891, 0.00011593099999999967, 0.00011686099999999588, 0.00011637499999999495, 0.00011655499999999736, 0.00011643100000000017, 0.00011656899999999693, 0.00011663900000000171, 0.00011669400000000052, 0.00011637499999999495, 0.0001166379999999953, 0.00011680500000000454, 0.00011665300000000128, 0.00011594499999999924, 0.00011661099999999563, 0.00011668100000000042, 0.00011593099999999967, 0.00011663899999999477, 0.0001159170000000001, 0.00011663900000000171, 0.00011618000000000045, 0.0001168750000000024, 0.00011602699999999772]</msg>
<status status="PASS" starttime="20201112 09:44:09.750" endtime="20201112 09:44:09.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.739" endtime="20201112 09:44:09.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.762" endtime="20201112 09:44:09.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.771" endtime="20201112 09:44:09.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.766" endtime="20201112 09:44:09.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.758" endtime="20201112 09:44:09.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.254" endtime="20201112 09:44:09.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.253" endtime="20201112 09:44:09.796"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.819" endtime="20201112 09:44:09.839"></status>
</kw>
<msg timestamp="20201112 09:44:09.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.816" endtime="20201112 09:44:09.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.842" endtime="20201112 09:44:09.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.849" endtime="20201112 09:44:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.809" endtime="20201112 09:44:09.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.803" endtime="20201112 09:44:09.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.872" endtime="20201112 09:44:10.207"></status>
</kw>
<msg timestamp="20201112 09:44:10.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040065931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.868" endtime="20201112 09:44:10.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040065931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040183097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.216" endtime="20201112 09:44:10.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.235" endtime="20201112 09:44:10.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.861" endtime="20201112 09:44:10.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.856" endtime="20201112 09:44:10.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.254" level="INFO">${RESULT} = [{'time': 0.040183097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011716600000000188, 'source_diff': 0.00011716600000000188}, {'time': 0.040323375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.245" endtime="20201112 09:44:10.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.283" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:10.256" endtime="20201112 09:44:10.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.294" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.291" endtime="20201112 09:44:10.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.299" level="INFO">VALUE: [0.00011716600000000188, 0.0001174170000000016, 0.00011776399999999937, 0.00011701399999999862, 0.00011783400000000416, 0.00011690300000000153, 0.00011713899999999527, 0.00011777699999999947, 0.00011737499999999595, 0.0001177369999999997, 0.00011747200000000041, 0.00011761099999999663, 0.00011765299999999534, 0.0001169300000000012, 0.00011768000000000195, 0.00011717999999999451, 0.00011779199999999851, 0.00011709699999999656, 0.00011772200000000066, 0.00011691699999999416, 0.00011793100000000167, 0.00011701400000000556, 0.00011727799999999844, 0.00011749999999999955, 0.00011701399999999862, 0.00011738900000000246, 0.00011768000000000195, 0.00011705599999999733, 0.00011726399999999887, 0.00011786099999999688, 0.00011748599999999998, 0.00011711099999999613, 0.00011698599999999948, 0.00011762500000000314, 0.0001174170000000016, 0.00011727799999999844, 0.00011759699999999706, 0.00011783300000000468, 0.00011766700000000185, 0.00011736100000000332, 0.00011761099999999663, 0.00011705600000000427, 0.00011715300000000178, 0.00011777799999999894, 0.00011713900000000221, 0.00011744500000000074, 0.00011747200000000041, 0.00011743100000000117, 0.00011701399999999862, 0.00011788799999999655]</msg>
<status status="PASS" starttime="20201112 09:44:10.296" endtime="20201112 09:44:10.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.285" endtime="20201112 09:44:10.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.308" endtime="20201112 09:44:10.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.317" endtime="20201112 09:44:10.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.312" endtime="20201112 09:44:10.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.304" endtime="20201112 09:44:10.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.799" endtime="20201112 09:44:10.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.797" endtime="20201112 09:44:10.342"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.365" endtime="20201112 09:44:10.385"></status>
</kw>
<msg timestamp="20201112 09:44:10.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.362" endtime="20201112 09:44:10.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.389" endtime="20201112 09:44:10.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.395" endtime="20201112 09:44:10.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.354" endtime="20201112 09:44:10.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.349" endtime="20201112 09:44:10.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.418" endtime="20201112 09:44:10.753"></status>
</kw>
<msg timestamp="20201112 09:44:10.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0400635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:10.415" endtime="20201112 09:44:10.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0400635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:10.763" endtime="20201112 09:44:10.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.781" endtime="20201112 09:44:10.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.408" endtime="20201112 09:44:10.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.403" endtime="20201112 09:44:10.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.800" level="INFO">${RESULT} = [{'time': 0.040181694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011819399999999508, 'source_diff': 0.00011819399999999508}, {'time': 0.040322014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.791" endtime="20201112 09:44:10.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.829" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:10.802" endtime="20201112 09:44:10.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.840" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.838" endtime="20201112 09:44:10.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.845" level="INFO">VALUE: [0.00011819399999999508, 0.00011800000000000005, 0.00011854099999999979, 0.00011827799999999944, 0.00011850000000000055, 0.00011838899999999652, 0.0001187500000000008, 0.00011808399999999747, 0.00011802799999999919, 0.00011881899999999918, 0.00011854099999999979, 0.00011797299999999344, 0.00011830500000000604, 0.00011854199999999926, 0.00011802799999999919, 0.0001189170000000031, 0.00011852700000000022, 0.00011804199999999876, 0.0001179300000000022, 0.00011801399999999962, 0.0001182500000000003, 0.00011820800000000159, 0.00011879100000000004, 0.00011836099999999738, 0.00011826399999999987, 0.00011841599999999619, 0.00011883399999999822, 0.0001180970000000045, 0.00011827799999999944, 0.00011809699999999757, 0.00011858399999999797, 0.00011812500000000364, 0.00011850000000000055, 0.00011826399999999987, 0.0001186249999999972, 0.00011870900000000156, 0.00011855499999999936, 0.00011804199999999876, 0.00011831899999999868, 0.00011813900000000321, 0.0001179029999999956, 0.00011844500000000174, 0.00011852799999999969, 0.00011847200000000141, 0.00011817999999999551, 0.00011793100000000167, 0.0001188620000000043, 0.00011847300000000088, 0.00011834699999999782, 0.00011813900000000321]</msg>
<status status="PASS" starttime="20201112 09:44:10.842" endtime="20201112 09:44:10.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.831" endtime="20201112 09:44:10.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.855" endtime="20201112 09:44:10.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.863" endtime="20201112 09:44:10.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.859" endtime="20201112 09:44:10.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.850" endtime="20201112 09:44:10.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.344" endtime="20201112 09:44:10.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.343" endtime="20201112 09:44:10.889"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.911" endtime="20201112 09:44:10.932"></status>
</kw>
<msg timestamp="20201112 09:44:10.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.908" endtime="20201112 09:44:10.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.935" endtime="20201112 09:44:10.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.941" endtime="20201112 09:44:10.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.901" endtime="20201112 09:44:10.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.895" endtime="20201112 09:44:10.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.964" endtime="20201112 09:44:11.300"></status>
</kw>
<msg timestamp="20201112 09:44:11.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039938875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.961" endtime="20201112 09:44:11.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039938875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.309" endtime="20201112 09:44:11.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.327" endtime="20201112 09:44:11.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.954" endtime="20201112 09:44:11.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.949" endtime="20201112 09:44:11.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.348" level="INFO">${RESULT} = [{'time': 0.040058361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011948600000000198, 'source_diff': 0.00011948600000000198}, {'time': 0.040201736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:11.339" endtime="20201112 09:44:11.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.377" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:11.350" endtime="20201112 09:44:11.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.388" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.385" endtime="20201112 09:44:11.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.393" level="INFO">VALUE: [0.00011948600000000198, 0.00011963900000000471, 0.00011972200000000266, 0.00011955500000000036, 0.00011902800000000019, 0.00011951400000000112, 0.00011905599999999933, 0.00011941699999999666, 0.0001196249999999982, 0.00011911100000000507, 0.00011984699999999932, 0.00011919400000000302, 0.0001194029999999971, 0.00011901400000000062, 0.00011901300000000115, 0.00011983399999999922, 0.00011902800000000019, 0.00011897200000000191, 0.00011936099999999839, 0.00011948600000000198, 0.00011976400000000137, 0.00011937499999999795, 0.00011904199999999976, 0.00011968000000000395, 0.00011900000000000105, 0.00011934699999999882, 0.00011970799999999615, 0.00011952799999999375, 0.00011970900000000256, 0.00011901400000000062, 0.00011955599999999983, 0.00011981999999999965, 0.0001195829999999995, 0.00011895800000000234, 0.00011966700000000385, 0.00011887499999999745, 0.00011986099999999889, 0.00011992999999999726, 0.00011893099999999573, 0.00011915299999999684, 0.00011951400000000112, 0.00011913900000000421, 0.00011986099999999889, 0.00011908399999999847, 0.00011919399999999608, 0.00011919400000000302, 0.00011906899999999943, 0.000119695000000003, 0.00011918099999999598, 0.00011959699999999907]</msg>
<status status="PASS" starttime="20201112 09:44:11.390" endtime="20201112 09:44:11.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.379" endtime="20201112 09:44:11.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.403" endtime="20201112 09:44:11.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.411" endtime="20201112 09:44:11.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.407" endtime="20201112 09:44:11.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.398" endtime="20201112 09:44:11.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.891" endtime="20201112 09:44:11.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.890" endtime="20201112 09:44:11.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.613" endtime="20201112 09:44:11.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.447" endtime="20201112 09:44:11.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.443" endtime="20201112 09:44:11.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.440" endtime="20201112 09:44:11.471"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:16.481" endtime="20201112 09:44:11.472" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.490" endtime="20201112 09:44:11.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.486" endtime="20201112 09:44:11.513"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.548" endtime="20201112 09:44:11.569"></status>
</kw>
<msg timestamp="20201112 09:44:11.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.543" endtime="20201112 09:44:11.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.572" endtime="20201112 09:44:11.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:11.579" endtime="20201112 09:44:11.584"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:11.535" endtime="20201112 09:44:11.585"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:11.529" endtime="20201112 09:44:11.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.526" endtime="20201112 09:44:11.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:11.595" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:11.594" endtime="20201112 09:44:11.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.590" endtime="20201112 09:44:11.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.525" endtime="20201112 09:44:11.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.523" endtime="20201112 09:44:11.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.599" endtime="20201112 09:44:11.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.519" endtime="20201112 09:44:11.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.515" endtime="20201112 09:44:11.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.483" endtime="20201112 09:44:11.606"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.636" endtime="20201112 09:44:11.651"></status>
</kw>
<msg timestamp="20201112 09:44:11.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.633" endtime="20201112 09:44:11.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.654" endtime="20201112 09:44:11.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.661" endtime="20201112 09:44:11.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.621" endtime="20201112 09:44:11.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.615" endtime="20201112 09:44:11.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.684" endtime="20201112 09:44:12.028"></status>
</kw>
<msg timestamp="20201112 09:44:12.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138291069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138311389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.680" endtime="20201112 09:44:12.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138291069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138311389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.037" endtime="20201112 09:44:12.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.056" endtime="20201112 09:44:12.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.673" endtime="20201112 09:44:12.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.669" endtime="20201112 09:44:12.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.074" level="INFO">${RESULT} = [{'time': 0.138311389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.03200000000181e-05, 'source_diff': 2.03200000000181e-05}, {'time': 0.138340444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:12.065" endtime="20201112 09:44:12.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.105" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:12.076" endtime="20201112 09:44:12.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.116" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.114" endtime="20201112 09:44:12.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.121" level="INFO">VALUE: [2.03200000000181e-05, 2.0652000000009885e-05, 2.108300000000507e-05, 2.1181000000008998e-05, 2.1180999999981243e-05, 2.115299999999598e-05, 2.062499999999634e-05, 2.0332999999983503e-05, 2.0820000000004724e-05, 2.062499999999634e-05, 2.0666000000002516e-05, 2.0305999999997715e-05, 2.081900000000525e-05, 2.081900000000525e-05, 2.0846999999990512e-05, 2.1180999999981243e-05, 2.0318999999990872e-05, 2.066700000000199e-05, 2.0679999999995147e-05, 2.049999999997887e-05, 2.102799999997851e-05, 2.083299999999788e-05, 2.116699999998861e-05, 2.0332999999983503e-05, 2.0833999999997355e-05, 2.0318999999990872e-05, 2.0693999999987778e-05, 2.0846999999990512e-05, 2.0500000000006624e-05, 2.052800000001964e-05, 2.0681000000022376e-05, 2.0513999999999255e-05, 2.1180000000009525e-05, 2.051299999999978e-05, 2.115299999999598e-05, 2.066599999997476e-05, 2.1181000000008998e-05, 2.0652000000009885e-05, 2.102700000000679e-05, 2.1013999999985877e-05, 2.083299999999788e-05, 2.065199999998213e-05, 2.1221999999987418e-05, 2.116699999998861e-05, 2.0986000000000615e-05, 2.0513999999999255e-05, 2.0292000000005084e-05, 2.036099999999652e-05, 2.0847999999989986e-05, 2.0999999999993246e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.118" endtime="20201112 09:44:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.107" endtime="20201112 09:44:12.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.130" endtime="20201112 09:44:12.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.138" endtime="20201112 09:44:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.134" endtime="20201112 09:44:12.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.125" endtime="20201112 09:44:12.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.611" endtime="20201112 09:44:12.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.609" endtime="20201112 09:44:12.165"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.189" endtime="20201112 09:44:12.203"></status>
</kw>
<msg timestamp="20201112 09:44:12.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.185" endtime="20201112 09:44:12.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.207" endtime="20201112 09:44:12.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.213" endtime="20201112 09:44:12.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.178" endtime="20201112 09:44:12.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.172" endtime="20201112 09:44:12.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.236" endtime="20201112 09:44:12.570"></status>
</kw>
<msg timestamp="20201112 09:44:12.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042003347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.233" endtime="20201112 09:44:12.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042003347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.580" endtime="20201112 09:44:12.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.599" endtime="20201112 09:44:12.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.226" endtime="20201112 09:44:12.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.221" endtime="20201112 09:44:12.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.616" level="INFO">${RESULT} = [{'time': 0.042003347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.083300000000482e-05, 'source_diff': 2.083300000000482e-05}, {'time': 0.042032389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.607" endtime="20201112 09:44:12.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.647" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:12.618" endtime="20201112 09:44:12.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.658" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.656" endtime="20201112 09:44:12.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.663" level="INFO">VALUE: [2.083300000000482e-05, 2.116700000000249e-05, 2.081899999999831e-05, 2.0319999999997285e-05, 2.116700000000249e-05, 2.033299999999738e-05, 2.031899999999781e-05, 2.034699999999695e-05, 2.112500000000378e-05, 2.1166000000003016e-05, 2.033300000000432e-05, 2.0319999999997285e-05, 2.030499999999824e-05, 2.0499999999999685e-05, 2.0819999999997785e-05, 2.1000000000000185e-05, 2.081899999999831e-05, 2.1000000000000185e-05, 2.115299999999598e-05, 2.0763999999999505e-05, 2.1250000000000435e-05, 2.1236000000000865e-05, 2.0334000000003793e-05, 2.0665999999995577e-05, 2.0652000000002946e-05, 2.063900000000285e-05, 2.063900000000285e-05, 2.0486000000000115e-05, 2.031900000000475e-05, 2.063899999999591e-05, 2.038899999999566e-05, 2.118100000000206e-05, 2.1000000000000185e-05, 2.113900000000335e-05, 2.0527999999998825e-05, 2.065300000000242e-05, 2.134699999999795e-05, 2.034700000000389e-05, 2.084699999999745e-05, 2.0499999999999685e-05, 2.1165999999996077e-05, 2.1000000000000185e-05, 2.116699999999555e-05, 2.065299999999548e-05, 2.036100000000346e-05, 2.065299999999548e-05, 2.1000000000000185e-05, 2.063899999999591e-05, 2.1000000000000185e-05, 2.1179999999995647e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.660" endtime="20201112 09:44:12.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.649" endtime="20201112 09:44:12.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.673" endtime="20201112 09:44:12.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.681" endtime="20201112 09:44:12.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.677" endtime="20201112 09:44:12.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.668" endtime="20201112 09:44:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.168" endtime="20201112 09:44:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.166" endtime="20201112 09:44:12.707"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.730" endtime="20201112 09:44:12.744"></status>
</kw>
<msg timestamp="20201112 09:44:12.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.726" endtime="20201112 09:44:12.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.748" endtime="20201112 09:44:12.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.754" endtime="20201112 09:44:12.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.719" endtime="20201112 09:44:12.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.713" endtime="20201112 09:44:12.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.777" endtime="20201112 09:44:13.110"></status>
</kw>
<msg timestamp="20201112 09:44:13.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040219736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.774" endtime="20201112 09:44:13.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040219736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.120" endtime="20201112 09:44:13.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.139" endtime="20201112 09:44:13.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.766" endtime="20201112 09:44:13.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.762" endtime="20201112 09:44:13.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.156" level="INFO">${RESULT} = [{'time': 0.040219736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.033299999999738e-05, 'source_diff': 2.033299999999738e-05}, {'time': 0.040246806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.147" endtime="20201112 09:44:13.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.187" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:13.158" endtime="20201112 09:44:13.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.202" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.196" endtime="20201112 09:44:13.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.208" level="INFO">VALUE: [2.033299999999738e-05, 2.0334000000003793e-05, 2.047300000000002e-05, 2.0499999999999685e-05, 2.097300000000052e-05, 2.1013999999999755e-05, 2.1165999999996077e-05, 2.083300000000482e-05, 2.033299999999738e-05, 2.098700000000009e-05, 2.062500000000328e-05, 2.105499999999899e-05, 2.1000000000000185e-05, 2.069500000000113e-05, 2.118100000000206e-05, 2.0499999999999685e-05, 2.134699999999795e-05, 2.0499999999999685e-05, 2.0333999999996855e-05, 2.1179999999995647e-05, 2.113899999999641e-05, 2.0679999999995147e-05, 2.08890000000031e-05, 2.115299999999598e-05, 2.1166000000003016e-05, 2.084699999999745e-05, 2.1000000000000185e-05, 2.063899999999591e-05, 2.051299999999978e-05, 2.0847999999996925e-05, 2.0499999999999685e-05, 2.084700000000439e-05, 2.116700000000249e-05, 2.1027999999999325e-05, 2.083299999999788e-05, 2.0652000000002946e-05, 2.119499999999469e-05, 2.033300000000432e-05, 2.116699999999555e-05, 2.0943999999994967e-05, 2.066700000000199e-05, 2.1013999999999755e-05, 2.1180000000002586e-05, 2.062499999999634e-05, 2.084700000000439e-05, 2.0971999999994106e-05, 2.0986000000000615e-05, 2.083299999999788e-05, 2.0721999999993856e-05, 2.1166000000003016e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.204" endtime="20201112 09:44:13.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.189" endtime="20201112 09:44:13.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.217" endtime="20201112 09:44:13.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.225" endtime="20201112 09:44:13.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.221" endtime="20201112 09:44:13.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.213" endtime="20201112 09:44:13.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.709" endtime="20201112 09:44:13.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.708" endtime="20201112 09:44:13.251"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.274" endtime="20201112 09:44:13.288"></status>
</kw>
<msg timestamp="20201112 09:44:13.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.270" endtime="20201112 09:44:13.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.291" endtime="20201112 09:44:13.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.298" endtime="20201112 09:44:13.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.263" endtime="20201112 09:44:13.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.257" endtime="20201112 09:44:13.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.321" endtime="20201112 09:44:13.655"></status>
</kw>
<msg timestamp="20201112 09:44:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.318" endtime="20201112 09:44:13.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.664" endtime="20201112 09:44:13.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.683" endtime="20201112 09:44:13.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.310" endtime="20201112 09:44:13.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.306" endtime="20201112 09:44:13.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.700" level="INFO">${RESULT} = [{'time': 0.039955375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.031900000000475e-05, 'source_diff': 2.031900000000475e-05}, {'time': 0.039981583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.692" endtime="20201112 09:44:13.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.731" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:13.703" endtime="20201112 09:44:13.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.742" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.739" endtime="20201112 09:44:13.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.747" level="INFO">VALUE: [2.031900000000475e-05, 2.054099999999892e-05, 2.0652000000002946e-05, 2.033299999999738e-05, 2.0416000000002266e-05, 2.038899999999566e-05, 2.0833999999997355e-05, 2.065299999999548e-05, 2.033299999999738e-05, 2.0320000000004224e-05, 2.0333999999996855e-05, 2.066700000000199e-05, 2.0486000000000115e-05, 2.0972000000001045e-05, 2.086099999999702e-05, 2.0472000000000545e-05, 2.0708000000001225e-05, 2.0305999999997715e-05, 2.029099999999867e-05, 2.0986000000000615e-05, 2.0277999999998575e-05, 2.0986000000000615e-05, 2.084699999999745e-05, 2.115299999999598e-05, 2.031900000000475e-05, 2.0986000000000615e-05, 2.081899999999831e-05, 2.0486000000000115e-05, 2.0792000000005584e-05, 2.0958000000001475e-05, 2.0834000000004294e-05, 2.116699999999555e-05, 2.033300000000432e-05, 2.065299999999548e-05, 2.097300000000052e-05, 2.115299999999598e-05, 2.083299999999788e-05, 2.0986000000000615e-05, 2.048699999999959e-05, 2.068100000000156e-05, 2.0486000000000115e-05, 2.0986000000000615e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.083299999999788e-05, 2.090300000000267e-05, 2.1000000000000185e-05, 2.0264000000005944e-05, 2.080499999999874e-05, 2.116699999999555e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.744" endtime="20201112 09:44:13.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.733" endtime="20201112 09:44:13.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.756" endtime="20201112 09:44:13.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.766" endtime="20201112 09:44:13.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.760" endtime="20201112 09:44:13.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.752" endtime="20201112 09:44:13.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.253" endtime="20201112 09:44:13.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.252" endtime="20201112 09:44:13.792"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.814" endtime="20201112 09:44:13.829"></status>
</kw>
<msg timestamp="20201112 09:44:13.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.811" endtime="20201112 09:44:13.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.832" endtime="20201112 09:44:13.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.839" endtime="20201112 09:44:13.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.804" endtime="20201112 09:44:13.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.798" endtime="20201112 09:44:13.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.862" endtime="20201112 09:44:14.194"></status>
</kw>
<msg timestamp="20201112 09:44:14.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039928361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.858" endtime="20201112 09:44:14.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039928361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.204" endtime="20201112 09:44:14.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.223" endtime="20201112 09:44:14.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.851" endtime="20201112 09:44:14.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.846" endtime="20201112 09:44:14.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.241" level="INFO">${RESULT} = [{'time': 0.039928361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.034700000000389e-05, 'source_diff': 2.034700000000389e-05}, {'time': 0.039954458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.232" endtime="20201112 09:44:14.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.272" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:14.243" endtime="20201112 09:44:14.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.283" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.280" endtime="20201112 09:44:14.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.288" level="INFO">VALUE: [2.034700000000389e-05, 2.031899999999781e-05, 2.048699999999959e-05, 2.058299999999763e-05, 2.1208000000001725e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.0986000000000615e-05, 2.1180000000002586e-05, 2.1138000000003876e-05, 2.1000000000000185e-05, 2.116699999999555e-05, 2.0333999999996855e-05, 2.131899999999881e-05, 2.0763999999999505e-05, 2.030500000000518e-05, 2.097300000000052e-05, 2.0499999999999685e-05, 2.081899999999831e-05, 2.0777999999999075e-05, 2.0319999999997285e-05, 2.084699999999745e-05, 2.061099999999677e-05, 2.116699999999555e-05, 2.033299999999738e-05, 2.1151999999996507e-05, 2.066700000000199e-05, 2.1000000000000185e-05, 2.113900000000335e-05, 2.0819999999997785e-05, 2.0570000000004474e-05, 2.134700000000489e-05, 2.031899999999781e-05, 2.081900000000525e-05, 2.033300000000432e-05, 2.034700000000389e-05, 2.0763999999999505e-05, 2.1013999999999755e-05, 2.0486000000000115e-05, 2.1180000000002586e-05, 2.1000000000000185e-05, 2.0666000000002516e-05, 2.0499999999999685e-05, 2.1013999999999755e-05, 2.116700000000249e-05, 2.031899999999781e-05, 2.1222000000001295e-05, 2.1055999999998465e-05, 2.0834000000004294e-05, 2.056899999999806e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.285" endtime="20201112 09:44:14.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.274" endtime="20201112 09:44:14.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.297" endtime="20201112 09:44:14.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.306" endtime="20201112 09:44:14.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.301" endtime="20201112 09:44:14.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.293" endtime="20201112 09:44:14.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.794" endtime="20201112 09:44:14.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.793" endtime="20201112 09:44:14.332"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.356" endtime="20201112 09:44:14.370"></status>
</kw>
<msg timestamp="20201112 09:44:14.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.352" endtime="20201112 09:44:14.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.374" endtime="20201112 09:44:14.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.380" endtime="20201112 09:44:14.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.345" endtime="20201112 09:44:14.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.338" endtime="20201112 09:44:14.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.403" endtime="20201112 09:44:14.737"></status>
</kw>
<msg timestamp="20201112 09:44:14.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041541778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.400" endtime="20201112 09:44:14.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041541778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.747" endtime="20201112 09:44:14.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.766" endtime="20201112 09:44:14.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.393" endtime="20201112 09:44:14.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.388" endtime="20201112 09:44:14.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.783" level="INFO">${RESULT} = [{'time': 0.041562778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.041589847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.774" endtime="20201112 09:44:14.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.813" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:14.785" endtime="20201112 09:44:14.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.824" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.822" endtime="20201112 09:44:14.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.829" level="INFO">VALUE: [2.1000000000000185e-05, 2.061099999999677e-05, 2.0777999999999075e-05, 2.1347999999997425e-05, 2.031899999999781e-05, 2.0805999999998215e-05, 2.098700000000009e-05, 2.1194000000002156e-05, 2.115300000000292e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.081900000000525e-05, 2.0929999999995397e-05, 2.115299999999598e-05, 2.068100000000156e-05, 2.084699999999745e-05, 2.083299999999788e-05, 2.0514000000006194e-05, 2.0486000000000115e-05, 2.1000000000000185e-05, 2.1151999999996507e-05, 2.111099999999727e-05, 2.1000000000000185e-05, 2.0805999999998215e-05, 2.061099999999677e-05, 2.05969999999972e-05, 2.1222000000001295e-05, 2.063900000000285e-05, 2.026299999999953e-05, 2.116699999999555e-05, 2.0514000000006194e-05, 2.1152000000003446e-05, 2.0499999999999685e-05, 2.068100000000156e-05, 2.068100000000156e-05, 2.1000000000000185e-05, 2.066699999999505e-05, 2.102699999999985e-05, 2.1000000000000185e-05, 2.0263999999999005e-05, 2.0694000000001656e-05, 2.0486000000000115e-05, 2.080500000000568e-05, 2.0986000000000615e-05, 2.081900000000525e-05, 2.081899999999831e-05, 2.0986000000000615e-05, 2.083299999999788e-05, 2.0943999999994967e-05, 2.083299999999788e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.826" endtime="20201112 09:44:14.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.815" endtime="20201112 09:44:14.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.839" endtime="20201112 09:44:14.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.847" endtime="20201112 09:44:14.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.843" endtime="20201112 09:44:14.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.834" endtime="20201112 09:44:14.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.334" endtime="20201112 09:44:14.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.333" endtime="20201112 09:44:14.873"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.895" endtime="20201112 09:44:14.911"></status>
</kw>
<msg timestamp="20201112 09:44:14.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.892" endtime="20201112 09:44:14.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.915" endtime="20201112 09:44:14.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.921" endtime="20201112 09:44:14.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.885" endtime="20201112 09:44:14.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.879" endtime="20201112 09:44:14.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.944" endtime="20201112 09:44:15.281"></status>
</kw>
<msg timestamp="20201112 09:44:15.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041460667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.941" endtime="20201112 09:44:15.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041460667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.290" endtime="20201112 09:44:15.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.309" endtime="20201112 09:44:15.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.934" endtime="20201112 09:44:15.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.929" endtime="20201112 09:44:15.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.326" level="INFO">${RESULT} = [{'time': 0.041460667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.041489694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.317" endtime="20201112 09:44:15.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.356" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:15.328" endtime="20201112 09:44:15.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.367" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.365" endtime="20201112 09:44:15.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.372" level="INFO">VALUE: [2.1236000000000865e-05, 2.051299999999978e-05, 2.1013999999999755e-05, 2.0777999999999075e-05, 2.0486000000000115e-05, 2.066700000000199e-05, 2.12090000000012e-05, 2.0972000000001045e-05, 2.063899999999591e-05, 2.12770000000001e-05, 2.095900000000095e-05, 2.1165999999996077e-05, 2.108300000000507e-05, 2.0972000000001045e-05, 2.0819999999997785e-05, 2.0972000000001045e-05, 2.115300000000292e-05, 2.036100000000346e-05, 2.084699999999745e-05, 2.0736000000000365e-05, 2.083299999999788e-05, 2.1166000000003016e-05, 2.0499999999999685e-05, 2.0305999999997715e-05, 2.0319999999997285e-05, 2.065300000000242e-05, 2.083299999999788e-05, 2.0820000000004724e-05, 2.1165999999996077e-05, 2.066700000000199e-05, 2.0819999999997785e-05, 2.0320000000004224e-05, 2.081900000000525e-05, 2.133299999999838e-05, 2.0320000000004224e-05, 2.081899999999831e-05, 2.0680000000002086e-05, 2.0722000000000795e-05, 2.115300000000292e-05, 2.0679999999995147e-05, 2.031899999999781e-05, 2.068100000000156e-05, 2.0458000000000975e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.030500000000518e-05, 2.1000000000000185e-05, 2.115299999999598e-05, 2.033299999999738e-05, 2.031899999999781e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.369" endtime="20201112 09:44:15.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.358" endtime="20201112 09:44:15.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.382" endtime="20201112 09:44:15.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.390" endtime="20201112 09:44:15.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.386" endtime="20201112 09:44:15.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.377" endtime="20201112 09:44:15.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.875" endtime="20201112 09:44:15.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.874" endtime="20201112 09:44:15.416"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.439" endtime="20201112 09:44:15.454"></status>
</kw>
<msg timestamp="20201112 09:44:15.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.435" endtime="20201112 09:44:15.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.457" endtime="20201112 09:44:15.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.463" endtime="20201112 09:44:15.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.428" endtime="20201112 09:44:15.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.422" endtime="20201112 09:44:15.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.490" endtime="20201112 09:44:15.824"></status>
</kw>
<msg timestamp="20201112 09:44:15.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:15.486" endtime="20201112 09:44:15.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040286819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:15.834" endtime="20201112 09:44:15.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.853" endtime="20201112 09:44:15.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.476" endtime="20201112 09:44:15.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.471" endtime="20201112 09:44:15.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.870" level="INFO">${RESULT} = [{'time': 0.040286819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7818999999998373e-05, 'source_diff': 2.7818999999998373e-05}, {'time': 0.040324028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.861" endtime="20201112 09:44:15.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.900" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:15.872" endtime="20201112 09:44:15.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.911" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.909" endtime="20201112 09:44:15.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.916" level="INFO">VALUE: [2.7818999999998373e-05, 2.7972000000001107e-05, 2.8124999999996902e-05, 2.7818999999998373e-05, 2.763900000000291e-05, 2.7848000000003925e-05, 2.7790999999999233e-05, 2.7485999999993238e-05, 2.762500000000334e-05, 2.8082999999998193e-05, 2.8152999999996042e-05, 2.797300000000058e-05, 2.8194000000002217e-05, 2.765300000000248e-05, 2.8124999999996902e-05, 2.763900000000291e-05, 2.7472000000000607e-05, 2.8166999999995612e-05, 2.8013999999999817e-05, 2.815300000000298e-05, 2.7833999999997416e-05, 2.7486000000000177e-05, 2.7319999999997346e-05, 2.7818999999998373e-05, 2.7972000000001107e-05, 2.7972000000001107e-05, 2.7526999999999413e-05, 2.736100000000352e-05, 2.7444000000001467e-05, 2.8152999999996042e-05, 2.8166000000003077e-05, 2.815300000000298e-05, 2.8138999999996472e-05, 2.7804999999998803e-05, 2.7319999999997346e-05, 2.8166999999995612e-05, 2.7971999999994168e-05, 2.7306000000004715e-05, 2.7458000000001037e-05, 2.7305999999997776e-05, 2.761100000000377e-05, 2.813900000000341e-05, 2.7458000000001037e-05, 2.7763999999999567e-05, 2.748699999999965e-05, 2.8138999999996472e-05, 2.762500000000334e-05, 2.798700000000015e-05, 2.8124999999996902e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.913" endtime="20201112 09:44:15.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.902" endtime="20201112 09:44:15.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.926" endtime="20201112 09:44:15.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.934" endtime="20201112 09:44:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.929" endtime="20201112 09:44:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.921" endtime="20201112 09:44:15.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.418" endtime="20201112 09:44:15.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.417" endtime="20201112 09:44:15.960"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.982" endtime="20201112 09:44:15.997"></status>
</kw>
<msg timestamp="20201112 09:44:15.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.979" endtime="20201112 09:44:15.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.000" endtime="20201112 09:44:16.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.007" endtime="20201112 09:44:16.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.971" endtime="20201112 09:44:16.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.966" endtime="20201112 09:44:16.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.030" endtime="20201112 09:44:16.367"></status>
</kw>
<msg timestamp="20201112 09:44:16.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.026" endtime="20201112 09:44:16.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.376" endtime="20201112 09:44:16.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.395" endtime="20201112 09:44:16.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.019" endtime="20201112 09:44:16.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.015" endtime="20201112 09:44:16.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.413" level="INFO">${RESULT} = [{'time': 0.039899861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8291999999999207e-05, 'source_diff': 2.8291999999999207e-05}, {'time': 0.039932917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.404" endtime="20201112 09:44:16.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.443" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:16.415" endtime="20201112 09:44:16.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.453" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.451" endtime="20201112 09:44:16.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.459" level="INFO">VALUE: [2.8291999999999207e-05, 2.8000000000000247e-05, 2.7680000000002147e-05, 2.815300000000298e-05, 2.762500000000334e-05, 2.765300000000248e-05, 2.7291999999998207e-05, 2.7458000000001037e-05, 2.7304999999998303e-05, 2.8082999999998193e-05, 2.813900000000341e-05, 2.7652000000003008e-05, 2.812500000000384e-05, 2.8180000000002647e-05, 2.765300000000248e-05, 2.7499999999999747e-05, 2.795900000000101e-05, 2.7471999999993668e-05, 2.7305000000005242e-05, 2.7652000000003008e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7486000000000177e-05, 2.7972000000001107e-05, 2.7805999999998277e-05, 2.7832999999997943e-05, 2.7319999999997346e-05, 2.8027999999999387e-05, 2.797300000000058e-05, 2.795900000000101e-05, 2.7304999999998303e-05, 2.7457999999994098e-05, 2.813900000000341e-05, 2.8138999999996472e-05, 2.794500000000144e-05, 2.7568999999998123e-05, 2.7291999999998207e-05, 2.7930000000002397e-05, 2.763900000000291e-05, 2.7804999999998803e-05, 2.8152999999996042e-05, 2.765300000000248e-05, 2.812500000000384e-05, 2.7777999999999137e-05, 2.8304999999999303e-05, 2.734700000000395e-05, 2.8277999999999637e-05, 2.7513999999999317e-05, 2.8305999999998777e-05, 2.7986000000000677e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.456" endtime="20201112 09:44:16.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.444" endtime="20201112 09:44:16.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.468" endtime="20201112 09:44:16.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.476" endtime="20201112 09:44:16.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.472" endtime="20201112 09:44:16.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.464" endtime="20201112 09:44:16.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.962" endtime="20201112 09:44:16.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.960" endtime="20201112 09:44:16.502"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.525" endtime="20201112 09:44:16.540"></status>
</kw>
<msg timestamp="20201112 09:44:16.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.522" endtime="20201112 09:44:16.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.544" endtime="20201112 09:44:16.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.550" endtime="20201112 09:44:16.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.514" endtime="20201112 09:44:16.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.509" endtime="20201112 09:44:16.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.573" endtime="20201112 09:44:16.909"></status>
</kw>
<msg timestamp="20201112 09:44:16.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040386958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040414972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.570" endtime="20201112 09:44:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040386958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040414972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.919" endtime="20201112 09:44:16.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.938" endtime="20201112 09:44:16.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.563" endtime="20201112 09:44:16.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.558" endtime="20201112 09:44:16.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.955" level="INFO">${RESULT} = [{'time': 0.040414972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8013999999999817e-05, 'source_diff': 2.8013999999999817e-05}, {'time': 0.040451056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.946" endtime="20201112 09:44:16.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.985" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:16.957" endtime="20201112 09:44:16.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.996" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.994" endtime="20201112 09:44:16.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.002" level="INFO">VALUE: [2.8013999999999817e-05, 2.8041999999998957e-05, 2.816700000000255e-05, 2.8152999999996042e-05, 2.763900000000291e-05, 2.7486000000000177e-05, 2.7763999999999567e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.8013999999999817e-05, 2.7791999999998707e-05, 2.8152000000003508e-05, 2.7805999999998277e-05, 2.744399999999453e-05, 2.7958999999994072e-05, 2.7806000000005215e-05, 2.7624999999996402e-05, 2.8000000000000247e-05, 2.7986000000000677e-05, 2.7694000000001717e-05, 2.7486000000000177e-05, 2.7638999999995972e-05, 2.762500000000334e-05, 2.813900000000341e-05, 2.7958000000001537e-05, 2.8000000000000247e-05, 2.765300000000248e-05, 2.812500000000384e-05, 2.7638999999995972e-05, 2.815300000000298e-05, 2.7624999999996402e-05, 2.8138999999996472e-05, 2.813900000000341e-05, 2.7638999999995972e-05, 2.7958000000001537e-05, 2.8304999999999303e-05, 2.7305999999997776e-05, 2.816700000000255e-05, 2.7472000000000607e-05, 2.7486000000000177e-05, 2.7624999999996402e-05, 2.7638999999995972e-05, 2.813900000000341e-05, 2.8124999999996902e-05, 2.8138000000003938e-05, 2.765300000000248e-05, 2.7722000000000857e-05, 2.7638999999995972e-05, 2.7888999999996222e-05, 2.8152999999996042e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.998" endtime="20201112 09:44:17.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.987" endtime="20201112 09:44:17.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.012" endtime="20201112 09:44:17.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.020" endtime="20201112 09:44:17.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.016" endtime="20201112 09:44:17.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.007" endtime="20201112 09:44:17.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.504" endtime="20201112 09:44:17.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.503" endtime="20201112 09:44:17.046"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.068" endtime="20201112 09:44:17.083"></status>
</kw>
<msg timestamp="20201112 09:44:17.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.065" endtime="20201112 09:44:17.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.087" endtime="20201112 09:44:17.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.093" endtime="20201112 09:44:17.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.058" endtime="20201112 09:44:17.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.052" endtime="20201112 09:44:17.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.116" endtime="20201112 09:44:17.453"></status>
</kw>
<msg timestamp="20201112 09:44:17.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040124069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040151875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.113" endtime="20201112 09:44:17.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040124069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040151875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.462" endtime="20201112 09:44:17.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.481" endtime="20201112 09:44:17.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.106" endtime="20201112 09:44:17.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.101" endtime="20201112 09:44:17.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.500" level="INFO">${RESULT} = [{'time': 0.040151875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7805999999998277e-05, 'source_diff': 2.7805999999998277e-05}, {'time': 0.040185097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:17.491" endtime="20201112 09:44:17.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:17.502" endtime="20201112 09:44:17.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.541" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.538" endtime="20201112 09:44:17.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.546" level="INFO">VALUE: [2.7805999999998277e-05, 2.7986000000000677e-05, 2.744500000000094e-05, 2.7999999999993308e-05, 2.792999999999546e-05, 2.8138999999996472e-05, 2.7304999999998303e-05, 2.7972000000001107e-05, 2.734700000000395e-05, 2.7777999999999137e-05, 2.765300000000248e-05, 2.7805000000005742e-05, 2.7527999999998887e-05, 2.7652000000003008e-05, 2.765300000000248e-05, 2.8305999999998777e-05, 2.8137999999997e-05, 2.8304999999999303e-05, 2.7610999999996833e-05, 2.813900000000341e-05, 2.7291999999998207e-05, 2.7638999999995972e-05, 2.7804999999998803e-05, 2.8124999999996902e-05, 2.8110999999997333e-05, 2.740300000000223e-05, 2.7262999999999593e-05, 2.7612000000003245e-05, 2.8320000000005285e-05, 2.7472000000000607e-05, 2.8110999999997333e-05, 2.7610999999996833e-05, 2.8291999999999207e-05, 2.763900000000291e-05, 2.747300000000008e-05, 2.7790999999999233e-05, 2.7652999999995542e-05, 2.768100000000162e-05, 2.7819999999997846e-05, 2.7986000000000677e-05, 2.7971999999994168e-05, 2.762500000000334e-05, 2.7306000000004715e-05, 2.8124999999996902e-05, 2.7986000000000677e-05, 2.7486000000000177e-05, 2.731900000000481e-05, 2.7638000000003438e-05, 2.797300000000058e-05, 2.798700000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.543" endtime="20201112 09:44:17.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.532" endtime="20201112 09:44:17.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.555" endtime="20201112 09:44:17.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.564" endtime="20201112 09:44:17.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.559" endtime="20201112 09:44:17.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.551" endtime="20201112 09:44:17.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.048" endtime="20201112 09:44:17.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.047" endtime="20201112 09:44:17.590"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.612" endtime="20201112 09:44:17.627"></status>
</kw>
<msg timestamp="20201112 09:44:17.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.609" endtime="20201112 09:44:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.631" endtime="20201112 09:44:17.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.637" endtime="20201112 09:44:17.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.602" endtime="20201112 09:44:17.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.596" endtime="20201112 09:44:17.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.660" endtime="20201112 09:44:17.993"></status>
</kw>
<msg timestamp="20201112 09:44:18.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.656" endtime="20201112 09:44:18.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.002" endtime="20201112 09:44:18.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.021" endtime="20201112 09:44:18.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.649" endtime="20201112 09:44:18.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.645" endtime="20201112 09:44:18.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.042" level="INFO">${RESULT} = [{'time': 0.040106292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.763900000000291e-05, 'source_diff': 2.763900000000291e-05}, {'time': 0.040142458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.033" endtime="20201112 09:44:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.072" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:18.044" endtime="20201112 09:44:18.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.083" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.081" endtime="20201112 09:44:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.088" level="INFO">VALUE: [2.763900000000291e-05, 2.7888999999996222e-05, 2.8137999999997e-05, 2.7806000000005215e-05, 2.7318999999997873e-05, 2.798700000000015e-05, 2.7790999999999233e-05, 2.7554999999998553e-05, 2.7318999999997873e-05, 2.7805999999998277e-05, 2.7860999999997083e-05, 2.8152999999996042e-05, 2.7486000000000177e-05, 2.7638999999995972e-05, 2.7486000000000177e-05, 2.7790999999999233e-05, 2.813900000000341e-05, 2.744500000000094e-05, 2.7305000000005242e-05, 2.7972000000001107e-05, 2.7820000000004785e-05, 2.7652999999995542e-05, 2.7972000000001107e-05, 2.7290999999998733e-05, 2.8318999999998873e-05, 2.8138000000003938e-05, 2.7319999999997346e-05, 2.7986000000000677e-05, 2.7458000000001037e-05, 2.7805999999998277e-05, 2.7819999999997846e-05, 2.815300000000298e-05, 2.8304999999999303e-05, 2.7819999999997846e-05, 2.8291999999999207e-05, 2.8222000000001357e-05, 2.7306000000004715e-05, 2.7471999999993668e-05, 2.7805999999998277e-05, 2.7972000000001107e-05, 2.8152000000003508e-05, 2.766700000000205e-05, 2.7305999999997776e-05, 2.7458000000001037e-05, 2.7666000000002577e-05, 2.7749999999999997e-05, 2.7458000000001037e-05, 2.7791999999998707e-05, 2.7818999999998373e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.085" endtime="20201112 09:44:18.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.074" endtime="20201112 09:44:18.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.098" endtime="20201112 09:44:18.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.106" endtime="20201112 09:44:18.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.102" endtime="20201112 09:44:18.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.093" endtime="20201112 09:44:18.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.592" endtime="20201112 09:44:18.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.590" endtime="20201112 09:44:18.132"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.154" endtime="20201112 09:44:18.169"></status>
</kw>
<msg timestamp="20201112 09:44:18.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.151" endtime="20201112 09:44:18.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.173" endtime="20201112 09:44:18.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.179" endtime="20201112 09:44:18.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.144" endtime="20201112 09:44:18.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.138" endtime="20201112 09:44:18.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.202" endtime="20201112 09:44:18.536"></status>
</kw>
<msg timestamp="20201112 09:44:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039983819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.199" endtime="20201112 09:44:18.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039983819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.546" endtime="20201112 09:44:18.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.565" endtime="20201112 09:44:18.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.191" endtime="20201112 09:44:18.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.187" endtime="20201112 09:44:18.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.584" level="INFO">${RESULT} = [{'time': 0.039983819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.815199999999657e-05, 'source_diff': 2.815199999999657e-05}, {'time': 0.040022958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.575" endtime="20201112 09:44:18.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.614" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:18.586" endtime="20201112 09:44:18.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.625" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.623" endtime="20201112 09:44:18.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.630" level="INFO">VALUE: [2.815199999999657e-05, 2.8054999999999053e-05, 2.8000000000000247e-05, 2.8305999999998777e-05, 2.7333999999996916e-05, 2.797300000000058e-05, 2.8124999999996902e-05, 2.7805999999998277e-05, 2.7527999999998887e-05, 2.8111999999996806e-05, 2.8152999999996042e-05, 2.7805999999998277e-05, 2.7598000000003675e-05, 2.7458000000001037e-05, 2.736100000000352e-05, 2.8291999999999207e-05, 2.8152999999996042e-05, 2.8138999999996472e-05, 2.7319999999997346e-05, 2.7790999999999233e-05, 2.7972000000001107e-05, 2.7805999999998277e-05, 2.813900000000341e-05, 2.76379999999965e-05, 2.7318999999997873e-05, 2.813900000000341e-05, 2.7458000000001037e-05, 2.811100000000427e-05, 2.747300000000008e-05, 2.7806000000005215e-05, 2.8055999999998527e-05, 2.7972000000001107e-05, 2.7332999999997443e-05, 2.7804999999998803e-05, 2.7986000000000677e-05, 2.7486000000000177e-05, 2.7818999999998373e-05, 2.8180000000002647e-05, 2.748699999999965e-05, 2.8305999999998777e-05, 2.8124999999996902e-05, 2.8152000000003508e-05, 2.7486000000000177e-05, 2.8124999999996902e-05, 2.7819999999997846e-05, 2.7818999999998373e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.8000000000000247e-05, 2.7472000000000607e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.627" endtime="20201112 09:44:18.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.616" endtime="20201112 09:44:18.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.640" endtime="20201112 09:44:18.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.648" endtime="20201112 09:44:18.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.643" endtime="20201112 09:44:18.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.635" endtime="20201112 09:44:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.134" endtime="20201112 09:44:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.133" endtime="20201112 09:44:18.674"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.696" endtime="20201112 09:44:18.712"></status>
</kw>
<msg timestamp="20201112 09:44:18.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.693" endtime="20201112 09:44:18.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.715" endtime="20201112 09:44:18.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.721" endtime="20201112 09:44:18.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.686" endtime="20201112 09:44:18.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.680" endtime="20201112 09:44:18.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.744" endtime="20201112 09:44:19.079"></status>
</kw>
<msg timestamp="20201112 09:44:19.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040297292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040324778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.741" endtime="20201112 09:44:19.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040297292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040324778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.089" endtime="20201112 09:44:19.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.108" endtime="20201112 09:44:19.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.734" endtime="20201112 09:44:19.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.729" endtime="20201112 09:44:19.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.127" level="INFO">${RESULT} = [{'time': 0.040324778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.040360847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:19.118" endtime="20201112 09:44:19.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.157" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:19.129" endtime="20201112 09:44:19.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.167" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.165" endtime="20201112 09:44:19.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.173" level="INFO">VALUE: [2.7486000000000177e-05, 2.8124999999996902e-05, 2.813900000000341e-05, 2.7306000000004715e-05, 2.7291999999998207e-05, 2.7624999999996402e-05, 2.7444000000001467e-05, 2.7804999999998803e-05, 2.795900000000101e-05, 2.7304999999998303e-05, 2.815199999999657e-05, 2.744500000000094e-05, 2.7763999999999567e-05, 2.8305000000006242e-05, 2.7486000000000177e-05, 2.7777999999999137e-05, 2.8000000000000247e-05, 2.813900000000341e-05, 2.763900000000291e-05, 2.8208000000001787e-05, 2.7304999999998303e-05, 2.8138999999996472e-05, 2.7291999999998207e-05, 2.7804999999998803e-05, 2.763900000000291e-05, 2.8138999999996472e-05, 2.7791999999998707e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.763900000000291e-05, 2.765300000000248e-05, 2.7638999999995972e-05, 2.7291000000005672e-05, 2.766700000000205e-05, 2.7846999999997513e-05, 2.7958000000001537e-05, 2.7305999999997776e-05, 2.813900000000341e-05, 2.7486000000000177e-05, 2.763900000000291e-05, 2.7805999999998277e-05, 2.8332999999998443e-05, 2.8152000000003508e-05, 2.7472000000000607e-05, 2.8304999999999303e-05, 2.7944000000001967e-05, 2.7986000000000677e-05, 2.815300000000298e-05, 2.7972000000001107e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.170" endtime="20201112 09:44:19.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.158" endtime="20201112 09:44:19.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.182" endtime="20201112 09:44:19.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.191" endtime="20201112 09:44:19.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.186" endtime="20201112 09:44:19.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.178" endtime="20201112 09:44:19.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.676" endtime="20201112 09:44:19.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.674" endtime="20201112 09:44:19.217"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.239" endtime="20201112 09:44:19.254"></status>
</kw>
<msg timestamp="20201112 09:44:19.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.236" endtime="20201112 09:44:19.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.258" endtime="20201112 09:44:19.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.264" endtime="20201112 09:44:19.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.229" endtime="20201112 09:44:19.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.223" endtime="20201112 09:44:19.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.287" endtime="20201112 09:44:19.621"></status>
</kw>
<msg timestamp="20201112 09:44:19.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.284" endtime="20201112 09:44:19.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.630" endtime="20201112 09:44:19.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.649" endtime="20201112 09:44:19.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.277" endtime="20201112 09:44:19.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.272" endtime="20201112 09:44:19.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.668" level="INFO">${RESULT} = [{'time': 0.040125958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.509700000000476e-05, 'source_diff': 3.509700000000476e-05}, {'time': 0.040166139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.659" endtime="20201112 09:44:19.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.698" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:19.670" endtime="20201112 09:44:19.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.709" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.707" endtime="20201112 09:44:19.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.714" level="INFO">VALUE: [3.509700000000476e-05, 3.5082999999998254e-05, 3.493100000000193e-05, 3.4582999999997754e-05, 3.5277000000000225e-05, 3.49580000000016e-05, 3.444400000000153e-05, 3.479199999999877e-05, 3.5124999999996964e-05, 3.444400000000153e-05, 3.441700000000186e-05, 3.515300000000304e-05, 3.441700000000186e-05, 3.4805000000005804e-05, 3.4445000000001e-05, 3.461100000000383e-05, 3.51250000000039e-05, 3.4610999999996894e-05, 3.479199999999877e-05, 3.475000000000006e-05, 3.4804999999998865e-05, 3.52779999999997e-05, 3.447200000000067e-05, 3.5124999999996964e-05, 3.530599999999884e-05, 3.426399999999913e-05, 3.495900000000107e-05, 3.5110999999997394e-05, 3.448600000000024e-05, 3.461200000000331e-05, 3.4388999999995784e-05, 3.444400000000153e-05, 3.47779999999992e-05, 3.444400000000153e-05, 3.51250000000039e-05, 3.42779999999987e-05, 3.46250000000034e-05, 3.430600000000478e-05, 3.49450000000015e-05, 3.429199999999827e-05, 3.44580000000011e-05, 3.5110999999997394e-05, 3.47779999999992e-05, 3.479199999999877e-05, 3.459800000000374e-05, 3.427800000000564e-05, 3.5304999999999365e-05, 3.4930999999994994e-05, 3.447200000000067e-05, 3.533399999999798e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.711" endtime="20201112 09:44:19.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.700" endtime="20201112 09:44:19.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.724" endtime="20201112 09:44:19.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.732" endtime="20201112 09:44:19.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.728" endtime="20201112 09:44:19.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.720" endtime="20201112 09:44:19.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.219" endtime="20201112 09:44:19.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.217" endtime="20201112 09:44:19.758"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.781" endtime="20201112 09:44:19.796"></status>
</kw>
<msg timestamp="20201112 09:44:19.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.777" endtime="20201112 09:44:19.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.799" endtime="20201112 09:44:19.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.806" endtime="20201112 09:44:19.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.770" endtime="20201112 09:44:19.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.764" endtime="20201112 09:44:19.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.829" endtime="20201112 09:44:20.162"></status>
</kw>
<msg timestamp="20201112 09:44:20.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.825" endtime="20201112 09:44:20.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.172" endtime="20201112 09:44:20.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.191" endtime="20201112 09:44:20.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.818" endtime="20201112 09:44:20.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.814" endtime="20201112 09:44:20.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.211" level="INFO">${RESULT} = [{'time': 0.040209125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.44580000000011e-05, 'source_diff': 3.44580000000011e-05}, {'time': 0.040253333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:20.202" endtime="20201112 09:44:20.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:20.213" endtime="20201112 09:44:20.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.252" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.250" endtime="20201112 09:44:20.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.257" level="INFO">VALUE: [3.44580000000011e-05, 3.443000000000196e-05, 3.49450000000015e-05, 3.5290999999999795e-05, 3.4624999999996464e-05, 3.483400000000442e-05, 3.445900000000057e-05, 3.5124999999996964e-05, 3.46250000000034e-05, 3.461100000000383e-05, 3.4790999999999295e-05, 3.5096999999997824e-05, 3.445900000000057e-05, 3.5152999999996104e-05, 3.447200000000067e-05, 3.4290999999998795e-05, 3.479199999999877e-05, 3.46250000000034e-05, 3.498600000000074e-05, 3.461100000000383e-05, 3.494400000000203e-05, 3.497200000000117e-05, 3.4638999999996034e-05, 3.494400000000203e-05, 3.4624999999996464e-05, 3.533399999999798e-05, 3.49580000000016e-05, 3.513900000000347e-05, 3.479200000000571e-05, 3.4846999999997574e-05, 3.49450000000015e-05, 3.530599999999884e-05, 3.513900000000347e-05, 3.4652999999995604e-05, 3.495799999999466e-05, 3.480600000000528e-05, 3.4610999999996894e-05, 3.4776999999999725e-05, 3.5124999999996964e-05, 3.5304999999999365e-05, 3.431999999999741e-05, 3.4445000000001e-05, 3.447200000000067e-05, 3.497200000000117e-05, 3.495900000000107e-05, 3.5124999999996964e-05, 3.475000000000006e-05, 3.4930999999994994e-05, 3.44580000000011e-05, 3.5124999999996964e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.254" endtime="20201112 09:44:20.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.243" endtime="20201112 09:44:20.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.267" endtime="20201112 09:44:20.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.275" endtime="20201112 09:44:20.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.271" endtime="20201112 09:44:20.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.262" endtime="20201112 09:44:20.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.760" endtime="20201112 09:44:20.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.759" endtime="20201112 09:44:20.301"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.323" endtime="20201112 09:44:20.339"></status>
</kw>
<msg timestamp="20201112 09:44:20.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.320" endtime="20201112 09:44:20.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.342" endtime="20201112 09:44:20.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.348" endtime="20201112 09:44:20.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.313" endtime="20201112 09:44:20.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.307" endtime="20201112 09:44:20.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.371" endtime="20201112 09:44:20.707"></status>
</kw>
<msg timestamp="20201112 09:44:20.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.368" endtime="20201112 09:44:20.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.717" endtime="20201112 09:44:20.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.735" endtime="20201112 09:44:20.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.361" endtime="20201112 09:44:20.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.356" endtime="20201112 09:44:20.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.754" level="INFO">${RESULT} = [{'time': 0.040140361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49580000000016e-05, 'source_diff': 3.49580000000016e-05}, {'time': 0.040182444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:20.745" endtime="20201112 09:44:20.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.785" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:20.756" endtime="20201112 09:44:20.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.795" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.793" endtime="20201112 09:44:20.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.801" level="INFO">VALUE: [3.49580000000016e-05, 3.4610999999996894e-05, 3.4776999999999725e-05, 3.4304999999998365e-05, 3.51250000000039e-05, 3.476399999999963e-05, 3.445900000000057e-05, 3.4832999999998004e-05, 3.483300000000494e-05, 3.447200000000067e-05, 3.463900000000297e-05, 3.422200000000042e-05, 3.5138999999996534e-05, 3.5318999999998935e-05, 3.511199999999687e-05, 3.497200000000117e-05, 3.5110999999997394e-05, 3.447300000000014e-05, 3.49580000000016e-05, 3.4819000000005373e-05, 3.497199999999423e-05, 3.5290999999999795e-05, 3.447199999999373e-05, 3.4790999999999295e-05, 3.5124999999996964e-05, 3.44580000000011e-05, 3.529200000000621e-05, 3.5124999999996964e-05, 3.529199999999927e-05, 3.445900000000057e-05, 3.495799999999466e-05, 3.4624999999996464e-05, 3.5124999999996964e-05, 3.49580000000016e-05, 3.483399999999748e-05, 3.447300000000014e-05, 3.5110999999997394e-05, 3.46250000000034e-05, 3.4610999999996894e-05, 3.515200000000357e-05, 3.5304999999999365e-05, 3.4624999999996464e-05, 3.4290999999998795e-05, 3.495799999999466e-05, 3.470800000000135e-05, 3.432000000000435e-05, 3.444400000000153e-05, 3.529199999999927e-05, 3.427800000000564e-05, 3.47779999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.798" endtime="20201112 09:44:20.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.786" endtime="20201112 09:44:20.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.810" endtime="20201112 09:44:20.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.818" endtime="20201112 09:44:20.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.814" endtime="20201112 09:44:20.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.806" endtime="20201112 09:44:20.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.303" endtime="20201112 09:44:20.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.302" endtime="20201112 09:44:20.844"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.867" endtime="20201112 09:44:20.882"></status>
</kw>
<msg timestamp="20201112 09:44:20.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.863" endtime="20201112 09:44:20.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.886" endtime="20201112 09:44:20.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.892" endtime="20201112 09:44:20.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.856" endtime="20201112 09:44:20.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.851" endtime="20201112 09:44:20.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.915" endtime="20201112 09:44:21.250"></status>
</kw>
<msg timestamp="20201112 09:44:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040166042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.912" endtime="20201112 09:44:21.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040166042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.259" endtime="20201112 09:44:21.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.278" endtime="20201112 09:44:21.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.905" endtime="20201112 09:44:21.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.900" endtime="20201112 09:44:21.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.297" level="INFO">${RESULT} = [{'time': 0.040200514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.447200000000067e-05, 'source_diff': 3.447200000000067e-05}, {'time': 0.040242653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.288" endtime="20201112 09:44:21.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.327" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:21.299" endtime="20201112 09:44:21.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.338" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.336" endtime="20201112 09:44:21.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.343" level="INFO">VALUE: [3.447200000000067e-05, 3.477800000000614e-05, 3.5304999999999365e-05, 3.491599999999595e-05, 3.529199999999927e-05, 3.501399999999988e-05, 3.495799999999466e-05, 3.4610999999996894e-05, 3.52779999999997e-05, 3.445799999999416e-05, 3.4374999999996214e-05, 3.51250000000039e-05, 3.4610999999996894e-05, 3.494400000000203e-05, 3.444400000000153e-05, 3.51250000000039e-05, 3.42779999999987e-05, 3.4445000000001e-05, 3.4624999999996464e-05, 3.445900000000057e-05, 3.495799999999466e-05, 3.5124999999996964e-05, 3.529200000000621e-05, 3.529199999999927e-05, 3.513900000000347e-05, 3.515300000000304e-05, 3.495900000000107e-05, 3.513900000000347e-05, 3.5360999999997644e-05, 3.494400000000203e-05, 3.529199999999927e-05, 3.4652999999995604e-05, 3.4832999999998004e-05, 3.4610999999996894e-05, 3.475000000000006e-05, 3.480599999999834e-05, 3.472200000000092e-05, 3.444400000000153e-05, 3.497200000000117e-05, 3.440200000000282e-05, 3.51250000000039e-05, 3.426399999999913e-05, 3.513900000000347e-05, 3.495900000000107e-05, 3.529199999999927e-05, 3.494399999999509e-05, 3.426399999999913e-05, 3.5096999999997824e-05, 3.479200000000571e-05, 3.495900000000107e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.340" endtime="20201112 09:44:21.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.329" endtime="20201112 09:44:21.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.353" endtime="20201112 09:44:21.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.361" endtime="20201112 09:44:21.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.357" endtime="20201112 09:44:21.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.348" endtime="20201112 09:44:21.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.846" endtime="20201112 09:44:21.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.845" endtime="20201112 09:44:21.387"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.409" endtime="20201112 09:44:21.425"></status>
</kw>
<msg timestamp="20201112 09:44:21.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.406" endtime="20201112 09:44:21.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.428" endtime="20201112 09:44:21.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.435" endtime="20201112 09:44:21.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.399" endtime="20201112 09:44:21.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.393" endtime="20201112 09:44:21.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.459" endtime="20201112 09:44:21.795"></status>
</kw>
<msg timestamp="20201112 09:44:21.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040190681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.456" endtime="20201112 09:44:21.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040190681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.804" endtime="20201112 09:44:21.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.823" endtime="20201112 09:44:21.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.448" endtime="20201112 09:44:21.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.443" endtime="20201112 09:44:21.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.842" level="INFO">${RESULT} = [{'time': 0.040225458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4776999999999725e-05, 'source_diff': 3.4776999999999725e-05}, {'time': 0.040270556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.833" endtime="20201112 09:44:21.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.872" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:21.844" endtime="20201112 09:44:21.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.882" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.880" endtime="20201112 09:44:21.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.888" level="INFO">VALUE: [3.4776999999999725e-05, 3.456999999999766e-05, 3.52779999999997e-05, 3.5110999999997394e-05, 3.4652999999995604e-05, 3.482000000000485e-05, 3.495900000000107e-05, 3.5304999999999365e-05, 3.479199999999877e-05, 3.495799999999466e-05, 3.495799999999466e-05, 3.483300000000494e-05, 3.49580000000016e-05, 3.45700000000046e-05, 3.465300000000254e-05, 3.461199999999637e-05, 3.4776999999999725e-05, 3.461100000000383e-05, 3.449999999999981e-05, 3.427800000000564e-05, 3.451399999999938e-05, 3.5166999999995674e-05, 3.476399999999963e-05, 3.511100000000433e-05, 3.498600000000074e-05, 3.5152999999996104e-05, 3.479199999999877e-05, 3.51250000000039e-05, 3.52779999999997e-05, 3.444400000000153e-05, 3.529199999999927e-05, 3.52779999999997e-05, 3.44580000000011e-05, 3.495900000000107e-05, 3.46250000000034e-05, 3.5124999999996964e-05, 3.49450000000015e-05, 3.479199999999877e-05, 3.461100000000383e-05, 3.459700000000426e-05, 3.445900000000057e-05, 3.475000000000006e-05, 3.47779999999992e-05, 3.44580000000011e-05, 3.461100000000383e-05, 3.49580000000016e-05, 3.49580000000016e-05, 3.5124999999996964e-05, 3.494400000000203e-05, 3.498600000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.885" endtime="20201112 09:44:21.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.873" endtime="20201112 09:44:21.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.897" endtime="20201112 09:44:21.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.905" endtime="20201112 09:44:21.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.901" endtime="20201112 09:44:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.893" endtime="20201112 09:44:21.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.389" endtime="20201112 09:44:21.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.388" endtime="20201112 09:44:21.931"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.954" endtime="20201112 09:44:21.969"></status>
</kw>
<msg timestamp="20201112 09:44:21.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.950" endtime="20201112 09:44:21.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.973" endtime="20201112 09:44:21.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.979" endtime="20201112 09:44:21.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.943" endtime="20201112 09:44:21.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.938" endtime="20201112 09:44:21.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.002" endtime="20201112 09:44:22.336"></status>
</kw>
<msg timestamp="20201112 09:44:22.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.999" endtime="20201112 09:44:22.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.346" endtime="20201112 09:44:22.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.364" endtime="20201112 09:44:22.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.992" endtime="20201112 09:44:22.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.987" endtime="20201112 09:44:22.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.385" level="INFO">${RESULT} = [{'time': 0.040238764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49450000000015e-05, 'source_diff': 3.49450000000015e-05}, {'time': 0.040277958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:22.376" endtime="20201112 09:44:22.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:22.387" endtime="20201112 09:44:22.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.426" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.424" endtime="20201112 09:44:22.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.431" level="INFO">VALUE: [3.49450000000015e-05, 3.444400000000153e-05, 3.4624999999996464e-05, 3.442999999999502e-05, 3.4610999999996894e-05, 3.520900000000132e-05, 3.5277000000000225e-05, 3.4666999999995174e-05, 3.44580000000011e-05, 3.5068999999998685e-05, 3.513900000000347e-05, 3.49450000000015e-05, 3.4624999999996464e-05, 3.513900000000347e-05, 3.479200000000571e-05, 3.49580000000016e-05, 3.494400000000203e-05, 3.480599999999834e-05, 3.493100000000193e-05, 3.448600000000024e-05, 3.461100000000383e-05, 3.5304999999999365e-05, 3.445900000000057e-05, 3.473600000000049e-05, 3.4610999999996894e-05, 3.482000000000485e-05, 3.49580000000016e-05, 3.448600000000024e-05, 3.47779999999992e-05, 3.44580000000011e-05, 3.472200000000092e-05, 3.426399999999913e-05, 3.4930999999994994e-05, 3.4596999999997324e-05, 3.4569000000005123e-05, 3.4445000000001e-05, 3.445900000000057e-05, 3.4568999999998185e-05, 3.47779999999992e-05, 3.49580000000016e-05, 3.494400000000203e-05, 3.470799999999441e-05, 3.497300000000064e-05, 3.490300000000279e-05, 3.4445000000001e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.461200000000331e-05, 3.447200000000067e-05, 3.443000000000196e-05]</msg>
<status status="PASS" starttime="20201112 09:44:22.428" endtime="20201112 09:44:22.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.417" endtime="20201112 09:44:22.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.446" endtime="20201112 09:44:22.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.454" endtime="20201112 09:44:22.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.449" endtime="20201112 09:44:22.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.441" endtime="20201112 09:44:22.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.933" endtime="20201112 09:44:22.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.932" endtime="20201112 09:44:22.480"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.504" endtime="20201112 09:44:22.519"></status>
</kw>
<msg timestamp="20201112 09:44:22.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.500" endtime="20201112 09:44:22.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.522" endtime="20201112 09:44:22.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.529" endtime="20201112 09:44:22.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.493" endtime="20201112 09:44:22.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.487" endtime="20201112 09:44:22.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.552" endtime="20201112 09:44:22.888"></status>
</kw>
<msg timestamp="20201112 09:44:22.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041656722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.548" endtime="20201112 09:44:22.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041656722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.897" endtime="20201112 09:44:22.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.916" endtime="20201112 09:44:22.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.541" endtime="20201112 09:44:22.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.537" endtime="20201112 09:44:22.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.935" level="INFO">${RESULT} = [{'time': 0.041656722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.493000000000246e-05, 'source_diff': 3.493000000000246e-05}, {'time': 0.041700722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:22.926" endtime="20201112 09:44:22.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.965" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:22.937" endtime="20201112 09:44:22.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.976" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.973" endtime="20201112 09:44:22.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.981" level="INFO">VALUE: [3.493000000000246e-05, 3.47779999999992e-05, 3.4610999999996894e-05, 3.4638999999996034e-05, 3.461100000000383e-05, 3.4276999999999225e-05, 3.4304999999998365e-05, 3.4790999999999295e-05, 3.495900000000107e-05, 3.479199999999877e-05, 3.523600000000099e-05, 3.5124999999996964e-05, 3.445900000000057e-05, 3.46250000000034e-05, 3.4290999999998795e-05, 3.493100000000193e-05, 3.5110999999997394e-05, 3.5110999999997394e-05, 3.529199999999927e-05, 3.493000000000246e-05, 3.476399999999963e-05, 3.42779999999987e-05, 3.5138999999996534e-05, 3.429200000000521e-05, 3.4763000000000155e-05, 3.476399999999963e-05, 3.529199999999927e-05, 3.4445000000001e-05, 3.495799999999466e-05, 3.495900000000107e-05, 3.4804999999998865e-05, 3.5124999999996964e-05, 3.5110999999997394e-05, 3.4445000000001e-05, 3.47779999999992e-05, 3.509700000000476e-05, 3.44580000000011e-05, 3.445900000000057e-05, 3.511100000000433e-05, 3.49580000000016e-05, 3.444400000000153e-05, 3.49580000000016e-05, 3.448600000000024e-05, 3.47779999999992e-05, 3.422200000000042e-05, 3.4430999999994494e-05, 3.5124999999996964e-05, 3.494400000000203e-05, 3.49580000000016e-05, 3.5110999999997394e-05]</msg>
<status status="PASS" starttime="20201112 09:44:22.978" endtime="20201112 09:44:22.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.966" endtime="20201112 09:44:22.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.990" endtime="20201112 09:44:22.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.999" endtime="20201112 09:44:23.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.994" endtime="20201112 09:44:23.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.986" endtime="20201112 09:44:23.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.482" endtime="20201112 09:44:23.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.481" endtime="20201112 09:44:23.025"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.047" endtime="20201112 09:44:23.065"></status>
</kw>
<msg timestamp="20201112 09:44:23.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.044" endtime="20201112 09:44:23.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.068" endtime="20201112 09:44:23.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.075" endtime="20201112 09:44:23.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.037" endtime="20201112 09:44:23.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.031" endtime="20201112 09:44:23.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.098" endtime="20201112 09:44:23.445"></status>
</kw>
<msg timestamp="20201112 09:44:23.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040206944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.094" endtime="20201112 09:44:23.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040206944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.454" endtime="20201112 09:44:23.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.473" endtime="20201112 09:44:23.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.087" endtime="20201112 09:44:23.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.083" endtime="20201112 09:44:23.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.492" level="INFO">${RESULT} = [{'time': 0.040248875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1931000000001994e-05, 'source_diff': 4.1931000000001994e-05}, {'time': 0.040297056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:23.483" endtime="20201112 09:44:23.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.522" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:23.494" endtime="20201112 09:44:23.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.534" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.531" endtime="20201112 09:44:23.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.539" level="INFO">VALUE: [4.1931000000001994e-05, 4.176399999999969e-05, 4.1625000000003465e-05, 4.2068999999998746e-05, 4.2110999999997456e-05, 4.1610999999996956e-05, 4.173600000000055e-05, 4.163800000000356e-05, 4.1804999999998926e-05, 4.1582999999997816e-05, 4.195800000000166e-05, 4.1583000000004755e-05, 4.1583000000004755e-05, 4.124999999999962e-05, 4.191599999999601e-05, 4.2083000000005255e-05, 4.176399999999969e-05, 4.209799999999736e-05, 4.1445000000001064e-05, 4.200000000000037e-05, 4.226300000000072e-05, 4.2111000000004395e-05, 4.227799999999976e-05, 4.192999999999558e-05, 4.194400000000209e-05, 4.1416999999994986e-05, 4.127799999999876e-05, 4.1625000000003465e-05, 4.1611000000003895e-05, 4.1916999999995486e-05, 4.226400000000019e-05, 4.176399999999969e-05, 4.2139000000003535e-05, 4.2110999999997456e-05, 4.2277000000000287e-05, 4.226400000000019e-05, 4.13059999999979e-05, 4.2237000000000524e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.143000000000202e-05, 4.226400000000019e-05, 4.175000000000012e-05, 4.1596999999997386e-05, 4.1431000000001494e-05, 4.1944999999994625e-05, 4.143000000000202e-05, 4.1916999999995486e-05, 4.193000000000252e-05, 4.1445000000001064e-05]</msg>
<status status="PASS" starttime="20201112 09:44:23.536" endtime="20201112 09:44:23.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.524" endtime="20201112 09:44:23.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.549" endtime="20201112 09:44:23.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.557" endtime="20201112 09:44:23.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.552" endtime="20201112 09:44:23.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.544" endtime="20201112 09:44:23.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.027" endtime="20201112 09:44:23.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.026" endtime="20201112 09:44:23.583"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.605" endtime="20201112 09:44:23.623"></status>
</kw>
<msg timestamp="20201112 09:44:23.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.602" endtime="20201112 09:44:23.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.626" endtime="20201112 09:44:23.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.633" endtime="20201112 09:44:23.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.595" endtime="20201112 09:44:23.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.589" endtime="20201112 09:44:23.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.656" endtime="20201112 09:44:24.003"></status>
</kw>
<msg timestamp="20201112 09:44:24.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040486542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.652" endtime="20201112 09:44:24.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040486542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.013" endtime="20201112 09:44:24.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.032" endtime="20201112 09:44:24.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.645" endtime="20201112 09:44:24.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.641" endtime="20201112 09:44:24.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.051" level="INFO">${RESULT} = [{'time': 0.040486542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.14860000000003e-05, 'source_diff': 4.14860000000003e-05}, {'time': 0.040533528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:24.042" endtime="20201112 09:44:24.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.081" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:24.053" endtime="20201112 09:44:24.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.091" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.089" endtime="20201112 09:44:24.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.097" level="INFO">VALUE: [4.14860000000003e-05, 4.177799999999926e-05, 4.1610999999996956e-05, 4.144399999999465e-05, 4.1916999999995486e-05, 4.1403000000002355e-05, 4.1931000000001994e-05, 4.1431000000001494e-05, 4.2083000000005255e-05, 4.1931000000001994e-05, 4.1430999999994556e-05, 4.194400000000209e-05, 4.227799999999976e-05, 4.1417000000001924e-05, 4.143000000000202e-05, 4.225000000000062e-05, 4.2110999999997456e-05, 4.144399999999465e-05, 4.226300000000072e-05, 4.177799999999926e-05, 4.2082999999998316e-05, 4.179199999999883e-05, 4.1596999999997386e-05, 4.1624999999996526e-05, 4.226400000000019e-05, 4.2111000000004395e-05, 4.2277000000000287e-05, 4.2096999999997886e-05, 4.226400000000019e-05, 4.175000000000012e-05, 4.195800000000166e-05, 4.208399999999779e-05, 4.226400000000019e-05, 4.143000000000202e-05, 4.2110999999997456e-05, 4.177799999999926e-05, 4.1459000000000634e-05, 4.1445000000001064e-05, 4.227799999999976e-05, 4.2082999999998316e-05, 4.145800000000116e-05, 4.143000000000202e-05, 4.2290999999999856e-05, 4.176399999999969e-05, 4.127799999999876e-05, 4.1776999999999787e-05, 4.1596999999997386e-05, 4.194399999999515e-05, 4.1610999999996956e-05, 4.173600000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:44:24.094" endtime="20201112 09:44:24.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.082" endtime="20201112 09:44:24.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.106" endtime="20201112 09:44:24.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.114" endtime="20201112 09:44:24.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.110" endtime="20201112 09:44:24.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.102" endtime="20201112 09:44:24.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.585" endtime="20201112 09:44:24.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.584" endtime="20201112 09:44:24.141"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.163" endtime="20201112 09:44:24.181"></status>
</kw>
<msg timestamp="20201112 09:44:24.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.160" endtime="20201112 09:44:24.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.184" endtime="20201112 09:44:24.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.190" endtime="20201112 09:44:24.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.153" endtime="20201112 09:44:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.147" endtime="20201112 09:44:24.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.213" endtime="20201112 09:44:24.561"></status>
</kw>
<msg timestamp="20201112 09:44:24.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040374417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.210" endtime="20201112 09:44:24.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040374417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.571" endtime="20201112 09:44:24.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.590" endtime="20201112 09:44:24.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.203" endtime="20201112 09:44:24.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.198" endtime="20201112 09:44:24.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.611" level="INFO">${RESULT} = [{'time': 0.040374417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223600000000105e-05, 'source_diff': 4.223600000000105e-05}, {'time': 0.040421611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:24.602" endtime="20201112 09:44:24.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:24.613" endtime="20201112 09:44:24.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.652" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.649" endtime="20201112 09:44:24.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.657" level="INFO">VALUE: [4.223600000000105e-05, 4.194400000000209e-05, 4.1931000000001994e-05, 4.193000000000252e-05, 4.1875000000003715e-05, 4.1818999999998496e-05, 4.1930999999995056e-05, 4.226400000000019e-05, 4.20980000000043e-05, 4.1417000000001924e-05, 4.2096999999997886e-05, 4.142999999999508e-05, 4.194400000000209e-05, 4.12780000000057e-05, 4.158400000000423e-05, 4.1917000000002425e-05, 4.1527000000006475e-05, 4.2054999999999176e-05, 4.176399999999969e-05, 4.2277000000000287e-05, 4.2097000000004825e-05, 4.1611000000003895e-05, 4.1610999999996956e-05, 4.18059999999984e-05, 4.1596999999997386e-05, 4.1416999999994986e-05, 4.176399999999969e-05, 4.141600000000245e-05, 4.2096999999997886e-05, 4.1431000000001494e-05, 4.2277000000000287e-05, 4.2124999999997026e-05, 4.2040999999999606e-05, 4.144399999999465e-05, 4.1903000000002855e-05, 4.200000000000037e-05, 4.1582999999997816e-05, 4.175000000000012e-05, 4.2083000000005255e-05, 4.227799999999976e-05, 4.1430999999994556e-05, 4.1694999999994375e-05, 4.1417000000001924e-05, 4.1445000000001064e-05, 4.2110999999997456e-05, 4.179199999999883e-05, 4.1374999999996276e-05, 4.1625000000003465e-05, 4.2124999999997026e-05, 4.142999999999508e-05]</msg>
<status status="PASS" starttime="20201112 09:44:24.654" endtime="20201112 09:44:24.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.643" endtime="20201112 09:44:24.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.666" endtime="20201112 09:44:24.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.675" endtime="20201112 09:44:24.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.670" endtime="20201112 09:44:24.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.662" endtime="20201112 09:44:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.143" endtime="20201112 09:44:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.141" endtime="20201112 09:44:24.701"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.723" endtime="20201112 09:44:24.741"></status>
</kw>
<msg timestamp="20201112 09:44:24.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.720" endtime="20201112 09:44:24.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.744" endtime="20201112 09:44:24.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.750" endtime="20201112 09:44:24.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.713" endtime="20201112 09:44:24.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.707" endtime="20201112 09:44:24.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.773" endtime="20201112 09:44:25.120"></status>
</kw>
<msg timestamp="20201112 09:44:25.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040324958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.770" endtime="20201112 09:44:25.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040283347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040324958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.130" endtime="20201112 09:44:25.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.149" endtime="20201112 09:44:25.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.763" endtime="20201112 09:44:25.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.758" endtime="20201112 09:44:25.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.168" level="INFO">${RESULT} = [{'time': 0.040324958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1611000000003895e-05, 'source_diff': 4.1611000000003895e-05}, {'time': 0.040378069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:25.159" endtime="20201112 09:44:25.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:25.198" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:25.170" endtime="20201112 09:44:25.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.208" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:44:25.206" endtime="20201112 09:44:25.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.214" level="INFO">VALUE: [4.1611000000003895e-05, 4.213800000000406e-05, 4.1554999999998676e-05, 4.226400000000019e-05, 4.1431000000001494e-05, 4.175000000000012e-05, 4.1417000000001924e-05, 4.156999999999772e-05, 4.1430999999994556e-05, 4.1568999999998246e-05, 4.1596999999997386e-05, 4.1916999999995486e-05, 4.226300000000072e-05, 4.2110999999997456e-05, 4.226300000000072e-05, 4.226400000000019e-05, 4.1931000000001994e-05, 4.193000000000252e-05, 4.158399999999729e-05, 4.226400000000019e-05, 4.1374999999996276e-05, 4.2096999999997886e-05, 4.2096999999997886e-05, 4.2222999999994015e-05, 4.223600000000105e-05, 4.1611000000003895e-05, 4.1417000000001924e-05, 4.1431000000001494e-05, 4.1389000000002785e-05, 4.147200000000073e-05, 4.226400000000019e-05, 4.176399999999969e-05, 4.2277000000000287e-05, 4.1889000000003285e-05, 4.176399999999969e-05, 4.1417000000001924e-05, 4.2111000000004395e-05, 4.1888999999996346e-05, 4.1930999999995056e-05, 4.175000000000012e-05, 4.2082999999998316e-05, 4.1639000000003035e-05, 4.1596999999997386e-05, 4.2096999999997886e-05, 4.1916999999995486e-05, 4.225000000000062e-05, 4.1973000000000704e-05, 4.1832999999998066e-05, 4.142999999999508e-05, 4.1431000000001494e-05]</msg>
<status status="PASS" starttime="20201112 09:44:25.211" endtime="20201112 09:44:25.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.199" endtime="20201112 09:44:25.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.223" endtime="20201112 09:44:25.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.232" endtime="20201112 09:44:25.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.227" endtime="20201112 09:44:25.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.219" endtime="20201112 09:44:25.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.703" endtime="20201112 09:44:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.702" endtime="20201112 09:44:25.257"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.280" endtime="20201112 09:44:25.296"></status>
</kw>
<msg timestamp="20201112 09:44:25.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.276" endtime="20201112 09:44:25.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.299" endtime="20201112 09:44:25.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.305" endtime="20201112 09:44:25.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.269" endtime="20201112 09:44:25.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.264" endtime="20201112 09:44:25.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.328" endtime="20201112 09:44:25.664"></status>
</kw>
<msg timestamp="20201112 09:44:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040195181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.325" endtime="20201112 09:44:25.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040195181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.674" endtime="20201112 09:44:25.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.693" endtime="20201112 09:44:25.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.318" endtime="20201112 09:44:25.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.313" endtime="20201112 09:44:25.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.712" level="INFO">${RESULT} = [{'time': 0.040195181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.15980000000038e-05, 'source_diff': 4.15980000000038e-05}, {'time': 0.040247347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:25.703" endtime="20201112 09:44:25.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:25.741" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:25.714" endtime="20201112 09:44:25.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.752" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:44:25.750" endtime="20201112 09:44:25.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.758" level="INFO">VALUE: [4.15980000000038e-05, 4.151399999999944e-05, 4.158399999999729e-05, 4.1611000000003895e-05, 4.191600000000295e-05, 4.1611000000003895e-05, 4.159799999999686e-05, 4.144399999999465e-05, 4.1416999999994986e-05, 4.155600000000509e-05, 4.194400000000209e-05, 4.1945000000001564e-05, 4.1347000000004075e-05, 4.2096999999997886e-05, 4.177799999999926e-05, 4.1610999999996956e-05, 4.175000000000012e-05, 4.2111000000004395e-05, 4.147200000000073e-05, 4.193000000000252e-05, 4.2110999999997456e-05, 4.229199999999933e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.1959000000001134e-05, 4.1459000000000634e-05, 4.176399999999969e-05, 4.158399999999729e-05, 4.226300000000072e-05, 4.1403000000002355e-05, 4.195800000000166e-05, 4.2181000000002244e-05, 4.1375000000003215e-05, 4.1611000000003895e-05, 4.1582999999997816e-05, 4.2096999999997886e-05, 4.227799999999976e-05, 4.2083000000005255e-05, 4.1445000000001064e-05, 4.145800000000116e-05, 4.1374999999996276e-05, 4.176400000000663e-05, 4.175000000000012e-05, 4.195800000000166e-05, 4.225000000000062e-05, 4.1931000000001994e-05, 4.1931000000001994e-05, 4.1361000000003645e-05, 4.2125000000003965e-05, 4.1610999999996956e-05]</msg>
<status status="PASS" starttime="20201112 09:44:25.755" endtime="20201112 09:44:25.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.743" endtime="20201112 09:44:25.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.767" endtime="20201112 09:44:25.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.775" endtime="20201112 09:44:25.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.771" endtime="20201112 09:44:25.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.763" endtime="20201112 09:44:25.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.259" endtime="20201112 09:44:25.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.258" endtime="20201112 09:44:25.801"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.824" endtime="20201112 09:44:25.840"></status>
</kw>
<msg timestamp="20201112 09:44:25.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.820" endtime="20201112 09:44:25.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.843" endtime="20201112 09:44:25.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.849" endtime="20201112 09:44:25.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.813" endtime="20201112 09:44:25.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.807" endtime="20201112 09:44:25.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.872" endtime="20201112 09:44:26.206"></status>
</kw>
<msg timestamp="20201112 09:44:26.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040081611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.869" endtime="20201112 09:44:26.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040081611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.216" endtime="20201112 09:44:26.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.235" endtime="20201112 09:44:26.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.862" endtime="20201112 09:44:26.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.857" endtime="20201112 09:44:26.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.254" level="INFO">${RESULT} = [{'time': 0.040123556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1944999999994625e-05, 'source_diff': 4.1944999999994625e-05}, {'time': 0.040174778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:26.245" endtime="20201112 09:44:26.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:26.284" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:26.256" endtime="20201112 09:44:26.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.295" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:44:26.292" endtime="20201112 09:44:26.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.300" level="INFO">VALUE: [4.1944999999994625e-05, 4.23059999999989e-05, 4.208400000000473e-05, 4.226400000000019e-05, 4.1597000000004325e-05, 4.1776999999999787e-05, 4.195800000000166e-05, 4.191600000000295e-05, 4.154199999999858e-05, 4.226400000000019e-05, 4.209799999999736e-05, 4.194399999999515e-05, 4.175000000000012e-05, 4.1804999999998926e-05, 4.1818999999998496e-05, 4.194399999999515e-05, 4.224999999999368e-05, 4.193000000000252e-05, 4.202799999999951e-05, 4.177799999999926e-05, 4.1445000000001064e-05, 4.1596999999997386e-05, 4.2097000000004825e-05, 4.143000000000202e-05, 4.144399999999465e-05, 4.208399999999779e-05, 4.209799999999736e-05, 4.2096999999997886e-05, 4.158400000000423e-05, 4.1931000000001994e-05, 4.201399999999994e-05, 4.1903000000002855e-05, 4.145800000000116e-05, 4.158399999999729e-05, 4.20980000000043e-05, 4.226400000000019e-05, 4.176300000000022e-05, 4.1416999999994986e-05, 4.161200000000337e-05, 4.158399999999729e-05, 4.2082999999998316e-05, 4.1931000000001994e-05, 4.1723000000000454e-05, 4.179199999999883e-05, 4.226400000000019e-05, 4.141600000000245e-05, 4.1916999999995486e-05, 4.176399999999969e-05, 4.1931000000001994e-05, 4.1416999999994986e-05]</msg>
<status status="PASS" starttime="20201112 09:44:26.297" endtime="20201112 09:44:26.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.286" endtime="20201112 09:44:26.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.309" endtime="20201112 09:44:26.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.318" endtime="20201112 09:44:26.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.313" endtime="20201112 09:44:26.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.305" endtime="20201112 09:44:26.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.803" endtime="20201112 09:44:26.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.802" endtime="20201112 09:44:26.343"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.366" endtime="20201112 09:44:26.382"></status>
</kw>
<msg timestamp="20201112 09:44:26.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.363" endtime="20201112 09:44:26.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.385" endtime="20201112 09:44:26.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.391" endtime="20201112 09:44:26.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.355" endtime="20201112 09:44:26.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.350" endtime="20201112 09:44:26.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.414" endtime="20201112 09:44:26.750"></status>
</kw>
<msg timestamp="20201112 09:44:26.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040139625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.411" endtime="20201112 09:44:26.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040139625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.759" endtime="20201112 09:44:26.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.778" endtime="20201112 09:44:26.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.404" endtime="20201112 09:44:26.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.399" endtime="20201112 09:44:26.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.799" level="INFO">${RESULT} = [{'time': 0.040181264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1639000000003035e-05, 'source_diff': 4.1639000000003035e-05}, {'time': 0.040231347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:26.790" endtime="20201112 09:44:26.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:26.829" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:26.801" endtime="20201112 09:44:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.840" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:44:26.837" endtime="20201112 09:44:26.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.845" level="INFO">VALUE: [4.1639000000003035e-05, 4.194400000000209e-05, 4.1945000000001564e-05, 4.1917000000002425e-05, 4.194399999999515e-05, 4.179199999999883e-05, 4.2082999999998316e-05, 4.144400000000159e-05, 4.1361000000003645e-05, 4.1611000000003895e-05, 4.229199999999933e-05, 4.2277000000000287e-05, 4.227799999999976e-05, 4.1944999999994625e-05, 4.1959000000001134e-05, 4.1445000000001064e-05, 4.206999999999822e-05, 4.1431000000001494e-05, 4.161199999999643e-05, 4.158400000000423e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.1431000000001494e-05, 4.1931000000001994e-05, 4.1832999999998066e-05, 4.20980000000043e-05, 4.234799999999761e-05, 4.2082999999998316e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.2125000000003965e-05, 4.176399999999969e-05, 4.194400000000209e-05, 4.1459000000000634e-05, 4.1611000000003895e-05, 4.227799999999976e-05, 4.176399999999969e-05, 4.1624999999996526e-05, 4.1430999999994556e-05, 4.2125000000003965e-05, 4.176300000000022e-05, 4.2110999999997456e-05, 4.1931000000001994e-05, 4.1596999999997386e-05, 4.147200000000073e-05, 4.192999999999558e-05, 4.1959000000001134e-05, 4.23059999999989e-05, 4.225000000000062e-05, 4.2110999999997456e-05]</msg>
<status status="PASS" starttime="20201112 09:44:26.842" endtime="20201112 09:44:26.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.831" endtime="20201112 09:44:26.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.854" endtime="20201112 09:44:26.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.863" endtime="20201112 09:44:26.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.858" endtime="20201112 09:44:26.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.850" endtime="20201112 09:44:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.345" endtime="20201112 09:44:26.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.344" endtime="20201112 09:44:26.888"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.911" endtime="20201112 09:44:26.927"></status>
</kw>
<msg timestamp="20201112 09:44:26.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.908" endtime="20201112 09:44:26.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.930" endtime="20201112 09:44:26.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.937" endtime="20201112 09:44:26.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.900" endtime="20201112 09:44:26.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.895" endtime="20201112 09:44:26.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.960" endtime="20201112 09:44:27.294"></status>
</kw>
<msg timestamp="20201112 09:44:27.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039957639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.956" endtime="20201112 09:44:27.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039957639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.304" endtime="20201112 09:44:27.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.322" endtime="20201112 09:44:27.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.949" endtime="20201112 09:44:27.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.945" endtime="20201112 09:44:27.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.341" level="INFO">${RESULT} = [{'time': 0.039957639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.855600000000515e-05, 'source_diff': 4.855600000000515e-05}, {'time': 0.040011806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.332" endtime="20201112 09:44:27.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.371" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:27.343" endtime="20201112 09:44:27.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.382" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.380" endtime="20201112 09:44:27.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.387" level="INFO">VALUE: [4.855600000000515e-05, 4.859799999999692e-05, 4.920800000000197e-05, 4.8611000000003957e-05, 4.888800000000387e-05, 4.908399999999785e-05, 4.888800000000387e-05, 4.920800000000197e-05, 4.908400000000479e-05, 4.8389000000002846e-05, 4.840299999999548e-05, 4.843099999999462e-05, 4.840299999999548e-05, 4.908399999999785e-05, 4.873600000000061e-05, 4.8903000000002916e-05, 4.923600000000111e-05, 4.8459000000000696e-05, 4.841699999999505e-05, 4.856899999999831e-05, 4.873600000000061e-05, 4.909699999999795e-05, 4.925000000000068e-05, 4.8431000000001556e-05, 4.8375000000003276e-05, 4.859699999999745e-05, 4.858399999999735e-05, 4.843099999999462e-05, 4.906900000000575e-05, 4.925000000000068e-05, 4.859699999999745e-05, 4.9389000000003846e-05, 4.8917000000002486e-05, 4.9223000000001016e-05, 4.840200000000294e-05, 4.876399999999975e-05, 4.8903000000002916e-05, 4.925000000000068e-05, 4.8417000000001986e-05, 4.8361000000003707e-05, 4.873600000000061e-05, 4.908299999999838e-05, 4.908399999999785e-05, 4.893000000000258e-05, 4.859700000000439e-05, 4.856899999999831e-05, 4.926400000000025e-05, 4.923599999999417e-05, 4.876399999999975e-05, 4.891600000000301e-05]</msg>
<status status="PASS" starttime="20201112 09:44:27.384" endtime="20201112 09:44:27.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.373" endtime="20201112 09:44:27.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.397" endtime="20201112 09:44:27.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.405" endtime="20201112 09:44:27.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.401" endtime="20201112 09:44:27.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.392" endtime="20201112 09:44:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.891" endtime="20201112 09:44:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.889" endtime="20201112 09:44:27.431"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.453" endtime="20201112 09:44:27.471"></status>
</kw>
<msg timestamp="20201112 09:44:27.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.450" endtime="20201112 09:44:27.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.474" endtime="20201112 09:44:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.480" endtime="20201112 09:44:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.443" endtime="20201112 09:44:27.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.437" endtime="20201112 09:44:27.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.503" endtime="20201112 09:44:27.840"></status>
</kw>
<msg timestamp="20201112 09:44:27.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040051514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.500" endtime="20201112 09:44:27.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040051514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.850" endtime="20201112 09:44:27.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.869" endtime="20201112 09:44:27.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.493" endtime="20201112 09:44:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.488" endtime="20201112 09:44:27.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.894" level="INFO">${RESULT} = [{'time': 0.040051514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.895800000000397e-05, 'source_diff': 7.895800000000397e-05}, {'time': 0.040139792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.884" endtime="20201112 09:44:27.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.924" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:27.896" endtime="20201112 09:44:27.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.935" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.933" endtime="20201112 09:44:27.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.941" level="INFO">VALUE: [7.895800000000397e-05, 7.911099999999976e-05, 7.904100000000192e-05, 7.902700000000235e-05, 7.894499999999693e-05, 7.908300000000063e-05, 7.840300000000466e-05, 7.858300000000012e-05, 7.90970000000002e-05, 7.83190000000003e-05, 7.89169999999978e-05, 7.906900000000106e-05, 7.854200000000089e-05, 7.86389999999984e-05, 7.902799999999488e-05, 7.898599999999617e-05, 7.823600000000236e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.880500000000124e-05, 7.818099999999661e-05, 7.845799999999653e-05, 7.836099999999901e-05, 7.833299999999987e-05, 7.848699999999514e-05, 7.855600000000046e-05, 7.843099999999686e-05, 7.859700000000663e-05, 7.830500000000074e-05, 7.877800000000157e-05, 7.847299999999557e-05, 7.818000000000408e-05, 7.89719999999966e-05, 7.854100000000142e-05, 7.883300000000037e-05, 7.840299999999772e-05, 7.844500000000337e-05, 7.836100000000595e-05, 7.88190000000008e-05, 7.875000000000243e-05, 7.891599999999832e-05, 7.819400000000365e-05, 7.84169999999973e-05, 7.854100000000142e-05, 7.901400000000225e-05, 7.863799999999893e-05, 7.918100000000455e-05, 7.820899999999575e-05, 7.858400000000654e-05, 7.880500000000124e-05]</msg>
<status status="PASS" starttime="20201112 09:44:27.938" endtime="20201112 09:44:27.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.926" endtime="20201112 09:44:27.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.950" endtime="20201112 09:44:27.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.959" endtime="20201112 09:44:27.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.954" endtime="20201112 09:44:27.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.946" endtime="20201112 09:44:27.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.433" endtime="20201112 09:44:27.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.432" endtime="20201112 09:44:27.985"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.008" endtime="20201112 09:44:28.027"></status>
</kw>
<msg timestamp="20201112 09:44:28.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.004" endtime="20201112 09:44:28.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.031" endtime="20201112 09:44:28.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.037" endtime="20201112 09:44:28.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.997" endtime="20201112 09:44:28.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.991" endtime="20201112 09:44:28.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.060" endtime="20201112 09:44:28.403"></status>
</kw>
<msg timestamp="20201112 09:44:28.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040938889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041018181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.057" endtime="20201112 09:44:28.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040938889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041018181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.413" endtime="20201112 09:44:28.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.431" endtime="20201112 09:44:28.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.050" endtime="20201112 09:44:28.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.045" endtime="20201112 09:44:28.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.451" level="INFO">${RESULT} = [{'time': 0.041018181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929200000000164e-05, 'source_diff': 7.929200000000164e-05}, {'time': 0.041106542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:28.442" endtime="20201112 09:44:28.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:28.480" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:28.453" endtime="20201112 09:44:28.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.491" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:44:28.489" endtime="20201112 09:44:28.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.496" level="INFO">VALUE: [7.929200000000164e-05, 7.955600000000146e-05, 7.933300000000088e-05, 7.940299999999872e-05, 7.999999999999674e-05, 8.022200000000479e-05, 7.948599999999667e-05, 7.96389999999994e-05, 7.977800000000257e-05, 7.933400000000035e-05, 7.988899999999965e-05, 8.00970000000012e-05, 7.976399999999606e-05, 7.929100000000217e-05, 7.941700000000523e-05, 8.006899999999512e-05, 8.001400000000325e-05, 7.923600000000336e-05, 7.927800000000207e-05, 7.96389999999994e-05, 7.952800000000232e-05, 7.99719999999976e-05, 7.957000000000103e-05, 7.934700000000044e-05, 8.022200000000479e-05, 7.94719999999971e-05, 7.9458999999997e-05, 7.938899999999915e-05, 8.022199999999785e-05, 8.016700000000598e-05, 8.01389999999999e-05, 7.961100000000026e-05, 7.954200000000189e-05, 8.023599999999742e-05, 7.950000000000318e-05, 7.957000000000103e-05, 7.936100000000001e-05, 7.962499999999983e-05, 7.999999999999674e-05, 7.998599999999717e-05, 8.012500000000033e-05, 7.968099999999811e-05, 7.977800000000257e-05, 7.92770000000026e-05, 8.02640000000035e-05, 7.970799999999778e-05, 7.984700000000094e-05, 7.981899999999487e-05, 7.987500000000008e-05, 7.924999999999599e-05]</msg>
<status status="PASS" starttime="20201112 09:44:28.493" endtime="20201112 09:44:28.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.482" endtime="20201112 09:44:28.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.506" endtime="20201112 09:44:28.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.514" endtime="20201112 09:44:28.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.510" endtime="20201112 09:44:28.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.501" endtime="20201112 09:44:28.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.987" endtime="20201112 09:44:28.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.986" endtime="20201112 09:44:28.540"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.563" endtime="20201112 09:44:28.580"></status>
</kw>
<msg timestamp="20201112 09:44:28.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.559" endtime="20201112 09:44:28.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.584" endtime="20201112 09:44:28.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.590" endtime="20201112 09:44:28.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.552" endtime="20201112 09:44:28.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.546" endtime="20201112 09:44:28.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.613" endtime="20201112 09:44:28.947"></status>
</kw>
<msg timestamp="20201112 09:44:28.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040104347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.610" endtime="20201112 09:44:28.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040104347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.957" endtime="20201112 09:44:28.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.976" endtime="20201112 09:44:28.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.603" endtime="20201112 09:44:28.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.598" endtime="20201112 09:44:28.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.996" level="INFO">${RESULT} = [{'time': 0.040185278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.093099999999936e-05, 'source_diff': 8.093099999999936e-05}, {'time': 0.0402725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:28.988" endtime="20201112 09:44:28.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.026" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:28.999" endtime="20201112 09:44:29.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.037" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.035" endtime="20201112 09:44:29.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.042" level="INFO">VALUE: [8.093099999999936e-05, 8.05970000000017e-05, 8.106899999999612e-05, 8.070799999999878e-05, 8.05840000000016e-05, 8.037500000000058e-05, 8.076399999999706e-05, 8.043099999999886e-05, 8.088900000000065e-05, 8.030600000000221e-05, 8.088900000000065e-05, 8.048599999999767e-05, 8.054099999999648e-05, 8.036099999999408e-05, 8.098599999999817e-05, 8.080600000000271e-05, 8.036100000000101e-05, 8.090300000000022e-05, 8.108299999999569e-05, 8.09719999999986e-05, 8.023600000000436e-05, 8.131999999999584e-05, 8.112500000000133e-05, 8.083300000000238e-05, 8.119399999999971e-05, 8.036100000000101e-05, 8.076399999999706e-05, 8.105599999999602e-05, 8.083300000000238e-05, 8.100000000000468e-05, 8.045800000000547e-05, 8.04719999999981e-05, 8.11390000000009e-05, 8.06390000000004e-05, 8.036200000000049e-05, 8.072299999999782e-05, 8.059800000000117e-05, 8.054099999999648e-05, 8.082000000000228e-05, 8.069399999999921e-05, 8.059800000000117e-05, 8.066600000000007e-05, 8.094399999999946e-05, 8.049999999999724e-05, 8.076399999999706e-05, 8.087500000000108e-05, 8.09719999999986e-05, 8.065299999999997e-05, 8.105600000000296e-05, 8.044399999999896e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.039" endtime="20201112 09:44:29.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.028" endtime="20201112 09:44:29.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.052" endtime="20201112 09:44:29.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.060" endtime="20201112 09:44:29.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.056" endtime="20201112 09:44:29.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.047" endtime="20201112 09:44:29.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.542" endtime="20201112 09:44:29.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.541" endtime="20201112 09:44:29.086"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.109" endtime="20201112 09:44:29.127"></status>
</kw>
<msg timestamp="20201112 09:44:29.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.105" endtime="20201112 09:44:29.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.130" endtime="20201112 09:44:29.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.136" endtime="20201112 09:44:29.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.098" endtime="20201112 09:44:29.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.093" endtime="20201112 09:44:29.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.159" endtime="20201112 09:44:29.494"></status>
</kw>
<msg timestamp="20201112 09:44:29.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040532264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.156" endtime="20201112 09:44:29.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040532264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.503" endtime="20201112 09:44:29.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.522" endtime="20201112 09:44:29.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.149" endtime="20201112 09:44:29.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.144" endtime="20201112 09:44:29.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.541" level="INFO">${RESULT} = [{'time': 0.040532264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.187499999999515e-05, 'source_diff': 8.187499999999515e-05}, {'time': 0.040618458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:29.532" endtime="20201112 09:44:29.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.571" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:29.543" endtime="20201112 09:44:29.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.582" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.579" endtime="20201112 09:44:29.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.587" level="INFO">VALUE: [8.187499999999515e-05, 8.173600000000586e-05, 8.15970000000027e-05, 8.21249999999954e-05, 8.227800000000507e-05, 8.234799999999598e-05, 8.145799999999953e-05, 8.215300000000147e-05, 8.150000000000518e-05, 8.161100000000227e-05, 8.19719999999996e-05, 8.169499999999968e-05, 8.15840000000026e-05, 8.154099999999748e-05, 8.224999999999899e-05, 8.13190000000033e-05, 8.173599999999892e-05, 8.170899999999925e-05, 8.166600000000107e-05, 8.166600000000107e-05, 8.20840000000031e-05, 8.226399999999856e-05, 8.21249999999954e-05, 8.193000000000089e-05, 8.205499999999755e-05, 8.184700000000295e-05, 8.149999999999824e-05, 8.14170000000003e-05, 8.136200000000149e-05, 8.165300000000097e-05, 8.181899999999687e-05, 8.177699999999816e-05, 8.143000000000039e-05, 8.168100000000011e-05, 8.14170000000003e-05, 8.229200000000464e-05, 8.136200000000149e-05, 8.186100000000252e-05, 8.220899999999975e-05, 8.154199999999695e-05, 8.205500000000449e-05, 8.230600000000421e-05, 8.145799999999953e-05, 8.187500000000208e-05, 8.14170000000003e-05, 8.222199999999985e-05, 8.144399999999996e-05, 8.140200000000125e-05, 8.136099999999508e-05, 8.168000000000064e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.584" endtime="20201112 09:44:29.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.573" endtime="20201112 09:44:29.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.596" endtime="20201112 09:44:29.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.605" endtime="20201112 09:44:29.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.600" endtime="20201112 09:44:29.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.592" endtime="20201112 09:44:29.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.088" endtime="20201112 09:44:29.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.087" endtime="20201112 09:44:29.631"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.653" endtime="20201112 09:44:29.671"></status>
</kw>
<msg timestamp="20201112 09:44:29.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.650" endtime="20201112 09:44:29.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.674" endtime="20201112 09:44:29.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.680" endtime="20201112 09:44:29.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.643" endtime="20201112 09:44:29.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.637" endtime="20201112 09:44:29.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.704" endtime="20201112 09:44:30.039"></status>
</kw>
<msg timestamp="20201112 09:44:30.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040173097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.701" endtime="20201112 09:44:30.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040173097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.049" endtime="20201112 09:44:30.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.068" endtime="20201112 09:44:30.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.694" endtime="20201112 09:44:30.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.689" endtime="20201112 09:44:30.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.087" level="INFO">${RESULT} = [{'time': 0.040255569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.24720000000001e-05, 'source_diff': 8.24720000000001e-05}, {'time': 0.040344806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:30.078" endtime="20201112 09:44:30.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.117" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:30.089" endtime="20201112 09:44:30.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.128" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.126" endtime="20201112 09:44:30.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.133" level="INFO">VALUE: [8.24720000000001e-05, 8.32919999999987e-05, 8.284800000000342e-05, 8.291600000000232e-05, 8.261099999999633e-05, 8.294500000000093e-05, 8.256999999999709e-05, 8.25970000000037e-05, 8.288900000000265e-05, 8.319400000000171e-05, 8.274999999999949e-05, 8.269499999999375e-05, 8.238900000000215e-05, 8.290200000000275e-05, 8.265299999999504e-05, 8.272200000000035e-05, 8.2846999999997e-05, 8.252799999999838e-05, 8.258300000000413e-05, 8.256900000000456e-05, 8.298600000000017e-05, 8.240200000000225e-05, 8.2846999999997e-05, 8.284700000000395e-05, 8.234700000000345e-05, 8.31390000000029e-05, 8.233300000000388e-05, 8.286100000000352e-05, 8.283300000000438e-05, 8.327799999999913e-05, 8.290300000000222e-05, 8.308299999999769e-05, 8.252799999999838e-05, 8.313899999999597e-05, 8.2764000000006e-05, 8.262500000000284e-05, 8.23190000000043e-05, 8.30970000000042e-05, 8.240300000000172e-05, 8.301299999999984e-05, 8.28190000000048e-05, 8.326300000000009e-05, 8.316600000000257e-05, 8.234799999999598e-05, 8.293100000000136e-05, 8.240299999999479e-05, 8.280599999999777e-05, 8.245800000000053e-05, 8.320900000000075e-05, 8.288899999999572e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.130" endtime="20201112 09:44:30.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.119" endtime="20201112 09:44:30.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.143" endtime="20201112 09:44:30.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.151" endtime="20201112 09:44:30.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.147" endtime="20201112 09:44:30.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.138" endtime="20201112 09:44:30.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.633" endtime="20201112 09:44:30.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.631" endtime="20201112 09:44:30.177"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.200" endtime="20201112 09:44:30.218"></status>
</kw>
<msg timestamp="20201112 09:44:30.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.196" endtime="20201112 09:44:30.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.221" endtime="20201112 09:44:30.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.227" endtime="20201112 09:44:30.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.189" endtime="20201112 09:44:30.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.183" endtime="20201112 09:44:30.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.250" endtime="20201112 09:44:30.584"></status>
</kw>
<msg timestamp="20201112 09:44:30.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040202514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.247" endtime="20201112 09:44:30.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040202514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.594" endtime="20201112 09:44:30.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.613" endtime="20201112 09:44:30.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.240" endtime="20201112 09:44:30.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.235" endtime="20201112 09:44:30.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.632" level="INFO">${RESULT} = [{'time': 0.040202514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.418100000000261e-05, 'source_diff': 8.418100000000261e-05}, {'time': 0.040291708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:30.623" endtime="20201112 09:44:30.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.661" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:30.634" endtime="20201112 09:44:30.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.672" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.670" endtime="20201112 09:44:30.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.678" level="INFO">VALUE: [8.418100000000261e-05, 8.377700000000016e-05, 8.358299999999819e-05, 8.36520000000035e-05, 8.344500000000143e-05, 8.400000000000074e-05, 8.41799999999962e-05, 8.402700000000041e-05, 8.351399999999981e-05, 8.395800000000203e-05, 8.351400000000675e-05, 8.381999999999834e-05, 8.387500000000409e-05, 8.400000000000074e-05, 8.404199999999945e-05, 8.41669999999961e-05, 8.352799999999938e-05, 8.413899999999697e-05, 8.38190000000058e-05, 8.412500000000434e-05, 8.388800000000418e-05, 8.362500000000384e-05, 8.377700000000016e-05, 8.402799999999988e-05, 8.345800000000153e-05, 8.361100000000427e-05, 8.330599999999827e-05, 8.419499999999525e-05, 8.36249999999969e-05, 8.383299999999844e-05, 8.344500000000143e-05, 8.375000000000049e-05, 8.400000000000074e-05, 8.387499999999715e-05, 8.34720000000011e-05, 8.377799999999963e-05, 8.397300000000107e-05, 8.337500000000359e-05, 8.398600000000117e-05, 8.345800000000153e-05, 8.426400000000056e-05, 8.425000000000099e-05, 8.338900000000316e-05, 8.33190000000053e-05, 8.362500000000384e-05, 8.394500000000193e-05, 8.41119999999973e-05, 8.384799999999748e-05, 8.352799999999938e-05, 8.368099999999518e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.675" endtime="20201112 09:44:30.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.663" endtime="20201112 09:44:30.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.687" endtime="20201112 09:44:30.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.695" endtime="20201112 09:44:30.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.691" endtime="20201112 09:44:30.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.683" endtime="20201112 09:44:30.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.179" endtime="20201112 09:44:30.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.178" endtime="20201112 09:44:30.721"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.745" endtime="20201112 09:44:30.764"></status>
</kw>
<msg timestamp="20201112 09:44:30.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.741" endtime="20201112 09:44:30.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.767" endtime="20201112 09:44:30.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.773" endtime="20201112 09:44:30.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.734" endtime="20201112 09:44:30.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.728" endtime="20201112 09:44:30.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.796" endtime="20201112 09:44:31.131"></status>
</kw>
<msg timestamp="20201112 09:44:31.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.793" endtime="20201112 09:44:31.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.140" endtime="20201112 09:44:31.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.159" endtime="20201112 09:44:31.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.786" endtime="20201112 09:44:31.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.781" endtime="20201112 09:44:31.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.180" level="INFO">${RESULT} = [{'time': 0.042088486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466700000000354e-05, 'source_diff': 8.466700000000354e-05}, {'time': 0.042183861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:31.171" endtime="20201112 09:44:31.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:31.182" endtime="20201112 09:44:31.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.221" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.219" endtime="20201112 09:44:31.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.226" level="INFO">VALUE: [8.466700000000354e-05, 8.500000000000174e-05, 8.51799999999972e-05, 8.487499999999815e-05, 8.486200000000499e-05, 8.473600000000192e-05, 8.420900000000175e-05, 8.440299999999679e-05, 8.494400000000346e-05, 8.475000000000149e-05, 8.458399999999866e-05, 8.516700000000405e-05, 8.442999999999645e-05, 8.451400000000081e-05, 8.509799999999873e-05, 8.523600000000242e-05, 8.455599999999952e-05, 8.493000000000389e-05, 8.42919999999997e-05, 8.437499999999765e-05, 8.51390000000049e-05, 8.437499999999765e-05, 8.477800000000063e-05, 8.431899999999937e-05, 8.431899999999937e-05, 8.46249999999979e-05, 8.437499999999765e-05, 8.505600000000002e-05, 8.472200000000235e-05, 8.448600000000167e-05, 8.431999999999884e-05, 8.461100000000527e-05, 8.434799999999798e-05, 8.452799999999344e-05, 8.501400000000131e-05, 8.429200000000664e-05, 8.509699999999926e-05, 8.470900000000225e-05, 8.483399999999891e-05, 8.509799999999873e-05, 8.430599999999927e-05, 8.494400000000346e-05, 8.468000000000364e-05, 8.434800000000492e-05, 8.523600000000242e-05, 8.501400000000131e-05, 8.506900000000012e-05, 8.454199999999995e-05, 8.505500000000055e-05, 8.520799999999634e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.223" endtime="20201112 09:44:31.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.212" endtime="20201112 09:44:31.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.236" endtime="20201112 09:44:31.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.244" endtime="20201112 09:44:31.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.240" endtime="20201112 09:44:31.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.231" endtime="20201112 09:44:31.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.723" endtime="20201112 09:44:31.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.722" endtime="20201112 09:44:31.270"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.292" endtime="20201112 09:44:31.311"></status>
</kw>
<msg timestamp="20201112 09:44:31.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.289" endtime="20201112 09:44:31.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.314" endtime="20201112 09:44:31.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.320" endtime="20201112 09:44:31.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.282" endtime="20201112 09:44:31.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.276" endtime="20201112 09:44:31.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.343" endtime="20201112 09:44:31.680"></status>
</kw>
<msg timestamp="20201112 09:44:31.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040269681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040355569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.340" endtime="20201112 09:44:31.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040269681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040355569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.690" endtime="20201112 09:44:31.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.708" endtime="20201112 09:44:31.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.333" endtime="20201112 09:44:31.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.328" endtime="20201112 09:44:31.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.727" level="INFO">${RESULT} = [{'time': 0.040355569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.588799999999924e-05, 'source_diff': 8.588799999999924e-05}, {'time': 0.040447903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:31.718" endtime="20201112 09:44:31.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.757" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:31.729" endtime="20201112 09:44:31.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.769" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.766" endtime="20201112 09:44:31.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.774" level="INFO">VALUE: [8.588799999999924e-05, 8.620900000000375e-05, 8.618100000000462e-05, 8.527700000000166e-05, 8.536099999999908e-05, 8.5459000000003e-05, 8.626400000000256e-05, 8.558300000000019e-05, 8.555500000000105e-05, 8.611100000000677e-05, 8.605499999999461e-05, 8.525000000000199e-05, 8.613899999999897e-05, 8.601400000000231e-05, 8.569399999999727e-05, 8.59720000000036e-05, 8.602800000000188e-05, 8.525000000000199e-05, 8.622300000000332e-05, 8.608300000000069e-05, 8.550000000000224e-05, 8.566599999999813e-05, 8.583300000000044e-05, 8.537499999999865e-05, 8.575000000000249e-05, 8.588899999999872e-05, 8.615300000000548e-05, 8.575000000000249e-05, 8.623600000000342e-05, 8.540299999999779e-05, 8.591600000000532e-05, 8.606900000000112e-05, 8.53469999999995e-05, 8.611099999999983e-05, 8.540299999999779e-05, 8.590299999999829e-05, 8.52920000000007e-05, 8.57920000000012e-05, 8.52920000000007e-05, 8.572199999999641e-05, 8.608400000000016e-05, 8.615299999999854e-05, 8.526400000000156e-05, 8.618099999999768e-05, 8.559699999999976e-05, 8.581900000000087e-05, 8.537500000000559e-05, 8.576399999999512e-05, 8.595800000000403e-05, 8.619499999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.771" endtime="20201112 09:44:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.759" endtime="20201112 09:44:31.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.784" endtime="20201112 09:44:31.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.793" endtime="20201112 09:44:31.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.789" endtime="20201112 09:44:31.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.780" endtime="20201112 09:44:31.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.272" endtime="20201112 09:44:31.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.271" endtime="20201112 09:44:31.819"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.841" endtime="20201112 09:44:31.860"></status>
</kw>
<msg timestamp="20201112 09:44:31.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.838" endtime="20201112 09:44:31.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.863" endtime="20201112 09:44:31.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.869" endtime="20201112 09:44:31.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.831" endtime="20201112 09:44:31.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.825" endtime="20201112 09:44:31.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.892" endtime="20201112 09:44:32.229"></status>
</kw>
<msg timestamp="20201112 09:44:32.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0402135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040300056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:31.889" endtime="20201112 09:44:32.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0402135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040300056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:32.238" endtime="20201112 09:44:32.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.257" endtime="20201112 09:44:32.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.882" endtime="20201112 09:44:32.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.877" endtime="20201112 09:44:32.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.276" level="INFO">${RESULT} = [{'time': 0.040300056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.655600000000152e-05, 'source_diff': 8.655600000000152e-05}, {'time': 0.040391278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:32.267" endtime="20201112 09:44:32.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:32.278" endtime="20201112 09:44:32.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.316" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.314" endtime="20201112 09:44:32.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.322" level="INFO">VALUE: [8.655600000000152e-05, 8.670900000000425e-05, 8.632000000000084e-05, 8.708300000000169e-05, 8.677700000000316e-05, 8.64720000000041e-05, 8.631900000000137e-05, 8.644399999999802e-05, 8.681899999999493e-05, 8.718099999999868e-05, 8.669499999999775e-05, 8.704100000000298e-05, 8.698700000000364e-05, 8.687500000000015e-05, 8.633400000000041e-05, 8.619399999999777e-05, 8.705500000000255e-05, 8.669499999999775e-05, 8.665300000000598e-05, 8.670899999999732e-05, 8.658300000000119e-05, 8.733300000000194e-05, 8.722199999999791e-05, 8.630600000000127e-05, 8.675000000000349e-05, 8.702800000000288e-05, 8.681900000000187e-05, 8.719399999999877e-05, 8.713899999999997e-05, 8.636100000000008e-05, 8.665299999999904e-05, 8.675000000000349e-05, 8.66119999999998e-05, 8.676400000000306e-05, 8.631900000000137e-05, 8.705600000000202e-05, 8.719399999999877e-05, 8.64449999999975e-05, 8.638899999999922e-05, 8.658300000000119e-05, 8.697199999999766e-05, 8.71799999999992e-05, 8.68199999999944e-05, 8.694400000000546e-05, 8.648600000000367e-05, 8.704100000000298e-05, 8.702800000000288e-05, 8.670799999999784e-05, 8.673599999999698e-05, 8.655600000000152e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.319" endtime="20201112 09:44:32.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.307" endtime="20201112 09:44:32.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.331" endtime="20201112 09:44:32.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.340" endtime="20201112 09:44:32.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.335" endtime="20201112 09:44:32.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.327" endtime="20201112 09:44:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.821" endtime="20201112 09:44:32.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.820" endtime="20201112 09:44:32.365"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.388" endtime="20201112 09:44:32.407"></status>
</kw>
<msg timestamp="20201112 09:44:32.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.385" endtime="20201112 09:44:32.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.410" endtime="20201112 09:44:32.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.416" endtime="20201112 09:44:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.378" endtime="20201112 09:44:32.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.372" endtime="20201112 09:44:32.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.439" endtime="20201112 09:44:32.774"></status>
</kw>
<msg timestamp="20201112 09:44:32.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040709208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.436" endtime="20201112 09:44:32.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040709208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.783" endtime="20201112 09:44:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.802" endtime="20201112 09:44:32.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.429" endtime="20201112 09:44:32.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.424" endtime="20201112 09:44:32.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.822" level="INFO">${RESULT} = [{'time': 0.040796972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.776400000000406e-05, 'source_diff': 8.776400000000406e-05}, {'time': 0.040895222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:32.813" endtime="20201112 09:44:32.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.852" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:32.824" endtime="20201112 09:44:32.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.863" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.861" endtime="20201112 09:44:32.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.868" level="INFO">VALUE: [8.776400000000406e-05, 8.808300000000269e-05, 8.820799999999934e-05, 8.809799999999479e-05, 8.773599999999798e-05, 8.763900000000047e-05, 8.805600000000302e-05, 8.76799999999997e-05, 8.798599999999823e-05, 8.741699999999936e-05, 8.74720000000051e-05, 8.809700000000226e-05, 8.786099999999464e-05, 8.726400000000356e-05, 8.822199999999891e-05, 8.792999999999995e-05, 8.769499999999875e-05, 8.81670000000001e-05, 8.782000000000234e-05, 8.73199999999949e-05, 8.784699999999507e-05, 8.741699999999936e-05, 8.741699999999936e-05, 8.798600000000517e-05, 8.822299999999839e-05, 8.78329999999955e-05, 8.811099999999489e-05, 8.808300000000269e-05, 8.77920000000032e-05, 8.775000000000449e-05, 8.787500000000115e-05, 8.761100000000133e-05, 8.788900000000072e-05, 8.76250000000009e-05, 8.784700000000201e-05, 8.813900000000097e-05, 8.811100000000183e-05, 8.751400000000381e-05, 8.74999999999973e-05, 8.79869999999977e-05, 8.795899999999857e-05, 8.773600000000492e-05, 8.790200000000081e-05, 8.763900000000047e-05, 8.733400000000141e-05, 8.822199999999891e-05, 8.815300000000054e-05, 8.790300000000029e-05, 8.784800000000148e-05, 8.783300000000244e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.865" endtime="20201112 09:44:32.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.854" endtime="20201112 09:44:32.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.878" endtime="20201112 09:44:32.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.886" endtime="20201112 09:44:32.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.882" endtime="20201112 09:44:32.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.873" endtime="20201112 09:44:32.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.368" endtime="20201112 09:44:32.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.366" endtime="20201112 09:44:32.912"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.934" endtime="20201112 09:44:32.953"></status>
</kw>
<msg timestamp="20201112 09:44:32.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.931" endtime="20201112 09:44:32.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.956" endtime="20201112 09:44:32.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.962" endtime="20201112 09:44:32.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.924" endtime="20201112 09:44:32.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.918" endtime="20201112 09:44:32.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.985" endtime="20201112 09:44:33.319"></status>
</kw>
<msg timestamp="20201112 09:44:33.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040196472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.982" endtime="20201112 09:44:33.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040196472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.329" endtime="20201112 09:44:33.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.347" endtime="20201112 09:44:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.975" endtime="20201112 09:44:33.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.970" endtime="20201112 09:44:33.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.368" level="INFO">${RESULT} = [{'time': 0.040196472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.826399999999762e-05, 'source_diff': 8.826399999999762e-05}, {'time': 0.040295736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:33.359" endtime="20201112 09:44:33.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.398" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:33.370" endtime="20201112 09:44:33.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.409" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.407" endtime="20201112 09:44:33.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.414" level="INFO">VALUE: [8.826399999999762e-05, 8.879199999999726e-05, 8.891700000000086e-05, 8.84449999999995e-05, 8.827800000000413e-05, 8.836100000000208e-05, 8.840300000000079e-05, 8.89999999999988e-05, 8.891700000000086e-05, 8.873599999999898e-05, 8.91670000000011e-05, 8.920899999999982e-05, 8.86670000000006e-05, 8.925000000000599e-05, 8.845899999999907e-05, 8.91670000000011e-05, 8.91250000000024e-05, 8.847299999999864e-05, 8.895899999999957e-05, 8.886100000000258e-05, 8.823600000000542e-05, 8.886099999999564e-05, 8.855599999999658e-05, 8.8332999999996e-05, 8.854199999999701e-05, 8.906899999999718e-05, 8.894400000000052e-05, 8.862499999999496e-05, 8.852799999999744e-05, 8.845799999999959e-05, 8.88329999999965e-05, 8.832000000000284e-05, 8.854200000000395e-05, 8.895800000000009e-05, 8.841600000000088e-05, 8.880499999999736e-05, 8.902799999999794e-05, 8.822199999999891e-05, 8.847300000000557e-05, 8.848599999999873e-05, 8.848600000000567e-05, 8.84999999999983e-05, 8.904199999999751e-05, 8.838899999999428e-05, 8.826399999999762e-05, 8.88199999999964e-05, 8.855499999999711e-05, 8.852799999999744e-05, 8.877799999999769e-05, 8.830499999999686e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.411" endtime="20201112 09:44:33.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.400" endtime="20201112 09:44:33.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.428" endtime="20201112 09:44:33.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.436" endtime="20201112 09:44:33.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.432" endtime="20201112 09:44:33.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.424" endtime="20201112 09:44:33.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.914" endtime="20201112 09:44:33.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.913" endtime="20201112 09:44:33.462"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.485" endtime="20201112 09:44:33.503"></status>
</kw>
<msg timestamp="20201112 09:44:33.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.481" endtime="20201112 09:44:33.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.506" endtime="20201112 09:44:33.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.512" endtime="20201112 09:44:33.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.474" endtime="20201112 09:44:33.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.469" endtime="20201112 09:44:33.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.536" endtime="20201112 09:44:33.879"></status>
</kw>
<msg timestamp="20201112 09:44:33.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040123167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.532" endtime="20201112 09:44:33.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040123167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.888" endtime="20201112 09:44:33.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.907" endtime="20201112 09:44:33.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.525" endtime="20201112 09:44:33.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.521" endtime="20201112 09:44:33.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.926" level="INFO">${RESULT} = [{'time': 0.040212444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.927699999999872e-05, 'source_diff': 8.927699999999872e-05}, {'time': 0.040312708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:33.917" endtime="20201112 09:44:33.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.956" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:33.928" endtime="20201112 09:44:33.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.966" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.964" endtime="20201112 09:44:33.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.972" level="INFO">VALUE: [8.927699999999872e-05, 8.988900000000272e-05, 8.961100000000333e-05, 8.970800000000084e-05, 9.011099999999689e-05, 9.013900000000297e-05, 8.934699999999657e-05, 9.01670000000021e-05, 8.96120000000028e-05, 8.930600000000427e-05, 9.030599999999833e-05, 8.941600000000188e-05, 9.002800000000588e-05, 9.009700000000426e-05, 8.9332999999997e-05, 8.991600000000238e-05, 8.951399999999887e-05, 8.955599999999758e-05, 8.984699999999707e-05, 9.022200000000091e-05, 9.002799999999894e-05, 8.969500000000075e-05, 8.951399999999887e-05, 8.963900000000247e-05, 8.991700000000186e-05, 9.002799999999894e-05, 8.938900000000222e-05, 8.991600000000238e-05, 8.944399999999408e-05, 8.972200000000041e-05, 8.92920000000047e-05, 8.993100000000143e-05, 9.002800000000588e-05, 8.956899999999768e-05, 8.973599999999998e-05, 8.943100000000093e-05, 8.94869999999992e-05, 9.004099999999904e-05, 8.94999999999993e-05, 8.94999999999993e-05, 9.004099999999904e-05, 8.923599999999948e-05, 8.987500000000315e-05, 8.954200000000495e-05, 9.007000000000459e-05, 8.959700000000376e-05, 8.984699999999707e-05, 8.98879999999963e-05, 8.948599999999973e-05, 9.006999999999765e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.969" endtime="20201112 09:44:33.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.958" endtime="20201112 09:44:33.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.981" endtime="20201112 09:44:33.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.990" endtime="20201112 09:44:34.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.985" endtime="20201112 09:44:34.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.977" endtime="20201112 09:44:34.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.464" endtime="20201112 09:44:34.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.463" endtime="20201112 09:44:34.016"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.038" endtime="20201112 09:44:34.056"></status>
</kw>
<msg timestamp="20201112 09:44:34.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.035" endtime="20201112 09:44:34.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.060" endtime="20201112 09:44:34.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.066" endtime="20201112 09:44:34.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.028" endtime="20201112 09:44:34.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.022" endtime="20201112 09:44:34.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.089" endtime="20201112 09:44:34.424"></status>
</kw>
<msg timestamp="20201112 09:44:34.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040273444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040364208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.086" endtime="20201112 09:44:34.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040273444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040364208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.434" endtime="20201112 09:44:34.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.452" endtime="20201112 09:44:34.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.079" endtime="20201112 09:44:34.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.074" endtime="20201112 09:44:34.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.471" level="INFO">${RESULT} = [{'time': 0.040364208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.076400000000012e-05, 'source_diff': 9.076400000000012e-05}, {'time': 0.040461389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:34.462" endtime="20201112 09:44:34.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:34.501" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:34.473" endtime="20201112 09:44:34.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.512" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:44:34.510" endtime="20201112 09:44:34.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.517" level="INFO">VALUE: [9.076400000000012e-05, 9.10000000000008e-05, 9.041699999999542e-05, 9.088800000000424e-05, 9.109800000000473e-05, 9.040299999999585e-05, 9.066699999999567e-05, 9.11800000000032e-05, 9.044400000000202e-05, 9.080499999999936e-05, 9.06529999999961e-05, 9.061099999999739e-05, 9.072200000000141e-05, 9.073600000000098e-05, 9.07079999999949e-05, 9.022200000000091e-05, 9.118100000000268e-05, 9.052800000000638e-05, 9.127800000000019e-05, 9.088899999999678e-05, 9.051399999999987e-05, 9.069500000000175e-05, 9.058299999999825e-05, 9.058400000000466e-05, 9.026399999999962e-05, 9.105600000000602e-05, 9.088899999999678e-05, 9.052799999999944e-05, 9.070800000000184e-05, 9.081899999999893e-05, 9.097200000000166e-05, 9.027699999999972e-05, 9.11120000000043e-05, 9.047200000000116e-05, 9.118100000000268e-05, 9.027799999999919e-05, 9.041600000000288e-05, 9.036100000000408e-05, 9.040300000000279e-05, 9.097200000000166e-05, 9.034700000000451e-05, 9.076400000000012e-05, 9.090299999999635e-05, 9.088899999999678e-05, 9.102799999999994e-05, 9.061100000000433e-05, 9.05000000000003e-05, 9.043000000000245e-05, 9.102799999999994e-05, 9.107000000000559e-05]</msg>
<status status="PASS" starttime="20201112 09:44:34.514" endtime="20201112 09:44:34.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.503" endtime="20201112 09:44:34.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.527" endtime="20201112 09:44:34.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.535" endtime="20201112 09:44:34.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.530" endtime="20201112 09:44:34.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.522" endtime="20201112 09:44:34.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.018" endtime="20201112 09:44:34.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.017" endtime="20201112 09:44:34.561"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.583" endtime="20201112 09:44:34.601"></status>
</kw>
<msg timestamp="20201112 09:44:34.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.580" endtime="20201112 09:44:34.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.605" endtime="20201112 09:44:34.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.611" endtime="20201112 09:44:34.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.573" endtime="20201112 09:44:34.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.567" endtime="20201112 09:44:34.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.634" endtime="20201112 09:44:34.969"></status>
</kw>
<msg timestamp="20201112 09:44:34.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040046861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.631" endtime="20201112 09:44:34.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040046861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.978" endtime="20201112 09:44:34.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.997" endtime="20201112 09:44:35.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.624" endtime="20201112 09:44:35.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.619" endtime="20201112 09:44:35.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.016" level="INFO">${RESULT} = [{'time': 0.040138292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.143099999999599e-05, 'source_diff': 9.143099999999599e-05}, {'time': 0.040234653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:35.007" endtime="20201112 09:44:35.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.046" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:35.018" endtime="20201112 09:44:35.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.057" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.054" endtime="20201112 09:44:35.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.062" level="INFO">VALUE: [9.143099999999599e-05, 9.183399999999897e-05, 9.175000000000155e-05, 9.154200000000001e-05, 9.175000000000155e-05, 9.195800000000309e-05, 9.127800000000019e-05, 9.169400000000327e-05, 9.186099999999864e-05, 9.213899999999803e-05, 9.129199999999976e-05, 9.176400000000112e-05, 9.131899999999943e-05, 9.202800000000094e-05, 9.147300000000164e-05, 9.202800000000094e-05, 9.225000000000205e-05, 9.147300000000164e-05, 9.186200000000505e-05, 9.16800000000037e-05, 9.187499999999821e-05, 9.161099999999839e-05, 9.20000000000018e-05, 9.169400000000327e-05, 9.143000000000345e-05, 9.19870000000017e-05, 9.219500000000325e-05, 9.191699999999692e-05, 9.197300000000214e-05, 9.226400000000162e-05, 9.208299999999975e-05, 9.20000000000018e-05, 9.20000000000018e-05, 9.138899999999728e-05, 9.220800000000334e-05, 9.158299999999925e-05, 9.169400000000327e-05, 9.125000000000105e-05, 9.131899999999943e-05, 9.176400000000112e-05, 9.219400000000377e-05, 9.168099999999624e-05, 9.172199999999547e-05, 9.179199999999332e-05, 9.199999999999486e-05, 9.184699999999907e-05, 9.123600000000148e-05, 9.20000000000018e-05, 9.14450000000025e-05, 9.211099999999889e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.059" endtime="20201112 09:44:35.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.048" endtime="20201112 09:44:35.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.072" endtime="20201112 09:44:35.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.080" endtime="20201112 09:44:35.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.075" endtime="20201112 09:44:35.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.067" endtime="20201112 09:44:35.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.563" endtime="20201112 09:44:35.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.561" endtime="20201112 09:44:35.106"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.128" endtime="20201112 09:44:35.147"></status>
</kw>
<msg timestamp="20201112 09:44:35.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.125" endtime="20201112 09:44:35.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.150" endtime="20201112 09:44:35.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.156" endtime="20201112 09:44:35.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.118" endtime="20201112 09:44:35.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.112" endtime="20201112 09:44:35.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.179" endtime="20201112 09:44:35.514"></status>
</kw>
<msg timestamp="20201112 09:44:35.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.176" endtime="20201112 09:44:35.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.523" endtime="20201112 09:44:35.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.542" endtime="20201112 09:44:35.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.169" endtime="20201112 09:44:35.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.164" endtime="20201112 09:44:35.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.563" level="INFO">${RESULT} = [{'time': 0.040352028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.268099999999724e-05, 'source_diff': 9.268099999999724e-05}, {'time': 0.04045125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:35.554" endtime="20201112 09:44:35.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.592" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:35.565" endtime="20201112 09:44:35.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.603" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.601" endtime="20201112 09:44:35.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.609" level="INFO">VALUE: [9.268099999999724e-05, 9.270800000000384e-05, 9.26120000000058e-05, 9.263899999999853e-05, 9.301399999999543e-05, 9.293099999999749e-05, 9.276400000000212e-05, 9.294400000000452e-05, 9.26659999999982e-05, 9.317999999999826e-05, 9.244400000000402e-05, 9.279200000000126e-05, 9.25279999999945e-05, 9.286099999999964e-05, 9.231900000000043e-05, 9.240299999999785e-05, 9.236099999999914e-05, 9.281900000000093e-05, 9.277800000000169e-05, 9.251400000000187e-05, 9.244399999999708e-05, 9.256900000000068e-05, 9.31659999999987e-05, 9.312499999999946e-05, 9.31250000000064e-05, 9.287499999999921e-05, 9.240300000000479e-05, 9.231900000000043e-05, 9.302800000000194e-05, 9.234699999999957e-05, 9.304200000000151e-05, 9.236099999999914e-05, 9.267999999999776e-05, 9.263900000000547e-05, 9.265300000000504e-05, 9.272200000000341e-05, 9.323599999999654e-05, 9.25000000000023e-05, 9.320800000000434e-05, 9.242999999999751e-05, 9.226400000000162e-05, 9.301400000000237e-05, 9.2333e-05, 9.319399999999783e-05, 9.263899999999853e-05, 9.312499999999946e-05, 9.268100000000418e-05, 9.326399999999568e-05, 9.304200000000151e-05, 9.276400000000212e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.606" endtime="20201112 09:44:35.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.594" endtime="20201112 09:44:35.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.618" endtime="20201112 09:44:35.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.626" endtime="20201112 09:44:35.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.622" endtime="20201112 09:44:35.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.614" endtime="20201112 09:44:35.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.108" endtime="20201112 09:44:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.106" endtime="20201112 09:44:35.652"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.675" endtime="20201112 09:44:35.693"></status>
</kw>
<msg timestamp="20201112 09:44:35.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.671" endtime="20201112 09:44:35.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.696" endtime="20201112 09:44:35.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.703" endtime="20201112 09:44:35.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.664" endtime="20201112 09:44:35.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.659" endtime="20201112 09:44:35.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.726" endtime="20201112 09:44:36.067"></status>
</kw>
<msg timestamp="20201112 09:44:36.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.722" endtime="20201112 09:44:36.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.077" endtime="20201112 09:44:36.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.095" endtime="20201112 09:44:36.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.715" endtime="20201112 09:44:36.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.711" endtime="20201112 09:44:36.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.114" level="INFO">${RESULT} = [{'time': 0.040138889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.383299999999456e-05, 'source_diff': 9.383299999999456e-05}, {'time': 0.040242125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:36.105" endtime="20201112 09:44:36.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.144" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:36.116" endtime="20201112 09:44:36.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.155" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.152" endtime="20201112 09:44:36.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.160" level="INFO">VALUE: [9.383299999999456e-05, 9.34859999999968e-05, 9.36529999999991e-05, 9.345799999999765e-05, 9.39859999999973e-05, 9.411100000000089e-05, 9.338899999999928e-05, 9.34859999999968e-05, 9.347200000000416e-05, 9.361100000000039e-05, 9.395799999999815e-05, 9.367999999999876e-05, 9.4027999999996e-05, 9.336100000000014e-05, 9.354200000000201e-05, 9.38330000000015e-05, 9.39859999999973e-05, 9.409700000000132e-05, 9.340299999999885e-05, 9.372300000000389e-05, 9.354200000000201e-05, 9.379100000000279e-05, 9.36529999999991e-05, 9.3333000000001e-05, 9.363800000000005e-05, 9.398600000000423e-05, 9.375000000000355e-05, 9.36529999999991e-05, 9.373600000000398e-05, 9.418100000000568e-05, 9.411100000000089e-05, 9.402800000000294e-05, 9.340300000000579e-05, 9.419399999999883e-05, 9.347199999999722e-05, 9.370800000000484e-05, 9.361199999999986e-05, 9.351399999999593e-05, 9.35279999999955e-05, 9.422199999999797e-05, 9.362499999999996e-05, 9.422200000000491e-05, 9.348600000000373e-05, 9.381899999999499e-05, 9.370800000000484e-05, 9.379100000000279e-05, 9.358300000000125e-05, 9.383299999999456e-05, 9.355600000000158e-05, 9.347200000000416e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.157" endtime="20201112 09:44:36.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.146" endtime="20201112 09:44:36.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.170" endtime="20201112 09:44:36.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.178" endtime="20201112 09:44:36.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.173" endtime="20201112 09:44:36.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.165" endtime="20201112 09:44:36.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.654" endtime="20201112 09:44:36.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.653" endtime="20201112 09:44:36.204"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.226" endtime="20201112 09:44:36.245"></status>
</kw>
<msg timestamp="20201112 09:44:36.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.223" endtime="20201112 09:44:36.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.248" endtime="20201112 09:44:36.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.254" endtime="20201112 09:44:36.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.216" endtime="20201112 09:44:36.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.210" endtime="20201112 09:44:36.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.278" endtime="20201112 09:44:36.613"></status>
</kw>
<msg timestamp="20201112 09:44:36.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040197833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.274" endtime="20201112 09:44:36.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040197833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040292292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.622" endtime="20201112 09:44:36.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.641" endtime="20201112 09:44:36.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.267" endtime="20201112 09:44:36.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.262" endtime="20201112 09:44:36.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.660" level="INFO">${RESULT} = [{'time': 0.040292292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.445899999999813e-05, 'source_diff': 9.445899999999813e-05}, {'time': 0.040395583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:36.651" endtime="20201112 09:44:36.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.690" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:36.662" endtime="20201112 09:44:36.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.700" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.698" endtime="20201112 09:44:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.706" level="INFO">VALUE: [9.445899999999813e-05, 9.44859999999978e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.477800000000369e-05, 9.504100000000404e-05, 9.512500000000146e-05, 9.483299999999556e-05, 9.472300000000489e-05, 9.454100000000354e-05, 9.519399999999983e-05, 9.495899999999863e-05, 9.468099999999924e-05, 9.476400000000412e-05, 9.449999999999736e-05, 9.474999999999761e-05, 9.50000000000048e-05, 9.430499999999592e-05, 9.472299999999795e-05, 9.476400000000412e-05, 9.48330000000025e-05, 9.523599999999854e-05, 9.495899999999863e-05, 9.479199999999632e-05, 9.459699999999488e-05, 9.477699999999728e-05, 9.45409999999966e-05, 9.48330000000025e-05, 9.505500000000361e-05, 9.463900000000053e-05, 9.454100000000354e-05, 9.488900000000078e-05, 9.508299999999581e-05, 9.48609999999947e-05, 9.46660000000002e-05, 9.463900000000053e-05, 9.48880000000013e-05, 9.454199999999607e-05, 9.430600000000233e-05, 9.444399999999908e-05, 9.493099999999949e-05, 9.461100000000139e-05, 9.445800000000559e-05, 9.48479999999946e-05, 9.477800000000369e-05, 9.508299999999581e-05, 9.45000000000043e-05, 9.518099999999974e-05, 9.47079999999989e-05, 9.525000000000505e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.703" endtime="20201112 09:44:36.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.692" endtime="20201112 09:44:36.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.715" endtime="20201112 09:44:36.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.723" endtime="20201112 09:44:36.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.719" endtime="20201112 09:44:36.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.711" endtime="20201112 09:44:36.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.206" endtime="20201112 09:44:36.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.205" endtime="20201112 09:44:36.749"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.772" endtime="20201112 09:44:36.791"></status>
</kw>
<msg timestamp="20201112 09:44:36.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.769" endtime="20201112 09:44:36.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.794" endtime="20201112 09:44:36.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.800" endtime="20201112 09:44:36.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.761" endtime="20201112 09:44:36.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.756" endtime="20201112 09:44:36.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.823" endtime="20201112 09:44:37.157"></status>
</kw>
<msg timestamp="20201112 09:44:37.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.820" endtime="20201112 09:44:37.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.167" endtime="20201112 09:44:37.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.186" endtime="20201112 09:44:37.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.813" endtime="20201112 09:44:37.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.808" endtime="20201112 09:44:37.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.205" level="INFO">${RESULT} = [{'time': 0.040325764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.545799999999965e-05, 'source_diff': 9.545799999999965e-05}, {'time': 0.040431931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:37.196" endtime="20201112 09:44:37.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.235" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:37.207" endtime="20201112 09:44:37.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.245" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.243" endtime="20201112 09:44:37.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.251" level="INFO">VALUE: [9.545799999999965e-05, 9.53059999999964e-05, 9.609699999999638e-05, 9.574999999999861e-05, 9.605499999999767e-05, 9.561100000000239e-05, 9.605499999999767e-05, 9.616700000000117e-05, 9.538900000000128e-05, 9.56660000000012e-05, 9.561100000000239e-05, 9.598699999999877e-05, 9.619400000000083e-05, 9.555599999999664e-05, 9.574999999999861e-05, 9.547199999999922e-05, 9.593100000000049e-05, 9.536100000000214e-05, 9.572199999999947e-05, 9.558300000000325e-05, 9.599999999999886e-05, 9.605599999999714e-05, 9.545799999999965e-05, 9.543099999999999e-05, 9.549999999999836e-05, 9.618000000000126e-05, 9.597199999999972e-05, 9.543099999999999e-05, 9.609700000000332e-05, 9.599999999999886e-05, 9.58880000000023e-05, 9.593000000000101e-05, 9.613899999999509e-05, 9.55409999999976e-05, 9.631900000000443e-05, 9.622199999999997e-05, 9.577800000000469e-05, 9.559700000000282e-05, 9.608399999999628e-05, 9.619499999999337e-05, 9.586100000000264e-05, 9.626399999999868e-05, 9.611200000000236e-05, 9.544499999999956e-05, 9.601400000000537e-05, 9.579200000000426e-05, 9.609700000000332e-05, 9.556999999999621e-05, 9.606999999999671e-05, 9.534700000000257e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.248" endtime="20201112 09:44:37.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.236" endtime="20201112 09:44:37.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.260" endtime="20201112 09:44:37.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.269" endtime="20201112 09:44:37.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.264" endtime="20201112 09:44:37.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.256" endtime="20201112 09:44:37.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.751" endtime="20201112 09:44:37.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.750" endtime="20201112 09:44:37.294"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.317" endtime="20201112 09:44:37.336"></status>
</kw>
<msg timestamp="20201112 09:44:37.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.314" endtime="20201112 09:44:37.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.339" endtime="20201112 09:44:37.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.345" endtime="20201112 09:44:37.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.306" endtime="20201112 09:44:37.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.301" endtime="20201112 09:44:37.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.368" endtime="20201112 09:44:37.704"></status>
</kw>
<msg timestamp="20201112 09:44:37.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040288639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040385611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.365" endtime="20201112 09:44:37.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040288639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040385611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.714" endtime="20201112 09:44:37.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.733" endtime="20201112 09:44:37.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.358" endtime="20201112 09:44:37.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.353" endtime="20201112 09:44:37.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.755" level="INFO">${RESULT} = [{'time': 0.040385611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.697200000000072e-05, 'source_diff': 9.697200000000072e-05}, {'time': 0.040492875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:37.746" endtime="20201112 09:44:37.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.785" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:37.757" endtime="20201112 09:44:37.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.796" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.794" endtime="20201112 09:44:37.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.801" level="INFO">VALUE: [9.697200000000072e-05, 9.645800000000065e-05, 9.637499999999577e-05, 9.715199999999619e-05, 9.673600000000004e-05, 9.63200000000039e-05, 9.71660000000027e-05, 9.720900000000088e-05, 9.672299999999995e-05, 9.679199999999832e-05, 9.640199999999544e-05, 9.726399999999968e-05, 9.684699999999713e-05, 9.655500000000511e-05, 9.72080000000014e-05, 9.656999999999721e-05, 9.705499999999867e-05, 9.690300000000235e-05, 9.643100000000099e-05, 9.676299999999971e-05, 9.69860000000003e-05, 9.705599999999814e-05, 9.686100000000364e-05, 9.638900000000228e-05, 9.716699999999523e-05, 9.715200000000312e-05, 9.66660000000022e-05, 9.63609999999962e-05, 9.691700000000192e-05, 9.720799999999447e-05, 9.631900000000443e-05, 9.661099999999645e-05, 9.725000000000011e-05, 9.691700000000192e-05, 9.64859999999998e-05, 9.683299999999756e-05, 9.633399999999653e-05, 9.638899999999534e-05, 9.719500000000131e-05, 9.644400000000108e-05, 9.681900000000493e-05, 9.708300000000475e-05, 9.666700000000167e-05, 9.626399999999868e-05, 9.657000000000415e-05, 9.687500000000321e-05, 9.68609999999967e-05, 9.734699999999763e-05, 9.640200000000237e-05, 9.645800000000065e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.798" endtime="20201112 09:44:37.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.787" endtime="20201112 09:44:37.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.811" endtime="20201112 09:44:37.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.819" endtime="20201112 09:44:37.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.815" endtime="20201112 09:44:37.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.806" endtime="20201112 09:44:37.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.296" endtime="20201112 09:44:37.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.295" endtime="20201112 09:44:37.845"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.867" endtime="20201112 09:44:37.886"></status>
</kw>
<msg timestamp="20201112 09:44:37.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.864" endtime="20201112 09:44:37.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.890" endtime="20201112 09:44:37.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.896" endtime="20201112 09:44:37.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.857" endtime="20201112 09:44:37.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.851" endtime="20201112 09:44:37.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.919" endtime="20201112 09:44:38.255"></status>
</kw>
<msg timestamp="20201112 09:44:38.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.916" endtime="20201112 09:44:38.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.264" endtime="20201112 09:44:38.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.283" endtime="20201112 09:44:38.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.909" endtime="20201112 09:44:38.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.904" endtime="20201112 09:44:38.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.302" level="INFO">${RESULT} = [{'time': 0.040269375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.781900000000593e-05, 'source_diff': 9.781900000000593e-05}, {'time': 0.040375667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:38.293" endtime="20201112 09:44:38.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.332" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:38.304" endtime="20201112 09:44:38.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.343" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.341" endtime="20201112 09:44:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.348" level="INFO">VALUE: [9.781900000000593e-05, 9.737499999999677e-05, 9.737500000000371e-05, 9.74730000000007e-05, 9.787499999999727e-05, 9.809699999999838e-05, 9.825000000000111e-05, 9.75409999999996e-05, 9.787499999999727e-05, 9.926400000000168e-05, 9.819400000000283e-05, 9.754199999999907e-05, 9.801300000000096e-05, 9.761099999999745e-05, 9.738799999999687e-05, 9.78609999999977e-05, 9.775000000000061e-05, 9.784699999999813e-05, 9.795800000000215e-05, 9.794499999999512e-05, 9.733299999999806e-05, 9.79730000000012e-05, 9.80410000000001e-05, 9.75409999999996e-05, 9.751399999999993e-05, 9.817999999999633e-05, 9.779199999999932e-05, 9.79159999999965e-05, 9.784700000000507e-05, 9.773600000000104e-05, 9.822199999999504e-05, 9.73609999999972e-05, 9.76809999999953e-05, 9.77359999999941e-05, 9.8028e-05, 9.812499999999752e-05, 9.773600000000104e-05, 9.820900000000188e-05, 9.833399999999853e-05, 9.804199999999957e-05, 9.738900000000328e-05, 9.797200000000172e-05, 9.78609999999977e-05, 9.736100000000414e-05, 9.734699999999763e-05, 9.825000000000111e-05, 9.768000000000276e-05, 9.762500000000396e-05, 9.763899999999659e-05, 9.787500000000421e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.345" endtime="20201112 09:44:38.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.334" endtime="20201112 09:44:38.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.358" endtime="20201112 09:44:38.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.366" endtime="20201112 09:44:38.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.362" endtime="20201112 09:44:38.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.353" endtime="20201112 09:44:38.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.847" endtime="20201112 09:44:38.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.846" endtime="20201112 09:44:38.392"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.414" endtime="20201112 09:44:38.433"></status>
</kw>
<msg timestamp="20201112 09:44:38.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.411" endtime="20201112 09:44:38.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.436" endtime="20201112 09:44:38.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.443" endtime="20201112 09:44:38.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.404" endtime="20201112 09:44:38.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.398" endtime="20201112 09:44:38.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.466" endtime="20201112 09:44:38.800"></status>
</kw>
<msg timestamp="20201112 09:44:38.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040035986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.463" endtime="20201112 09:44:38.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040035986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.810" endtime="20201112 09:44:38.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.828" endtime="20201112 09:44:38.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.455" endtime="20201112 09:44:38.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.451" endtime="20201112 09:44:38.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.847" level="INFO">${RESULT} = [{'time': 0.040134972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.898599999999536e-05, 'source_diff': 9.898599999999536e-05}, {'time': 0.040244333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:38.838" endtime="20201112 09:44:38.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.877" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:38.849" endtime="20201112 09:44:38.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.888" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.885" endtime="20201112 09:44:38.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.893" level="INFO">VALUE: [9.898599999999536e-05, 9.980500000000142e-05, 9.929200000000082e-05, 9.823600000000154e-05, 9.850000000000136e-05, 9.933399999999953e-05, 9.893000000000401e-05, 0.00010031900000000149, 9.845800000000265e-05, 0.00010015199999999919, 9.86530000000041e-05, 9.904200000000057e-05, 9.872200000000247e-05, 9.940299999999791e-05, 9.890299999999741e-05, 9.854200000000007e-05, 9.912499999999852e-05, 0.00010007000000000071, 9.927799999999432e-05, 9.899999999999493e-05, 9.909699999999938e-05, 9.927800000000125e-05, 9.906900000000024e-05, 9.929200000000082e-05, 9.89860000000023e-05, 9.919400000000383e-05, 9.897199999999579e-05, 9.866599999999726e-05, 9.89159999999975e-05, 9.888899999999784e-05, 9.84860000000018e-05, 9.909700000000632e-05, 9.844500000000256e-05, 9.833399999999853e-05, 9.899999999999493e-05, 9.862499999999802e-05, 9.88609999999987e-05, 9.905499999999373e-05, 9.85280000000005e-05, 9.886100000000564e-05, 9.927800000000125e-05, 9.987499999999927e-05, 9.89159999999975e-05, 9.906900000000024e-05, 9.845800000000265e-05, 9.850000000000136e-05, 9.849999999999443e-05, 9.88609999999987e-05, 9.879100000000085e-05, 9.915199999999819e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.890" endtime="20201112 09:44:38.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.879" endtime="20201112 09:44:38.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.902" endtime="20201112 09:44:38.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.911" endtime="20201112 09:44:38.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.906" endtime="20201112 09:44:38.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.898" endtime="20201112 09:44:38.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.394" endtime="20201112 09:44:38.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.393" endtime="20201112 09:44:38.936"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.959" endtime="20201112 09:44:38.978"></status>
</kw>
<msg timestamp="20201112 09:44:38.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.956" endtime="20201112 09:44:38.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.982" endtime="20201112 09:44:38.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.988" endtime="20201112 09:44:38.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.949" endtime="20201112 09:44:38.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.943" endtime="20201112 09:44:38.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.013" endtime="20201112 09:44:39.347"></status>
</kw>
<msg timestamp="20201112 09:44:39.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040519861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.009" endtime="20201112 09:44:39.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040519861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.357" endtime="20201112 09:44:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.375" endtime="20201112 09:44:39.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.002" endtime="20201112 09:44:39.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.997" endtime="20201112 09:44:39.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.394" level="INFO">${RESULT} = [{'time': 0.040519861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010116699999999923, 'source_diff': 0.00010116699999999923}, {'time': 0.040628111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:39.385" endtime="20201112 09:44:39.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:39.424" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:39.396" endtime="20201112 09:44:39.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.434" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:39.432" endtime="20201112 09:44:39.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.440" level="INFO">VALUE: [0.00010116699999999923, 0.00010090299999999941, 9.995899999999669e-05, 9.955500000000117e-05, 0.00010033300000000106, 0.00010118100000000574, 9.955600000000064e-05, 0.00010005500000000167, 0.00010012499999999952, 0.00010055500000000217, 9.97359999999961e-05, 9.972199999999654e-05, 0.00010097199999999779, 9.949999999999543e-05, 9.995899999999669e-05, 9.949999999999543e-05, 0.00010072199999999754, 9.934699999999963e-05, 0.00010070799999999797, 9.98060000000009e-05, 9.941700000000442e-05, 9.945799999999672e-05, 0.00010029200000000182, 0.00010065199999999969, 0.00010013899999999909, 0.00010143099999999905, 0.00010033300000000106, 0.000101028000000003, 9.973699999999558e-05, 9.998599999999636e-05, 0.00010116599999999976, 0.00010027799999999532, 9.993099999999755e-05, 9.972200000000347e-05, 0.00010112500000000052, 0.00010087500000000027, 9.987499999999927e-05, 9.93479999999991e-05, 9.998599999999636e-05, 0.00010011099999999995, 0.00010017999999999833, 9.994500000000406e-05, 0.0001001660000000057, 9.962499999999902e-05, 9.944500000000356e-05, 9.990300000000535e-05, 0.0001006809999999983, 9.947200000000322e-05, 9.944499999999662e-05, 0.00010107000000000171]</msg>
<status status="PASS" starttime="20201112 09:44:39.437" endtime="20201112 09:44:39.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.425" endtime="20201112 09:44:39.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.449" endtime="20201112 09:44:39.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.458" endtime="20201112 09:44:39.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.453" endtime="20201112 09:44:39.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.445" endtime="20201112 09:44:39.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.939" endtime="20201112 09:44:39.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.937" endtime="20201112 09:44:39.484"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.506" endtime="20201112 09:44:39.525"></status>
</kw>
<msg timestamp="20201112 09:44:39.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.503" endtime="20201112 09:44:39.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.528" endtime="20201112 09:44:39.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.534" endtime="20201112 09:44:39.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.496" endtime="20201112 09:44:39.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.490" endtime="20201112 09:44:39.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.558" endtime="20201112 09:44:39.892"></status>
</kw>
<msg timestamp="20201112 09:44:39.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040257569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.554" endtime="20201112 09:44:39.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040257569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.901" endtime="20201112 09:44:39.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.919" endtime="20201112 09:44:39.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.547" endtime="20201112 09:44:39.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.542" endtime="20201112 09:44:39.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.940" level="INFO">${RESULT} = [{'time': 0.040358222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010065299999999916, 'source_diff': 0.00010065299999999916}, {'time': 0.040468514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:39.931" endtime="20201112 09:44:39.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:39.969" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:39.942" endtime="20201112 09:44:39.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.980" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:39.978" endtime="20201112 09:44:39.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.985" level="INFO">VALUE: [0.00010065299999999916, 0.00010184699999999519, 0.00010093099999999855, 0.00010208299999999587, 0.00010037499999999977, 0.00010109700000000138, 0.00010038899999999934, 0.00010116699999999923, 0.0001010139999999965, 0.00010116699999999923, 0.00010088899999999984, 0.00010050000000000336, 0.00010040299999999891, 0.00010170799999999897, 0.00010056900000000174, 0.00010199999999999793, 0.00010094399999999865, 0.00010038899999999934, 0.00010092999999999908, 0.0001006809999999983, 0.00010061100000000045, 0.00010109699999999444, 0.00010055500000000217, 0.00010083300000000156, 0.00010062500000000002, 0.00010074999999999668, 0.0001006530000000061, 0.00010033300000000106, 0.0001003610000000002, 0.00010066699999999873, 0.00010062500000000002, 0.00010045899999999719, 0.00010077800000000275, 0.00010067999999999883, 0.00010061100000000045, 0.00010134700000000163, 0.00010087500000000027, 0.00010102799999999607, 0.00010054200000000207, 0.00010075000000000361, 0.00010070899999999744, 0.00010058300000000131, 0.00010047200000000422, 0.00010095799999999822, 0.0001006809999999983, 0.00010118000000000626, 0.00010122199999999804, 0.00010133400000000153, 0.00010122300000000445, 0.00010208400000000228]</msg>
<status status="PASS" starttime="20201112 09:44:39.982" endtime="20201112 09:44:39.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.971" endtime="20201112 09:44:39.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.994" endtime="20201112 09:44:39.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.003" endtime="20201112 09:44:40.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.998" endtime="20201112 09:44:40.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.990" endtime="20201112 09:44:40.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.486" endtime="20201112 09:44:40.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.484" endtime="20201112 09:44:40.029"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.053" endtime="20201112 09:44:40.071"></status>
</kw>
<msg timestamp="20201112 09:44:40.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.049" endtime="20201112 09:44:40.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.075" endtime="20201112 09:44:40.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.081" endtime="20201112 09:44:40.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.042" endtime="20201112 09:44:40.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.036" endtime="20201112 09:44:40.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.104" endtime="20201112 09:44:40.439"></status>
</kw>
<msg timestamp="20201112 09:44:40.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041612264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.101" endtime="20201112 09:44:40.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041612264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.448" endtime="20201112 09:44:40.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.466" endtime="20201112 09:44:40.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.094" endtime="20201112 09:44:40.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.089" endtime="20201112 09:44:40.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.485" level="INFO">${RESULT} = [{'time': 0.041713889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010162499999999408, 'source_diff': 0.00010162499999999408}, {'time': 0.041822167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:40.476" endtime="20201112 09:44:40.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.514" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:40.487" endtime="20201112 09:44:40.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.525" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.523" endtime="20201112 09:44:40.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.530" level="INFO">VALUE: [0.00010162499999999408, 0.00010182000000000246, 0.00010229199999999689, 0.00010165300000000016, 0.00010261200000000192, 0.00010211200000000142, 0.00010177799999999682, 0.00010188900000000084, 0.0001015559999999957, 0.00010170799999999897, 0.00010176400000000418, 0.00010191699999999998, 0.00010183299999999562, 0.00010155499999999623, 0.00010252799999999757, 0.00010226399999999775, 0.00010159700000000188, 0.0001016809999999993, 0.00010152799999999657, 0.00010138800000000087, 0.000102416000000001, 0.0001018889999999939, 0.00010337500000000277, 0.00010150000000000436, 0.00010261100000000245, 0.00010202799999999707, 0.00010163900000000059, 0.00010205499999999673, 0.00010229199999999689, 0.0001020559999999962, 0.00010290300000000141, 0.00010145899999999819, 0.00010181999999999553, 0.0001028610000000027, 0.00010170799999999897, 0.00010179199999999639, 0.00010240299999999397, 0.00010158300000000231, 0.0001022359999999986, 0.00010255600000000364, 0.00010284700000000313, 0.00010247199999999929, 0.00010145900000000513, 0.00010162500000000102, 0.00010173600000000504, 0.00010225000000000511, 0.0001014860000000048, 0.00010193099999999955, 0.00010141699999999948, 0.00010195799999999922]</msg>
<status status="PASS" starttime="20201112 09:44:40.527" endtime="20201112 09:44:40.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.516" endtime="20201112 09:44:40.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.540" endtime="20201112 09:44:40.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.548" endtime="20201112 09:44:40.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.544" endtime="20201112 09:44:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.535" endtime="20201112 09:44:40.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.031" endtime="20201112 09:44:40.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.030" endtime="20201112 09:44:40.574"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.597" endtime="20201112 09:44:40.615"></status>
</kw>
<msg timestamp="20201112 09:44:40.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.593" endtime="20201112 09:44:40.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.619" endtime="20201112 09:44:40.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.625" endtime="20201112 09:44:40.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.586" endtime="20201112 09:44:40.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.580" endtime="20201112 09:44:40.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.648" endtime="20201112 09:44:40.984"></status>
</kw>
<msg timestamp="20201112 09:44:40.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040503222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.645" endtime="20201112 09:44:40.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040399417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040503222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.994" endtime="20201112 09:44:41.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.012" endtime="20201112 09:44:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.638" endtime="20201112 09:44:41.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.633" endtime="20201112 09:44:41.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.031" level="INFO">${RESULT} = [{'time': 0.040503222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010380499999999848, 'source_diff': 0.00010380499999999848}, {'time': 0.040615514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:41.022" endtime="20201112 09:44:41.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.061" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:41.033" endtime="20201112 09:44:41.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.072" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.070" endtime="20201112 09:44:41.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.078" level="INFO">VALUE: [0.00010380499999999848, 0.0001031810000000008, 0.00010263900000000159, 0.00010358300000000431, 0.00010263899999999465, 0.00010379099999999891, 0.00010245900000000613, 0.00010254099999999766, 0.00010265299999999422, 0.00010281899999999705, 0.0001031810000000008, 0.00010387500000000327, 0.00010397200000000079, 0.00010361100000000345, 0.00010333300000000406, 0.00010319500000000037, 0.00010281999999999653, 0.00010347200000000029, 0.00010251400000000493, 0.00010241700000000048, 0.00010293100000000055, 0.00010334700000000363, 0.00010276299999999877, 0.00010376400000000618, 0.00010336099999999626, 0.00010280599999999696, 0.00010248599999999886, 0.00010247199999999929, 0.00010263800000000212, 0.00010417999999999539, 0.00010290300000000141, 0.00010368000000000183, 0.00010277799999999782, 0.00010397200000000079, 0.00010355499999999823, 0.00010276399999999825, 0.00010329100000000535, 0.00010320800000000047, 0.0001026940000000004, 0.00010261100000000245, 0.00010252799999999757, 0.0001032359999999996, 0.00010259700000000288, 0.00010299999999999893, 0.00010243000000000058, 0.00010327699999999884, 0.00010368099999999436, 0.0001025280000000045, 0.00010320800000000047, 0.00010297199999999979]</msg>
<status status="PASS" starttime="20201112 09:44:41.074" endtime="20201112 09:44:41.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.063" endtime="20201112 09:44:41.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.087" endtime="20201112 09:44:41.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.095" endtime="20201112 09:44:41.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.091" endtime="20201112 09:44:41.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.083" endtime="20201112 09:44:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.576" endtime="20201112 09:44:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.575" endtime="20201112 09:44:41.121"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.144" endtime="20201112 09:44:41.163"></status>
</kw>
<msg timestamp="20201112 09:44:41.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.141" endtime="20201112 09:44:41.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.166" endtime="20201112 09:44:41.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.172" endtime="20201112 09:44:41.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.133" endtime="20201112 09:44:41.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.128" endtime="20201112 09:44:41.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.195" endtime="20201112 09:44:41.529"></status>
</kw>
<msg timestamp="20201112 09:44:41.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040398542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.192" endtime="20201112 09:44:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040398542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.539" endtime="20201112 09:44:41.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.557" endtime="20201112 09:44:41.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.185" endtime="20201112 09:44:41.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.180" endtime="20201112 09:44:41.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.576" level="INFO">${RESULT} = [{'time': 0.040398542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010369500000000087, 'source_diff': 0.00010369500000000087}, {'time': 0.040513875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:41.567" endtime="20201112 09:44:41.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.605" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:41.578" endtime="20201112 09:44:41.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.616" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.614" endtime="20201112 09:44:41.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.621" level="INFO">VALUE: [0.00010369500000000087, 0.00010475000000000068, 0.00010454099999999966, 0.0001043889999999964, 0.00010395900000000069, 0.00010384700000000413, 0.00010397200000000079, 0.0001039160000000025, 0.00010498600000000136, 0.00010466700000000273, 0.00010380499999999848, 0.00010530599999999946, 0.00010408300000000481, 0.0001040559999999982, 0.00010513799999999768, 0.00010399999999999993, 0.00010507000000000571, 0.00010361100000000345, 0.00010487500000000427, 0.00010391599999999557, 0.00010431999999999803, 0.00010430599999999846, 0.00010422300000000051, 0.00010454199999999914, 0.00010429199999999889, 0.00010444400000000215, 0.00010394500000000112, 0.00010447300000000076, 0.00010348599999999986, 0.00010361100000000345, 0.00010447200000000129, 0.00010426399999999975, 0.00010341700000000148, 0.0001040559999999982, 0.00010498600000000136, 0.00010405499999999873, 0.0001042360000000006, 0.00010431999999999803, 0.00010466700000000273, 0.0001039160000000025, 0.00010530599999999946, 0.0001038889999999959, 0.0001040139999999995, 0.00010511099999999801, 0.00010401400000000643, 0.00010463899999999665, 0.00010490299999999647, 0.00010411099999999701, 0.0001052360000000016, 0.00010376299999999977]</msg>
<status status="PASS" starttime="20201112 09:44:41.618" endtime="20201112 09:44:41.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.607" endtime="20201112 09:44:41.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.631" endtime="20201112 09:44:41.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.639" endtime="20201112 09:44:41.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.634" endtime="20201112 09:44:41.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.626" endtime="20201112 09:44:41.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.123" endtime="20201112 09:44:41.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.122" endtime="20201112 09:44:41.665"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.687" endtime="20201112 09:44:41.706"></status>
</kw>
<msg timestamp="20201112 09:44:41.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.684" endtime="20201112 09:44:41.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.710" endtime="20201112 09:44:41.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.716" endtime="20201112 09:44:41.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.677" endtime="20201112 09:44:41.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.671" endtime="20201112 09:44:41.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.739" endtime="20201112 09:44:42.073"></status>
</kw>
<msg timestamp="20201112 09:44:42.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040227597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.736" endtime="20201112 09:44:42.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040227597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.082" endtime="20201112 09:44:42.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.101" endtime="20201112 09:44:42.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.729" endtime="20201112 09:44:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.724" endtime="20201112 09:44:42.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.122" level="INFO">${RESULT} = [{'time': 0.040333028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543100000000305, 'source_diff': 0.00010543100000000305}, {'time': 0.040449292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:42.113" endtime="20201112 09:44:42.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.151" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:42.124" endtime="20201112 09:44:42.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.162" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.160" endtime="20201112 09:44:42.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.167" level="INFO">VALUE: [0.00010543100000000305, 0.00010526400000000075, 0.00010593099999999661, 0.0001060140000000015, 0.00010475000000000068, 0.00010513900000000409, 0.00010522299999999457, 0.00010477799999999982, 0.00010525000000000118, 0.00010579100000000091, 0.00010476300000000077, 0.00010500000000000093, 0.00010445800000000172, 0.00010458399999999785, 0.0001047360000000011, 0.00010493099999999561, 0.00010443000000000258, 0.0001053889999999974, 0.00010470799999999503, 0.00010533299999999912, 0.000104901999999997, 0.00010436099999999726, 0.00010558300000000631, 0.00010542999999999664, 0.0001061810000000038, 0.00010483300000000556, 0.00010454199999999914, 0.00010595899999999575, 0.00010505600000000614, 0.00010441700000000248, 0.00010481899999999905, 0.00010620800000000347, 0.00010469500000000187, 0.00010619500000000337, 0.00010569500000000287, 0.00010519399999999596, 0.00010588900000000484, 0.00010504100000000016, 0.00010465300000000316, 0.00010498600000000136, 0.00010497200000000179, 0.00010637500000000577, 0.000105514000000001, 0.00010580599999999996, 0.00010450000000000043, 0.00010451300000000052, 0.00010470799999999503, 0.00010441700000000248, 0.00010441699999999554, 0.00010483299999999862]</msg>
<status status="PASS" starttime="20201112 09:44:42.164" endtime="20201112 09:44:42.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.153" endtime="20201112 09:44:42.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.177" endtime="20201112 09:44:42.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.185" endtime="20201112 09:44:42.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.181" endtime="20201112 09:44:42.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.172" endtime="20201112 09:44:42.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.667" endtime="20201112 09:44:42.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.666" endtime="20201112 09:44:42.211"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.234" endtime="20201112 09:44:42.253"></status>
</kw>
<msg timestamp="20201112 09:44:42.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.230" endtime="20201112 09:44:42.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.256" endtime="20201112 09:44:42.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.262" endtime="20201112 09:44:42.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.223" endtime="20201112 09:44:42.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.217" endtime="20201112 09:44:42.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.286" endtime="20201112 09:44:42.620"></status>
</kw>
<msg timestamp="20201112 09:44:42.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04053975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040646806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:42.282" endtime="20201112 09:44:42.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04053975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040646806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:42.629" endtime="20201112 09:44:42.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.647" endtime="20201112 09:44:42.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.275" endtime="20201112 09:44:42.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.270" endtime="20201112 09:44:42.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.666" level="INFO">${RESULT} = [{'time': 0.040646806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001070560000000012, 'source_diff': 0.0001070560000000012}, {'time': 0.040763139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:42.657" endtime="20201112 09:44:42.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.695" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:42.668" endtime="20201112 09:44:42.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.706" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.703" endtime="20201112 09:44:42.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.711" level="INFO">VALUE: [0.0001070560000000012, 0.00010719499999999743, 0.00010611099999999901, 0.0001060560000000002, 0.00010675000000000268, 0.00010570800000000297, 0.00010631900000000055, 0.00010713899999999915, 0.00010569500000000287, 0.00010720799999999753, 0.00010548700000000133, 0.00010602800000000107, 0.00010570800000000297, 0.00010545900000000219, 0.00010597200000000279, 0.0001068340000000001, 0.00010608299999999987, 0.00010609699999999944, 0.00010566600000000426, 0.00010565300000000416, 0.00010577799999999388, 0.00010602699999999465, 0.00010644399999999721, 0.000105514000000001, 0.00010559699999999894, 0.00010663799999999918, 0.00010538900000000434, 0.00010641699999999754, 0.00010629200000000089, 0.00010561099999999851, 0.00010565299999999722, 0.00010740299999999897, 0.00010611099999999901, 0.00010552700000000109, 0.00010616700000000423, 0.00010676399999999531, 0.00010623700000000208, 0.00010636099999999926, 0.00010631900000000055, 0.0001057360000000021, 0.0001067360000000031, 0.00010695900000000369, 0.00010602800000000107, 0.00010597200000000279, 0.00010691699999999804, 0.00010594400000000365, 0.00010591699999999704, 0.00010583299999999962, 0.0001060419999999937, 0.00010647200000000329]</msg>
<status status="PASS" starttime="20201112 09:44:42.708" endtime="20201112 09:44:42.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.697" endtime="20201112 09:44:42.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.721" endtime="20201112 09:44:42.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.729" endtime="20201112 09:44:42.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.725" endtime="20201112 09:44:42.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.716" endtime="20201112 09:44:42.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.213" endtime="20201112 09:44:42.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.212" endtime="20201112 09:44:42.755"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.777" endtime="20201112 09:44:42.796"></status>
</kw>
<msg timestamp="20201112 09:44:42.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.774" endtime="20201112 09:44:42.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.800" endtime="20201112 09:44:42.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.806" endtime="20201112 09:44:42.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.767" endtime="20201112 09:44:42.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.761" endtime="20201112 09:44:42.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.829" endtime="20201112 09:44:43.165"></status>
</kw>
<msg timestamp="20201112 09:44:43.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040340375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.826" endtime="20201112 09:44:43.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040340375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.175" endtime="20201112 09:44:43.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.193" endtime="20201112 09:44:43.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.819" endtime="20201112 09:44:43.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.814" endtime="20201112 09:44:43.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.212" level="INFO">${RESULT} = [{'time': 0.040340375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010686099999999976, 'source_diff': 0.00010686099999999976}, {'time': 0.040452681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:43.203" endtime="20201112 09:44:43.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:43.214" endtime="20201112 09:44:43.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.252" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.249" endtime="20201112 09:44:43.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.257" level="INFO">VALUE: [0.00010686099999999976, 0.00010748699999999639, 0.00010720799999999753, 0.00010659699999999994, 0.00010791699999999904, 0.0001068889999999989, 0.00010745899999999725, 0.00010837500000000083, 0.00010658399999999985, 0.00010650000000000243, 0.00010709799999999992, 0.00010745899999999725, 0.00010640300000000491, 0.00010634699999999969, 0.00010736100000000026, 0.00010741700000000548, 0.0001065690000000008, 0.00010695900000000369, 0.00010797199999999785, 0.0001080560000000022, 0.00010691700000000498, 0.00010684700000000019, 0.00010737499999999983, 0.00010634799999999917, 0.00010711100000000001, 0.00010781900000000205, 0.00010702800000000207, 0.00010836099999999432, 0.00010673700000000258, 0.00010802699999999665, 0.00010661099999999951, 0.00010779200000000239, 0.00010722200000000404, 0.00010693099999999761, 0.00010756899999999486, 0.00010654200000000114, 0.00010801399999999656, 0.00010637500000000577, 0.00010707000000000078, 0.00010811100000000101, 0.00010698600000000336, 0.00010811200000000049, 0.0001080839999999944, 0.00010694399999999771, 0.00010837500000000083, 0.00010651399999999506, 0.00010815299999999972, 0.00010707000000000078, 0.00010647199999999635, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201112 09:44:43.254" endtime="20201112 09:44:43.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.243" endtime="20201112 09:44:43.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.266" endtime="20201112 09:44:43.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.275" endtime="20201112 09:44:43.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.270" endtime="20201112 09:44:43.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.262" endtime="20201112 09:44:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.757" endtime="20201112 09:44:43.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.756" endtime="20201112 09:44:43.300"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.323" endtime="20201112 09:44:43.342"></status>
</kw>
<msg timestamp="20201112 09:44:43.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.320" endtime="20201112 09:44:43.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.346" endtime="20201112 09:44:43.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.352" endtime="20201112 09:44:43.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.312" endtime="20201112 09:44:43.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.307" endtime="20201112 09:44:43.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.375" endtime="20201112 09:44:43.709"></status>
</kw>
<msg timestamp="20201112 09:44:43.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040290444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.372" endtime="20201112 09:44:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040290444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.718" endtime="20201112 09:44:43.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.736" endtime="20201112 09:44:43.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.365" endtime="20201112 09:44:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.360" endtime="20201112 09:44:43.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.755" level="INFO">${RESULT} = [{'time': 0.040290444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010851300000000452, 'source_diff': 0.00010851300000000452}, {'time': 0.040405778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:43.746" endtime="20201112 09:44:43.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.784" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:43.757" endtime="20201112 09:44:43.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.795" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.793" endtime="20201112 09:44:43.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.801" level="INFO">VALUE: [0.00010851300000000452, 0.00010902800000000407, 0.00010755599999999477, 0.00010811100000000101, 0.00010824999999999724, 0.00010734700000000069, 0.00010883299999999568, 0.00010865300000000022, 0.00010777800000000282, 0.00010744499999999768, 0.00010743099999999811, 0.00010925000000000518, 0.00010744499999999768, 0.00010811100000000101, 0.00010856899999999586, 0.0001075560000000017, 0.00010831900000000255, 0.00010845799999999878, 0.00010794499999999818, 0.00010918099999999986, 0.00010861100000000151, 0.00010736100000000026, 0.00010887500000000133, 0.00010769499999999793, 0.00010897299999999832, 0.00010877799999999688, 0.00010745899999999725, 0.00010811100000000101, 0.00010904099999999722, 0.00010830499999999604, 0.000108208999999998, 0.00010891700000000004, 0.0001075419999999952, 0.00010795899999999775, 0.00010930599999999652, 0.00010823599999999767, 0.00010932000000000303, 0.00010748600000000386, 0.00010840299999999997, 0.00010772200000000454, 0.00010848599999999792, 0.00010829100000000341, 0.00010841699999999954, 0.00010845799999999878, 0.00010734699999999375, 0.00010886100000000176, 0.00010787499999999339, 0.0001085560000000027, 0.00010762500000000008, 0.00010895799999999928]</msg>
<status status="PASS" starttime="20201112 09:44:43.798" endtime="20201112 09:44:43.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.786" endtime="20201112 09:44:43.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.810" endtime="20201112 09:44:43.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.818" endtime="20201112 09:44:43.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.814" endtime="20201112 09:44:43.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.805" endtime="20201112 09:44:43.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.303" endtime="20201112 09:44:43.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.301" endtime="20201112 09:44:43.844"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.866" endtime="20201112 09:44:43.886"></status>
</kw>
<msg timestamp="20201112 09:44:43.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.863" endtime="20201112 09:44:43.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.889" endtime="20201112 09:44:43.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.895" endtime="20201112 09:44:43.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.856" endtime="20201112 09:44:43.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.850" endtime="20201112 09:44:43.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.918" endtime="20201112 09:44:44.252"></status>
</kw>
<msg timestamp="20201112 09:44:44.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.915" endtime="20201112 09:44:44.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040157792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.261" endtime="20201112 09:44:44.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.279" endtime="20201112 09:44:44.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.908" endtime="20201112 09:44:44.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.903" endtime="20201112 09:44:44.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.300" level="INFO">${RESULT} = [{'time': 0.040157792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010995899999999975, 'source_diff': 0.00010995899999999975}, {'time': 0.040276139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:44.291" endtime="20201112 09:44:44.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.329" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:44.302" endtime="20201112 09:44:44.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.340" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.338" endtime="20201112 09:44:44.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.345" level="INFO">VALUE: [0.00010995899999999975, 0.0001092219999999991, 0.00010908299999999593, 0.000109596999999996, 0.00010843099999999911, 0.00011038899999999546, 0.0001097219999999996, 0.00010855599999999577, 0.00010970800000000003, 0.00010884700000000219, 0.00010879099999999697, 0.00010983300000000362, 0.00010855599999999577, 0.00010865300000000022, 0.00010973700000000558, 0.00010884700000000219, 0.00010843099999999911, 0.00010951399999999806, 0.00010859700000000194, 0.00010865200000000075, 0.00010884699999999525, 0.00010880600000000296, 0.00011012499999999564, 0.00010915300000000072, 0.00010963899999999471, 0.00010859800000000142, 0.00010987499999999539, 0.00010870799999999903, 0.0001103890000000024, 0.0001085419999999962, 0.00010920799999999953, 0.00011031899999999761, 0.00010927799999999738, 0.00010848599999999792, 0.00011004200000000464, 0.00010904200000000364, 0.00010863900000000065, 0.00010861200000000099, 0.00010874999999999774, 0.00010905500000000373, 0.00010999999999999899, 0.00010891700000000004, 0.00010930500000000398, 0.00011044499999999374, 0.00010847300000000476, 0.00010844499999999868, 0.00010930599999999652, 0.00010895799999999928, 0.00010999999999999899, 0.00010952699999999815]</msg>
<status status="PASS" starttime="20201112 09:44:44.342" endtime="20201112 09:44:44.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.331" endtime="20201112 09:44:44.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.363" endtime="20201112 09:44:44.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.371" endtime="20201112 09:44:44.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.367" endtime="20201112 09:44:44.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.359" endtime="20201112 09:44:44.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.846" endtime="20201112 09:44:44.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.845" endtime="20201112 09:44:44.397"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.420" endtime="20201112 09:44:44.439"></status>
</kw>
<msg timestamp="20201112 09:44:44.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.416" endtime="20201112 09:44:44.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.442" endtime="20201112 09:44:44.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.448" endtime="20201112 09:44:44.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.409" endtime="20201112 09:44:44.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.403" endtime="20201112 09:44:44.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.471" endtime="20201112 09:44:44.806"></status>
</kw>
<msg timestamp="20201112 09:44:44.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040187417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.468" endtime="20201112 09:44:44.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040187417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.815" endtime="20201112 09:44:44.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.833" endtime="20201112 09:44:44.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.461" endtime="20201112 09:44:44.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.456" endtime="20201112 09:44:44.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.852" level="INFO">${RESULT} = [{'time': 0.040297986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011056899999999786, 'source_diff': 0.00011056899999999786}, {'time': 0.040414278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:44.843" endtime="20201112 09:44:44.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.881" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:44.854" endtime="20201112 09:44:44.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.892" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.890" endtime="20201112 09:44:44.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.897" level="INFO">VALUE: [0.00011056899999999786, 0.0001104169999999946, 0.00011033299999999718, 0.00011027799999999838, 0.00011123600000000067, 0.00011143100000000211, 0.00011127799999999938, 0.00010966700000000079, 0.00010984800000000267, 0.00010959700000000294, 0.00011070800000000103, 0.00010962500000000208, 0.00010958300000000337, 0.0001105419999999982, 0.000109514000000005, 0.00011133300000000512, 0.00010982000000000353, 0.00011063900000000265, 0.00011068100000000136, 0.00010961100000000251, 0.00011125000000000024, 0.0001095419999999972, 0.00011087499999999639, 0.00010952799999999763, 0.00010955500000000423, 0.00011058299999999743, 0.00011024999999999924, 0.0001104169999999946, 0.00010961099999999557, 0.00011004200000000464, 0.0001108890000000029, 0.00011068100000000136, 0.00010952700000000509, 0.0001105419999999982, 0.00011127799999999938, 0.00011118100000000186, 0.0001110549999999988, 0.00011054099999999872, 0.00010944499999999968, 0.00011099999999999999, 0.00010970800000000003, 0.00010987500000000233, 0.00011029199999999795, 0.00010993100000000061, 0.00010944400000000021, 0.00011002799999999813, 0.00011137499999999689, 0.00011131900000000555, 0.00010949999999999849, 0.00010945799999999978]</msg>
<status status="PASS" starttime="20201112 09:44:44.894" endtime="20201112 09:44:44.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.883" endtime="20201112 09:44:44.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.907" endtime="20201112 09:44:44.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.915" endtime="20201112 09:44:44.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.910" endtime="20201112 09:44:44.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.902" endtime="20201112 09:44:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.399" endtime="20201112 09:44:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.398" endtime="20201112 09:44:44.941"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.963" endtime="20201112 09:44:44.982"></status>
</kw>
<msg timestamp="20201112 09:44:44.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.960" endtime="20201112 09:44:44.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.986" endtime="20201112 09:44:44.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.992" endtime="20201112 09:44:44.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.953" endtime="20201112 09:44:44.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.947" endtime="20201112 09:44:44.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.015" endtime="20201112 09:44:45.350"></status>
</kw>
<msg timestamp="20201112 09:44:45.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040206403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.012" endtime="20201112 09:44:45.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040206403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.359" endtime="20201112 09:44:45.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.377" endtime="20201112 09:44:45.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.005" endtime="20201112 09:44:45.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.000" endtime="20201112 09:44:45.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.396" level="INFO">${RESULT} = [{'time': 0.040206403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001120969999999985, 'source_diff': 0.0001120969999999985}, {'time': 0.040321708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:45.387" endtime="20201112 09:44:45.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.425" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:45.398" endtime="20201112 09:44:45.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.436" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:45.434" endtime="20201112 09:44:45.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.441" level="INFO">VALUE: [0.0001120969999999985, 0.00011056899999999786, 0.00011094399999999477, 0.00011093100000000161, 0.00011158400000000485, 0.00011116700000000229, 0.00011111100000000401, 0.00011158399999999791, 0.00011148600000000092, 0.00011061099999999657, 0.00011088899999999596, 0.00011231999999999909, 0.00011236099999999832, 0.00011113899999999621, 0.00011069400000000146, 0.0001119299999999962, 0.00011083300000000462, 0.00011123600000000067, 0.00011152799999999963, 0.00011040300000000197, 0.00011081899999999811, 0.00011044400000000121, 0.00011231999999999909, 0.00011112499999999664, 0.00011233299999999918, 0.000111209000000001, 0.00011231999999999909, 0.00011084699999999725, 0.00011119500000000143, 0.00011147200000000135, 0.00011238899999999746, 0.00011044400000000121, 0.00011143000000000264, 0.00011181999999999859, 0.00011044499999999374, 0.00011216700000000329, 0.00011093099999999467, 0.00011097200000000085, 0.00011099999999999999, 0.00011070799999999409, 0.00011219400000000296, 0.00011063900000000265, 0.00011208399999999841, 0.0001113890000000034, 0.00011229100000000047, 0.00011102799999999913, 0.00011177799999999988, 0.00011140199999999656, 0.00011134700000000469, 0.00011040300000000197]</msg>
<status status="PASS" starttime="20201112 09:44:45.438" endtime="20201112 09:44:45.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.427" endtime="20201112 09:44:45.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.451" endtime="20201112 09:44:45.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:45.459" endtime="20201112 09:44:45.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.455" endtime="20201112 09:44:45.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.446" endtime="20201112 09:44:45.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.943" endtime="20201112 09:44:45.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.941" endtime="20201112 09:44:45.485"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.507" endtime="20201112 09:44:45.527"></status>
</kw>
<msg timestamp="20201112 09:44:45.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.504" endtime="20201112 09:44:45.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.530" endtime="20201112 09:44:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.536" endtime="20201112 09:44:45.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.497" endtime="20201112 09:44:45.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.491" endtime="20201112 09:44:45.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.560" endtime="20201112 09:44:45.919"></status>
</kw>
<msg timestamp="20201112 09:44:45.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.556" endtime="20201112 09:44:45.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040277583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.929" endtime="20201112 09:44:45.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.948" endtime="20201112 09:44:45.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.549" endtime="20201112 09:44:45.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.544" endtime="20201112 09:44:45.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.967" level="INFO">${RESULT} = [{'time': 0.040277583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011254100000000072, 'source_diff': 0.00011254100000000072}, {'time': 0.040394861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:45.958" endtime="20201112 09:44:45.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.998" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:45.969" endtime="20201112 09:44:45.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.010" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.007" endtime="20201112 09:44:46.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.015" level="INFO">VALUE: [0.00011254100000000072, 0.00011180499999999954, 0.00011286099999999882, 0.00011323600000000267, 0.00011230599999999952, 0.00011334799999999923, 0.0001119169999999961, 0.00011226400000000081, 0.00011312500000000558, 0.00011216700000000329, 0.00011332000000000009, 0.0001119299999999962, 0.0001118890000000039, 0.0001125550000000003, 0.00011187499999999739, 0.0001134169999999976, 0.00011302799999999419, 0.00011225000000000124, 0.00011262500000000508, 0.00011299999999999505, 0.00011191600000000357, 0.00011270800000000303, 0.00011165200000000375, 0.00011243100000000311, 0.00011247299999999488, 0.00011163899999999671, 0.00011197200000000185, 0.00011288899999999796, 0.00011197300000000132, 0.00011319399999999702, 0.00011338899999999846, 0.00011169400000000246, 0.00011331900000000061, 0.0001123749999999979, 0.00011311099999999907, 0.00011158399999999791, 0.00011161100000000451, 0.000112596999999999, 0.00011227800000000038, 0.00011286099999999882, 0.00011176400000000031, 0.00011234700000000569, 0.00011300000000000199, 0.00011336099999999932, 0.00011208299999999893, 0.00011302799999999419, 0.00011213899999999721, 0.00011219500000000243, 0.00011243000000000364, 0.00011236099999999832]</msg>
<status status="PASS" starttime="20201112 09:44:46.012" endtime="20201112 09:44:46.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.000" endtime="20201112 09:44:46.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.025" endtime="20201112 09:44:46.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.033" endtime="20201112 09:44:46.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.029" endtime="20201112 09:44:46.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.020" endtime="20201112 09:44:46.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.487" endtime="20201112 09:44:46.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.486" endtime="20201112 09:44:46.060"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.083" endtime="20201112 09:44:46.105"></status>
</kw>
<msg timestamp="20201112 09:44:46.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.079" endtime="20201112 09:44:46.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.108" endtime="20201112 09:44:46.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.115" endtime="20201112 09:44:46.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.072" endtime="20201112 09:44:46.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.066" endtime="20201112 09:44:46.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.139" endtime="20201112 09:44:46.485"></status>
</kw>
<msg timestamp="20201112 09:44:46.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041563778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.135" endtime="20201112 09:44:46.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041563778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.494" endtime="20201112 09:44:46.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.512" endtime="20201112 09:44:46.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.128" endtime="20201112 09:44:46.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.123" endtime="20201112 09:44:46.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.533" level="INFO">${RESULT} = [{'time': 0.041563778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011376400000000231, 'source_diff': 0.00011376400000000231}, {'time': 0.041684069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:46.524" endtime="20201112 09:44:46.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.562" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:46.535" endtime="20201112 09:44:46.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.573" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.571" endtime="20201112 09:44:46.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.578" level="INFO">VALUE: [0.00011376400000000231, 0.0001133749999999989, 0.0001128749999999984, 0.00011416700000000529, 0.00011373600000000317, 0.0001134299999999977, 0.00011270799999999609, 0.00011415299999999878, 0.00011267999999999695, 0.00011269399999999652, 0.00011275000000000174, 0.00011415300000000572, 0.00011258399999999891, 0.00011241700000000354, 0.00011300000000000199, 0.00011432000000000109, 0.00011268100000000336, 0.00011319499999999649, 0.00011338899999999846, 0.00011355600000000077, 0.00011276399999999437, 0.00011308299999999993, 0.00011283299999999968, 0.0001135420000000012, 0.00011315299999999778, 0.00011397199999999691, 0.00011311099999999907, 0.00011291700000000404, 0.00011248699999999445, 0.00011361099999999957, 0.00011250000000000149, 0.00011415299999999878, 0.00011434800000000023, 0.00011438899999999946, 0.0001133749999999989, 0.00011247200000000235, 0.00011336099999999932, 0.00011320800000000353, 0.0001135550000000013, 0.00011400000000000299, 0.00011249999999999455, 0.00011408300000000093, 0.00011362499999999914, 0.0001142499999999963, 0.00011433300000000118, 0.0001130969999999995, 0.00011402800000000213, 0.0001125420000000002, 0.00011263899999999771, 0.00011241700000000354]</msg>
<status status="PASS" starttime="20201112 09:44:46.575" endtime="20201112 09:44:46.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.564" endtime="20201112 09:44:46.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.588" endtime="20201112 09:44:46.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.596" endtime="20201112 09:44:46.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.592" endtime="20201112 09:44:46.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.583" endtime="20201112 09:44:46.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.062" endtime="20201112 09:44:46.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.061" endtime="20201112 09:44:46.622"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.644" endtime="20201112 09:44:46.664"></status>
</kw>
<msg timestamp="20201112 09:44:46.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.641" endtime="20201112 09:44:46.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.668" endtime="20201112 09:44:46.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.674" endtime="20201112 09:44:46.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.634" endtime="20201112 09:44:46.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.628" endtime="20201112 09:44:46.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.697" endtime="20201112 09:44:47.039"></status>
</kw>
<msg timestamp="20201112 09:44:47.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040410514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.694" endtime="20201112 09:44:47.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040410514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040524903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.048" endtime="20201112 09:44:47.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.067" endtime="20201112 09:44:47.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.687" endtime="20201112 09:44:47.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.682" endtime="20201112 09:44:47.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.085" level="INFO">${RESULT} = [{'time': 0.040524903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011438899999999946, 'source_diff': 0.00011438899999999946}, {'time': 0.040646222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:47.077" endtime="20201112 09:44:47.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.115" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:47.087" endtime="20201112 09:44:47.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.125" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.123" endtime="20201112 09:44:47.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.131" level="INFO">VALUE: [0.00011438899999999946, 0.00011397200000000385, 0.00011481900000000211, 0.00011376399999999537, 0.00011504099999999629, 0.00011455600000000177, 0.00011355600000000077, 0.00011461099999999363, 0.00011408300000000093, 0.0001135420000000012, 0.00011512500000000064, 0.00011380500000000154, 0.0001143749999999999, 0.0001148049999999956, 0.00011540300000000003, 0.00011501400000000356, 0.00011393000000000514, 0.00011500000000000399, 0.00011470799999999809, 0.00011506899999999542, 0.0001135420000000012, 0.00011370800000000403, 0.00011504199999999576, 0.00011479200000000245, 0.00011490200000000006, 0.00011463899999999971, 0.00011356900000000086, 0.00011388899999999896, 0.0001152499999999973, 0.00011361099999999957, 0.00011413899999999921, 0.00011512500000000064, 0.0001138749999999994, 0.0001142220000000041, 0.00011483300000000168, 0.00011373600000000317, 0.00011397199999999691, 0.0001148750000000004, 0.00011366599999999838, 0.00011452800000000263, 0.0001149169999999991, 0.00011488899999999996, 0.00011348600000000292, 0.0001138890000000059, 0.00011344399999999727, 0.0001137499999999958, 0.00011511100000000107, 0.00011443100000000511, 0.00011380500000000154, 0.00011515200000000031]</msg>
<status status="PASS" starttime="20201112 09:44:47.128" endtime="20201112 09:44:47.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.116" endtime="20201112 09:44:47.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.140" endtime="20201112 09:44:47.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.149" endtime="20201112 09:44:47.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.144" endtime="20201112 09:44:47.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.136" endtime="20201112 09:44:47.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.624" endtime="20201112 09:44:47.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.623" endtime="20201112 09:44:47.175"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.197" endtime="20201112 09:44:47.219"></status>
</kw>
<msg timestamp="20201112 09:44:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.194" endtime="20201112 09:44:47.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.222" endtime="20201112 09:44:47.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.228" endtime="20201112 09:44:47.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.187" endtime="20201112 09:44:47.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.181" endtime="20201112 09:44:47.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.252" endtime="20201112 09:44:47.599"></status>
</kw>
<msg timestamp="20201112 09:44:47.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040656208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.249" endtime="20201112 09:44:47.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040540597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040656208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.609" endtime="20201112 09:44:47.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.627" endtime="20201112 09:44:47.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.241" endtime="20201112 09:44:47.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.236" endtime="20201112 09:44:47.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.646" level="INFO">${RESULT} = [{'time': 0.040656208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011561100000000157, 'source_diff': 0.00011561100000000157}, {'time': 0.040781514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:47.637" endtime="20201112 09:44:47.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.675" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:47.648" endtime="20201112 09:44:47.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.686" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.684" endtime="20201112 09:44:47.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.691" level="INFO">VALUE: [0.00011561100000000157, 0.00011463899999999971, 0.00011588900000000096, 0.0001153750000000009, 0.00011484700000000125, 0.00011625000000000524, 0.00011568099999999942, 0.00011618000000000045, 0.00011454199999999526, 0.00011584700000000225, 0.00011618000000000045, 0.0001163620000000018, 0.00011634800000000223, 0.00011597199999999891, 0.00011534700000000175, 0.00011631999999999615, 0.00011580599999999608, 0.00011597199999999891, 0.0001159170000000001, 0.00011494500000000518, 0.0001160699999999959, 0.00011620799999999959, 0.0001159300000000002, 0.00011604199999999676, 0.00011452799999999569, 0.00011547199999999841, 0.00011466699999999885, 0.0001160970000000025, 0.00011616600000000088, 0.00011548600000000492, 0.00011469399999999852, 0.00011594399999999977, 0.00011516699999999935, 0.00011623599999999873, 0.00011462500000000014, 0.00011594499999999924, 0.00011484700000000125, 0.00011556900000000286, 0.00011562500000000114, 0.0001148750000000004, 0.00011577699999999747, 0.00011440299999999903, 0.00011567999999999995, 0.00011594499999999924, 0.00011630600000000352, 0.00011576399999999737, 0.00011590300000000053, 0.00011590300000000053, 0.00011451400000000306, 0.00011584700000000225]</msg>
<status status="PASS" starttime="20201112 09:44:47.688" endtime="20201112 09:44:47.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.677" endtime="20201112 09:44:47.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.701" endtime="20201112 09:44:47.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.710" endtime="20201112 09:44:47.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.705" endtime="20201112 09:44:47.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.696" endtime="20201112 09:44:47.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.177" endtime="20201112 09:44:47.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.176" endtime="20201112 09:44:47.737"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.760" endtime="20201112 09:44:47.780"></status>
</kw>
<msg timestamp="20201112 09:44:47.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.757" endtime="20201112 09:44:47.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.784" endtime="20201112 09:44:47.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.790" endtime="20201112 09:44:47.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.750" endtime="20201112 09:44:47.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.744" endtime="20201112 09:44:47.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.813" endtime="20201112 09:44:48.161"></status>
</kw>
<msg timestamp="20201112 09:44:48.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042527375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042644361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.810" endtime="20201112 09:44:48.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042527375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042644361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.172" endtime="20201112 09:44:48.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.190" endtime="20201112 09:44:48.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.803" endtime="20201112 09:44:48.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.798" endtime="20201112 09:44:48.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.209" level="INFO">${RESULT} = [{'time': 0.042644361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011698599999999948, 'source_diff': 0.00011698599999999948}, {'time': 0.042769694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:48.200" endtime="20201112 09:44:48.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.238" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:48.211" endtime="20201112 09:44:48.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.250" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.247" endtime="20201112 09:44:48.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.255" level="INFO">VALUE: [0.00011698599999999948, 0.00011651299999999865, 0.00011543099999999917, 0.0001159300000000002, 0.0001168750000000024, 0.00011691699999999416, 0.00011651399999999812, 0.00011668000000000095, 0.0001169300000000012, 0.00011658300000000343, 0.00011556900000000286, 0.00011652699999999822, 0.00011731999999999715, 0.00011680600000000402, 0.00011708300000000393, 0.00011601399999999762, 0.00011665300000000128, 0.00011656899999999693, 0.00011683300000000368, 0.00011672199999999966, 0.00011738900000000246, 0.00011713899999999527, 0.0001173049999999981, 0.00011738899999999552, 0.0001169300000000012, 0.00011665200000000181, 0.00011666700000000085, 0.00011541600000000013, 0.00011669400000000052, 0.0001174029999999951, 0.0001172499999999993, 0.00011633299999999624, 0.00011597199999999891, 0.0001157499999999978, 0.00011648600000000592, 0.00011543099999999917, 0.00011713800000000274, 0.00011576400000000431, 0.00011649999999999855, 0.00011634699999999581, 0.00011665300000000128, 0.000116082999999996, 0.00011588900000000096, 0.00011676399999999837, 0.00011659799999999554, 0.00011595799999999934, 0.000116597000000003, 0.00011622199999999916, 0.00011690300000000153, 0.00011706900000000436]</msg>
<status status="PASS" starttime="20201112 09:44:48.252" endtime="20201112 09:44:48.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.240" endtime="20201112 09:44:48.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.265" endtime="20201112 09:44:48.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.273" endtime="20201112 09:44:48.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.269" endtime="20201112 09:44:48.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.260" endtime="20201112 09:44:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.740" endtime="20201112 09:44:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.738" endtime="20201112 09:44:48.300"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.323" endtime="20201112 09:44:48.344"></status>
</kw>
<msg timestamp="20201112 09:44:48.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.320" endtime="20201112 09:44:48.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.349" endtime="20201112 09:44:48.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.355" endtime="20201112 09:44:48.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.312" endtime="20201112 09:44:48.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.307" endtime="20201112 09:44:48.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.383" endtime="20201112 09:44:48.724"></status>
</kw>
<msg timestamp="20201112 09:44:48.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041349306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041467042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.380" endtime="20201112 09:44:48.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041349306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041467042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.734" endtime="20201112 09:44:48.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.752" endtime="20201112 09:44:48.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.372" endtime="20201112 09:44:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.366" endtime="20201112 09:44:48.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.773" level="INFO">${RESULT} = [{'time': 0.041467042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011773600000000023, 'source_diff': 0.00011773600000000023}, {'time': 0.041593347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:48.765" endtime="20201112 09:44:48.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.802" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:48.775" endtime="20201112 09:44:48.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.813" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.811" endtime="20201112 09:44:48.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.819" level="INFO">VALUE: [0.00011773600000000023, 0.00011694400000000077, 0.00011749999999999955, 0.0001181950000000015, 0.00011838899999999652, 0.00011831900000000561, 0.00011843100000000217, 0.00011695800000000034, 0.00011829100000000647, 0.00011836099999999738, 0.00011793100000000167, 0.00011831899999999868, 0.00011751400000000606, 0.00011831899999999868, 0.00011807000000000484, 0.00011676399999999837, 0.00011643100000000017, 0.0001183750000000039, 0.00011712500000000264, 0.00011688899999999502, 0.00011830599999999858, 0.00011797200000000091, 0.00011722299999999963, 0.00011718100000000092, 0.00011755599999999783, 0.00011722200000000016, 0.00011786100000000382, 0.00011837499999999695, 0.00011841600000000313, 0.00011837499999999695, 0.0001177499999999998, 0.0001174029999999951, 0.0001182500000000003, 0.0001176249999999962, 0.0001184170000000026, 0.00011822200000000116, 0.00011798600000000048, 0.00011741600000000213, 0.0001178750000000034, 0.00011727800000000538, 0.0001169170000000011, 0.00011748599999999998, 0.00011702799999999819, 0.00011763900000000271, 0.00011652799999999769, 0.00011791699999999516, 0.0001164300000000007, 0.00011827699999999997, 0.00011759699999999706, 0.00011818000000000245]</msg>
<status status="PASS" starttime="20201112 09:44:48.816" endtime="20201112 09:44:48.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.804" endtime="20201112 09:44:48.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.828" endtime="20201112 09:44:48.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.836" endtime="20201112 09:44:48.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.832" endtime="20201112 09:44:48.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.823" endtime="20201112 09:44:48.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.302" endtime="20201112 09:44:48.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.301" endtime="20201112 09:44:48.862"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.885" endtime="20201112 09:44:48.904"></status>
</kw>
<msg timestamp="20201112 09:44:48.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.881" endtime="20201112 09:44:48.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.908" endtime="20201112 09:44:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.914" endtime="20201112 09:44:48.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.874" endtime="20201112 09:44:48.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.868" endtime="20201112 09:44:48.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.937" endtime="20201112 09:44:49.271"></status>
</kw>
<msg timestamp="20201112 09:44:49.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.934" endtime="20201112 09:44:49.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.281" endtime="20201112 09:44:49.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.299" endtime="20201112 09:44:49.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.927" endtime="20201112 09:44:49.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.922" endtime="20201112 09:44:49.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.318" level="INFO">${RESULT} = [{'time': 0.040345208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011923600000000173, 'source_diff': 0.00011923600000000173}, {'time': 0.040474611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:49.309" endtime="20201112 09:44:49.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.348" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:49.320" endtime="20201112 09:44:49.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.359" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.357" endtime="20201112 09:44:49.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.364" level="INFO">VALUE: [0.00011923600000000173, 0.00011902800000000019, 0.00011854199999999926, 0.00011826399999999987, 0.00011898600000000148, 0.00011836099999999738, 0.00011933400000000566, 0.00011911099999999814, 0.00011804199999999876, 0.00011854099999999979, 0.00011823600000000073, 0.00011877799999999994, 0.00011748599999999998, 0.00011887499999999745, 0.00011862500000000414, 0.00011918099999999598, 0.00011816700000000235, 0.00011902800000000019, 0.00011873600000000123, 0.00011848600000000098, 0.000119082999999999, 0.00011888799999999755, 0.00011936099999999839, 0.00011744500000000074, 0.00011923600000000173, 0.0001177499999999998, 0.00011847200000000141, 0.00011823600000000073, 0.00011858400000000491, 0.00011833399999999772, 0.00011941600000000413, 0.00011862500000000414, 0.00011929200000000001, 0.00011804199999999876, 0.00011887499999999745, 0.00011922200000000216, 0.00011936099999999839, 0.00011897199999999497, 0.00011868100000000242, 0.0001185699999999984, 0.00011916699999999641, 0.00011781899999999818, 0.00011848600000000098, 0.0001188049999999996, 0.00011883299999999875, 0.00011794500000000124, 0.00011876400000000037, 0.00011816600000000288, 0.00011788900000000296, 0.00011831899999999868]</msg>
<status status="PASS" starttime="20201112 09:44:49.361" endtime="20201112 09:44:49.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.350" endtime="20201112 09:44:49.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.379" endtime="20201112 09:44:49.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.389" endtime="20201112 09:44:49.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.383" endtime="20201112 09:44:49.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.374" endtime="20201112 09:44:49.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.864" endtime="20201112 09:44:49.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.863" endtime="20201112 09:44:49.415"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.439" endtime="20201112 09:44:49.463"></status>
</kw>
<msg timestamp="20201112 09:44:49.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.435" endtime="20201112 09:44:49.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.466" endtime="20201112 09:44:49.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.472" endtime="20201112 09:44:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.428" endtime="20201112 09:44:49.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.422" endtime="20201112 09:44:49.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.496" endtime="20201112 09:44:49.858"></status>
</kw>
<msg timestamp="20201112 09:44:49.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041863306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041983667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.493" endtime="20201112 09:44:49.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041863306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041983667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.868" endtime="20201112 09:44:49.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.887" endtime="20201112 09:44:49.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.485" endtime="20201112 09:44:49.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.481" endtime="20201112 09:44:49.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.906" level="INFO">${RESULT} = [{'time': 0.041983667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012036099999999939, 'source_diff': 0.00012036099999999939}, {'time': 0.042113986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:49.897" endtime="20201112 09:44:49.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.936" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:49.909" endtime="20201112 09:44:49.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.948" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.946" endtime="20201112 09:44:49.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.953" level="INFO">VALUE: [0.00012036099999999939, 0.00011931899999999968, 0.00011974999999999486, 0.000118695000000002, 0.00011959699999999907, 0.00011938900000000446, 0.00011994399999999683, 0.00011980600000000008, 0.00011955500000000036, 0.00011938899999999752, 0.00011951400000000112, 0.00012016699999999741, 0.00011942999999999676, 0.0001192500000000013, 0.00011990300000000453, 0.00011970899999999562, 0.00011840300000000303, 0.00011881999999999865, 0.00011916600000000388, 0.00012026400000000187, 0.00012033399999999972, 0.00011951400000000112, 0.00011994399999999683, 0.00012029200000000101, 0.00011995800000000334, 0.00012004100000000129, 0.00012027700000000197, 0.00012020900000000306, 0.00012016699999999741, 0.00012033300000000025, 0.00011963900000000471, 0.00012009699999999957, 0.00012000000000000205, 0.00012000000000000205, 0.00011981999999999965, 0.00011927700000000097, 0.00011920899999999512, 0.00011952800000000069, 0.00011877799999999994, 0.00012005500000000086, 0.00012032000000000015, 0.00012041699999999766, 0.000120083, 0.00011917999999999651, 0.00011956899999999993, 0.00012005600000000033, 0.00011981999999999965, 0.00011865300000000328, 0.00011894500000000224, 0.00011990300000000453]</msg>
<status status="PASS" starttime="20201112 09:44:49.950" endtime="20201112 09:44:49.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.938" endtime="20201112 09:44:49.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.963" endtime="20201112 09:44:49.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.971" endtime="20201112 09:44:49.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.967" endtime="20201112 09:44:49.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.958" endtime="20201112 09:44:49.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.418" endtime="20201112 09:44:49.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.416" endtime="20201112 09:44:49.998"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.021" endtime="20201112 09:44:50.045"></status>
</kw>
<msg timestamp="20201112 09:44:50.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.018" endtime="20201112 09:44:50.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.049" endtime="20201112 09:44:50.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.055" endtime="20201112 09:44:50.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.011" endtime="20201112 09:44:50.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.005" endtime="20201112 09:44:50.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.079" endtime="20201112 09:44:50.437"></status>
</kw>
<msg timestamp="20201112 09:44:50.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041782736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.075" endtime="20201112 09:44:50.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041782736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.446" endtime="20201112 09:44:50.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.465" endtime="20201112 09:44:50.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.068" endtime="20201112 09:44:50.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.063" endtime="20201112 09:44:50.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.483" level="INFO">${RESULT} = [{'time': 0.041782736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012117999999999851, 'source_diff': 0.00012117999999999851}, {'time': 0.041910097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:50.475" endtime="20201112 09:44:50.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.513" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:50.485" endtime="20201112 09:44:50.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.524" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.521" endtime="20201112 09:44:50.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.529" level="INFO">VALUE: [0.00012117999999999851, 0.00012041599999999819, 0.0001214029999999991, 0.00012104200000000176, 0.00011972200000000266, 0.0001214029999999991, 0.00012133300000000125, 0.00012105500000000186, 0.00011961099999999864, 0.00012065299999999834, 0.00012017999999999751, 0.00012142999999999876, 0.00012038900000000546, 0.00012051400000000212, 0.0001214579999999979, 0.00012123600000000373, 0.0001197500000000018, 0.00012104100000000229, 0.00011991599999999769, 0.00012051400000000212, 0.00012032000000000015, 0.00012116600000000588, 0.00011954100000000079, 0.0001199300000000042, 0.00012138900000000646, 0.00012119499999999755, 0.00012052799999999475, 0.00012018100000000392, 0.00012070800000000409, 0.00012026399999999493, 0.0001198050000000006, 0.00012015300000000478, 0.00012131900000000168, 0.00012086099999999989, 0.00012061099999999964, 0.00012111100000000014, 0.00012134700000000082, 0.00012072200000000366, 0.00012049999999999561, 0.00012077800000000194, 0.0001212779999999955, 0.0001204029999999981, 0.00012101399999999568, 0.00012050000000000255, 0.00011972200000000266, 0.00012069400000000452, 0.00012015199999999837, 0.00012120799999999765, 0.00012138800000000005, 0.00011948600000000198]</msg>
<status status="PASS" starttime="20201112 09:44:50.526" endtime="20201112 09:44:50.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.514" endtime="20201112 09:44:50.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.538" endtime="20201112 09:44:50.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.546" endtime="20201112 09:44:50.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.542" endtime="20201112 09:44:50.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.534" endtime="20201112 09:44:50.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.000" endtime="20201112 09:44:50.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.999" endtime="20201112 09:44:50.572"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.595" endtime="20201112 09:44:50.615"></status>
</kw>
<msg timestamp="20201112 09:44:50.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.591" endtime="20201112 09:44:50.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.618" endtime="20201112 09:44:50.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.624" endtime="20201112 09:44:50.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.584" endtime="20201112 09:44:50.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.579" endtime="20201112 09:44:50.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.648" endtime="20201112 09:44:50.983"></status>
</kw>
<msg timestamp="20201112 09:44:50.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.644" endtime="20201112 09:44:50.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.992" endtime="20201112 09:44:51.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.011" endtime="20201112 09:44:51.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.637" endtime="20201112 09:44:51.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.632" endtime="20201112 09:44:51.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.031" level="INFO">${RESULT} = [{'time': 0.040265514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012166699999999891, 'source_diff': 0.00012166699999999891}, {'time': 0.040398847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:51.023" endtime="20201112 09:44:51.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.133" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:51.033" endtime="20201112 09:44:51.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.144" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.141" endtime="20201112 09:44:51.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.149" level="INFO">VALUE: [0.00012166699999999891, 0.00012234700000000182, 0.00012130499999999517, 0.0001216250000000002, 0.00012198599999999754, 0.00012237500000000096, 0.00012191599999999969, 0.00012067999999999801, 0.00012204200000000276, 0.000120695000000004, 0.00012147199999999747, 0.00012222199999999822, 0.00012206900000000243, 0.00012188900000000003, 0.00012215299999999985, 0.00012105499999999492, 0.00012213900000000028, 0.00012180600000000208, 0.00012159700000000107, 0.00012209700000000157, 0.00012188900000000003, 0.00012163899999999978, 0.00012183300000000175, 0.00012183300000000175, 0.00012170899999999762, 0.00012165299999999934, 0.00012216700000000635, 0.00012233300000000225, 0.00012070899999999662, 0.00012170799999999815, 0.00012205600000000233, 0.00012219499999999855, 0.00012133300000000125, 0.00012180600000000208, 0.00012168000000000595, 0.00012180600000000208, 0.00012154199999999532, 0.00012109700000000057, 0.00012141600000000613, 0.00012155600000000183, 0.00012073600000000323, 0.0001215830000000015, 0.00012144399999999833, 0.00012172199999999772, 0.00012202700000000372, 0.00012180600000000208, 0.00012163899999999978, 0.00012170799999999815, 0.00012193099999999873, 0.00012072200000000366]</msg>
<status status="PASS" starttime="20201112 09:44:51.146" endtime="20201112 09:44:51.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.135" endtime="20201112 09:44:51.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.158" endtime="20201112 09:44:51.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.166" endtime="20201112 09:44:51.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.162" endtime="20201112 09:44:51.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.154" endtime="20201112 09:44:51.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.574" endtime="20201112 09:44:51.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.573" endtime="20201112 09:44:51.192"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.216" endtime="20201112 09:44:51.236"></status>
</kw>
<msg timestamp="20201112 09:44:51.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.213" endtime="20201112 09:44:51.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.239" endtime="20201112 09:44:51.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.246" endtime="20201112 09:44:51.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.204" endtime="20201112 09:44:51.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.199" endtime="20201112 09:44:51.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.269" endtime="20201112 09:44:51.602"></status>
</kw>
<msg timestamp="20201112 09:44:51.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041353208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041476278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.265" endtime="20201112 09:44:51.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041353208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041476278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.611" endtime="20201112 09:44:51.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.629" endtime="20201112 09:44:51.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.258" endtime="20201112 09:44:51.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.254" endtime="20201112 09:44:51.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.646" level="INFO">${RESULT} = [{'time': 0.041476278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012306999999999596, 'source_diff': 0.00012306999999999596}, {'time': 0.041606625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:51.638" endtime="20201112 09:44:51.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.676" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:51.648" endtime="20201112 09:44:51.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.686" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.684" endtime="20201112 09:44:51.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.692" level="INFO">VALUE: [0.00012306999999999596, 0.00012248599999999804, 0.0001224720000000054, 0.00012269499999999905, 0.00012181899999999524, 0.00012229199999999607, 0.00012290200000000112, 0.0001230689999999965, 0.00012241699999999966, 0.0001231109999999952, 0.0001233329999999963, 0.00012165299999999934, 0.00012252799999999675, 0.00012331899999999674, 0.0001231800000000005, 0.00012247199999999847, 0.0001225700000000024, 0.00012291700000000017, 0.0001233329999999963, 0.0001226250000000012, 0.00012341699999999373, 0.00012336099999999545, 0.00012298599999999854, 0.000122695000000006, 0.00012287499999999452, 0.0001231250000000017, 0.00012251399999999718, 0.00012330499999999717, 0.0001227359999999983, 0.00012274999999999786, 0.00012316600000000094, 0.0001228329999999958, 0.00012293099999999973, 0.0001228050000000036, 0.00012268, 0.00012333400000000272, 0.00012272199999999872, 0.00012247199999999847, 0.00012318099999999998, 0.0001232359999999988, 0.00012281899999999624, 0.0001227359999999983, 0.00012195899999999787, 0.0001226380000000013, 0.00012254200000000326, 0.00012181900000000218, 0.00012269399999999958, 0.00012301399999999768, 0.00012254200000000326, 0.00012154099999999585]</msg>
<status status="PASS" starttime="20201112 09:44:51.689" endtime="20201112 09:44:51.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.677" endtime="20201112 09:44:51.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.701" endtime="20201112 09:44:51.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.709" endtime="20201112 09:44:51.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.705" endtime="20201112 09:44:51.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.697" endtime="20201112 09:44:51.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.194" endtime="20201112 09:44:51.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.193" endtime="20201112 09:44:51.735"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.758" endtime="20201112 09:44:51.779"></status>
</kw>
<msg timestamp="20201112 09:44:51.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.755" endtime="20201112 09:44:51.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.783" endtime="20201112 09:44:51.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.789" endtime="20201112 09:44:51.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.747" endtime="20201112 09:44:51.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.742" endtime="20201112 09:44:51.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.812" endtime="20201112 09:44:52.145"></status>
</kw>
<msg timestamp="20201112 09:44:52.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.809" endtime="20201112 09:44:52.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.155" endtime="20201112 09:44:52.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.173" endtime="20201112 09:44:52.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.802" endtime="20201112 09:44:52.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.797" endtime="20201112 09:44:52.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.190" level="INFO">${RESULT} = [{'time': 0.041858292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012351399999999818, 'source_diff': 0.00012351399999999818}, {'time': 0.041989694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:52.181" endtime="20201112 09:44:52.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.220" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:52.192" endtime="20201112 09:44:52.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.231" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.228" endtime="20201112 09:44:52.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.236" level="INFO">VALUE: [0.00012351399999999818, 0.0001236380000000023, 0.00012388900000000203, 0.00012365300000000135, 0.00012297299999999844, 0.0001236529999999944, 0.00012412499999999577, 0.00012420800000000065, 0.00012387499999999552, 0.0001244450000000008, 0.00012259700000000207, 0.00012354199999999732, 0.00012363900000000178, 0.0001225830000000025, 0.00012424999999999936, 0.00012420800000000065, 0.00012405500000000486, 0.00012351399999999818, 0.00012388900000000203, 0.0001226250000000012, 0.0001244450000000008, 0.00012355600000000383, 0.00012347299999999894, 0.00012383300000000375, 0.00012347199999999947, 0.00012272199999999872, 0.00012311100000000214, 0.00012409699999999663, 0.00012443100000000124, 0.0001243480000000033, 0.0001242229999999997, 0.0001234999999999986, 0.00012370800000000015, 0.00012447299999999994, 0.00012447200000000047, 0.00012412499999999577, 0.00012441699999999473, 0.00012409700000000357, 0.00012395899999999987, 0.0001229449999999993, 0.00012444400000000133, 0.00012404199999999782, 0.00012354099999999785, 0.00012382000000000365, 0.00012358299999999656, 0.0001239160000000017, 0.00012413900000000228, 0.00012404199999999782, 0.00012338899999999459, 0.00012381900000000418]</msg>
<status status="PASS" starttime="20201112 09:44:52.233" endtime="20201112 09:44:52.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.222" endtime="20201112 09:44:52.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.245" endtime="20201112 09:44:52.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.253" endtime="20201112 09:44:52.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.249" endtime="20201112 09:44:52.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.241" endtime="20201112 09:44:52.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.737" endtime="20201112 09:44:52.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.736" endtime="20201112 09:44:52.279"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.302" endtime="20201112 09:44:52.322"></status>
</kw>
<msg timestamp="20201112 09:44:52.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.298" endtime="20201112 09:44:52.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.325" endtime="20201112 09:44:52.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.331" endtime="20201112 09:44:52.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.291" endtime="20201112 09:44:52.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.285" endtime="20201112 09:44:52.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.356" endtime="20201112 09:44:52.701"></status>
</kw>
<msg timestamp="20201112 09:44:52.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039942347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.353" endtime="20201112 09:44:52.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039942347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.710" endtime="20201112 09:44:52.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.729" endtime="20201112 09:44:52.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.344" endtime="20201112 09:44:52.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.339" endtime="20201112 09:44:52.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.746" level="INFO">${RESULT} = [{'time': 0.040067597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012525000000000036, 'source_diff': 0.00012525000000000036}, {'time': 0.040198, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:52.737" endtime="20201112 09:44:52.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:52.748" endtime="20201112 09:44:52.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.786" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.784" endtime="20201112 09:44:52.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.791" level="INFO">VALUE: [0.00012525000000000036, 0.00012504199999999882, 0.0001246529999999954, 0.00012508400000000447, 0.0001236380000000023, 0.00012467999999999507, 0.00012487499999999652, 0.00012465300000000235, 0.00012347199999999947, 0.00012511100000000414, 0.00012380599999999714, 0.00012401399999999868, 0.00012447200000000047, 0.00012492999999999532, 0.00012467999999999507, 0.00012459700000000407, 0.00012529199999999907, 0.0001246250000000032, 0.00012537499999999702, 0.00012472200000000072, 0.0001248199999999977, 0.00012479199999999857, 0.00012448600000000004, 0.0001247360000000003, 0.00012544400000000233, 0.00012497200000000097, 0.00012463899999999584, 0.00012463899999999584, 0.00012498600000000054, 0.00012413899999999534, 0.00012538900000000353, 0.00012451399999999918, 0.00012522199999999428, 0.00012479199999999857, 0.00012515300000000285, 0.00012455499999999842, 0.00012466600000000244, 0.0001249160000000027, 0.00012506999999999796, 0.00012484700000000432, 0.00012351399999999818, 0.00012466600000000244, 0.00012490299999999566, 0.00012495900000000087, 0.00012504199999999882, 0.00012461100000000364, 0.00012377699999999853, 0.00012412499999999577, 0.00012447299999999994, 0.00012463900000000278]</msg>
<status status="PASS" starttime="20201112 09:44:52.788" endtime="20201112 09:44:52.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.777" endtime="20201112 09:44:52.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.801" endtime="20201112 09:44:52.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.809" endtime="20201112 09:44:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.805" endtime="20201112 09:44:52.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.796" endtime="20201112 09:44:52.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.281" endtime="20201112 09:44:52.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.280" endtime="20201112 09:44:52.835"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.858" endtime="20201112 09:44:52.880"></status>
</kw>
<msg timestamp="20201112 09:44:52.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.854" endtime="20201112 09:44:52.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.883" endtime="20201112 09:44:52.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.889" endtime="20201112 09:44:52.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.847" endtime="20201112 09:44:52.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.841" endtime="20201112 09:44:52.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.912" endtime="20201112 09:44:53.250"></status>
</kw>
<msg timestamp="20201112 09:44:53.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040553736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.909" endtime="20201112 09:44:53.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040553736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.260" endtime="20201112 09:44:53.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.278" endtime="20201112 09:44:53.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.902" endtime="20201112 09:44:53.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.897" endtime="20201112 09:44:53.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.295" level="INFO">${RESULT} = [{'time': 0.040553736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012631899999999974, 'source_diff': 0.00012631899999999974}, {'time': 0.040686139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:53.286" endtime="20201112 09:44:53.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.326" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:53.297" endtime="20201112 09:44:53.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.337" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.335" endtime="20201112 09:44:53.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.342" level="INFO">VALUE: [0.00012631899999999974, 0.00012633300000000625, 0.00012642999999999682, 0.00012604199999999982, 0.00012562499999999727, 0.000125778, 0.00012637499999999802, 0.0001262360000000018, 0.00012581899999999924, 0.0001259729999999945, 0.00012501399999999968, 0.00012562499999999727, 0.00012625000000000136, 0.00012509699999999763, 0.00012608399999999853, 0.0001254580000000019, 0.00012572200000000172, 0.00012470900000000062, 0.00012641700000000367, 0.0001254450000000018, 0.00012584699999999838, 0.0001256109999999977, 0.0001260689999999995, 0.00012504200000000576, 0.00012570900000000162, 0.00012558299999999856, 0.00012531899999999874, 0.00012593000000000326, 0.00012647199999999553, 0.00012580599999999914, 0.00012540199999999668, 0.00012526399999999993, 0.00012591700000000317, 0.00012630599999999964, 0.00012505499999999892, 0.00012626400000000093, 0.0001254580000000019, 0.00012554199999999932, 0.00012506999999999796, 0.00012501399999999968, 0.0001255130000000007, 0.00012630500000000017, 0.00012616699999999648, 0.00012518100000000199, 0.00012647199999999553, 0.00012586100000000489, 0.00012575000000000086, 0.00012619400000000308, 0.0001246250000000032, 0.00012551400000000018]</msg>
<status status="PASS" starttime="20201112 09:44:53.339" endtime="20201112 09:44:53.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.328" endtime="20201112 09:44:53.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.352" endtime="20201112 09:44:53.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.360" endtime="20201112 09:44:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.356" endtime="20201112 09:44:53.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.347" endtime="20201112 09:44:53.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.837" endtime="20201112 09:44:53.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.836" endtime="20201112 09:44:53.386"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.408" endtime="20201112 09:44:53.429"></status>
</kw>
<msg timestamp="20201112 09:44:53.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.405" endtime="20201112 09:44:53.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.432" endtime="20201112 09:44:53.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.438" endtime="20201112 09:44:53.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.398" endtime="20201112 09:44:53.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.392" endtime="20201112 09:44:53.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.463" endtime="20201112 09:44:53.798"></status>
</kw>
<msg timestamp="20201112 09:44:53.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.459" endtime="20201112 09:44:53.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.807" endtime="20201112 09:44:53.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.825" endtime="20201112 09:44:53.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.452" endtime="20201112 09:44:53.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.447" endtime="20201112 09:44:53.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.844" level="INFO">${RESULT} = [{'time': 0.040293833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001267360000000023, 'source_diff': 0.0001267360000000023}, {'time': 0.040429153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:53.835" endtime="20201112 09:44:53.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.873" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:53.846" endtime="20201112 09:44:53.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.884" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.881" endtime="20201112 09:44:53.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.889" level="INFO">VALUE: [0.0001267360000000023, 0.00012738900000000553, 0.0001272780000000015, 0.00012686099999999895, 0.00012701400000000168, 0.0001257920000000065, 0.0001274439999999974, 0.00012720899999999619, 0.0001267079999999962, 0.00012551400000000018, 0.00012729199999999413, 0.00012673599999999535, 0.0001269859999999956, 0.00012637499999999802, 0.00012705500000000092, 0.0001273200000000002, 0.00012668100000000349, 0.00012583300000000575, 0.000126569, 0.00012738900000000553, 0.0001269580000000034, 0.00012666700000000392, 0.0001270690000000005, 0.0001266109999999987, 0.00012662499999999827, 0.00012675000000000186, 0.00012644400000000333, 0.00012741699999999773, 0.00012662499999999827, 0.00012679200000000057, 0.00012702800000000125, 0.00012736099999999945, 0.00012740199999999868, 0.0001269729999999955, 0.00012715199999999843, 0.00012690299999999766, 0.0001264580000000029, 0.00012705500000000092, 0.0001270690000000005, 0.000126569, 0.00012604199999999982, 0.00012723599999999585, 0.00012708300000000006, 0.00012686100000000589, 0.0001273200000000002, 0.00012579199999999957, 0.00012695799999999646, 0.00012737499999999902, 0.0001268199999999997, 0.0001269030000000046]</msg>
<status status="PASS" starttime="20201112 09:44:53.886" endtime="20201112 09:44:53.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.875" endtime="20201112 09:44:53.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.898" endtime="20201112 09:44:53.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.906" endtime="20201112 09:44:53.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.902" endtime="20201112 09:44:53.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.894" endtime="20201112 09:44:53.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.388" endtime="20201112 09:44:53.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.387" endtime="20201112 09:44:53.932"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.955" endtime="20201112 09:44:53.975"></status>
</kw>
<msg timestamp="20201112 09:44:53.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.951" endtime="20201112 09:44:53.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.978" endtime="20201112 09:44:53.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.984" endtime="20201112 09:44:53.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.944" endtime="20201112 09:44:53.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.939" endtime="20201112 09:44:53.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.008" endtime="20201112 09:44:54.343"></status>
</kw>
<msg timestamp="20201112 09:44:54.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.005" endtime="20201112 09:44:54.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.352" endtime="20201112 09:44:54.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.370" endtime="20201112 09:44:54.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.997" endtime="20201112 09:44:54.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.993" endtime="20201112 09:44:54.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.389" level="INFO">${RESULT} = [{'time': 0.040114917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001282780000000025, 'source_diff': 0.0001282780000000025}, {'time': 0.040248278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:54.380" endtime="20201112 09:44:54.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.418" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:54.391" endtime="20201112 09:44:54.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.429" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.427" endtime="20201112 09:44:54.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.434" level="INFO">VALUE: [0.0001282780000000025, 0.00012758400000000003, 0.00012829200000000207, 0.00012791699999999823, 0.00012790299999999866, 0.00012769499999999712, 0.00012659699999999913, 0.00012786099999999995, 0.00012712499999999877, 0.0001276109999999997, 0.0001283189999999948, 0.00012752700000000228, 0.00012822199999999728, 0.00012831900000000174, 0.00012836100000000045, 0.00012763899999999884, 0.00012662499999999827, 0.00012784799999999985, 0.0001279729999999965, 0.0001277360000000033, 0.00012787499999999952, 0.0001283330000000013, 0.00012766699999999798, 0.00012786099999999995, 0.00012674999999999492, 0.0001283330000000013, 0.00012672199999999578, 0.00012819399999999814, 0.00012793100000000474, 0.00012790299999999866, 0.000127778000000002, 0.00012697199999999603, 0.00012822200000000422, 0.00012804199999999488, 0.00012820800000000465, 0.00012809700000000063, 0.00012769499999999712, 0.00012791699999999823, 0.0001282360000000038, 0.00012673699999999483, 0.00012830500000000217, 0.0001281529999999989, 0.00012809700000000063, 0.0001276109999999997, 0.0001275000000000026, 0.00012763899999999884, 0.0001275560000000009, 0.00012826400000000293, 0.00012813899999999934, 0.00012752700000000228]</msg>
<status status="PASS" starttime="20201112 09:44:54.431" endtime="20201112 09:44:54.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.420" endtime="20201112 09:44:54.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.451" endtime="20201112 09:44:54.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.459" endtime="20201112 09:44:54.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.455" endtime="20201112 09:44:54.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.446" endtime="20201112 09:44:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.934" endtime="20201112 09:44:54.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.933" endtime="20201112 09:44:54.486"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.511" endtime="20201112 09:44:54.535"></status>
</kw>
<msg timestamp="20201112 09:44:54.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.507" endtime="20201112 09:44:54.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.539" endtime="20201112 09:44:54.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.545" endtime="20201112 09:44:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.500" endtime="20201112 09:44:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.493" endtime="20201112 09:44:54.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.569" endtime="20201112 09:44:54.905"></status>
</kw>
<msg timestamp="20201112 09:44:54.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043198278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043327, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:54.565" endtime="20201112 09:44:54.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043198278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043327, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:54.914" endtime="20201112 09:44:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.933" endtime="20201112 09:44:54.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.558" endtime="20201112 09:44:54.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.553" endtime="20201112 09:44:54.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.951" level="INFO">${RESULT} = [{'time': 0.043327, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012872199999999778, 'source_diff': 0.00012872199999999778}, {'time': 0.043466514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:54.943" endtime="20201112 09:44:54.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:54.953" endtime="20201112 09:44:54.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.991" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.989" endtime="20201112 09:44:54.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.997" level="INFO">VALUE: [0.00012872199999999778, 0.00012873599999999735, 0.00012937500000000102, 0.00012862500000000027, 0.00012887500000000052, 0.0001285279999999958, 0.0001283880000000001, 0.00012862500000000027, 0.00012879200000000257, 0.00012887500000000052, 0.00012879200000000257, 0.00012863899999999984, 0.00012879199999999563, 0.00012881900000000224, 0.0001293200000000022, 0.0001291110000000012, 0.00012941699999999973, 0.0001291529999999999, 0.00012836100000000045, 0.00012863899999999984, 0.0001291529999999999, 0.0001288330000000018, 0.0001284859999999971, 0.00012855500000000242, 0.00012863899999999984, 0.00012913900000000034, 0.0001291389999999934, 0.00012848600000000404, 0.00012902699999999684, 0.00012869399999999864, 0.0001289859999999976, 0.00012886100000000095, 0.00012863899999999984, 0.00012908400000000153, 0.00012901399999999674, 0.00012886100000000095, 0.00012847199999999753, 0.00012913900000000034, 0.00012872299999999726, 0.0001286110000000007, 0.00012876400000000343, 0.0001290980000000011, 0.00012944499999999887, 0.00012934699999999494, 0.00012899999999999717, 0.00012880499999999573, 0.00012811199999999967, 0.00012872200000000472, 0.00012844400000000533, 0.00012845900000000438]</msg>
<status status="PASS" starttime="20201112 09:44:54.994" endtime="20201112 09:44:54.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.982" endtime="20201112 09:44:55.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.006" endtime="20201112 09:44:55.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.015" endtime="20201112 09:44:55.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.010" endtime="20201112 09:44:55.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.002" endtime="20201112 09:44:55.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.489" endtime="20201112 09:44:55.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.487" endtime="20201112 09:44:55.040"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.063" endtime="20201112 09:44:55.083"></status>
</kw>
<msg timestamp="20201112 09:44:55.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.060" endtime="20201112 09:44:55.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.086" endtime="20201112 09:44:55.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.093" endtime="20201112 09:44:55.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.052" endtime="20201112 09:44:55.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.047" endtime="20201112 09:44:55.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.116" endtime="20201112 09:44:55.450"></status>
</kw>
<msg timestamp="20201112 09:44:55.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040057972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040188222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.113" endtime="20201112 09:44:55.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040057972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040188222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.460" endtime="20201112 09:44:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.478" endtime="20201112 09:44:55.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.105" endtime="20201112 09:44:55.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.101" endtime="20201112 09:44:55.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.496" level="INFO">${RESULT} = [{'time': 0.040188222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013025000000000536, 'source_diff': 0.00013025000000000536}, {'time': 0.040328611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:55.488" endtime="20201112 09:44:55.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:55.529" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:55.499" endtime="20201112 09:44:55.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.540" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:55.538" endtime="20201112 09:44:55.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.545" level="INFO">VALUE: [0.00013025000000000536, 0.00012949999999999767, 0.0001301110000000022, 0.00013024999999999842, 0.0001297079999999992, 0.00013030499999999723, 0.00012981999999999577, 0.0001301110000000022, 0.0001295560000000029, 0.00012983299999999587, 0.0001298890000000011, 0.00012945899999999844, 0.0001294309999999993, 0.00012941699999999973, 0.0001295000000000046, 0.00012958300000000256, 0.00012959700000000213, 0.00012920800000000565, 0.00012986100000000195, 0.0001300969999999957, 0.0001300560000000034, 0.0001303330000000033, 0.00013041600000000125, 0.0001298330000000028, 0.00012951400000000418, 0.00012980499999999673, 0.0001297639999999975, 0.00013001399999999774, 0.00012958400000000203, 0.00012870899999999769, 0.00013025000000000536, 0.00013040300000000116, 0.0001290130000000042, 0.0001298189999999963, 0.00012972199999999878, 0.00012973599999999835, 0.00013022299999999876, 0.0001295279999999968, 0.00013045799999999996, 0.00012951399999999724, 0.00012970800000000615, 0.00013023599999999885, 0.00012884699999999444, 0.00013041700000000073, 0.0001303890000000016, 0.00012977799999999706, 0.0001297079999999992, 0.00012863800000000036, 0.00012949999999999767, 0.00013027799999999756]</msg>
<status status="PASS" starttime="20201112 09:44:55.542" endtime="20201112 09:44:55.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.531" endtime="20201112 09:44:55.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.555" endtime="20201112 09:44:55.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.563" endtime="20201112 09:44:55.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.559" endtime="20201112 09:44:55.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.550" endtime="20201112 09:44:55.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.042" endtime="20201112 09:44:55.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.041" endtime="20201112 09:44:55.589"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.611" endtime="20201112 09:44:55.632"></status>
</kw>
<msg timestamp="20201112 09:44:55.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.608" endtime="20201112 09:44:55.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.635" endtime="20201112 09:44:55.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.641" endtime="20201112 09:44:55.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.601" endtime="20201112 09:44:55.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.595" endtime="20201112 09:44:55.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.664" endtime="20201112 09:44:55.999"></status>
</kw>
<msg timestamp="20201112 09:44:56.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.661" endtime="20201112 09:44:56.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040108792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040240167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.009" endtime="20201112 09:44:56.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.028" endtime="20201112 09:44:56.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.654" endtime="20201112 09:44:56.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.649" endtime="20201112 09:44:56.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.045" level="INFO">${RESULT} = [{'time': 0.040240167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013137500000000302, 'source_diff': 0.00013137500000000302}, {'time': 0.040378583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:56.036" endtime="20201112 09:44:56.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.075" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:56.047" endtime="20201112 09:44:56.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.086" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.084" endtime="20201112 09:44:56.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.091" level="INFO">VALUE: [0.00013137500000000302, 0.00013126400000000593, 0.00012944499999999887, 0.00013106899999999755, 0.00013099999999999917, 0.00013119400000000114, 0.00013063900000000184, 0.00013133299999999737, 0.00013111200000000267, 0.00013130499999999823, 0.00013097200000000003, 0.00013130600000000464, 0.00013140300000000216, 0.00013055599999999695, 0.00013058400000000303, 0.0001297639999999975, 0.0001310980000000031, 0.00013140300000000216, 0.00013055500000000442, 0.00013087499999999558, 0.00013141700000000173, 0.00013137500000000302, 0.0001309859999999996, 0.00013118100000000105, 0.00013087499999999558, 0.000129569000000003, 0.00013045799999999996, 0.00013129099999999866, 0.00013097200000000003, 0.00013074999999999892, 0.00013095800000000046, 0.00013084700000000338, 0.00013069400000000064, 0.00013112500000000277, 0.00013091700000000123, 0.00013068000000000107, 0.00013063900000000184, 0.00013079200000000457, 0.00013084700000000338, 0.0001304859999999991, 0.0001307089999999997, 0.00013054200000000432, 0.00013068100000000055, 0.0001313890000000026, 0.00013137500000000302, 0.0001310279999999983, 0.00013045899999999944, 0.0001314440000000014, 0.000131263999999999, 0.0001311110000000032]</msg>
<status status="PASS" starttime="20201112 09:44:56.088" endtime="20201112 09:44:56.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.077" endtime="20201112 09:44:56.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.101" endtime="20201112 09:44:56.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.109" endtime="20201112 09:44:56.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.105" endtime="20201112 09:44:56.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.096" endtime="20201112 09:44:56.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.591" endtime="20201112 09:44:56.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.590" endtime="20201112 09:44:56.135"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.157" endtime="20201112 09:44:56.178"></status>
</kw>
<msg timestamp="20201112 09:44:56.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.154" endtime="20201112 09:44:56.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.181" endtime="20201112 09:44:56.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.187" endtime="20201112 09:44:56.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.147" endtime="20201112 09:44:56.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.141" endtime="20201112 09:44:56.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.210" endtime="20201112 09:44:56.543"></status>
</kw>
<msg timestamp="20201112 09:44:56.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.207" endtime="20201112 09:44:56.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040191069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.553" endtime="20201112 09:44:56.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.571" endtime="20201112 09:44:56.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.200" endtime="20201112 09:44:56.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.195" endtime="20201112 09:44:56.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.589" level="INFO">${RESULT} = [{'time': 0.040191069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013151299999999977, 'source_diff': 0.00013151299999999977}, {'time': 0.040331444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:56.580" endtime="20201112 09:44:56.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.619" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:56.591" endtime="20201112 09:44:56.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.630" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.628" endtime="20201112 09:44:56.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.635" level="INFO">VALUE: [0.00013151299999999977, 0.00013183299999999787, 0.0001320409999999994, 0.00013147200000000053, 0.00013111099999999626, 0.0001321110000000042, 0.00013147200000000053, 0.0001322080000000017, 0.00013222200000000128, 0.00013187500000000352, 0.000132264, 0.00013236100000000445, 0.0001314860000000001, 0.00013174999999999992, 0.0001315279999999988, 0.00013154199999999838, 0.0001321939999999952, 0.0001321530000000029, 0.000132264, 0.0001314860000000001, 0.00013149999999999967, 0.00013172199999999384, 0.00013206999999999802, 0.00013154199999999838, 0.0001320560000000054, 0.0001316809999999946, 0.0001318890000000031, 0.00013179099999999916, 0.0001323609999999975, 0.00013170799999999427, 0.00013184800000000385, 0.00013201399999999974, 0.00013226300000000052, 0.0001323189999999988, 0.00013190200000000318, 0.0001320839999999976, 0.00013229199999999913, 0.00013069400000000064, 0.00013179199999999863, 0.00013154200000000532, 0.0001315839999999971, 0.00013229099999999966, 0.00013209799999999716, 0.0001319440000000019, 0.00013158300000000456, 0.00013173600000000035, 0.0001315279999999988, 0.00013154200000000532, 0.0001319169999999953, 0.0001319860000000006]</msg>
<status status="PASS" starttime="20201112 09:44:56.633" endtime="20201112 09:44:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.621" endtime="20201112 09:44:56.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.645" endtime="20201112 09:44:56.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.653" endtime="20201112 09:44:56.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.649" endtime="20201112 09:44:56.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.641" endtime="20201112 09:44:56.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.137" endtime="20201112 09:44:56.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.136" endtime="20201112 09:44:56.679"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.701" endtime="20201112 09:44:56.722"></status>
</kw>
<msg timestamp="20201112 09:44:56.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.698" endtime="20201112 09:44:56.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.725" endtime="20201112 09:44:56.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.731" endtime="20201112 09:44:56.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.691" endtime="20201112 09:44:56.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.685" endtime="20201112 09:44:56.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.754" endtime="20201112 09:44:57.089"></status>
</kw>
<msg timestamp="20201112 09:44:57.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040154708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.751" endtime="20201112 09:44:57.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040154708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.098" endtime="20201112 09:44:57.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.117" endtime="20201112 09:44:57.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.744" endtime="20201112 09:44:57.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.739" endtime="20201112 09:44:57.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.134" level="INFO">${RESULT} = [{'time': 0.040154708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001334719999999956, 'source_diff': 0.0001334719999999956}, {'time': 0.040294069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:57.125" endtime="20201112 09:44:57.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.165" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:57.136" endtime="20201112 09:44:57.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.175" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.173" endtime="20201112 09:44:57.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.181" level="INFO">VALUE: [0.0001334719999999956, 0.00013337500000000502, 0.0001329860000000016, 0.0001331110000000052, 0.00013318000000000357, 0.00013262499999999733, 0.00013268100000000255, 0.00013265299999999647, 0.00013287500000000452, 0.00013268100000000255, 0.00013275000000000092, 0.0001319860000000006, 0.00013255499999999948, 0.0001329860000000016, 0.00013297200000000203, 0.00013208300000000506, 0.000133264000000001, 0.00013340300000000416, 0.0001323059999999987, 0.00013318100000000305, 0.00013277800000000006, 0.00013343099999999636, 0.00013266700000000298, 0.00013251400000000024, 0.00013179099999999916, 0.00013341700000000373, 0.00013311199999999773, 0.00013297200000000203, 0.00013334699999999894, 0.00013319400000000314, 0.00013291700000000323, 0.00013344399999999645, 0.00013305499999999998, 0.0001326530000000034, 0.00013342999999999688, 0.00013342999999999688, 0.00013240199999999674, 0.00013265200000000393, 0.0001333189999999998, 0.00013147200000000053, 0.0001327640000000005, 0.00013283400000000528, 0.0001327770000000006, 0.00013286100000000495, 0.0001321110000000042, 0.00013244499999999493, 0.00013256999999999852, 0.00013302700000000084, 0.0001333189999999998, 0.0001326660000000035]</msg>
<status status="PASS" starttime="20201112 09:44:57.178" endtime="20201112 09:44:57.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.166" endtime="20201112 09:44:57.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.190" endtime="20201112 09:44:57.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.198" endtime="20201112 09:44:57.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.194" endtime="20201112 09:44:57.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.186" endtime="20201112 09:44:57.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.681" endtime="20201112 09:44:57.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.680" endtime="20201112 09:44:57.224"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.246" endtime="20201112 09:44:57.267"></status>
</kw>
<msg timestamp="20201112 09:44:57.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.243" endtime="20201112 09:44:57.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.270" endtime="20201112 09:44:57.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.277" endtime="20201112 09:44:57.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.236" endtime="20201112 09:44:57.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.230" endtime="20201112 09:44:57.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.300" endtime="20201112 09:44:57.634"></status>
</kw>
<msg timestamp="20201112 09:44:57.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040124597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.296" endtime="20201112 09:44:57.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040124597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.643" endtime="20201112 09:44:57.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.662" endtime="20201112 09:44:57.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.289" endtime="20201112 09:44:57.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.285" endtime="20201112 09:44:57.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.679" level="INFO">${RESULT} = [{'time': 0.040124597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013437499999999908, 'source_diff': 0.00013437499999999908}, {'time': 0.040265847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:57.670" endtime="20201112 09:44:57.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:57.681" endtime="20201112 09:44:57.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.722" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.720" endtime="20201112 09:44:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.727" level="INFO">VALUE: [0.00013437499999999908, 0.00013369400000000364, 0.0001337640000000015, 0.0001335280000000008, 0.00013272199999999484, 0.00013338899999999765, 0.00013366599999999756, 0.00013438899999999865, 0.00013400000000000217, 0.00013342999999999688, 0.0001342090000000032, 0.00013443000000000482, 0.00013425000000000242, 0.0001341389999999984, 0.00013347200000000253, 0.00013423599999999591, 0.00013348599999999516, 0.00013354200000000038, 0.00013400000000000217, 0.00013361099999999876, 0.0001335969999999992, 0.00013351400000000124, 0.00013372200000000278, 0.00013387499999999858, 0.00013394399999999695, 0.00013411099999999926, 0.00013387499999999858, 0.00013434699999999994, 0.00013425000000000242, 0.000134264000000002, 0.0001344169999999978, 0.00013373600000000235, 0.0001343609999999995, 0.0001339860000000026, 0.00013373599999999541, 0.00013342999999999688, 0.00013395799999999652, 0.00013401400000000174, 0.00013416599999999806, 0.00013361099999999876, 0.0001341389999999984, 0.00013422300000000276, 0.0001330969999999987, 0.00013377800000000106, 0.00013415299999999797, 0.00013438899999999865, 0.00013406900000000055, 0.00013287499999999758, 0.00013354200000000038, 0.00013383399999999934]</msg>
<status status="PASS" starttime="20201112 09:44:57.724" endtime="20201112 09:44:57.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.713" endtime="20201112 09:44:57.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.737" endtime="20201112 09:44:57.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.745" endtime="20201112 09:44:57.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.741" endtime="20201112 09:44:57.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.732" endtime="20201112 09:44:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.226" endtime="20201112 09:44:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.225" endtime="20201112 09:44:57.771"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.793" endtime="20201112 09:44:57.814"></status>
</kw>
<msg timestamp="20201112 09:44:57.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.790" endtime="20201112 09:44:57.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.817" endtime="20201112 09:44:57.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.823" endtime="20201112 09:44:57.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.783" endtime="20201112 09:44:57.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.777" endtime="20201112 09:44:57.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.846" endtime="20201112 09:44:58.180"></status>
</kw>
<msg timestamp="20201112 09:44:58.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.843" endtime="20201112 09:44:58.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.189" endtime="20201112 09:44:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.208" endtime="20201112 09:44:58.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.836" endtime="20201112 09:44:58.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.831" endtime="20201112 09:44:58.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.225" level="INFO">${RESULT} = [{'time': 0.040140444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013466599999999856, 'source_diff': 0.00013466599999999856}, {'time': 0.040282792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:58.216" endtime="20201112 09:44:58.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.255" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:58.227" endtime="20201112 09:44:58.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.267" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.263" endtime="20201112 09:44:58.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.272" level="INFO">VALUE: [0.00013466599999999856, 0.00013532000000000127, 0.0001338060000000002, 0.0001350840000000006, 0.00013433399999999984, 0.0001346389999999989, 0.00013534700000000094, 0.00013540299999999922, 0.00013455500000000148, 0.00013490299999999872, 0.0001354589999999975, 0.00013454200000000138, 0.00013507000000000102, 0.0001353339999999939, 0.00013482000000000077, 0.00013523600000000385, 0.00013458300000000062, 0.0001345410000000019, 0.0001345280000000018, 0.00013479099999999522, 0.00013462499999999933, 0.00013524999999999648, 0.00013461099999999976, 0.00013462499999999933, 0.00013491599999999881, 0.00013466699999999804, 0.00013502799999999537, 0.00013524999999999648, 0.00013505599999999451, 0.00013493099999999786, 0.0001344860000000031, 0.0001351519999999995, 0.00013501400000000274, 0.0001347080000000042, 0.00013488899999999915, 0.00013477800000000206, 0.00013540199999999974, 0.00013504200000000188, 0.00013525000000000342, 0.00013483400000000034, 0.0001348049999999948, 0.00013483400000000034, 0.0001350840000000006, 0.000134861, 0.00013458300000000062, 0.0001353190000000018, 0.00013487499999999958, 0.00013487499999999958, 0.00013520899999999725, 0.00013491700000000523]</msg>
<status status="PASS" starttime="20201112 09:44:58.269" endtime="20201112 09:44:58.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.257" endtime="20201112 09:44:58.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.282" endtime="20201112 09:44:58.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.290" endtime="20201112 09:44:58.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.285" endtime="20201112 09:44:58.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.277" endtime="20201112 09:44:58.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.773" endtime="20201112 09:44:58.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.772" endtime="20201112 09:44:58.316"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.338" endtime="20201112 09:44:58.359"></status>
</kw>
<msg timestamp="20201112 09:44:58.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.335" endtime="20201112 09:44:58.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.362" endtime="20201112 09:44:58.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.368" endtime="20201112 09:44:58.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.328" endtime="20201112 09:44:58.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.322" endtime="20201112 09:44:58.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.392" endtime="20201112 09:44:58.726"></status>
</kw>
<msg timestamp="20201112 09:44:58.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.388" endtime="20201112 09:44:58.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.735" endtime="20201112 09:44:58.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.754" endtime="20201112 09:44:58.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.381" endtime="20201112 09:44:58.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.376" endtime="20201112 09:44:58.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.771" level="INFO">${RESULT} = [{'time': 0.040255139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001363610000000015, 'source_diff': 0.0001363610000000015}, {'time': 0.040400542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:58.762" endtime="20201112 09:44:58.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:58.773" endtime="20201112 09:44:58.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.812" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.809" endtime="20201112 09:44:58.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.817" level="INFO">VALUE: [0.0001363610000000015, 0.00013566699999999904, 0.00013561100000000076, 0.0001356939999999987, 0.00013591599999999981, 0.00013620799999999877, 0.00013583300000000187, 0.0001355139999999963, 0.00013643099999999936, 0.00013557000000000152, 0.00013648599999999816, 0.0001356939999999987, 0.0001359169999999993, 0.00013570799999999827, 0.00013626399999999705, 0.0001360280000000033, 0.00013549999999999673, 0.00013640300000000022, 0.0001354589999999975, 0.00013543099999999836, 0.00013569500000000512, 0.00013609699999999475, 0.00013529200000000213, 0.00013642999999999988, 0.00013632000000000227, 0.00013573599999999741, 0.00013592999999999938, 0.0001356389999999999, 0.00013590299999999972, 0.00013604200000000288, 0.0001359169999999993, 0.0001356389999999999, 0.00013541599999999931, 0.00013640200000000074, 0.00013579100000000316, 0.00013561100000000076, 0.00013565299999999947, 0.00013613800000000092, 0.00013617999999999963, 0.00013577799999999612, 0.00013543099999999836, 0.00013592999999999938, 0.00013567999999999913, 0.00013608299999999518, 0.00013583300000000187, 0.00013591700000000623, 0.00013552799999999587, 0.00013602799999999637, 0.00013572200000000478, 0.00013577800000000306]</msg>
<status status="PASS" starttime="20201112 09:44:58.814" endtime="20201112 09:44:58.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.803" endtime="20201112 09:44:58.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.828" endtime="20201112 09:44:58.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.836" endtime="20201112 09:44:58.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.832" endtime="20201112 09:44:58.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.823" endtime="20201112 09:44:58.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.318" endtime="20201112 09:44:58.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.316" endtime="20201112 09:44:58.862"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.884" endtime="20201112 09:44:58.905"></status>
</kw>
<msg timestamp="20201112 09:44:58.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.881" endtime="20201112 09:44:58.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.908" endtime="20201112 09:44:58.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.914" endtime="20201112 09:44:58.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.874" endtime="20201112 09:44:58.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.868" endtime="20201112 09:44:58.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.937" endtime="20201112 09:44:59.270"></status>
</kw>
<msg timestamp="20201112 09:44:59.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.934" endtime="20201112 09:44:59.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.279" endtime="20201112 09:44:59.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.298" endtime="20201112 09:44:59.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.927" endtime="20201112 09:44:59.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.922" endtime="20201112 09:44:59.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.315" level="INFO">${RESULT} = [{'time': 0.040060222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013741600000000131, 'source_diff': 0.00013741600000000131}, {'time': 0.040204722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:59.306" endtime="20201112 09:44:59.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.344" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:59.317" endtime="20201112 09:44:59.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.355" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.353" endtime="20201112 09:44:59.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.360" level="INFO">VALUE: [0.00013741600000000131, 0.00013718000000000063, 0.000136861000000002, 0.00013734700000000294, 0.00013740300000000122, 0.00013727800000000456, 0.00013722299999999882, 0.00013740300000000122, 0.00013727799999999762, 0.00013715300000000097, 0.00013657000000000252, 0.00013737500000000208, 0.00013720799999999977, 0.00013740200000000174, 0.00013711100000000226, 0.00013648699999999764, 0.00013680599999999626, 0.00013676399999999755, 0.0001365139999999973, 0.00013718000000000063, 0.00013718000000000063, 0.00013720899999999925, 0.00013740300000000122, 0.0001365689999999961, 0.00013677800000000406, 0.00013723599999999891, 0.00013670799999999927, 0.00013683300000000287, 0.0001371390000000014, 0.00013676399999999755, 0.00013723600000000585, 0.00013743000000000088, 0.00013708300000000312, 0.00013743100000000036, 0.0001368469999999955, 0.0001372919999999972, 0.00013665300000000047, 0.00013670799999999927, 0.00013674999999999798, 0.00013731899999999686, 0.00013712500000000183, 0.00013737500000000208, 0.00013740300000000122, 0.0001373060000000037, 0.0001373190000000038, 0.0001370139999999978, 0.00013669499999999918, 0.00013683299999999593, 0.00013661100000000176, 0.00013733400000000284]</msg>
<status status="PASS" starttime="20201112 09:44:59.357" endtime="20201112 09:44:59.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.346" endtime="20201112 09:44:59.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.370" endtime="20201112 09:44:59.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.379" endtime="20201112 09:44:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.375" endtime="20201112 09:44:59.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.365" endtime="20201112 09:44:59.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.864" endtime="20201112 09:44:59.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.863" endtime="20201112 09:44:59.405"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.428" endtime="20201112 09:44:59.449"></status>
</kw>
<msg timestamp="20201112 09:44:59.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.424" endtime="20201112 09:44:59.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.452" endtime="20201112 09:44:59.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.458" endtime="20201112 09:44:59.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.417" endtime="20201112 09:44:59.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.412" endtime="20201112 09:44:59.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.481" endtime="20201112 09:44:59.824"></status>
</kw>
<msg timestamp="20201112 09:44:59.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040298611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.478" endtime="20201112 09:44:59.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040298611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.833" endtime="20201112 09:44:59.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.852" endtime="20201112 09:44:59.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.471" endtime="20201112 09:44:59.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.466" endtime="20201112 09:44:59.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.869" level="INFO">${RESULT} = [{'time': 0.040436472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000137861000000003, 'source_diff': 0.000137861000000003}, {'time': 0.040579889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:59.860" endtime="20201112 09:44:59.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.900" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:44:59.871" endtime="20201112 09:44:59.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.911" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.909" endtime="20201112 09:44:59.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.916" level="INFO">VALUE: [0.000137861000000003, 0.00013819500000000068, 0.0001380840000000036, 0.00013824999999999948, 0.0001381810000000011, 0.0001374170000000008, 0.00013805499999999804, 0.00013765300000000147, 0.00013827799999999862, 0.0001376390000000019, 0.0001375970000000032, 0.0001381669999999946, 0.0001383889999999957, 0.00013820800000000077, 0.00013826399999999905, 0.00013787500000000258, 0.00013766700000000104, 0.0001384720000000006, 0.0001377919999999977, 0.0001380139999999988, 0.0001381940000000012, 0.00013837499999999614, 0.00013826299999999958, 0.00013790300000000172, 0.00013804199999999794, 0.00013822200000000034, 0.00013798599999999966, 0.00013787500000000258, 0.0001379170000000013, 0.00013806900000000455, 0.00013757000000000352, 0.00013774999999999898, 0.00013838900000000265, 0.0001368049999999968, 0.00013849999999999973, 0.00013836099999999657, 0.00013763899999999496, 0.00013833400000000384, 0.00013781899999999736, 0.00013802799999999837, 0.0001383610000000035, 0.00013793000000000138, 0.00013794400000000095, 0.0001375139999999983, 0.00013711100000000226, 0.0001374719999999996, 0.0001379170000000013, 0.00013847199999999366, 0.00013783299999999693, 0.00013804199999999794]</msg>
<status status="PASS" starttime="20201112 09:44:59.914" endtime="20201112 09:44:59.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.902" endtime="20201112 09:44:59.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.926" endtime="20201112 09:44:59.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.934" endtime="20201112 09:44:59.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.930" endtime="20201112 09:44:59.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.921" endtime="20201112 09:44:59.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.407" endtime="20201112 09:44:59.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.406" endtime="20201112 09:44:59.961"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.984" endtime="20201112 09:45:00.005"></status>
</kw>
<msg timestamp="20201112 09:45:00.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.981" endtime="20201112 09:45:00.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.009" endtime="20201112 09:45:00.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.015" endtime="20201112 09:45:00.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.974" endtime="20201112 09:45:00.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.968" endtime="20201112 09:45:00.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.038" endtime="20201112 09:45:00.383"></status>
</kw>
<msg timestamp="20201112 09:45:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041781292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.035" endtime="20201112 09:45:00.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041781292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.392" endtime="20201112 09:45:00.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.411" endtime="20201112 09:45:00.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.028" endtime="20201112 09:45:00.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.023" endtime="20201112 09:45:00.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.428" level="INFO">${RESULT} = [{'time': 0.041920278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013898600000000066, 'source_diff': 0.00013898600000000066}, {'time': 0.042067694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:00.419" endtime="20201112 09:45:00.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:00.457" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:00.430" endtime="20201112 09:45:00.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.468" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:45:00.466" endtime="20201112 09:45:00.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.473" level="INFO">VALUE: [0.00013898600000000066, 0.00013934700000000494, 0.0001388469999999975, 0.0001389170000000023, 0.00013900000000000023, 0.00013872200000000084, 0.00013863899999999596, 0.00013873600000000041, 0.00013908399999999765, 0.00013929099999999972, 0.00013877699999999965, 0.0001388339999999974, 0.00013897300000000057, 0.00013943100000000236, 0.00013884799999999697, 0.00013950000000000073, 0.00013855599999999801, 0.00013877799999999912, 0.00013862500000000333, 0.00013898600000000066, 0.0001387919999999987, 0.0001388889999999962, 0.00013866700000000204, 0.00013916600000000307, 0.00013761100000000276, 0.000139444999999995, 0.00013940300000000322, 0.00013877799999999912, 0.00013937499999999714, 0.00013848600000000016, 0.00013930599999999876, 0.0001393610000000045, 0.0001392370000000004, 0.00013887499999999664, 0.00013948600000000116, 0.00013943100000000236, 0.00013926300000000058, 0.00013883299999999793, 0.0001388469999999975, 0.00013879099999999922, 0.00013915199999999656, 0.00013937499999999714, 0.0001394720000000016, 0.00013898600000000066, 0.0001394019999999968, 0.00013922200000000134, 0.00013895800000000152, 0.00013849999999999973, 0.00013906999999999808, 0.0001388889999999962]</msg>
<status status="PASS" starttime="20201112 09:45:00.470" endtime="20201112 09:45:00.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.459" endtime="20201112 09:45:00.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.483" endtime="20201112 09:45:00.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.491" endtime="20201112 09:45:00.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.486" endtime="20201112 09:45:00.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.478" endtime="20201112 09:45:00.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.963" endtime="20201112 09:45:00.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.962" endtime="20201112 09:45:00.517"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.541" endtime="20201112 09:45:00.562"></status>
</kw>
<msg timestamp="20201112 09:45:00.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.538" endtime="20201112 09:45:00.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.566" endtime="20201112 09:45:00.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.572" endtime="20201112 09:45:00.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.530" endtime="20201112 09:45:00.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.523" endtime="20201112 09:45:00.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.595" endtime="20201112 09:45:00.943"></status>
</kw>
<msg timestamp="20201112 09:45:00.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041868694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042008556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.592" endtime="20201112 09:45:00.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041868694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042008556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.953" endtime="20201112 09:45:00.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.971" endtime="20201112 09:45:00.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.585" endtime="20201112 09:45:00.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.580" endtime="20201112 09:45:00.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.988" level="INFO">${RESULT} = [{'time': 0.042008556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013986200000000448, 'source_diff': 0.00013986200000000448}, {'time': 0.042155014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:00.979" endtime="20201112 09:45:00.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:01.018" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:00.990" endtime="20201112 09:45:01.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.029" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:45:01.026" endtime="20201112 09:45:01.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.034" level="INFO">VALUE: [0.00013986200000000448, 0.00013980599999999926, 0.00013950000000000073, 0.00013944400000000245, 0.00014006999999999908, 0.00013987499999999764, 0.00014004199999999994, 0.0001399170000000033, 0.0001398339999999984, 0.00014027800000000062, 0.00014043100000000336, 0.00013959699999999825, 0.00014030599999999976, 0.00013956999999999858, 0.00013966700000000304, 0.00013998600000000166, 0.00014047300000000207, 0.00013969499999999524, 0.00013988900000000415, 0.0001401799999999967, 0.00013950000000000073, 0.00014011099999999832, 0.00013950000000000073, 0.0001397919999999997, 0.0001397919999999997, 0.00014038900000000465, 0.00013975000000000098, 0.00013952799999999987, 0.00013975000000000098, 0.00013966599999999663, 0.00013954199999999944, 0.00014000000000000123, 0.0001401799999999967, 0.00013959699999999825, 0.00013950000000000073, 0.00013962500000000433, 0.00013979100000000022, 0.00013972300000000132, 0.0001400840000000056, 0.000140346999999999, 0.0001401799999999967, 0.00013948600000000116, 0.00014026400000000105, 0.00013956999999999858, 0.00014038900000000465, 0.00014020800000000277, 0.00014005500000000004, 0.00014037499999999814, 0.00014001399999999387, 0.00013945800000000202]</msg>
<status status="PASS" starttime="20201112 09:45:01.031" endtime="20201112 09:45:01.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.020" endtime="20201112 09:45:01.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.044" endtime="20201112 09:45:01.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.052" endtime="20201112 09:45:01.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.047" endtime="20201112 09:45:01.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.039" endtime="20201112 09:45:01.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.519" endtime="20201112 09:45:01.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.518" endtime="20201112 09:45:01.078"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.100" endtime="20201112 09:45:01.122"></status>
</kw>
<msg timestamp="20201112 09:45:01.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.097" endtime="20201112 09:45:01.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.126" endtime="20201112 09:45:01.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.132" endtime="20201112 09:45:01.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.090" endtime="20201112 09:45:01.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.084" endtime="20201112 09:45:01.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.157" endtime="20201112 09:45:01.491"></status>
</kw>
<msg timestamp="20201112 09:45:01.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040505056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.153" endtime="20201112 09:45:01.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040505056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.500" endtime="20201112 09:45:01.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.519" endtime="20201112 09:45:01.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.146" endtime="20201112 09:45:01.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.142" endtime="20201112 09:45:01.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.536" level="INFO">${RESULT} = [{'time': 0.040505056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014104200000000094, 'source_diff': 0.00014104200000000094}, {'time': 0.040651639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:01.527" endtime="20201112 09:45:01.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:01.565" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:01.538" endtime="20201112 09:45:01.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.576" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:45:01.574" endtime="20201112 09:45:01.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.581" level="INFO">VALUE: [0.00014104200000000094, 0.00014143100000000436, 0.00014090299999999778, 0.00014119399999999727, 0.00014052799999999394, 0.00013980599999999926, 0.0001403610000000055, 0.0001407920000000007, 0.00014090299999999778, 0.00014087499999999864, 0.00014136099999999957, 0.0001410970000000067, 0.0001409170000000043, 0.00014125000000000248, 0.00014081900000000036, 0.00014073600000000241, 0.00014061099999999882, 0.0001407920000000007, 0.0001408050000000008, 0.00014119500000000368, 0.00014068099999999667, 0.00014052800000000087, 0.00014115299999999803, 0.00014077800000000112, 0.00014081900000000036, 0.00014092999999999745, 0.00014087500000000558, 0.00014130600000000076, 0.00014140299999999828, 0.00014070800000000327, 0.00014059799999999872, 0.00014137499999999914, 0.0001408339999999994, 0.000141347, 0.0001413339999999999, 0.0001414170000000048, 0.00014130600000000076, 0.00014125000000000248, 0.00014076400000000155, 0.00014144500000000393, 0.00014083299999999993, 0.00014142999999999795, 0.00014086099999999907, 0.00014137499999999914, 0.00014136099999999957, 0.00014084799999999897, 0.00014080600000000026, 0.00014093099999999692, 0.000140861000000006, 0.00014072200000000284]</msg>
<status status="PASS" starttime="20201112 09:45:01.578" endtime="20201112 09:45:01.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.567" endtime="20201112 09:45:01.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.592" endtime="20201112 09:45:01.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.602" endtime="20201112 09:45:01.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.597" endtime="20201112 09:45:01.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.586" endtime="20201112 09:45:01.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.080" endtime="20201112 09:45:01.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.079" endtime="20201112 09:45:01.631"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.658" endtime="20201112 09:45:01.682"></status>
</kw>
<msg timestamp="20201112 09:45:01.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.654" endtime="20201112 09:45:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:01.686" endtime="20201112 09:45:01.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.693" endtime="20201112 09:45:01.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.645" endtime="20201112 09:45:01.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.638" endtime="20201112 09:45:01.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.724" endtime="20201112 09:45:02.060"></status>
</kw>
<msg timestamp="20201112 09:45:02.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049171097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049313264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.719" endtime="20201112 09:45:02.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049171097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049313264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.069" endtime="20201112 09:45:02.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.088" endtime="20201112 09:45:02.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.709" endtime="20201112 09:45:02.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.703" endtime="20201112 09:45:02.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.105" level="INFO">${RESULT} = [{'time': 0.049313264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014216700000000554, 'source_diff': 0.00014216700000000554}, {'time': 0.049461528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:02.096" endtime="20201112 09:45:02.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:02.136" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:02.107" endtime="20201112 09:45:02.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.147" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:45:02.145" endtime="20201112 09:45:02.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.152" level="INFO">VALUE: [0.00014216700000000554, 0.00014180599999999433, 0.0001417089999999968, 0.00014231900000000186, 0.00014095800000000352, 0.00014209800000000022, 0.00014213899999999946, 0.00014190299999999878, 0.0001418889999999992, 0.00014158300000000068, 0.00014222200000000434, 0.00014215300000000597, 0.000141347, 0.0001419449999999975, 0.00014223599999999698, 0.00014157000000000058, 0.00014165299999999853, 0.00014147199999999666, 0.00014179199999999476, 0.0001422089999999973, 0.00014198600000000366, 0.00014222299999999688, 0.00014229100000000272, 0.0001421810000000051, 0.00014168000000000514, 0.00014241699999999885, 0.0001420690000000016, 0.00014148600000000316, 0.00014170900000000375, 0.00014244500000000493, 0.00014206899999999467, 0.00014220800000000478, 0.00014163899999999896, 0.00014161099999999982, 0.00014241599999999938, 0.00014186100000000007, 0.00014177799999999519, 0.0001416669999999981, 0.00014181900000000136, 0.00014154200000000144, 0.00014211100000000032, 0.0001422769999999962, 0.00014198600000000366, 0.00014241599999999938, 0.00014227800000000262, 0.00014213899999999946, 0.00014219499999999774, 0.00014233300000000143, 0.00014140300000000522, 0.0001418340000000004]</msg>
<status status="PASS" starttime="20201112 09:45:02.149" endtime="20201112 09:45:02.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.138" endtime="20201112 09:45:02.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.162" endtime="20201112 09:45:02.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.170" endtime="20201112 09:45:02.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.166" endtime="20201112 09:45:02.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.157" endtime="20201112 09:45:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.633" endtime="20201112 09:45:02.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.632" endtime="20201112 09:45:02.196"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.218" endtime="20201112 09:45:02.241"></status>
</kw>
<msg timestamp="20201112 09:45:02.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.215" endtime="20201112 09:45:02.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.245" endtime="20201112 09:45:02.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.251" endtime="20201112 09:45:02.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.208" endtime="20201112 09:45:02.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.202" endtime="20201112 09:45:02.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.274" endtime="20201112 09:45:02.624"></status>
</kw>
<msg timestamp="20201112 09:45:02.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.270" endtime="20201112 09:45:02.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040436847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.633" endtime="20201112 09:45:02.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.651" endtime="20201112 09:45:02.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.263" endtime="20201112 09:45:02.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.259" endtime="20201112 09:45:02.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.668" level="INFO">${RESULT} = [{'time': 0.040436847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014341600000000038, 'source_diff': 0.00014341600000000038}, {'time': 0.040587097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:02.660" endtime="20201112 09:45:02.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:02.698" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:02.670" endtime="20201112 09:45:02.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.709" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:45:02.706" endtime="20201112 09:45:02.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.714" level="INFO">VALUE: [0.00014341600000000038, 0.0001426940000000057, 0.00014255500000000254, 0.0001427219999999979, 0.00014273600000000441, 0.00014279199999999576, 0.00014304099999999653, 0.00014259800000000072, 0.00014323599999999798, 0.00014242999999999895, 0.0001426669999999991, 0.00014256999999999465, 0.00014302799999999644, 0.00014291599999999988, 0.00014269399999999877, 0.00014342999999999995, 0.00014341699999999985, 0.0001428890000000002, 0.0001428470000000015, 0.00014319499999999874, 0.00014340300000000028, 0.00014324999999999755, 0.00014286100000000107, 0.00014318099999999917, 0.00014332000000000233, 0.00014313900000000046, 0.00014327800000000362, 0.00014287500000000064, 0.00014341699999999985, 0.00014287500000000064, 0.00014307000000000208, 0.00014261100000000082, 0.00014300000000000423, 0.0001427769999999967, 0.0001425690000000021, 0.00014313900000000046, 0.0001427769999999967, 0.0001430690000000026, 0.000142832999999995, 0.00014340300000000028, 0.00014336100000000157, 0.0001431799999999997, 0.0001430129999999974, 0.00014320799999999884, 0.00014275000000000398, 0.00014290299999999978, 0.00014306899999999567, 0.00014337500000000114, 0.00014263899999999996, 0.0001429869999999972]</msg>
<status status="PASS" starttime="20201112 09:45:02.711" endtime="20201112 09:45:02.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.700" endtime="20201112 09:45:02.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.724" endtime="20201112 09:45:02.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.732" endtime="20201112 09:45:02.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.728" endtime="20201112 09:45:02.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.719" endtime="20201112 09:45:02.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.198" endtime="20201112 09:45:02.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.197" endtime="20201112 09:45:02.759"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.782" endtime="20201112 09:45:02.805"></status>
</kw>
<msg timestamp="20201112 09:45:02.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.779" endtime="20201112 09:45:02.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:02.808" endtime="20201112 09:45:02.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.814" endtime="20201112 09:45:02.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.771" endtime="20201112 09:45:02.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.765" endtime="20201112 09:45:02.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.838" endtime="20201112 09:45:03.186"></status>
</kw>
<msg timestamp="20201112 09:45:03.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041409708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:02.834" endtime="20201112 09:45:03.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041409708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:03.195" endtime="20201112 09:45:03.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.214" endtime="20201112 09:45:03.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.827" endtime="20201112 09:45:03.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.822" endtime="20201112 09:45:03.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:03.231" level="INFO">${RESULT} = [{'time': 0.041409708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014370800000000628, 'source_diff': 0.00014370800000000628}, {'time': 0.041561208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:03.222" endtime="20201112 09:45:03.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:03.260" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:03.233" endtime="20201112 09:45:03.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.271" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:45:03.269" endtime="20201112 09:45:03.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.277" level="INFO">VALUE: [0.00014370800000000628, 0.00014354100000000397, 0.00014365300000000053, 0.00014393000000000045, 0.0001438749999999947, 0.00014451399999999837, 0.0001435969999999953, 0.00014402699999999796, 0.00014444400000000052, 0.00014375000000000498, 0.00014419400000000027, 0.00014380599999999633, 0.00014430600000000376, 0.00014409700000000275, 0.0001442219999999994, 0.00014359800000000172, 0.00014355600000000301, 0.00014377700000000465, 0.00014359800000000172, 0.00014427799999999769, 0.00014412499999999495, 0.00014351300000000483, 0.0001436250000000014, 0.00014372200000000585, 0.0001443749999999952, 0.0001435140000000043, 0.0001445129999999989, 0.00014405600000000351, 0.0001443749999999952, 0.00014393099999999992, 0.0001436380000000015, 0.00014404200000000394, 0.00014398599999999873, 0.00014427799999999769, 0.00014424999999999855, 0.00014415300000000103, 0.00014451399999999837, 0.00014437500000000214, 0.00014441700000000085, 0.0001439449999999995, 0.00014409700000000275, 0.00014376300000000508, 0.00014376399999999762, 0.0001437219999999989, 0.00014408299999999624, 0.00014372200000000585, 0.0001440969999999958, 0.00014415300000000103, 0.0001437219999999989, 0.00014398599999999873]</msg>
<status status="PASS" starttime="20201112 09:45:03.273" endtime="20201112 09:45:03.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.262" endtime="20201112 09:45:03.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.286" endtime="20201112 09:45:03.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.294" endtime="20201112 09:45:03.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.290" endtime="20201112 09:45:03.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.282" endtime="20201112 09:45:03.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.761" endtime="20201112 09:45:03.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.760" endtime="20201112 09:45:03.320"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.343" endtime="20201112 09:45:03.366"></status>
</kw>
<msg timestamp="20201112 09:45:03.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.340" endtime="20201112 09:45:03.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.369" endtime="20201112 09:45:03.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.376" endtime="20201112 09:45:03.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.333" endtime="20201112 09:45:03.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.327" endtime="20201112 09:45:03.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.399" endtime="20201112 09:45:03.741"></status>
</kw>
<msg timestamp="20201112 09:45:03.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040747403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.395" endtime="20201112 09:45:03.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040747403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.751" endtime="20201112 09:45:03.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.769" endtime="20201112 09:45:03.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.388" endtime="20201112 09:45:03.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.384" endtime="20201112 09:45:03.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:03.789" level="INFO">${RESULT} = [{'time': 0.040747403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001452090000000003, 'source_diff': 0.0001452090000000003}, {'time': 0.040897944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:03.780" endtime="20201112 09:45:03.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:03.819" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:03.791" endtime="20201112 09:45:03.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.830" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:45:03.828" endtime="20201112 09:45:03.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.835" level="INFO">VALUE: [0.0001452090000000003, 0.00014463799999999555, 0.00014513899999999552, 0.0001451250000000029, 0.00014490300000000178, 0.00014502799999999844, 0.00014488899999999527, 0.0001445549999999976, 0.00014537500000000314, 0.00014455599999999708, 0.00014495800000000059, 0.0001448470000000035, 0.00014531899999999792, 0.0001445140000000053, 0.00014486099999999613, 0.0001452220000000004, 0.00014486100000000307, 0.00014524999999999955, 0.00014451399999999837, 0.00014477799999999819, 0.00014502799999999844, 0.00014520800000000084, 0.00014530600000000476, 0.00014470800000000034, 0.00014468099999999373, 0.00014523599999999998, 0.0001448199999999969, 0.00014540300000000228, 0.00014519400000000127, 0.0001454169999999949, 0.00014502799999999844, 0.0001448340000000034, 0.00014456899999999717, 0.00014519500000000074, 0.00014455599999999708, 0.000145445000000001, 0.000145445000000001, 0.0001446800000000012, 0.00014457000000000358, 0.0001454869999999997, 0.00014513900000000246, 0.0001446670000000011, 0.00014490300000000178, 0.0001443749999999952, 0.0001450549999999981, 0.00014501399999999887, 0.00014495900000000006, 0.0001452220000000004, 0.00014536099999999663, 0.00014513899999999552]</msg>
<status status="PASS" starttime="20201112 09:45:03.832" endtime="20201112 09:45:03.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.821" endtime="20201112 09:45:03.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.845" endtime="20201112 09:45:03.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.853" endtime="20201112 09:45:03.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.849" endtime="20201112 09:45:03.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.840" endtime="20201112 09:45:03.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.322" endtime="20201112 09:45:03.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.321" endtime="20201112 09:45:03.879"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.902" endtime="20201112 09:45:03.924"></status>
</kw>
<msg timestamp="20201112 09:45:03.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.898" endtime="20201112 09:45:03.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.928" endtime="20201112 09:45:03.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.934" endtime="20201112 09:45:03.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.891" endtime="20201112 09:45:03.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.885" endtime="20201112 09:45:03.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.957" endtime="20201112 09:45:04.303"></status>
</kw>
<msg timestamp="20201112 09:45:04.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:03.953" endtime="20201112 09:45:04.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.312" endtime="20201112 09:45:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.331" endtime="20201112 09:45:04.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.946" endtime="20201112 09:45:04.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.942" endtime="20201112 09:45:04.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.349" level="INFO">${RESULT} = [{'time': 0.040433708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014544400000000152, 'source_diff': 0.00014544400000000152}, {'time': 0.04058425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:45:04.341" endtime="20201112 09:45:04.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:04.381" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:04.351" endtime="20201112 09:45:04.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.392" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:45:04.390" endtime="20201112 09:45:04.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.398" level="INFO">VALUE: [0.00014544400000000152, 0.00014570800000000134, 0.00014598600000000073, 0.00014598600000000073, 0.00014584699999999756, 0.00014593099999999498, 0.0001455419999999985, 0.00014598600000000073, 0.0001458199999999979, 0.00014587500000000364, 0.00014601399999999987, 0.00014563900000000296, 0.00014556899999999817, 0.00014640299999999634, 0.00014609700000000475, 0.0001454999999999998, 0.00014562499999999645, 0.00014627799999999969, 0.0001460140000000068, 0.00014590299999999584, 0.00014587500000000364, 0.00014558300000000468, 0.00014562499999999645, 0.00014615300000000303, 0.00014573600000000048, 0.00014586099999999713, 0.000146041999999999, 0.00014563899999999602, 0.00014561100000000382, 0.00014591599999999594, 0.00014583300000000493, 0.00014612499999999695, 0.00014547200000000066, 0.00014570800000000134, 0.00014598600000000073, 0.00014598600000000073, 0.00014623600000000098, 0.00014634699999999806, 0.0001456800000000022, 0.00014623700000000045, 0.00014555599999999808, 0.00014611199999999686, 0.00014565300000000253, 0.00014593099999999498, 0.00014558299999999774, 0.00014608400000000465, 0.0001461250000000039, 0.00014593100000000192, 0.00014637500000000414, 0.0001455969999999973]</msg>
<status status="PASS" starttime="20201112 09:45:04.395" endtime="20201112 09:45:04.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.383" endtime="20201112 09:45:04.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.407" endtime="20201112 09:45:04.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.415" endtime="20201112 09:45:04.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.411" endtime="20201112 09:45:04.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.402" endtime="20201112 09:45:04.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.881" endtime="20201112 09:45:04.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.880" endtime="20201112 09:45:04.441"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.464" endtime="20201112 09:45:04.487"></status>
</kw>
<msg timestamp="20201112 09:45:04.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.460" endtime="20201112 09:45:04.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:04.490" endtime="20201112 09:45:04.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.496" endtime="20201112 09:45:04.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.453" endtime="20201112 09:45:04.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.448" endtime="20201112 09:45:04.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.519" endtime="20201112 09:45:04.868"></status>
</kw>
<msg timestamp="20201112 09:45:04.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.516" endtime="20201112 09:45:04.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.877" endtime="20201112 09:45:04.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.895" endtime="20201112 09:45:04.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.509" endtime="20201112 09:45:04.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.504" endtime="20201112 09:45:04.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.912" level="INFO">${RESULT} = [{'time': 0.040508597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014725000000000155, 'source_diff': 0.00014725000000000155}, {'time': 0.040661, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:45:04.904" endtime="20201112 09:45:04.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:04.943" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:04.914" endtime="20201112 09:45:04.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.954" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:45:04.952" endtime="20201112 09:45:04.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.960" level="INFO">VALUE: [0.00014725000000000155, 0.0001466250000000044, 0.00014698600000000173, 0.00014736099999999863, 0.00014681899999999942, 0.000147042, 0.00014676400000000062, 0.0001471670000000036, 0.0001473749999999982, 0.00014748600000000223, 0.00014706999999999915, 0.00014663899999999702, 0.00014708299999999924, 0.00014668100000000267, 0.00014659799999999779, 0.00014690299999999684, 0.0001470000000000013, 0.00014672300000000138, 0.00014722299999999494, 0.00014690300000000378, 0.0001471800000000037, 0.00014727800000000069, 0.0001468749999999977, 0.00014661099999999788, 0.00014723600000000198, 0.00014713900000000446, 0.0001473749999999982, 0.00014723599999999504, 0.000146445000000002, 0.000146832999999999, 0.0001464870000000007, 0.00014663899999999702, 0.00014730500000000035, 0.00014695799999999565, 0.0001473890000000047, 0.00014736099999999863, 0.00014665199999999712, 0.00014695900000000206, 0.00014658299999999874, 0.0001470000000000013, 0.00014723700000000145, 0.00014680499999999985, 0.0001473329999999995, 0.0001469450000000025, 0.0001464729999999942, 0.0001473329999999995, 0.0001465549999999996, 0.0001471529999999971, 0.0001465000000000008, 0.00014715199999999762]</msg>
<status status="PASS" starttime="20201112 09:45:04.956" endtime="20201112 09:45:04.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.945" endtime="20201112 09:45:04.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.975" endtime="20201112 09:45:04.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.984" endtime="20201112 09:45:05.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.979" endtime="20201112 09:45:05.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.971" endtime="20201112 09:45:05.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.443" endtime="20201112 09:45:05.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.442" endtime="20201112 09:45:05.010"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.033" endtime="20201112 09:45:05.054"></status>
</kw>
<msg timestamp="20201112 09:45:05.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.029" endtime="20201112 09:45:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.057" endtime="20201112 09:45:05.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.063" endtime="20201112 09:45:05.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.022" endtime="20201112 09:45:05.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.016" endtime="20201112 09:45:05.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.087" endtime="20201112 09:45:05.421"></status>
</kw>
<msg timestamp="20201112 09:45:05.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.084" endtime="20201112 09:45:05.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.431" endtime="20201112 09:45:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.449" endtime="20201112 09:45:05.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.076" endtime="20201112 09:45:05.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.072" endtime="20201112 09:45:05.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.466" level="INFO">${RESULT} = [{'time': 0.040852167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014763900000000496, 'source_diff': 0.00014763900000000496}, {'time': 0.041006597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:05.458" endtime="20201112 09:45:05.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:05.497" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:05.468" endtime="20201112 09:45:05.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.508" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:45:05.506" endtime="20201112 09:45:05.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.513" level="INFO">VALUE: [0.00014763900000000496, 0.00014813899999999852, 0.00014790299999999784, 0.0001475000000000018, 0.00014784699999999956, 0.00014813899999999852, 0.00014780600000000033, 0.00014848600000000323, 0.00014802800000000144, 0.0001475969999999993, 0.0001477499999999951, 0.00014751400000000137, 0.00014838899999999877, 0.00014831900000000092, 0.00014763899999999802, 0.00014779100000000128, 0.00014847199999999672, 0.00014841599999999844, 0.0001479169999999974, 0.0001484859999999963, 0.0001485420000000015, 0.00014770800000000334, 0.00014781900000000042, 0.00014780500000000085, 0.00014780500000000085, 0.00014834700000000006, 0.00014790299999999784, 0.0001484169999999979, 0.0001479580000000036, 0.0001483749999999992, 0.00014804100000000153, 0.00014776399999999468, 0.0001480000000000023, 0.00014747200000000266, 0.00014794399999999708, 0.00014812499999999895, 0.0001479299999999975, 0.00014763799999999855, 0.00014777800000000119, 0.00014825000000000255, 0.0001484859999999963, 0.0001479299999999975, 0.0001480969999999998, 0.00014769399999999683, 0.00014754199999999357, 0.00014781900000000042, 0.00014777800000000119, 0.00014806900000000067, 0.00014812499999999895, 0.000148429999999998]</msg>
<status status="PASS" starttime="20201112 09:45:05.511" endtime="20201112 09:45:05.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.499" endtime="20201112 09:45:05.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.523" endtime="20201112 09:45:05.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.531" endtime="20201112 09:45:05.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.527" endtime="20201112 09:45:05.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.518" endtime="20201112 09:45:05.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.012" endtime="20201112 09:45:05.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.011" endtime="20201112 09:45:05.557"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.580" endtime="20201112 09:45:05.603"></status>
</kw>
<msg timestamp="20201112 09:45:05.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.576" endtime="20201112 09:45:05.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:05.606" endtime="20201112 09:45:05.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.612" endtime="20201112 09:45:05.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.569" endtime="20201112 09:45:05.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.563" endtime="20201112 09:45:05.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.636" endtime="20201112 09:45:05.983"></status>
</kw>
<msg timestamp="20201112 09:45:05.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040186694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040335903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.632" endtime="20201112 09:45:05.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040186694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040335903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.992" endtime="20201112 09:45:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.011" endtime="20201112 09:45:06.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.625" endtime="20201112 09:45:06.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.620" endtime="20201112 09:45:06.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:06.028" level="INFO">${RESULT} = [{'time': 0.040335903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014920899999999737, 'source_diff': 0.00014920899999999737}, {'time': 0.040496333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:45:06.019" endtime="20201112 09:45:06.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:06.059" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:06.030" endtime="20201112 09:45:06.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.070" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:45:06.068" endtime="20201112 09:45:06.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.075" level="INFO">VALUE: [0.00014920899999999737, 0.00014934700000000106, 0.00014863900000000596, 0.0001492090000000043, 0.00014938899999999977, 0.00014869500000000424, 0.00014911100000000038, 0.0001495000000000038, 0.00014912499999999995, 0.00014912499999999995, 0.00014906900000000167, 0.00014927799999999575, 0.00014886100000000013, 0.00014851400000000237, 0.00014911100000000038, 0.0001491529999999991, 0.000149042000000002, 0.00014929099999999584, 0.0001485420000000015, 0.00014862499999999945, 0.00014901400000000287, 0.00014893099999999798, 0.0001485970000000003, 0.00014876399999999568, 0.00014881900000000142, 0.0001493750000000002, 0.00014873599999999654, 0.00014940199999999987, 0.0001493750000000002, 0.0001489729999999967, 0.00014872199999999697, 0.00014877800000000219, 0.0001484729999999962, 0.00014895799999999765, 0.0001490970000000008, 0.0001492090000000043, 0.0001489859999999968, 0.00014849999999999586, 0.00014880500000000185, 0.00014876400000000262, 0.00014859799999999979, 0.0001490970000000008, 0.00014856899999999423, 0.0001484169999999979, 0.00014901400000000287, 0.00014936100000000063, 0.00014844499999999705, 0.00014919399999999833, 0.00014870800000000434, 0.00014863900000000596]</msg>
<status status="PASS" starttime="20201112 09:45:06.072" endtime="20201112 09:45:06.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.061" endtime="20201112 09:45:06.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.085" endtime="20201112 09:45:06.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:06.093" endtime="20201112 09:45:06.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.089" endtime="20201112 09:45:06.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.080" endtime="20201112 09:45:06.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.559" endtime="20201112 09:45:06.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.558" endtime="20201112 09:45:06.119"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.141" endtime="20201112 09:45:06.163"></status>
</kw>
<msg timestamp="20201112 09:45:06.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:06.138" endtime="20201112 09:45:06.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:06.166" endtime="20201112 09:45:06.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.172" endtime="20201112 09:45:06.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.131" endtime="20201112 09:45:06.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.125" endtime="20201112 09:45:06.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.196" endtime="20201112 09:45:06.530"></status>
</kw>
<msg timestamp="20201112 09:45:06.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:06.193" endtime="20201112 09:45:06.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040499861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:06.539" endtime="20201112 09:45:06.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.558" endtime="20201112 09:45:06.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.185" endtime="20201112 09:45:06.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.180" endtime="20201112 09:45:06.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:06.575" level="INFO">${RESULT} = [{'time': 0.040499861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001502499999999976, 'source_diff': 0.0001502499999999976}, {'time': 0.040658472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:45:06.566" endtime="20201112 09:45:06.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:06.607" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:45:06.577" endtime="20201112 09:45:06.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.618" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:45:06.616" endtime="20201112 09:45:06.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.623" level="INFO">VALUE: [0.0001502499999999976, 0.00015012500000000095, 0.00015018100000000617, 0.00014972199999999797, 0.00014997199999999822, 0.0001503750000000012, 0.0001496659999999997, 0.00014977800000000319, 0.0001501949999999988, 0.00015043, 0.0001495970000000013, 0.00014967999999999926, 0.00014968100000000567, 0.00014966699999999916, 0.0001500970000000018, 0.0001495420000000025, 0.00014981900000000242, 0.00014952800000000294, 0.00015022199999999847, 0.0001501530000000001, 0.00014966699999999916, 0.00014995799999999865, 0.00014966699999999916, 0.0001500409999999966, 0.00014977800000000319, 0.00014961100000000088, 0.00015008300000000224, 0.00014968099999999873, 0.00014977800000000319, 0.00014958399999999428, 0.00015022299999999794, 0.0001498059999999954, 0.00015023599999999804, 0.0001500409999999966, 0.000150042000000003, 0.00014976399999999668, 0.00014994499999999855, 0.00015043099999999948, 0.00014995799999999865, 0.00015012500000000095, 0.0001498200000000019, 0.00015022300000000488, 0.00015027799999999675, 0.00014951400000000337, 0.00014936100000000063, 0.0001501379999999941, 0.00014986100000000113, 0.00014958400000000122, 0.0001495550000000026, 0.00014995799999999865]</msg>
<status status="PASS" starttime="20201112 09:45:06.620" endtime="20201112 09:45:06.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.609" endtime="20201112 09:45:06.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.633" endtime="20201112 09:45:06.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:06.641" endtime="20201112 09:45:06.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.637" endtime="20201112 09:45:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.628" endtime="20201112 09:45:06.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.121" endtime="20201112 09:45:06.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.120" endtime="20201112 09:45:06.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.607" endtime="20201112 09:45:06.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:06.678" endtime="20201112 09:45:06.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.673" endtime="20201112 09:45:06.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.671" endtime="20201112 09:45:06.701"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:11.477" endtime="20201112 09:45:06.702" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:13.995" endtime="20201112 09:45:06.712"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.851" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:45:06.866" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:45:08.785" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:45:06.848" endtime="20201112 09:45:08.786"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.792" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:45:08.789" endtime="20201112 09:45:08.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.845" endtime="20201112 09:45:08.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:08.799" endtime="20201112 09:45:09.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.796" endtime="20201112 09:45:09.129"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.158" endtime="20201112 09:45:09.180"></status>
</kw>
<msg timestamp="20201112 09:45:09.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:09.155" endtime="20201112 09:45:09.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:09.184" endtime="20201112 09:45:09.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.195" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:09.190" endtime="20201112 09:45:09.195"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:09.149" endtime="20201112 09:45:09.197"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:09.143" endtime="20201112 09:45:09.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.141" endtime="20201112 09:45:09.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:09.208" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:09.206" endtime="20201112 09:45:09.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.202" endtime="20201112 09:45:09.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.139" endtime="20201112 09:45:09.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.137" endtime="20201112 09:45:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.213" endtime="20201112 09:45:09.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.134" endtime="20201112 09:45:09.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.220" endtime="20201112 09:45:09.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.130" endtime="20201112 09:45:09.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.842" endtime="20201112 09:45:09.226"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:09.241" endtime="20201112 09:45:09.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.237" endtime="20201112 09:45:09.264"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.298" endtime="20201112 09:45:09.319"></status>
</kw>
<msg timestamp="20201112 09:45:09.320" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:09.294" endtime="20201112 09:45:09.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:09.322" endtime="20201112 09:45:09.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.333" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:09.329" endtime="20201112 09:45:09.334"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:09.287" endtime="20201112 09:45:09.335"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:09.281" endtime="20201112 09:45:09.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.278" endtime="20201112 09:45:09.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:09.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:09.344" endtime="20201112 09:45:09.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.340" endtime="20201112 09:45:09.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.276" endtime="20201112 09:45:09.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.274" endtime="20201112 09:45:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.349" endtime="20201112 09:45:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.270" endtime="20201112 09:45:09.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.266" endtime="20201112 09:45:09.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.234" endtime="20201112 09:45:09.356"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:09.364" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.387" endtime="20201112 09:45:11.499"></status>
</kw>
<msg timestamp="20201112 09:45:11.501" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 670545, 'wakeups': [680584, 690584, 700584, 710584, 720584, 730584, 74...</msg>
<status status="PASS" starttime="20201112 09:45:09.384" endtime="20201112 09:45:11.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.507" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 670545, 'wakeups': [680584, 690584, 700584, 710584, 720584, 730584, 74...</msg>
<status status="PASS" starttime="20201112 09:45:11.503" endtime="20201112 09:45:11.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.510" endtime="20201112 09:45:11.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.374" endtime="20201112 09:45:11.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.369" endtime="20201112 09:45:11.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:11.523" level="INFO">${RESULT} = {'wakeups': [680584, 690584, 700584, 710584, 720584, 730584, 740584, 750584, 760584, 770584, 780584, 790584, 800584, 810584, 820584, 830584, 840584, 850584, 860584, 870584, 880584, 890584, 900584, 910...</msg>
<status status="PASS" starttime="20201112 09:45:11.519" endtime="20201112 09:45:11.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.533" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:11.531" endtime="20201112 09:45:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.538" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:11.536" endtime="20201112 09:45:11.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.525" endtime="20201112 09:45:11.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.550" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:11.548" endtime="20201112 09:45:11.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.555" level="INFO">VALUE: 670545</msg>
<status status="PASS" starttime="20201112 09:45:11.553" endtime="20201112 09:45:11.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.541" endtime="20201112 09:45:11.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.567" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:11.565" endtime="20201112 09:45:11.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.572" level="INFO">VALUE: [680584, 690584, 700584, 710584, 720584, 730584, 740584, 750584, 760584, 770584, 780584, 790584, 800584, 810584, 820584, 830584, 840584, 850584, 860584, 870584, 880584, 890584, 900584, 910584, 920584, 930584, 940584, 950584, 960584, 970584, 980584, 990584, 1000584, 1010584, 1020584, 1030584, 1040584, 1050584, 1060584, 1070584, 1080584, 1090584, 1100584, 1110584, 1120584, 1130584, 1140584, 1150584, 1160584, 1170584, 1180584, 1190584, 1200584, 1210584, 1220584, 1230584, 1240584, 1250584, 1260584, 1270584, 1280584, 1290584, 1300584, 1310584, 1320584, 1330584, 1340584, 1350584, 1360584, 1370584, 1380584, 1390584, 1400584, 1410584, 1420584, 1430584, 1440584, 1450584, 1460584, 1470584, 1480584, 1490584, 1500584, 1510584, 1520584, 1530584, 1540584, 1550584, 1560584, 1570584, 1580584, 1590584, 1600584, 1610584, 1620584, 1630584, 1640584, 1650584, 1660584, 1670584]</msg>
<status status="PASS" starttime="20201112 09:45:11.569" endtime="20201112 09:45:11.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.558" endtime="20201112 09:45:11.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.591" endtime="20201112 09:45:11.939"></status>
</kw>
<msg timestamp="20201112 09:45:11.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136830736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146898931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:11.587" endtime="20201112 09:45:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136830736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146898931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:11.948" endtime="20201112 09:45:11.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.966" endtime="20201112 09:45:11.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.580" endtime="20201112 09:45:11.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.575" endtime="20201112 09:45:11.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:12.028" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:11.974" endtime="20201112 09:45:12.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.040" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:12.037" endtime="20201112 09:45:12.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.044" level="INFO">VALUE: 0.136830736</msg>
<status status="PASS" starttime="20201112 09:45:12.042" endtime="20201112 09:45:12.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.030" endtime="20201112 09:45:12.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.058" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:12.056" endtime="20201112 09:45:12.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.063" level="INFO">VALUE: [0.146898931, 0.156927569, 0.166957097, 0.176987, 0.18701675, 0.197045569, 0.207074111, 0.217103222, 0.227132625, 0.237161639, 0.247191125, 0.257220694, 0.267250264, 0.277280097, 0.287309833, 0.297339361, 0.307369444, 0.317399611, 0.327429653, 0.337459389, 0.347489944, 0.357520542, 0.367551389, 0.377580931, 0.387610417, 0.397640167, 0.407670486, 0.417700653, 0.427730264, 0.437760056, 0.447791042, 0.457821375, 0.467851778, 0.477881597, 0.487912194, 0.497941819, 0.507971486, 0.518000903, 0.528030986, 0.538060194, 0.548090319, 0.558120319, 0.568150458, 0.578179097, 0.588207764, 0.598238028, 0.608269514, 0.618300472, 0.628332236, 0.638362458, 0.648392722, 0.658423139, 0.668453833, 0.678483028, 0.688512847, 0.698542958, 0.708573569, 0.718603917, 0.728634458, 0.738665, 0.748694792, 0.758723667, 0.768753639, 0.778782917, 0.78881325, 0.798843139, 0.808873722, 0.81890425, 0.828933222, 0.838962194, 0.848991042, 0.859019458, 0.869048694, 0.879077375, 0.889107042, 0.899136278, 0.909165389, 0.919194722, 0.929225819, 0.939256069, 0.949286486, 0.959315972, 0.96934675, 0.979377806, 0.989408778, 0.999438611, 1.009469111, 1.019499222, 1.029528722, 1.039559361, 1.049588528, 1.059617542, 1.069647111, 1.079676806, 1.0897075, 1.099737972, 1.109768819, 1.119798875, 1.129827431, 1.139854694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:12.061" endtime="20201112 09:45:12.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.048" endtime="20201112 09:45:12.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.072" endtime="20201112 09:45:12.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:12.080" endtime="20201112 09:45:12.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.075" endtime="20201112 09:45:12.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.067" endtime="20201112 09:45:12.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.365" endtime="20201112 09:45:12.105"></status>
</kw>
<msg timestamp="20201112 09:45:12.106" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.127" endtime="20201112 09:45:14.242"></status>
</kw>
<msg timestamp="20201112 09:45:14.244" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3402089, 'wakeups': [3412128, 3422128, 3432128, 3442128, 3452128, 3462...</msg>
<status status="PASS" starttime="20201112 09:45:12.123" endtime="20201112 09:45:14.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.251" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3402089, 'wakeups': [3412128, 3422128, 3432128, 3442128, 3452128, 3462...</msg>
<status status="PASS" starttime="20201112 09:45:14.246" endtime="20201112 09:45:14.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.253" endtime="20201112 09:45:14.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.116" endtime="20201112 09:45:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.111" endtime="20201112 09:45:14.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.266" level="INFO">${RESULT} = {'wakeups': [3412128, 3422128, 3432128, 3442128, 3452128, 3462128, 3472128, 3482128, 3492128, 3502128, 3512128, 3522128, 3532128, 3542128, 3552128, 3562128, 3572128, 3582128, 3592128, 3602128, 3612128...</msg>
<status status="PASS" starttime="20201112 09:45:14.261" endtime="20201112 09:45:14.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.276" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:14.274" endtime="20201112 09:45:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.280" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:14.278" endtime="20201112 09:45:14.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.268" endtime="20201112 09:45:14.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.293" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.291" endtime="20201112 09:45:14.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.298" level="INFO">VALUE: 3402089</msg>
<status status="PASS" starttime="20201112 09:45:14.296" endtime="20201112 09:45:14.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.284" endtime="20201112 09:45:14.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.312" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.308" endtime="20201112 09:45:14.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.317" level="INFO">VALUE: [3412128, 3422128, 3432128, 3442128, 3452128, 3462128, 3472128, 3482128, 3492128, 3502128, 3512128, 3522128, 3532128, 3542128, 3552128, 3562128, 3572128, 3582128, 3592128, 3602128, 3612128, 3622128, 3632128, 3642128, 3652128, 3662128, 3672128, 3682128, 3692128, 3702128, 3712128, 3722128, 3732128, 3742128, 3752128, 3762128, 3772128, 3782128, 3792128, 3802128, 3812128, 3822128, 3832128, 3842128, 3852128, 3862128, 3872128, 3882128, 3892128, 3902128, 3912128, 3922128, 3932128, 3942128, 3952128, 3962128, 3972128, 3982128, 3992128, 4002128, 4012128, 4022128, 4032128, 4042128, 4052128, 4062128, 4072128, 4082128, 4092128, 4102128, 4112128, 4122128, 4132128, 4142128, 4152128, 4162128, 4172128, 4182128, 4192128, 4202128, 4212128, 4222128, 4232128, 4242128, 4252128, 4262128, 4272128, 4282128, 4292128, 4302128, 4312128, 4322128, 4332128, 4342128, 4352128, 4362128, 4372128, 4382128, 4392128, 4402128]</msg>
<status status="PASS" starttime="20201112 09:45:14.314" endtime="20201112 09:45:14.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.301" endtime="20201112 09:45:14.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.336" endtime="20201112 09:45:14.677"></status>
</kw>
<msg timestamp="20201112 09:45:14.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037571792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047640889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:14.332" endtime="20201112 09:45:14.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037571792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047640889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:14.686" endtime="20201112 09:45:14.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.703" endtime="20201112 09:45:14.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.325" endtime="20201112 09:45:14.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.321" endtime="20201112 09:45:14.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.765" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:14.712" endtime="20201112 09:45:14.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.776" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.773" endtime="20201112 09:45:14.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.780" level="INFO">VALUE: 0.037571792</msg>
<status status="PASS" starttime="20201112 09:45:14.778" endtime="20201112 09:45:14.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.767" endtime="20201112 09:45:14.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.793" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.791" endtime="20201112 09:45:14.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.798" level="INFO">VALUE: [0.047640889, 0.057670472, 0.067700806, 0.077730569, 0.087760681, 0.097790458, 0.107821042, 0.117851806, 0.12788275, 0.137914097, 0.147945139, 0.157975444, 0.168005861, 0.178035958, 0.188065625, 0.198095056, 0.208126014, 0.218155347, 0.228185778, 0.238215972, 0.248247319, 0.258278167, 0.268309472, 0.278339333, 0.288368944, 0.29839875, 0.308428806, 0.318459167, 0.32849075, 0.338521375, 0.348552417, 0.358582333, 0.368612347, 0.378642292, 0.388671833, 0.398700653, 0.408731417, 0.418761625, 0.428792319, 0.438822833, 0.448853444, 0.458883917, 0.468914319, 0.478944, 0.488974028, 0.499004319, 0.509035583, 0.519066208, 0.529097389, 0.539127333, 0.549158639, 0.559189347, 0.569220542, 0.579250167, 0.589279458, 0.599308, 0.609337694, 0.619368417, 0.629399819, 0.639429875, 0.649458833, 0.659487056, 0.669515403, 0.679545139, 0.689575847, 0.699606458, 0.709636667, 0.719667, 0.7296985, 0.73972775, 0.749757403, 0.759787111, 0.769816194, 0.779845431, 0.789875722, 0.799904819, 0.809934181, 0.819964111, 0.829994319, 0.840024292, 0.850054167, 0.860083222, 0.870113542, 0.8801435, 0.890173708, 0.900203986, 0.910235389, 0.920266028, 0.930297403, 0.940328278, 0.950359028, 0.960387875, 0.970416778, 0.980445389, 0.990474542, 1.000503736, 1.010534417, 1.020565708, 1.030596208, 1.040625764] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:14.796" endtime="20201112 09:45:14.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.784" endtime="20201112 09:45:14.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.808" endtime="20201112 09:45:14.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:14.816" endtime="20201112 09:45:14.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.811" endtime="20201112 09:45:14.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.803" endtime="20201112 09:45:14.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.107" endtime="20201112 09:45:14.841"></status>
</kw>
<msg timestamp="20201112 09:45:14.842" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.864" endtime="20201112 09:45:16.980"></status>
</kw>
<msg timestamp="20201112 09:45:16.981" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6132017, 'wakeups': [6142056, 6152056, 6162056, 6172056, 6182056, 6192...</msg>
<status status="PASS" starttime="20201112 09:45:14.861" endtime="20201112 09:45:16.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6132017, 'wakeups': [6142056, 6152056, 6162056, 6172056, 6182056, 6192...</msg>
<status status="PASS" starttime="20201112 09:45:16.984" endtime="20201112 09:45:16.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.991" endtime="20201112 09:45:16.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.854" endtime="20201112 09:45:16.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.847" endtime="20201112 09:45:16.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:17.004" level="INFO">${RESULT} = {'wakeups': [6142056, 6152056, 6162056, 6172056, 6182056, 6192056, 6202056, 6212056, 6222056, 6232056, 6242056, 6252056, 6262056, 6272056, 6282056, 6292056, 6302056, 6312056, 6322056, 6332056, 6342056...</msg>
<status status="PASS" starttime="20201112 09:45:16.999" endtime="20201112 09:45:17.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.014" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:17.012" endtime="20201112 09:45:17.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.018" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:17.016" endtime="20201112 09:45:17.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.005" endtime="20201112 09:45:17.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.031" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:17.028" endtime="20201112 09:45:17.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.035" level="INFO">VALUE: 6132017</msg>
<status status="PASS" starttime="20201112 09:45:17.033" endtime="20201112 09:45:17.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.022" endtime="20201112 09:45:17.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.047" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:17.045" endtime="20201112 09:45:17.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.052" level="INFO">VALUE: [6142056, 6152056, 6162056, 6172056, 6182056, 6192056, 6202056, 6212056, 6222056, 6232056, 6242056, 6252056, 6262056, 6272056, 6282056, 6292056, 6302056, 6312056, 6322056, 6332056, 6342056, 6352056, 6362056, 6372056, 6382056, 6392056, 6402056, 6412056, 6422056, 6432056, 6442056, 6452056, 6462056, 6472056, 6482056, 6492056, 6502056, 6512056, 6522056, 6532056, 6542056, 6552056, 6562056, 6572056, 6582056, 6592056, 6602056, 6612056, 6622056, 6632056, 6642056, 6652056, 6662056, 6672056, 6682056, 6692056, 6702056, 6712056, 6722056, 6732056, 6742056, 6752056, 6762056, 6772056, 6782056, 6792056, 6802056, 6812056, 6822056, 6832056, 6842056, 6852056, 6862056, 6872056, 6882056, 6892056, 6902056, 6912056, 6922056, 6932056, 6942056, 6952056, 6962056, 6972056, 6982056, 6992056, 7002056, 7012056, 7022056, 7032056, 7042056, 7052056, 7062056, 7072056, 7082056, 7092056, 7102056, 7112056, 7122056, 7132056]</msg>
<status status="PASS" starttime="20201112 09:45:17.049" endtime="20201112 09:45:17.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.039" endtime="20201112 09:45:17.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.072" endtime="20201112 09:45:17.414"></status>
</kw>
<msg timestamp="20201112 09:45:17.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039323833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:17.068" endtime="20201112 09:45:17.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039323833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:17.422" endtime="20201112 09:45:17.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.440" endtime="20201112 09:45:17.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.061" endtime="20201112 09:45:17.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.055" endtime="20201112 09:45:17.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:17.501" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:17.448" endtime="20201112 09:45:17.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.512" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:17.510" endtime="20201112 09:45:17.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.517" level="INFO">VALUE: 0.039323833</msg>
<status status="PASS" starttime="20201112 09:45:17.514" endtime="20201112 09:45:17.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.503" endtime="20201112 09:45:17.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.530" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:17.528" endtime="20201112 09:45:17.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.534" level="INFO">VALUE: [0.049393111, 0.0594235, 0.069453944, 0.079484403, 0.089513944, 0.099542347, 0.109572625, 0.119602917, 0.129632778, 0.139662292, 0.149692417, 0.159721931, 0.169752347, 0.179782472, 0.189812833, 0.199843958, 0.209874417, 0.219904583, 0.229935667, 0.239966333, 0.249996972, 0.260027556, 0.270058167, 0.280089319, 0.290120986, 0.300151222, 0.310182472, 0.320213278, 0.3302445, 0.340274903, 0.350305125, 0.360335514, 0.370366056, 0.380396139, 0.390426667, 0.400455028, 0.410483708, 0.420513389, 0.430542153, 0.440571306, 0.450600875, 0.460630736, 0.470661736, 0.480690792, 0.490720111, 0.500751181, 0.510781806, 0.520812736, 0.53084225, 0.540872569, 0.550903306, 0.560933694, 0.570964319, 0.580995347, 0.591026389, 0.601056083, 0.611085472, 0.62111525, 0.631146292, 0.641176722, 0.651209347, 0.661242208, 0.671274806, 0.681304931, 0.691335611, 0.701364333, 0.711393653, 0.721422514, 0.731452472, 0.741482264, 0.751512139, 0.761540681, 0.771570194, 0.781598306, 0.791627597, 0.801656875, 0.811686764, 0.821714861, 0.831745181, 0.841774333, 0.851805194, 0.861835611, 0.871866694, 0.88189575, 0.891925972, 0.901956083, 0.911988056, 0.922021556, 0.932053958, 0.942085833, 0.952118167, 0.962149833, 0.972181486, 0.98221225, 0.992242611, 1.002272556, 1.012303056, 1.022332639, 1.032362653, 1.042392569] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:17.532" endtime="20201112 09:45:17.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.520" endtime="20201112 09:45:17.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.543" endtime="20201112 09:45:17.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:17.551" endtime="20201112 09:45:17.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.547" endtime="20201112 09:45:17.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.539" endtime="20201112 09:45:17.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.843" endtime="20201112 09:45:17.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.361" endtime="20201112 09:45:17.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.359" endtime="20201112 09:45:17.578"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:17.583" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.605" endtime="20201112 09:45:19.720"></status>
</kw>
<msg timestamp="20201112 09:45:19.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8864203, 'wakeups': [8874274, 8884273, 8894273, 8904273, 8914273, 8924...</msg>
<status status="PASS" starttime="20201112 09:45:17.601" endtime="20201112 09:45:19.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8864203, 'wakeups': [8874274, 8884273, 8894273, 8904273, 8914273, 8924...</msg>
<status status="PASS" starttime="20201112 09:45:19.724" endtime="20201112 09:45:19.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.731" endtime="20201112 09:45:19.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.593" endtime="20201112 09:45:19.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.588" endtime="20201112 09:45:19.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.744" level="INFO">${RESULT} = {'wakeups': [8874274, 8884273, 8894273, 8904273, 8914273, 8924274, 8934274, 8944274, 8954274, 8964273, 8974273, 8984274, 8994274, 9004273, 9014272, 9024273, 9034274, 9044273, 9054273, 9064274, 9074274...</msg>
<status status="PASS" starttime="20201112 09:45:19.739" endtime="20201112 09:45:19.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.754" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:19.751" endtime="20201112 09:45:19.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.758" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:19.756" endtime="20201112 09:45:19.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.745" endtime="20201112 09:45:19.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.771" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.769" endtime="20201112 09:45:19.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.775" level="INFO">VALUE: 8864203</msg>
<status status="PASS" starttime="20201112 09:45:19.773" endtime="20201112 09:45:19.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.762" endtime="20201112 09:45:19.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.787" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.785" endtime="20201112 09:45:19.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.792" level="INFO">VALUE: [8874274, 8884273, 8894273, 8904273, 8914273, 8924274, 8934274, 8944274, 8954274, 8964273, 8974273, 8984274, 8994274, 9004273, 9014272, 9024273, 9034274, 9044273, 9054273, 9064274, 9074274, 9084273, 9094273, 9104274, 9114274, 9124274, 9134274, 9144274, 9154274, 9164274, 9174274, 9184274, 9194274, 9204274, 9214273, 9224273, 9234274, 9244274, 9254274, 9264274, 9274274, 9284274, 9294274, 9304274, 9314274, 9324274, 9334274, 9344273, 9354273, 9364274, 9374274, 9384273, 9394273, 9404274, 9414274, 9424274, 9434274, 9444273, 9454273, 9464274, 9474274, 9484274, 9494274, 9504273, 9514273, 9524274, 9534274, 9544274, 9554274, 9564274, 9574274, 9584274, 9594273, 9604273, 9614274, 9624274, 9634274, 9644274, 9654274, 9664274, 9674274, 9684274, 9694274, 9704274, 9714274, 9724274, 9734274, 9744274, 9754273, 9764273, 9774273, 9784273, 9794273, 9804273, 9814274, 9824274, 9834274, 9844274, 9854273, 9864273]</msg>
<status status="PASS" starttime="20201112 09:45:19.790" endtime="20201112 09:45:19.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.779" endtime="20201112 09:45:19.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.813" endtime="20201112 09:45:20.156"></status>
</kw>
<msg timestamp="20201112 09:45:20.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044222542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:19.810" endtime="20201112 09:45:20.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044222542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:20.165" endtime="20201112 09:45:20.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.182" endtime="20201112 09:45:20.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.803" endtime="20201112 09:45:20.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.798" endtime="20201112 09:45:20.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:20.244" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:20.191" endtime="20201112 09:45:20.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.254" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:20.252" endtime="20201112 09:45:20.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.259" level="INFO">VALUE: 0.044222542</msg>
<status status="PASS" starttime="20201112 09:45:20.257" endtime="20201112 09:45:20.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.246" endtime="20201112 09:45:20.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.272" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:20.270" endtime="20201112 09:45:20.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.277" level="INFO">VALUE: [0.054323944, 0.064352764, 0.074382181, 0.084411764, 0.094441917, 0.104472778, 0.114502861, 0.124531958, 0.134561806, 0.144589653, 0.154618931, 0.164649486, 0.174679208, 0.184707292, 0.194736208, 0.204766222, 0.214795361, 0.224822333, 0.234851917, 0.244882111, 0.254912236, 0.264940139, 0.274970181, 0.285000903, 0.295031722, 0.305062556, 0.315093708, 0.325124583, 0.335154556, 0.345183681, 0.355213333, 0.365242625, 0.37527325, 0.385301153, 0.395328597, 0.405356375, 0.41538575, 0.425414028, 0.435443583, 0.445473042, 0.455502944, 0.46553225, 0.475563042, 0.485592861, 0.495622208, 0.505651958, 0.515682347, 0.525711403, 0.535741694, 0.545772792, 0.555802833, 0.565831958, 0.57586225, 0.585894375, 0.595927597, 0.6059595, 0.615991125, 0.626020417, 0.636050069, 0.646080806, 0.656110722, 0.666140153, 0.676170903, 0.686200389, 0.696231181, 0.706262611, 0.716292903, 0.726323028, 0.7363535, 0.746382903, 0.756413917, 0.766444014, 0.776473306, 0.786503778, 0.796535708, 0.806566236, 0.816596639, 0.826627444, 0.836657931, 0.846687667, 0.856715986, 0.866744236, 0.876772986, 0.886801194, 0.896828417, 0.906854597, 0.916881597, 0.926909125, 0.93693725, 0.946964694, 0.956994514, 0.967024347, 0.977055528, 0.987085986, 0.997118611, 1.007148528, 1.017179417, 1.0272105, 1.037241139, 1.047272167] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:20.275" endtime="20201112 09:45:20.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.262" endtime="20201112 09:45:20.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.286" endtime="20201112 09:45:20.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:20.295" endtime="20201112 09:45:20.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.290" endtime="20201112 09:45:20.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.281" endtime="20201112 09:45:20.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.584" endtime="20201112 09:45:20.321"></status>
</kw>
<msg timestamp="20201112 09:45:20.321" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.344" endtime="20201112 09:45:22.470"></status>
</kw>
<msg timestamp="20201112 09:45:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11595068, 'wakeups': [11605140, 11615139, 11625138, 11635138, 11645139...</msg>
<status status="PASS" starttime="20201112 09:45:20.340" endtime="20201112 09:45:22.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11595068, 'wakeups': [11605140, 11615139, 11625138, 11635138, 11645139...</msg>
<status status="PASS" starttime="20201112 09:45:22.474" endtime="20201112 09:45:22.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.481" endtime="20201112 09:45:22.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.333" endtime="20201112 09:45:22.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.326" endtime="20201112 09:45:22.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.494" level="INFO">${RESULT} = {'wakeups': [11605140, 11615139, 11625138, 11635138, 11645139, 11655138, 11665138, 11675139, 11685139, 11695139, 11705139, 11715139, 11725139, 11735139, 11745139, 11755138, 11765138, 11775139, 1178513...</msg>
<status status="PASS" starttime="20201112 09:45:22.489" endtime="20201112 09:45:22.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.515" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:22.513" endtime="20201112 09:45:22.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.519" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:22.517" endtime="20201112 09:45:22.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.495" endtime="20201112 09:45:22.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.532" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.530" endtime="20201112 09:45:22.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.536" level="INFO">VALUE: 11595068</msg>
<status status="PASS" starttime="20201112 09:45:22.534" endtime="20201112 09:45:22.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.523" endtime="20201112 09:45:22.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.548" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.546" endtime="20201112 09:45:22.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.553" level="INFO">VALUE: [11605140, 11615139, 11625138, 11635138, 11645139, 11655138, 11665138, 11675139, 11685139, 11695139, 11705139, 11715139, 11725139, 11735139, 11745139, 11755138, 11765138, 11775139, 11785139, 11795139, 11805139, 11815139, 11825139, 11835139, 11845139, 11855139, 11865139, 11875139, 11885139, 11895139, 11905139, 11915139, 11925139, 11935139, 11945139, 11955139, 11965139, 11975138, 11985138, 11995138, 12005138, 12015139, 12025139, 12035139, 12045139, 12055138, 12065138, 12075139, 12085139, 12095139, 12105139, 12115138, 12125138, 12135139, 12145139, 12155139, 12165138, 12175138, 12185139, 12195139, 12205139, 12215139, 12225138, 12235138, 12245139, 12255139, 12265139, 12275139, 12285138, 12295138, 12305139, 12315138, 12325138, 12335139, 12345139, 12355138, 12365138, 12375139, 12385139, 12395139, 12405138, 12415138, 12425138, 12435138, 12445138, 12455138, 12465139, 12475139, 12485139, 12495139, 12505139, 12515139, 12525139, 12535139, 12545139, 12555138, 12565138, 12575139, 12585139, 12595139]</msg>
<status status="PASS" starttime="20201112 09:45:22.551" endtime="20201112 09:45:22.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.540" endtime="20201112 09:45:22.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.572" endtime="20201112 09:45:22.915"></status>
</kw>
<msg timestamp="20201112 09:45:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049389208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.569" endtime="20201112 09:45:22.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049389208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.924" endtime="20201112 09:45:22.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.941" endtime="20201112 09:45:22.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.561" endtime="20201112 09:45:22.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.557" endtime="20201112 09:45:22.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:23.003" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:22.949" endtime="20201112 09:45:23.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.013" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:23.011" endtime="20201112 09:45:23.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.018" level="INFO">VALUE: 0.039285861</msg>
<status status="PASS" starttime="20201112 09:45:23.016" endtime="20201112 09:45:23.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.005" endtime="20201112 09:45:23.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.031" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:23.029" endtime="20201112 09:45:23.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.037" level="INFO">VALUE: [0.049389208, 0.059419069, 0.069449444, 0.079480389, 0.08951225, 0.099541375, 0.109573069, 0.119604306, 0.129635042, 0.139665444, 0.149697417, 0.159728806, 0.169758833, 0.179788625, 0.189817847, 0.199846792, 0.209877653, 0.219908958, 0.229940181, 0.239969139, 0.249999278, 0.260028097, 0.270056875, 0.280085694, 0.290115889, 0.300146694, 0.310177514, 0.320206861, 0.330236208, 0.340264667, 0.350295194, 0.360325097, 0.370355083, 0.380386264, 0.39041625, 0.400446653, 0.410477292, 0.420506778, 0.430537528, 0.440567903, 0.450598875, 0.460630222, 0.470660458, 0.480690181, 0.490720403, 0.500749806, 0.510780222, 0.520812736, 0.530844167, 0.54087625, 0.550907861, 0.560938625, 0.570969819, 0.581001528, 0.591033208, 0.601065139, 0.611096208, 0.621126819, 0.631159667, 0.641190389, 0.651222944, 0.661254111, 0.671284819, 0.681315833, 0.691348931, 0.701381569, 0.711413903, 0.721446056, 0.731476069, 0.741505944, 0.751538403, 0.761568486, 0.771599194, 0.781631306, 0.791662333, 0.801692458, 0.811722417, 0.821753167, 0.831786458, 0.841819958, 0.851851556, 0.861883917, 0.871915611, 0.881946597, 0.891977708, 0.902008611, 0.912041097, 0.922072583, 0.932104125, 0.942134958, 0.952165972, 0.962196903, 0.972227861, 0.982258194, 0.992287861, 1.002316958, 1.012348903, 1.022382167, 1.032414097, 1.042445556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:23.034" endtime="20201112 09:45:23.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.021" endtime="20201112 09:45:23.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.045" endtime="20201112 09:45:23.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:23.053" endtime="20201112 09:45:23.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.049" endtime="20201112 09:45:23.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.041" endtime="20201112 09:45:23.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.323" endtime="20201112 09:45:23.079"></status>
</kw>
<msg timestamp="20201112 09:45:23.080" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.100" endtime="20201112 09:45:25.226"></status>
</kw>
<msg timestamp="20201112 09:45:25.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14343649, 'wakeups': [14353720, 14363719, 14373720, 14383720, 14393720...</msg>
<status status="PASS" starttime="20201112 09:45:23.097" endtime="20201112 09:45:25.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14343649, 'wakeups': [14353720, 14363719, 14373720, 14383720, 14393720...</msg>
<status status="PASS" starttime="20201112 09:45:25.230" endtime="20201112 09:45:25.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.237" endtime="20201112 09:45:25.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.090" endtime="20201112 09:45:25.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.085" endtime="20201112 09:45:25.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:25.250" level="INFO">${RESULT} = {'wakeups': [14353720, 14363719, 14373720, 14383720, 14393720, 14403720, 14413719, 14423719, 14433720, 14443720, 14453720, 14463719, 14473719, 14483720, 14493720, 14503720, 14513720, 14523720, 1453372...</msg>
<status status="PASS" starttime="20201112 09:45:25.246" endtime="20201112 09:45:25.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.260" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:25.258" endtime="20201112 09:45:25.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.265" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:25.262" endtime="20201112 09:45:25.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.252" endtime="20201112 09:45:25.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.277" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:25.275" endtime="20201112 09:45:25.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.282" level="INFO">VALUE: 14343649</msg>
<status status="PASS" starttime="20201112 09:45:25.279" endtime="20201112 09:45:25.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.268" endtime="20201112 09:45:25.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.294" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:25.292" endtime="20201112 09:45:25.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.301" level="INFO">VALUE: [14353720, 14363719, 14373720, 14383720, 14393720, 14403720, 14413719, 14423719, 14433720, 14443720, 14453720, 14463719, 14473719, 14483720, 14493720, 14503720, 14513720, 14523720, 14533720, 14543720, 14553720, 14563720, 14573720, 14583720, 14593719, 14603719, 14613720, 14623720, 14633720, 14643720, 14653720, 14663720, 14673719, 14683718, 14693719, 14703720, 14713720, 14723720, 14733719, 14743719, 14753720, 14763720, 14773720, 14783720, 14793720, 14803720, 14813720, 14823720, 14833720, 14843720, 14853720, 14863719, 14873719, 14883720, 14893720, 14903720, 14913720, 14923720, 14933720, 14943719, 14953719, 14963720, 14973720, 14983720, 14993720, 15003719, 15013719, 15023720, 15033720, 15043720, 15053720, 15063720, 15073720, 15083720, 15093720, 15103720, 15113720, 15123720, 15133720, 15143720, 15153720, 15163720, 15173720, 15183720, 15193720, 15203720, 15213720, 15223720, 15233720, 15243720, 15253720, 15263720, 15273720, 15283720, 15293720, 15303719, 15313719, 15323720, 15333720, 15343720]</msg>
<status status="PASS" starttime="20201112 09:45:25.297" endtime="20201112 09:45:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.285" endtime="20201112 09:45:25.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.320" endtime="20201112 09:45:25.664"></status>
</kw>
<msg timestamp="20201112 09:45:25.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:25.317" endtime="20201112 09:45:25.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:25.672" endtime="20201112 09:45:25.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.690" endtime="20201112 09:45:25.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.310" endtime="20201112 09:45:25.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.305" endtime="20201112 09:45:25.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:25.751" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:25.698" endtime="20201112 09:45:25.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.762" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:25.759" endtime="20201112 09:45:25.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.766" level="INFO">VALUE: 0.037697528</msg>
<status status="PASS" starttime="20201112 09:45:25.764" endtime="20201112 09:45:25.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.753" endtime="20201112 09:45:25.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.779" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:25.777" endtime="20201112 09:45:25.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.784" level="INFO">VALUE: [0.047802208, 0.057833792, 0.067868486, 0.07790075, 0.087934375, 0.097966625, 0.107997847, 0.118028347, 0.128060667, 0.138090403, 0.148120389, 0.158149278, 0.168178333, 0.178208153, 0.188237986, 0.198267597, 0.208298167, 0.218328444, 0.228358444, 0.238386722, 0.248416097, 0.258445292, 0.268474847, 0.2785045, 0.288534431, 0.298564069, 0.308595333, 0.318625736, 0.328658569, 0.338691208, 0.348723931, 0.358754931, 0.368784306, 0.378812347, 0.388844458, 0.398876514, 0.408907389, 0.418938583, 0.428968472, 0.438999625, 0.449031375, 0.459061722, 0.469093403, 0.479125375, 0.489157125, 0.499188069, 0.509219583, 0.519250333, 0.529281222, 0.539312361, 0.549343556, 0.559372694, 0.569404208, 0.579435903, 0.589467222, 0.599498222, 0.60952825, 0.619560306, 0.629592472, 0.639623042, 0.649654694, 0.659686694, 0.669718639, 0.679749694, 0.689780958, 0.699811042, 0.709842986, 0.719875889, 0.729908556, 0.7399405, 0.749972347, 0.760003861, 0.770035653, 0.780067208, 0.790099597, 0.800130889, 0.810162181, 0.820195222, 0.830227875, 0.840261514, 0.850294972, 0.860327958, 0.870360875, 0.880393167, 0.8904255, 0.900456458, 0.910488958, 0.920522861, 0.93055675, 0.940589181, 0.950623431, 0.960657611, 0.970690944, 0.980722778, 0.990755444, 1.000787319, 1.010819333, 1.020852903, 1.030885681, 1.040917847] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:25.782" endtime="20201112 09:45:25.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.769" endtime="20201112 09:45:25.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.793" endtime="20201112 09:45:25.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:25.801" endtime="20201112 09:45:25.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.796" endtime="20201112 09:45:25.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.788" endtime="20201112 09:45:25.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.081" endtime="20201112 09:45:25.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.580" endtime="20201112 09:45:25.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.578" endtime="20201112 09:45:25.828"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:25.834" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.856" endtime="20201112 09:45:27.985"></status>
</kw>
<msg timestamp="20201112 09:45:27.986" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17090833, 'wakeups': [17100938, 17110938, 17120937, 17130937, 17140937...</msg>
<status status="PASS" starttime="20201112 09:45:25.853" endtime="20201112 09:45:27.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17090833, 'wakeups': [17100938, 17110938, 17120937, 17130937, 17140937...</msg>
<status status="PASS" starttime="20201112 09:45:27.989" endtime="20201112 09:45:27.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.996" endtime="20201112 09:45:28.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.845" endtime="20201112 09:45:28.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.839" endtime="20201112 09:45:28.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:28.009" level="INFO">${RESULT} = {'wakeups': [17100938, 17110938, 17120937, 17130937, 17140937, 17150937, 17160938, 17170937, 17180937, 17190937, 17200937, 17210937, 17220937, 17230937, 17240937, 17250937, 17260937, 17270937, 1728093...</msg>
<status status="PASS" starttime="20201112 09:45:28.004" endtime="20201112 09:45:28.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.019" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:28.016" endtime="20201112 09:45:28.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.023" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:28.021" endtime="20201112 09:45:28.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.011" endtime="20201112 09:45:28.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.036" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:28.033" endtime="20201112 09:45:28.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.040" level="INFO">VALUE: 17090833</msg>
<status status="PASS" starttime="20201112 09:45:28.038" endtime="20201112 09:45:28.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.027" endtime="20201112 09:45:28.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.052" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:28.050" endtime="20201112 09:45:28.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.057" level="INFO">VALUE: [17100938, 17110938, 17120937, 17130937, 17140937, 17150937, 17160938, 17170937, 17180937, 17190937, 17200937, 17210937, 17220937, 17230937, 17240937, 17250937, 17260937, 17270937, 17280937, 17290937, 17300937, 17310937, 17320937, 17330937, 17340937, 17350937, 17360937, 17370937, 17380938, 17390937, 17400937, 17410937, 17420937, 17430937, 17440937, 17450937, 17460938, 17470937, 17480937, 17490937, 17500937, 17510937, 17520938, 17530937, 17540937, 17550937, 17560937, 17570937, 17580937, 17590937, 17600938, 17610937, 17620937, 17630937, 17640937, 17650937, 17660937, 17670937, 17680937, 17690937, 17700938, 17710937, 17720937, 17730937, 17740937, 17750937, 17760937, 17770937, 17780937, 17790937, 17800937, 17810937, 17820937, 17830938, 17840937, 17850937, 17860937, 17870937, 17880937, 17890938, 17900937, 17910937, 17920937, 17930937, 17940937, 17950937, 17960937, 17970937, 17980937, 17990937, 18000937, 18010937, 18020937, 18030937, 18040937, 18050937, 18060937, 18070937, 18080937, 18090937]</msg>
<status status="PASS" starttime="20201112 09:45:28.055" endtime="20201112 09:45:28.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.044" endtime="20201112 09:45:28.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.076" endtime="20201112 09:45:28.421"></status>
</kw>
<msg timestamp="20201112 09:45:28.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045919931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056057014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.072" endtime="20201112 09:45:28.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045919931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056057014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.429" endtime="20201112 09:45:28.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.447" endtime="20201112 09:45:28.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.065" endtime="20201112 09:45:28.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.061" endtime="20201112 09:45:28.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:28.509" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:28.455" endtime="20201112 09:45:28.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.520" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:28.517" endtime="20201112 09:45:28.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.524" level="INFO">VALUE: 0.045919931</msg>
<status status="PASS" starttime="20201112 09:45:28.522" endtime="20201112 09:45:28.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.511" endtime="20201112 09:45:28.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.538" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:28.535" endtime="20201112 09:45:28.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.543" level="INFO">VALUE: [0.056057014, 0.066089667, 0.076121931, 0.086154639, 0.096188417, 0.106221472, 0.116256458, 0.126288167, 0.136322389, 0.14635625, 0.156389417, 0.166422403, 0.176456472, 0.186490278, 0.196523389, 0.206555847, 0.216588472, 0.226620542, 0.236653042, 0.246684875, 0.256717889, 0.266749875, 0.276782222, 0.286814139, 0.296846097, 0.306877222, 0.316909181, 0.326941069, 0.336974111, 0.347005333, 0.357038361, 0.367070361, 0.377102764, 0.387135111, 0.397167486, 0.407199458, 0.417233444, 0.427264333, 0.437296722, 0.447328458, 0.457360819, 0.467393292, 0.477427097, 0.487458514, 0.497490792, 0.507522403, 0.517553792, 0.527585333, 0.537618014, 0.547650583, 0.557684333, 0.567714778, 0.577746361, 0.587776528, 0.597808597, 0.607838806, 0.617869222, 0.627900069, 0.637932153, 0.647963181, 0.657997931, 0.668029139, 0.678060764, 0.688092611, 0.698124486, 0.708155597, 0.718186181, 0.728217389, 0.738249542, 0.748280944, 0.758312861, 0.768345111, 0.778378083, 0.788412278, 0.798444222, 0.808476194, 0.818509056, 0.828542944, 0.838578014, 0.848613556, 0.858647194, 0.868681458, 0.878717014, 0.888751486, 0.898785722, 0.908819208, 0.918853, 0.928886764, 0.938919556, 0.948952194, 0.958983681, 0.969015167, 0.979046472, 0.989079208, 0.999112403, 1.009145306, 1.019177667, 1.029210458, 1.039243319, 1.049274708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:28.540" endtime="20201112 09:45:28.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.527" endtime="20201112 09:45:28.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.552" endtime="20201112 09:45:28.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:28.561" endtime="20201112 09:45:28.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.556" endtime="20201112 09:45:28.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.547" endtime="20201112 09:45:28.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.835" endtime="20201112 09:45:28.587"></status>
</kw>
<msg timestamp="20201112 09:45:28.587" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.609" endtime="20201112 09:45:30.735"></status>
</kw>
<msg timestamp="20201112 09:45:30.736" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19834874, 'wakeups': [19844978, 19854978, 19864979, 19874979, 19884978...</msg>
<status status="PASS" starttime="20201112 09:45:28.605" endtime="20201112 09:45:30.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19834874, 'wakeups': [19844978, 19854978, 19864979, 19874979, 19884978...</msg>
<status status="PASS" starttime="20201112 09:45:30.739" endtime="20201112 09:45:30.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.747" endtime="20201112 09:45:30.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.598" endtime="20201112 09:45:30.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.593" endtime="20201112 09:45:30.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:30.760" level="INFO">${RESULT} = {'wakeups': [19844978, 19854978, 19864979, 19874979, 19884978, 19894978, 19904978, 19914978, 19924978, 19934978, 19944978, 19954978, 19964978, 19974978, 19984978, 19994978, 20004978, 20014978, 2002497...</msg>
<status status="PASS" starttime="20201112 09:45:30.755" endtime="20201112 09:45:30.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.770" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:30.767" endtime="20201112 09:45:30.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.774" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:30.772" endtime="20201112 09:45:30.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.762" endtime="20201112 09:45:30.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.786" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:30.784" endtime="20201112 09:45:30.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.791" level="INFO">VALUE: 19834874</msg>
<status status="PASS" starttime="20201112 09:45:30.789" endtime="20201112 09:45:30.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.778" endtime="20201112 09:45:30.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.803" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:30.801" endtime="20201112 09:45:30.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.810" level="INFO">VALUE: [19844978, 19854978, 19864979, 19874979, 19884978, 19894978, 19904978, 19914978, 19924978, 19934978, 19944978, 19954978, 19964978, 19974978, 19984978, 19994978, 20004978, 20014978, 20024978, 20034978, 20044978, 20054979, 20064979, 20074978, 20084978, 20094978, 20104979, 20114978, 20124978, 20134979, 20144978, 20154978, 20164978, 20174979, 20184978, 20194978, 20204979, 20214978, 20224979, 20234978, 20244978, 20254978, 20264978, 20274978, 20284978, 20294978, 20304978, 20314978, 20324978, 20334978, 20344978, 20354978, 20364978, 20374978, 20384979, 20394978, 20404978, 20414978, 20424978, 20434979, 20444978, 20454978, 20464978, 20474978, 20484979, 20494978, 20504978, 20514978, 20524978, 20534978, 20544978, 20554978, 20564978, 20574978, 20584978, 20594978, 20604978, 20614978, 20624978, 20634978, 20644978, 20654978, 20664978, 20674978, 20684978, 20694978, 20704978, 20714978, 20724979, 20734978, 20744978, 20754978, 20764978, 20774978, 20784979, 20794978, 20804978, 20814978, 20824978, 20834978]</msg>
<status status="PASS" starttime="20201112 09:45:30.805" endtime="20201112 09:45:30.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.795" endtime="20201112 09:45:30.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.829" endtime="20201112 09:45:31.169"></status>
</kw>
<msg timestamp="20201112 09:45:31.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038403681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:30.826" endtime="20201112 09:45:31.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038403681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:31.178" endtime="20201112 09:45:31.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.195" endtime="20201112 09:45:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.819" endtime="20201112 09:45:31.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.814" endtime="20201112 09:45:31.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:31.256" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:31.204" endtime="20201112 09:45:31.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.267" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:31.265" endtime="20201112 09:45:31.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.271" level="INFO">VALUE: 0.038403681</msg>
<status status="PASS" starttime="20201112 09:45:31.269" endtime="20201112 09:45:31.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.258" endtime="20201112 09:45:31.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.285" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:31.282" endtime="20201112 09:45:31.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.289" level="INFO">VALUE: [0.048541069, 0.058572764, 0.068606597, 0.078639069, 0.088670708, 0.098702194, 0.108735806, 0.118768389, 0.128800153, 0.138831944, 0.148864556, 0.158897556, 0.168930361, 0.178962486, 0.188995042, 0.199027625, 0.209059903, 0.219090694, 0.229123083, 0.239155444, 0.249188778, 0.259221806, 0.269253764, 0.279283708, 0.289316222, 0.299348889, 0.309382278, 0.319414194, 0.329446083, 0.339478139, 0.349508597, 0.359539833, 0.369571361, 0.379604542, 0.389635583, 0.399667389, 0.409700167, 0.419729861, 0.429762972, 0.439794278, 0.449825639, 0.459855111, 0.469885278, 0.479914403, 0.489945514, 0.499976375, 0.510007028, 0.520036569, 0.530066708, 0.540096986, 0.550128167, 0.560159222, 0.570191139, 0.580221569, 0.590253986, 0.600284194, 0.610315486, 0.620346458, 0.630376583, 0.640407653, 0.650436792, 0.660466792, 0.670497222, 0.68052825, 0.690560444, 0.700589875, 0.710620806, 0.720651361, 0.730682306, 0.740712139, 0.750742361, 0.760771042, 0.770801528, 0.780831806, 0.790862611, 0.800892847, 0.810924792, 0.820957361, 0.830989542, 0.841020944, 0.851054167, 0.861085861, 0.87111775, 0.881149361, 0.891181542, 0.901213333, 0.911245389, 0.921275986, 0.931307403, 0.941336778, 0.951369139, 0.961399722, 0.971429819, 0.981460278, 0.99149175, 1.001522403, 1.011553972, 1.021584528, 1.031615514, 1.041645292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:31.287" endtime="20201112 09:45:31.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.275" endtime="20201112 09:45:31.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.298" endtime="20201112 09:45:31.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:31.306" endtime="20201112 09:45:31.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.302" endtime="20201112 09:45:31.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.294" endtime="20201112 09:45:31.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.589" endtime="20201112 09:45:31.334"></status>
</kw>
<msg timestamp="20201112 09:45:31.334" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.355" endtime="20201112 09:45:33.482"></status>
</kw>
<msg timestamp="20201112 09:45:33.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22573599, 'wakeups': [22583704, 22593703, 22603703, 22613703, 22623704...</msg>
<status status="PASS" starttime="20201112 09:45:31.352" endtime="20201112 09:45:33.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22573599, 'wakeups': [22583704, 22593703, 22603703, 22613703, 22623704...</msg>
<status status="PASS" starttime="20201112 09:45:33.486" endtime="20201112 09:45:33.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.492" endtime="20201112 09:45:33.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.345" endtime="20201112 09:45:33.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.340" endtime="20201112 09:45:33.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:33.506" level="INFO">${RESULT} = {'wakeups': [22583704, 22593703, 22603703, 22613703, 22623704, 22633703, 22643703, 22653703, 22663704, 22673703, 22683703, 22693703, 22703703, 22713704, 22723703, 22733703, 22743704, 22753703, 2276370...</msg>
<status status="PASS" starttime="20201112 09:45:33.501" endtime="20201112 09:45:33.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.516" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:33.513" endtime="20201112 09:45:33.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.520" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:33.518" endtime="20201112 09:45:33.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.507" endtime="20201112 09:45:33.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.537" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:33.535" endtime="20201112 09:45:33.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.542" level="INFO">VALUE: 22573599</msg>
<status status="PASS" starttime="20201112 09:45:33.540" endtime="20201112 09:45:33.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.529" endtime="20201112 09:45:33.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.554" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:33.552" endtime="20201112 09:45:33.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.559" level="INFO">VALUE: [22583704, 22593703, 22603703, 22613703, 22623704, 22633703, 22643703, 22653703, 22663704, 22673703, 22683703, 22693703, 22703703, 22713704, 22723703, 22733703, 22743704, 22753703, 22763703, 22773703, 22783704, 22793703, 22803703, 22813703, 22823703, 22833703, 22843703, 22853703, 22863703, 22873703, 22883703, 22893703, 22903703, 22913703, 22923703, 22933703, 22943703, 22953703, 22963703, 22973703, 22983703, 22993703, 23003703, 23013703, 23023703, 23033703, 23043704, 23053703, 23063703, 23073703, 23083703, 23093703, 23103703, 23113703, 23123703, 23133703, 23143704, 23153703, 23163703, 23173703, 23183703, 23193703, 23203703, 23213704, 23223703, 23233703, 23243703, 23253703, 23263703, 23273703, 23283703, 23293703, 23303703, 23313703, 23323703, 23333704, 23343703, 23353703, 23363703, 23373704, 23383703, 23393703, 23403703, 23413703, 23423703, 23433704, 23443703, 23453704, 23463703, 23473703, 23483703, 23493703, 23503703, 23513703, 23523703, 23533703, 23543703, 23553703, 23563703, 23573703]</msg>
<status status="PASS" starttime="20201112 09:45:33.556" endtime="20201112 09:45:33.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.545" endtime="20201112 09:45:33.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.578" endtime="20201112 09:45:33.921"></status>
</kw>
<msg timestamp="20201112 09:45:33.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037819361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047954694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:33.574" endtime="20201112 09:45:33.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037819361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047954694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:33.929" endtime="20201112 09:45:33.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.946" endtime="20201112 09:45:33.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.567" endtime="20201112 09:45:33.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.563" endtime="20201112 09:45:33.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:34.008" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:33.956" endtime="20201112 09:45:34.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.019" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:34.016" endtime="20201112 09:45:34.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.023" level="INFO">VALUE: 0.037819361</msg>
<status status="PASS" starttime="20201112 09:45:34.021" endtime="20201112 09:45:34.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.010" endtime="20201112 09:45:34.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.036" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:34.034" endtime="20201112 09:45:34.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.041" level="INFO">VALUE: [0.047954694, 0.057983778, 0.068014764, 0.078046431, 0.088079292, 0.098109208, 0.108141708, 0.118174417, 0.128208639, 0.138239972, 0.148270847, 0.158300625, 0.168330111, 0.178362069, 0.188391653, 0.198422208, 0.208454514, 0.218484306, 0.228515667, 0.238546639, 0.248578986, 0.258609764, 0.268642069, 0.278674097, 0.288706708, 0.298738347, 0.308769736, 0.31880175, 0.328834361, 0.338866319, 0.348897361, 0.358929417, 0.368961681, 0.378992875, 0.389023639, 0.3990545, 0.40908725, 0.419118347, 0.429150667, 0.439182639, 0.449214764, 0.459246444, 0.469277194, 0.479307778, 0.489339514, 0.499371069, 0.509404972, 0.519435125, 0.529467472, 0.539498931, 0.549531125, 0.559562833, 0.569595542, 0.579628306, 0.589660958, 0.599692389, 0.609724375, 0.619755083, 0.629787028, 0.639818597, 0.649850917, 0.659883194, 0.669915681, 0.679948542, 0.689978972, 0.700010375, 0.710043222, 0.720075292, 0.730107389, 0.740139403, 0.750171458, 0.760203542, 0.770235708, 0.780266569, 0.790298458, 0.800331514, 0.810361944, 0.820393556, 0.830425514, 0.840459153, 0.850490431, 0.860521486, 0.870553208, 0.880584722, 0.890615833, 0.90064725, 0.910676639, 0.920708264, 0.930738514, 0.940769597, 0.950800417, 0.960830792, 0.970862403, 0.980893903, 0.990924986, 1.000957056, 1.010988528, 1.021019486, 1.031051486, 1.041083125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:34.039" endtime="20201112 09:45:34.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.027" endtime="20201112 09:45:34.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.051" endtime="20201112 09:45:34.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:34.059" endtime="20201112 09:45:34.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.054" endtime="20201112 09:45:34.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.046" endtime="20201112 09:45:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.336" endtime="20201112 09:45:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.831" endtime="20201112 09:45:34.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.829" endtime="20201112 09:45:34.085"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:34.091" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.112" endtime="20201112 09:45:36.238"></status>
</kw>
<msg timestamp="20201112 09:45:36.240" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25321376, 'wakeups': [25331515, 25341514, 25351514, 25361514, 25371514...</msg>
<status status="PASS" starttime="20201112 09:45:34.108" endtime="20201112 09:45:36.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.246" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25321376, 'wakeups': [25331515, 25341514, 25351514, 25361514, 25371514...</msg>
<status status="PASS" starttime="20201112 09:45:36.242" endtime="20201112 09:45:36.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.248" endtime="20201112 09:45:36.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.101" endtime="20201112 09:45:36.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.096" endtime="20201112 09:45:36.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.261" level="INFO">${RESULT} = {'wakeups': [25331515, 25341514, 25351514, 25361514, 25371514, 25381514, 25391514, 25401514, 25411514, 25421514, 25431514, 25441514, 25451514, 25461514, 25471514, 25481514, 25491514, 25501514, 2551151...</msg>
<status status="PASS" starttime="20201112 09:45:36.257" endtime="20201112 09:45:36.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.271" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:36.269" endtime="20201112 09:45:36.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.276" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:36.274" endtime="20201112 09:45:36.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.263" endtime="20201112 09:45:36.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.288" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.286" endtime="20201112 09:45:36.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.293" level="INFO">VALUE: 25321376</msg>
<status status="PASS" starttime="20201112 09:45:36.290" endtime="20201112 09:45:36.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.279" endtime="20201112 09:45:36.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.305" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.303" endtime="20201112 09:45:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.310" level="INFO">VALUE: [25331515, 25341514, 25351514, 25361514, 25371514, 25381514, 25391514, 25401514, 25411514, 25421514, 25431514, 25441514, 25451514, 25461514, 25471514, 25481514, 25491514, 25501514, 25511514, 25521514, 25531514, 25541514, 25551514, 25561514, 25571514, 25581514, 25591514, 25601514, 25611514, 25621514, 25631514, 25641514, 25651514, 25661514, 25671514, 25681514, 25691514, 25701514, 25711514, 25721514, 25731514, 25741514, 25751514, 25761514, 25771514, 25781514, 25791514, 25801514, 25811514, 25821514, 25831514, 25841514, 25851514, 25861514, 25871514, 25881514, 25891514, 25901514, 25911514, 25921514, 25931514, 25941514, 25951514, 25961514, 25971514, 25981514, 25991514, 26001514, 26011514, 26021514, 26031514, 26041514, 26051514, 26061514, 26071514, 26081514, 26091514, 26101514, 26111514, 26121514, 26131514, 26141514, 26151514, 26161514, 26171514, 26181514, 26191514, 26201514, 26211514, 26221514, 26231514, 26241514, 26251514, 26261514, 26271514, 26281514, 26291514, 26301514, 26311514, 26321514]</msg>
<status status="PASS" starttime="20201112 09:45:36.307" endtime="20201112 09:45:36.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.296" endtime="20201112 09:45:36.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.329" endtime="20201112 09:45:36.671"></status>
</kw>
<msg timestamp="20201112 09:45:36.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043570486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053741833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.326" endtime="20201112 09:45:36.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043570486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053741833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.680" endtime="20201112 09:45:36.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.698" endtime="20201112 09:45:36.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.319" endtime="20201112 09:45:36.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.314" endtime="20201112 09:45:36.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.759" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:36.706" endtime="20201112 09:45:36.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.770" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.768" endtime="20201112 09:45:36.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.774" level="INFO">VALUE: 0.043570486</msg>
<status status="PASS" starttime="20201112 09:45:36.772" endtime="20201112 09:45:36.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.761" endtime="20201112 09:45:36.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.787" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.785" endtime="20201112 09:45:36.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.792" level="INFO">VALUE: [0.053741833, 0.063771792, 0.073802903, 0.083833597, 0.093865028, 0.103896792, 0.113927903, 0.123959056, 0.133988972, 0.144017514, 0.154046264, 0.164074819, 0.174105083, 0.184134917, 0.194165167, 0.204194931, 0.214225014, 0.224254417, 0.234284417, 0.244313986, 0.254344347, 0.264375153, 0.274405375, 0.284434792, 0.294464292, 0.304493444, 0.314523236, 0.324553111, 0.334584069, 0.344615681, 0.354648069, 0.364678264, 0.374709056, 0.384740069, 0.394771458, 0.404801944, 0.414832292, 0.424862861, 0.434894153, 0.444924417, 0.454954903, 0.464985583, 0.475017194, 0.485047694, 0.495078722, 0.505110389, 0.515142028, 0.525171861, 0.535202208, 0.545233042, 0.555263889, 0.565294236, 0.575325097, 0.585355514, 0.595385347, 0.6054155, 0.615446306, 0.625476306, 0.635506764, 0.645537153, 0.655567694, 0.665597986, 0.675627986, 0.685657278, 0.695687319, 0.705717778, 0.715748486, 0.725778403, 0.735808625, 0.745839625, 0.755870333, 0.765902681, 0.775935014, 0.785966931, 0.795998792, 0.806030403, 0.816062458, 0.826095486, 0.836129, 0.846162528, 0.856193514, 0.866224722, 0.876256111, 0.886286736, 0.896317597, 0.906347306, 0.916377181, 0.926405722, 0.936434125, 0.946462597, 0.956492819, 0.966522319, 0.976552569, 0.986581667, 0.996610639, 1.006639153, 1.016668486, 1.026697181, 1.036729583, 1.046760514] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:36.790" endtime="20201112 09:45:36.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.778" endtime="20201112 09:45:36.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.801" endtime="20201112 09:45:36.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:36.810" endtime="20201112 09:45:36.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.806" endtime="20201112 09:45:36.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.797" endtime="20201112 09:45:36.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.092" endtime="20201112 09:45:36.836"></status>
</kw>
<msg timestamp="20201112 09:45:36.837" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.858" endtime="20201112 09:45:38.985"></status>
</kw>
<msg timestamp="20201112 09:45:38.987" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28060234, 'wakeups': [28070372, 28080372, 28090372, 28100372, 28110372...</msg>
<status status="PASS" starttime="20201112 09:45:36.854" endtime="20201112 09:45:38.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.994" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28060234, 'wakeups': [28070372, 28080372, 28090372, 28100372, 28110372...</msg>
<status status="PASS" starttime="20201112 09:45:38.989" endtime="20201112 09:45:38.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.996" endtime="20201112 09:45:39.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.847" endtime="20201112 09:45:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.842" endtime="20201112 09:45:39.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:39.009" level="INFO">${RESULT} = {'wakeups': [28070372, 28080372, 28090372, 28100372, 28110372, 28120372, 28130372, 28140372, 28150372, 28160372, 28170372, 28180372, 28190372, 28200372, 28210372, 28220372, 28230372, 28240372, 2825037...</msg>
<status status="PASS" starttime="20201112 09:45:39.004" endtime="20201112 09:45:39.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.019" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:39.017" endtime="20201112 09:45:39.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.024" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:39.022" endtime="20201112 09:45:39.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.011" endtime="20201112 09:45:39.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.036" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:39.034" endtime="20201112 09:45:39.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.040" level="INFO">VALUE: 28060234</msg>
<status status="PASS" starttime="20201112 09:45:39.038" endtime="20201112 09:45:39.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.027" endtime="20201112 09:45:39.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.052" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:39.050" endtime="20201112 09:45:39.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.060" level="INFO">VALUE: [28070372, 28080372, 28090372, 28100372, 28110372, 28120372, 28130372, 28140372, 28150372, 28160372, 28170372, 28180372, 28190372, 28200372, 28210372, 28220372, 28230372, 28240372, 28250372, 28260372, 28270372, 28280372, 28290372, 28300372, 28310372, 28320372, 28330372, 28340372, 28350372, 28360372, 28370372, 28380372, 28390372, 28400372, 28410372, 28420372, 28430372, 28440372, 28450372, 28460372, 28470372, 28480372, 28490372, 28500372, 28510372, 28520372, 28530372, 28540372, 28550372, 28560372, 28570372, 28580372, 28590372, 28600372, 28610372, 28620372, 28630372, 28640372, 28650372, 28660372, 28670372, 28680372, 28690372, 28700372, 28710372, 28720372, 28730372, 28740372, 28750372, 28760372, 28770372, 28780372, 28790372, 28800372, 28810372, 28820372, 28830372, 28840372, 28850372, 28860372, 28870372, 28880372, 28890372, 28900372, 28910372, 28920372, 28930372, 28940372, 28950372, 28960372, 28970372, 28980372, 28990372, 29000372, 29010372, 29020372, 29030372, 29040372, 29050372, 29060372]</msg>
<status status="PASS" starttime="20201112 09:45:39.055" endtime="20201112 09:45:39.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.044" endtime="20201112 09:45:39.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.079" endtime="20201112 09:45:39.422"></status>
</kw>
<msg timestamp="20201112 09:45:39.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038810444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:39.076" endtime="20201112 09:45:39.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038810444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:39.431" endtime="20201112 09:45:39.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.448" endtime="20201112 09:45:39.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.069" endtime="20201112 09:45:39.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.064" endtime="20201112 09:45:39.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:39.509" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:39.457" endtime="20201112 09:45:39.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.519" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:39.517" endtime="20201112 09:45:39.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.524" level="INFO">VALUE: 0.038810444</msg>
<status status="PASS" starttime="20201112 09:45:39.522" endtime="20201112 09:45:39.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.511" endtime="20201112 09:45:39.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.537" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:39.535" endtime="20201112 09:45:39.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.542" level="INFO">VALUE: [0.048979167, 0.059009417, 0.069040458, 0.079072069, 0.089102653, 0.099133125, 0.109163347, 0.119192583, 0.129222986, 0.139253292, 0.149283986, 0.159314542, 0.1693445, 0.179373597, 0.189403417, 0.199433875, 0.209466639, 0.219497861, 0.229529056, 0.239558194, 0.249586653, 0.259615236, 0.269645528, 0.279675861, 0.289706764, 0.299737403, 0.309767903, 0.319797139, 0.3298265, 0.339856472, 0.349886972, 0.359916792, 0.36994625, 0.379975514, 0.390005653, 0.400036444, 0.410066472, 0.420096319, 0.430126139, 0.440156319, 0.450186764, 0.460215819, 0.470244542, 0.480273194, 0.490301, 0.500328764, 0.510356875, 0.520385458, 0.530413292, 0.540440875, 0.550469111, 0.560497097, 0.570526889, 0.580554875, 0.590583639, 0.60061275, 0.610641931, 0.62067175, 0.630702736, 0.640731903, 0.650760972, 0.660789667, 0.670819458, 0.680849736, 0.690879375, 0.700908569, 0.710939236, 0.720968694, 0.730998542, 0.741027431, 0.751056, 0.761084181, 0.771113889, 0.781142625, 0.791172875, 0.801202986, 0.811232125, 0.821262486, 0.831293222, 0.841323264, 0.851352667, 0.861381125, 0.871410861, 0.881438319, 0.891466111, 0.901494222, 0.911521903, 0.921550444, 0.931580403, 0.941609361, 0.951639222, 0.961669208, 0.971701444, 0.981733222, 0.991764917, 1.001794056, 1.011824944, 1.021855958, 1.031886597, 1.041916153] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:39.539" endtime="20201112 09:45:39.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.527" endtime="20201112 09:45:39.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.550" endtime="20201112 09:45:39.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:39.558" endtime="20201112 09:45:39.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.554" endtime="20201112 09:45:39.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.546" endtime="20201112 09:45:39.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.838" endtime="20201112 09:45:39.585"></status>
</kw>
<msg timestamp="20201112 09:45:39.586" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.606" endtime="20201112 09:45:41.733"></status>
</kw>
<msg timestamp="20201112 09:45:41.734" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30800293, 'wakeups': [30810432, 30820431, 30830431, 30840431, 30850431...</msg>
<status status="PASS" starttime="20201112 09:45:39.603" endtime="20201112 09:45:41.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.742" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30800293, 'wakeups': [30810432, 30820431, 30830431, 30840431, 30850431...</msg>
<status status="PASS" starttime="20201112 09:45:41.737" endtime="20201112 09:45:41.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.744" endtime="20201112 09:45:41.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.596" endtime="20201112 09:45:41.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.591" endtime="20201112 09:45:41.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.757" level="INFO">${RESULT} = {'wakeups': [30810432, 30820431, 30830431, 30840431, 30850431, 30860431, 30870431, 30880431, 30890431, 30900431, 30910431, 30920431, 30930431, 30940431, 30950431, 30960431, 30970431, 30980431, 3099043...</msg>
<status status="PASS" starttime="20201112 09:45:41.752" endtime="20201112 09:45:41.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.768" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:41.765" endtime="20201112 09:45:41.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.772" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:41.770" endtime="20201112 09:45:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.759" endtime="20201112 09:45:41.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.784" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.782" endtime="20201112 09:45:41.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.789" level="INFO">VALUE: 30800293</msg>
<status status="PASS" starttime="20201112 09:45:41.786" endtime="20201112 09:45:41.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.776" endtime="20201112 09:45:41.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.801" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.799" endtime="20201112 09:45:41.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.806" level="INFO">VALUE: [30810432, 30820431, 30830431, 30840431, 30850431, 30860431, 30870431, 30880431, 30890431, 30900431, 30910431, 30920431, 30930431, 30940431, 30950431, 30960431, 30970431, 30980431, 30990431, 31000431, 31010431, 31020431, 31030431, 31040431, 31050431, 31060431, 31070431, 31080431, 31090431, 31100431, 31110431, 31120431, 31130431, 31140431, 31150431, 31160431, 31170431, 31180431, 31190431, 31200431, 31210431, 31220431, 31230431, 31240431, 31250431, 31260431, 31270431, 31280431, 31290431, 31300431, 31310431, 31320431, 31330431, 31340431, 31350431, 31360431, 31370431, 31380431, 31390431, 31400431, 31410431, 31420431, 31430431, 31440431, 31450431, 31460431, 31470431, 31480431, 31490431, 31500431, 31510431, 31520431, 31530431, 31540431, 31550431, 31560431, 31570431, 31580431, 31590431, 31600431, 31610431, 31620431, 31630431, 31640431, 31650431, 31660431, 31670431, 31680431, 31690431, 31700431, 31710431, 31720431, 31730431, 31740431, 31750431, 31760431, 31770431, 31780431, 31790431, 31800431]</msg>
<status status="PASS" starttime="20201112 09:45:41.803" endtime="20201112 09:45:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.792" endtime="20201112 09:45:41.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.825" endtime="20201112 09:45:42.168"></status>
</kw>
<msg timestamp="20201112 09:45:42.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047666236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:41.822" endtime="20201112 09:45:42.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:42.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047666236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:42.176" endtime="20201112 09:45:42.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:42.194" endtime="20201112 09:45:42.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.814" endtime="20201112 09:45:42.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.810" endtime="20201112 09:45:42.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:42.255" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:42.203" endtime="20201112 09:45:42.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:42.266" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:42.263" endtime="20201112 09:45:42.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:42.270" level="INFO">VALUE: 0.037495736</msg>
<status status="PASS" starttime="20201112 09:45:42.268" endtime="20201112 09:45:42.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.257" endtime="20201112 09:45:42.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:42.283" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:42.281" endtime="20201112 09:45:42.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:42.289" level="INFO">VALUE: [0.047666236, 0.057694458, 0.067723208, 0.077751375, 0.087781194, 0.097809792, 0.107838986, 0.117868097, 0.12789925, 0.137929986, 0.147960819, 0.157989958, 0.168020861, 0.178053583, 0.188084847, 0.198112653, 0.208139958, 0.218168958, 0.228198569, 0.238229333, 0.24826125, 0.258293, 0.268324653, 0.278357194, 0.288390181, 0.298422583, 0.308454736, 0.318486583, 0.328519292, 0.338550083, 0.348580736, 0.358611903, 0.368642986, 0.378674722, 0.388706847, 0.398737681, 0.408769125, 0.418800875, 0.428832958, 0.438863125, 0.448893375, 0.458924806, 0.468956292, 0.478986542, 0.489018014, 0.499049, 0.509080542, 0.519111083, 0.529142222, 0.539172722, 0.549203431, 0.559234042, 0.569265542, 0.579296653, 0.589328056, 0.599357847, 0.609387833, 0.619417917, 0.629448556, 0.639479153, 0.649510139, 0.659541069, 0.669572833, 0.679604292, 0.689637, 0.699669667, 0.709701653, 0.719732792, 0.729763278, 0.73979325, 0.74982375, 0.759853167, 0.769882486, 0.779913417, 0.789944125, 0.799974667, 0.810005194, 0.820034167, 0.830063236, 0.840091819, 0.850120167, 0.860148153, 0.870177431, 0.880206486, 0.890234667, 0.900262014, 0.910291208, 0.920321097, 0.930350556, 0.940380083, 0.950410861, 0.960440694, 0.970472903, 0.98050275, 0.990533556, 1.000562458, 1.010592486, 1.020621986, 1.030651667, 1.040678972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:42.286" endtime="20201112 09:45:42.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.274" endtime="20201112 09:45:42.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:42.297" endtime="20201112 09:45:42.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:42.305" endtime="20201112 09:45:42.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.301" endtime="20201112 09:45:42.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.293" endtime="20201112 09:45:42.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.587" endtime="20201112 09:45:42.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.088" endtime="20201112 09:45:42.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.086" endtime="20201112 09:45:42.332"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:42.337" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:42.358" endtime="20201112 09:45:44.484"></status>
</kw>
<msg timestamp="20201112 09:45:44.486" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33543856, 'wakeups': [33554028, 33564028, 33574027, 33584028, 33594027...</msg>
<status status="PASS" starttime="20201112 09:45:42.355" endtime="20201112 09:45:44.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33543856, 'wakeups': [33554028, 33564028, 33574027, 33584028, 33594027...</msg>
<status status="PASS" starttime="20201112 09:45:44.488" endtime="20201112 09:45:44.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.495" endtime="20201112 09:45:44.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.348" endtime="20201112 09:45:44.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.342" endtime="20201112 09:45:44.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:44.509" level="INFO">${RESULT} = {'wakeups': [33554028, 33564028, 33574027, 33584028, 33594027, 33604027, 33614027, 33624027, 33634028, 33644027, 33654027, 33664028, 33674027, 33684027, 33694027, 33704028, 33714028, 33724027, 3373402...</msg>
<status status="PASS" starttime="20201112 09:45:44.505" endtime="20201112 09:45:44.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.519" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:44.517" endtime="20201112 09:45:44.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.523" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:44.521" endtime="20201112 09:45:44.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.511" endtime="20201112 09:45:44.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.536" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:44.533" endtime="20201112 09:45:44.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.540" level="INFO">VALUE: 33543856</msg>
<status status="PASS" starttime="20201112 09:45:44.538" endtime="20201112 09:45:44.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.527" endtime="20201112 09:45:44.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.558" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:44.555" endtime="20201112 09:45:44.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.562" level="INFO">VALUE: [33554028, 33564028, 33574027, 33584028, 33594027, 33604027, 33614027, 33624027, 33634028, 33644027, 33654027, 33664028, 33674027, 33684027, 33694027, 33704028, 33714028, 33724027, 33734027, 33744027, 33754027, 33764028, 33774027, 33784027, 33794027, 33804028, 33814027, 33824027, 33834027, 33844027, 33854027, 33864028, 33874027, 33884028, 33894027, 33904028, 33914027, 33924028, 33934027, 33944028, 33954027, 33964028, 33974027, 33984027, 33994028, 34004027, 34014028, 34024027, 34034027, 34044027, 34054027, 34064028, 34074027, 34084028, 34094027, 34104028, 34114027, 34124028, 34134027, 34144028, 34154027, 34164028, 34174027, 34184028, 34194027, 34204027, 34214027, 34224028, 34234027, 34244027, 34254027, 34264027, 34274028, 34284027, 34294027, 34304027, 34314027, 34324027, 34334027, 34344027, 34354027, 34364028, 34374027, 34384027, 34394028, 34404027, 34414028, 34424027, 34434027, 34444027, 34454028, 34464027, 34474028, 34484027, 34494027, 34504027, 34514027, 34524027, 34534027, 34544028]</msg>
<status status="PASS" starttime="20201112 09:45:44.560" endtime="20201112 09:45:44.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.544" endtime="20201112 09:45:44.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.581" endtime="20201112 09:45:44.925"></status>
</kw>
<msg timestamp="20201112 09:45:44.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053542583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:44.578" endtime="20201112 09:45:44.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:44.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053542583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:44.933" endtime="20201112 09:45:44.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:44.950" endtime="20201112 09:45:44.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.571" endtime="20201112 09:45:44.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:44.566" endtime="20201112 09:45:44.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:45.014" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:44.959" endtime="20201112 09:45:45.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.024" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:45.022" endtime="20201112 09:45:45.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.029" level="INFO">VALUE: 0.043340819</msg>
<status status="PASS" starttime="20201112 09:45:45.027" endtime="20201112 09:45:45.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.016" endtime="20201112 09:45:45.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.042" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:45.040" endtime="20201112 09:45:45.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.046" level="INFO">VALUE: [0.053542583, 0.063571111, 0.073598417, 0.083627764, 0.0936555, 0.103683667, 0.113712444, 0.123740306, 0.133769042, 0.143796917, 0.153826542, 0.16385575, 0.173884208, 0.183913167, 0.193942361, 0.203971792, 0.214000958, 0.224028347, 0.23405725, 0.244086319, 0.254116528, 0.264146486, 0.274175333, 0.284203847, 0.294232514, 0.304261597, 0.314288972, 0.324317014, 0.334345792, 0.344374181, 0.354402153, 0.364430222, 0.374457694, 0.384485694, 0.394512778, 0.40454175, 0.414569236, 0.424598458, 0.434625556, 0.444654861, 0.454683153, 0.464712222, 0.474740861, 0.484770139, 0.4947995, 0.504826736, 0.514855222, 0.524882083, 0.534911181, 0.544939194, 0.554967639, 0.564997639, 0.575025819, 0.585055083, 0.595082375, 0.605110917, 0.615137569, 0.625167, 0.635193903, 0.645222069, 0.655249097, 0.665277917, 0.675304889, 0.685334306, 0.6953615, 0.705388417, 0.715415222, 0.725442389, 0.735469125, 0.745496944, 0.755524986, 0.765553389, 0.77558375, 0.785611056, 0.795639681, 0.805666972, 0.815695264, 0.825723778, 0.835753014, 0.845782056, 0.855811972, 0.865841347, 0.875868472, 0.885896903, 0.895927514, 0.905956014, 0.915985486, 0.92601175, 0.93603925, 0.946065708, 0.956092986, 0.966119708, 0.976147514, 0.986173083, 0.996200611, 1.006227958, 1.016256625, 1.026285917, 1.036315847, 1.046346125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:45.044" endtime="20201112 09:45:45.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.032" endtime="20201112 09:45:45.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.055" endtime="20201112 09:45:45.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:45.065" endtime="20201112 09:45:45.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.060" endtime="20201112 09:45:45.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.051" endtime="20201112 09:45:45.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.339" endtime="20201112 09:45:45.091"></status>
</kw>
<msg timestamp="20201112 09:45:45.091" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.112" endtime="20201112 09:45:47.239"></status>
</kw>
<msg timestamp="20201112 09:45:47.240" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36289917, 'wakeups': [36300090, 36310089, 36320088, 36330088, 36340089...</msg>
<status status="PASS" starttime="20201112 09:45:45.108" endtime="20201112 09:45:47.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36289917, 'wakeups': [36300090, 36310089, 36320088, 36330088, 36340089...</msg>
<status status="PASS" starttime="20201112 09:45:47.242" endtime="20201112 09:45:47.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:47.249" endtime="20201112 09:45:47.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.101" endtime="20201112 09:45:47.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.096" endtime="20201112 09:45:47.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:47.262" level="INFO">${RESULT} = {'wakeups': [36300090, 36310089, 36320088, 36330088, 36340089, 36350089, 36360088, 36370089, 36380088, 36390089, 36400088, 36410088, 36420088, 36430088, 36440088, 36450089, 36460088, 36470089, 3648008...</msg>
<status status="PASS" starttime="20201112 09:45:47.257" endtime="20201112 09:45:47.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.272" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:47.269" endtime="20201112 09:45:47.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.276" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:47.274" endtime="20201112 09:45:47.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.263" endtime="20201112 09:45:47.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.288" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:47.286" endtime="20201112 09:45:47.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.293" level="INFO">VALUE: 36289917</msg>
<status status="PASS" starttime="20201112 09:45:47.291" endtime="20201112 09:45:47.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.280" endtime="20201112 09:45:47.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.305" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:47.303" endtime="20201112 09:45:47.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.310" level="INFO">VALUE: [36300090, 36310089, 36320088, 36330088, 36340089, 36350089, 36360088, 36370089, 36380088, 36390089, 36400088, 36410088, 36420088, 36430088, 36440088, 36450089, 36460088, 36470089, 36480088, 36490089, 36500088, 36510088, 36520088, 36530089, 36540088, 36550089, 36560088, 36570088, 36580089, 36590088, 36600088, 36610088, 36620088, 36630089, 36640088, 36650088, 36660089, 36670088, 36680088, 36690088, 36700089, 36710089, 36720088, 36730088, 36740088, 36750088, 36760089, 36770088, 36780088, 36790089, 36800088, 36810089, 36820088, 36830088, 36840088, 36850089, 36860088, 36870088, 36880088, 36890089, 36900088, 36910088, 36920088, 36930088, 36940088, 36950088, 36960089, 36970088, 36980088, 36990089, 37000088, 37010088, 37020088, 37030089, 37040088, 37050089, 37060089, 37070088, 37080089, 37090089, 37100089, 37110088, 37120089, 37130088, 37140089, 37150089, 37160088, 37170089, 37180089, 37190088, 37200088, 37210089, 37220089, 37230088, 37240088, 37250088, 37260089, 37270088, 37280088, 37290088]</msg>
<status status="PASS" starttime="20201112 09:45:47.307" endtime="20201112 09:45:47.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.296" endtime="20201112 09:45:47.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:47.331" endtime="20201112 09:45:47.674"></status>
</kw>
<msg timestamp="20201112 09:45:47.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037624806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047828583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:47.327" endtime="20201112 09:45:47.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037624806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047828583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:47.683" endtime="20201112 09:45:47.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:47.700" endtime="20201112 09:45:47.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.320" endtime="20201112 09:45:47.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.313" endtime="20201112 09:45:47.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:47.760" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:47.708" endtime="20201112 09:45:47.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.771" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:47.768" endtime="20201112 09:45:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.775" level="INFO">VALUE: 0.037624806</msg>
<status status="PASS" starttime="20201112 09:45:47.773" endtime="20201112 09:45:47.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.762" endtime="20201112 09:45:47.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.788" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:47.786" endtime="20201112 09:45:47.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:47.793" level="INFO">VALUE: [0.047828583, 0.057856708, 0.067886153, 0.077916264, 0.087947361, 0.097977319, 0.108006931, 0.118038347, 0.128068319, 0.138099292, 0.148128917, 0.158158667, 0.168188847, 0.178219208, 0.188250167, 0.198282903, 0.208312972, 0.218344597, 0.228373569, 0.238404056, 0.248432861, 0.258463125, 0.268493764, 0.278525, 0.288554514, 0.298585903, 0.308615028, 0.318644819, 0.328676097, 0.338704403, 0.348735236, 0.358767319, 0.368798181, 0.378829319, 0.388859556, 0.398890569, 0.408921917, 0.418952083, 0.428982917, 0.439013764, 0.449046694, 0.459077042, 0.469106264, 0.479136736, 0.489167153, 0.499197347, 0.509229569, 0.5192595, 0.529290514, 0.539321917, 0.54935175, 0.559383208, 0.569413181, 0.579444111, 0.589474514, 0.599505986, 0.609534792, 0.61956525, 0.629595431, 0.639626625, 0.649656653, 0.659686986, 0.669719125, 0.679751861, 0.689785611, 0.699818264, 0.709851764, 0.719881347, 0.729913792, 0.739948056, 0.749978903, 0.760010958, 0.770043097, 0.780075986, 0.790106944, 0.800139764, 0.810170653, 0.820200417, 0.830233056, 0.840264708, 0.850296875, 0.860327889, 0.870360722, 0.880391514, 0.890424583, 0.900456611, 0.910487569, 0.920520111, 0.930551694, 0.940582139, 0.950613569, 0.960645764, 0.970679347, 0.980710056, 0.990741181, 1.000772181, 1.010804403, 1.020833611, 1.030865444, 1.040896375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:47.791" endtime="20201112 09:45:47.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.779" endtime="20201112 09:45:47.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:47.802" endtime="20201112 09:45:47.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:47.810" endtime="20201112 09:45:47.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.805" endtime="20201112 09:45:47.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.797" endtime="20201112 09:45:47.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.092" endtime="20201112 09:45:47.835"></status>
</kw>
<msg timestamp="20201112 09:45:47.836" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:47.858" endtime="20201112 09:45:49.991"></status>
</kw>
<msg timestamp="20201112 09:45:49.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39028024, 'wakeups': [39038197, 39048196, 39058195, 39068195, 39078196...</msg>
<status status="PASS" starttime="20201112 09:45:47.855" endtime="20201112 09:45:49.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.000" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39028024, 'wakeups': [39038197, 39048196, 39058195, 39068195, 39078196...</msg>
<status status="PASS" starttime="20201112 09:45:49.995" endtime="20201112 09:45:50.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.003" endtime="20201112 09:45:50.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.846" endtime="20201112 09:45:50.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.841" endtime="20201112 09:45:50.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:50.015" level="INFO">${RESULT} = {'wakeups': [39038197, 39048196, 39058195, 39068195, 39078196, 39088195, 39098195, 39108195, 39118195, 39128195, 39138196, 39148195, 39158195, 39168196, 39178195, 39188195, 39198196, 39208195, 3921819...</msg>
<status status="PASS" starttime="20201112 09:45:50.011" endtime="20201112 09:45:50.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.025" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:50.023" endtime="20201112 09:45:50.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.030" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:50.028" endtime="20201112 09:45:50.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.017" endtime="20201112 09:45:50.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.042" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:50.040" endtime="20201112 09:45:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.046" level="INFO">VALUE: 39028024</msg>
<status status="PASS" starttime="20201112 09:45:50.044" endtime="20201112 09:45:50.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.033" endtime="20201112 09:45:50.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.059" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:50.056" endtime="20201112 09:45:50.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.063" level="INFO">VALUE: [39038197, 39048196, 39058195, 39068195, 39078196, 39088195, 39098195, 39108195, 39118195, 39128195, 39138196, 39148195, 39158195, 39168196, 39178195, 39188195, 39198196, 39208195, 39218195, 39228195, 39238195, 39248195, 39258196, 39268195, 39278196, 39288195, 39298196, 39308195, 39318195, 39328195, 39338195, 39348195, 39358195, 39368195, 39378195, 39388195, 39398195, 39408195, 39418195, 39428196, 39438195, 39448195, 39458195, 39468196, 39478195, 39488195, 39498195, 39508195, 39518196, 39528195, 39538196, 39548196, 39558195, 39568195, 39578195, 39588195, 39598196, 39608195, 39618196, 39628195, 39638196, 39648195, 39658196, 39668196, 39678195, 39688196, 39698195, 39708196, 39718195, 39728196, 39738195, 39748195, 39758196, 39768195, 39778195, 39788195, 39798195, 39808195, 39818195, 39828195, 39838195, 39848195, 39858195, 39868195, 39878195, 39888195, 39898195, 39908196, 39918195, 39928195, 39938195, 39948195, 39958195, 39968195, 39978195, 39988196, 39998195, 40008196, 40018195, 40028196]</msg>
<status status="PASS" starttime="20201112 09:45:50.061" endtime="20201112 09:45:50.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.050" endtime="20201112 09:45:50.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.082" endtime="20201112 09:45:50.439"></status>
</kw>
<msg timestamp="20201112 09:45:50.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049237542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:50.079" endtime="20201112 09:45:50.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049237542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:50.448" endtime="20201112 09:45:50.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.465" endtime="20201112 09:45:50.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.072" endtime="20201112 09:45:50.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.067" endtime="20201112 09:45:50.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:50.527" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:50.473" endtime="20201112 09:45:50.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.539" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:50.536" endtime="20201112 09:45:50.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.543" level="INFO">VALUE: 0.039034097</msg>
<status status="PASS" starttime="20201112 09:45:50.541" endtime="20201112 09:45:50.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.530" endtime="20201112 09:45:50.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.556" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:50.554" endtime="20201112 09:45:50.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.561" level="INFO">VALUE: [0.049237542, 0.059265903, 0.069294292, 0.079323153, 0.089353444, 0.099382458, 0.109413014, 0.119442542, 0.129473194, 0.139504167, 0.149536806, 0.159566375, 0.169598222, 0.179630764, 0.189660278, 0.199691069, 0.209723167, 0.219752875, 0.229783792, 0.239815361, 0.249846486, 0.259877875, 0.269909639, 0.279938208, 0.289969708, 0.299999306, 0.310032083, 0.320061764, 0.330093486, 0.340124569, 0.350156208, 0.360186708, 0.370218611, 0.380249792, 0.390279708, 0.400308194, 0.410337097, 0.420365639, 0.430394333, 0.440423292, 0.450453194, 0.460484347, 0.470515875, 0.480548028, 0.490578472, 0.500609319, 0.510640208, 0.520670819, 0.530703792, 0.540734056, 0.550767875, 0.560799528, 0.5708295, 0.580859417, 0.590891222, 0.600922417, 0.610954556, 0.620983389, 0.631014806, 0.641044472, 0.651077028, 0.661107125, 0.671139153, 0.681169264, 0.691197931, 0.701228583, 0.711257681, 0.721288722, 0.731318681, 0.741350722, 0.751381306, 0.761411986, 0.771443486, 0.781473458, 0.791504528, 0.801535444, 0.8115665, 0.821597125, 0.831628681, 0.841660014, 0.851692333, 0.861724403, 0.871756056, 0.881786514, 0.891817347, 0.901846833, 0.911876931, 0.921909847, 0.931941361, 0.941974083, 0.952005417, 0.962035944, 0.972066764, 0.982097222, 0.992127569, 1.002157958, 1.012187653, 1.022219708, 1.032249625, 1.042280111] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:50.558" endtime="20201112 09:45:50.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.546" endtime="20201112 09:45:50.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.569" endtime="20201112 09:45:50.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:50.578" endtime="20201112 09:45:50.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.573" endtime="20201112 09:45:50.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.565" endtime="20201112 09:45:50.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:47.837" endtime="20201112 09:45:50.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.334" endtime="20201112 09:45:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:42.333" endtime="20201112 09:45:50.604"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:50.610" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.631" endtime="20201112 09:45:52.781"></status>
</kw>
<msg timestamp="20201112 09:45:52.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41792304, 'wakeups': [41802515, 41812514, 41822515, 41832513, 41842513...</msg>
<status status="PASS" starttime="20201112 09:45:50.627" endtime="20201112 09:45:52.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41792304, 'wakeups': [41802515, 41812514, 41822515, 41832513, 41842513...</msg>
<status status="PASS" starttime="20201112 09:45:52.785" endtime="20201112 09:45:52.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:52.792" endtime="20201112 09:45:52.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.620" endtime="20201112 09:45:52.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.615" endtime="20201112 09:45:52.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:52.805" level="INFO">${RESULT} = {'wakeups': [41802515, 41812514, 41822515, 41832513, 41842513, 41852514, 41862513, 41872513, 41882515, 41892513, 41902513, 41912513, 41922515, 41932514, 41942514, 41952515, 41962515, 41972513, 4198251...</msg>
<status status="PASS" starttime="20201112 09:45:52.800" endtime="20201112 09:45:52.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.815" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:52.812" endtime="20201112 09:45:52.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.820" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:52.818" endtime="20201112 09:45:52.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:52.806" endtime="20201112 09:45:52.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.832" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:52.830" endtime="20201112 09:45:52.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.836" level="INFO">VALUE: 41792304</msg>
<status status="PASS" starttime="20201112 09:45:52.834" endtime="20201112 09:45:52.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:52.823" endtime="20201112 09:45:52.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.851" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:52.848" endtime="20201112 09:45:52.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:52.855" level="INFO">VALUE: [41802515, 41812514, 41822515, 41832513, 41842513, 41852514, 41862513, 41872513, 41882515, 41892513, 41902513, 41912513, 41922515, 41932514, 41942514, 41952515, 41962515, 41972513, 41982513, 41992513, 42002513, 42012513, 42022514, 42032515, 42042515, 42052513, 42062513, 42072515, 42082515, 42092513, 42102514, 42112514, 42122515, 42132513, 42142513, 42152513, 42162515, 42172513, 42182515, 42192514, 42202515, 42212514, 42222513, 42232514, 42242514, 42252513, 42262513, 42272515, 42282513, 42292513, 42302513, 42312513, 42322513, 42332513, 42342513, 42352513, 42362513, 42372513, 42382515, 42392513, 42402513, 42412513, 42422515, 42432514, 42442513, 42452513, 42462515, 42472513, 42482513, 42492514, 42502513, 42512514, 42522513, 42532513, 42542513, 42552513, 42562513, 42572513, 42582515, 42592514, 42602513, 42612513, 42622513, 42632515, 42642513, 42652513, 42662514, 42672515, 42682513, 42692514, 42702513, 42712515, 42722513, 42732514, 42742514, 42752513, 42762513, 42772513, 42782513, 42792513]</msg>
<status status="PASS" starttime="20201112 09:45:52.853" endtime="20201112 09:45:52.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:52.840" endtime="20201112 09:45:52.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:52.874" endtime="20201112 09:45:53.231"></status>
</kw>
<msg timestamp="20201112 09:45:53.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043745028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:52.871" endtime="20201112 09:45:53.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043745028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:53.240" endtime="20201112 09:45:53.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:53.257" endtime="20201112 09:45:53.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:52.864" endtime="20201112 09:45:53.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:52.859" endtime="20201112 09:45:53.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:53.317" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:53.265" endtime="20201112 09:45:53.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.328" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:53.326" endtime="20201112 09:45:53.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.333" level="INFO">VALUE: 0.043745028</msg>
<status status="PASS" starttime="20201112 09:45:53.331" endtime="20201112 09:45:53.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.319" endtime="20201112 09:45:53.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.347" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:53.345" endtime="20201112 09:45:53.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.352" level="INFO">VALUE: [0.053986875, 0.064016194, 0.074047931, 0.084076472, 0.094107264, 0.104138347, 0.114169014, 0.124198861, 0.134231375, 0.144260194, 0.154291569, 0.164322611, 0.174355083, 0.184384486, 0.194415222, 0.204446236, 0.214477444, 0.224506833, 0.234537889, 0.244567111, 0.254597403, 0.264627931, 0.274658625, 0.284689194, 0.294719236, 0.304747125, 0.31477725, 0.324809792, 0.334840528, 0.344869833, 0.354901222, 0.364930958, 0.374962028, 0.384989236, 0.395018764, 0.405048958, 0.415081958, 0.425109861, 0.435143083, 0.445172347, 0.455204097, 0.465233153, 0.475262472, 0.485292514, 0.495322625, 0.505352875, 0.515383861, 0.525418306, 0.535446944, 0.545477097, 0.555508028, 0.565537167, 0.575567347, 0.585596653, 0.595625431, 0.605653583, 0.615681542, 0.625709875, 0.635741708, 0.645769778, 0.655799167, 0.665828667, 0.675860472, 0.68589, 0.695920333, 0.705950417, 0.715981986, 0.726008944, 0.736037639, 0.746067778, 0.756096931, 0.766128444, 0.776159944, 0.786192722, 0.796225181, 0.806258111, 0.816291097, 0.826322042, 0.836355472, 0.846385125, 0.856414764, 0.866445625, 0.876476722, 0.886509542, 0.896538569, 0.906569986, 0.916600625, 0.926632181, 0.936661514, 0.946692708, 0.956722819, 0.966754597, 0.976784056, 0.986815236, 0.996845194, 1.00687475, 1.016905708, 1.026936222, 1.036967, 1.046997333] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:53.349" endtime="20201112 09:45:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.337" endtime="20201112 09:45:53.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:53.361" endtime="20201112 09:45:53.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:53.371" endtime="20201112 09:45:53.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.365" endtime="20201112 09:45:53.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.356" endtime="20201112 09:45:53.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.611" endtime="20201112 09:45:53.397"></status>
</kw>
<msg timestamp="20201112 09:45:53.397" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:53.418" endtime="20201112 09:45:55.567"></status>
</kw>
<msg timestamp="20201112 09:45:55.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44571251, 'wakeups': [44581461, 44591460, 44601460, 44611460, 44621460...</msg>
<status status="PASS" starttime="20201112 09:45:53.414" endtime="20201112 09:45:55.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44571251, 'wakeups': [44581461, 44591460, 44601460, 44611460, 44621460...</msg>
<status status="PASS" starttime="20201112 09:45:55.571" endtime="20201112 09:45:55.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:55.578" endtime="20201112 09:45:55.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.407" endtime="20201112 09:45:55.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.402" endtime="20201112 09:45:55.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:55.590" level="INFO">${RESULT} = {'wakeups': [44581461, 44591460, 44601460, 44611460, 44621460, 44631461, 44641460, 44651461, 44661462, 44671461, 44681460, 44691460, 44701460, 44711460, 44721460, 44731460, 44741462, 44751461, 4476146...</msg>
<status status="PASS" starttime="20201112 09:45:55.586" endtime="20201112 09:45:55.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.600" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:55.598" endtime="20201112 09:45:55.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.605" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:55.603" endtime="20201112 09:45:55.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:55.592" endtime="20201112 09:45:55.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.617" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:55.615" endtime="20201112 09:45:55.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.621" level="INFO">VALUE: 44571251</msg>
<status status="PASS" starttime="20201112 09:45:55.619" endtime="20201112 09:45:55.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:55.608" endtime="20201112 09:45:55.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.633" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:55.631" endtime="20201112 09:45:55.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:55.638" level="INFO">VALUE: [44581461, 44591460, 44601460, 44611460, 44621460, 44631461, 44641460, 44651461, 44661462, 44671461, 44681460, 44691460, 44701460, 44711460, 44721460, 44731460, 44741462, 44751461, 44761462, 44771460, 44781460, 44791460, 44801460, 44811461, 44821460, 44831461, 44841460, 44851460, 44861460, 44871460, 44881462, 44891460, 44901462, 44911462, 44921460, 44931461, 44941460, 44951460, 44961460, 44971462, 44981460, 44991462, 45001460, 45011460, 45021460, 45031460, 45041460, 45051461, 45061461, 45071462, 45081462, 45091461, 45101460, 45111462, 45121460, 45131460, 45141460, 45151461, 45161460, 45171460, 45181462, 45191461, 45201462, 45211460, 45221462, 45231462, 45241460, 45251460, 45261460, 45271460, 45281462, 45291461, 45301461, 45311460, 45321460, 45331461, 45341462, 45351461, 45361460, 45371460, 45381460, 45391461, 45401460, 45411460, 45421461, 45431460, 45441462, 45451462, 45461461, 45471462, 45481460, 45491461, 45501462, 45511461, 45521460, 45531460, 45541461, 45551460, 45561462, 45571461]</msg>
<status status="PASS" starttime="20201112 09:45:55.636" endtime="20201112 09:45:55.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:55.625" endtime="20201112 09:45:55.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:55.664" endtime="20201112 09:45:56.018"></status>
</kw>
<msg timestamp="20201112 09:45:56.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037699903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:55.660" endtime="20201112 09:45:56.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037699903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:56.027" endtime="20201112 09:45:56.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.044" endtime="20201112 09:45:56.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:55.653" endtime="20201112 09:45:56.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:55.642" endtime="20201112 09:45:56.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:56.107" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:56.054" endtime="20201112 09:45:56.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.118" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:56.116" endtime="20201112 09:45:56.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.122" level="INFO">VALUE: 0.037699903</msg>
<status status="PASS" starttime="20201112 09:45:56.120" endtime="20201112 09:45:56.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.109" endtime="20201112 09:45:56.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.135" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:56.133" endtime="20201112 09:45:56.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.140" level="INFO">VALUE: [0.047941431, 0.057970861, 0.068000542, 0.078030583, 0.088060681, 0.098091694, 0.108120278, 0.118151042, 0.128181681, 0.138209847, 0.148238389, 0.158268236, 0.168299069, 0.178329556, 0.188359833, 0.198390069, 0.208423403, 0.218453625, 0.228486208, 0.238514778, 0.248546681, 0.258577083, 0.268606806, 0.2786365, 0.288665972, 0.298696292, 0.308726583, 0.318756, 0.328786931, 0.338817306, 0.348849931, 0.358878042, 0.368911514, 0.378941792, 0.388970042, 0.399000361, 0.409028625, 0.419057472, 0.429087958, 0.439119597, 0.449147708, 0.459178972, 0.469207431, 0.479237028, 0.489266556, 0.499296667, 0.509328069, 0.519359611, 0.529390458, 0.539422097, 0.5494525, 0.559481528, 0.569511458, 0.57954375, 0.589573069, 0.599604444, 0.609635847, 0.619667361, 0.629696986, 0.639727597, 0.649761625, 0.659791708, 0.669823111, 0.679852556, 0.689884806, 0.699915875, 0.709945764, 0.719977042, 0.730007889, 0.740040306, 0.750075042, 0.760104792, 0.770136764, 0.780166486, 0.790197903, 0.800231347, 0.810264597, 0.820295333, 0.830327236, 0.840360222, 0.850391972, 0.860424222, 0.870454125, 0.880486389, 0.890520625, 0.900551681, 0.910586125, 0.920617889, 0.930647847, 0.940681042, 0.950711472, 0.960744597, 0.970777958, 0.980808542, 0.990838917, 1.000870889, 1.010903667, 1.020934403, 1.030968514, 1.040998486] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:56.138" endtime="20201112 09:45:56.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.126" endtime="20201112 09:45:56.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.149" endtime="20201112 09:45:56.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:56.157" endtime="20201112 09:45:56.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.153" endtime="20201112 09:45:56.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.144" endtime="20201112 09:45:56.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.398" endtime="20201112 09:45:56.183"></status>
</kw>
<msg timestamp="20201112 09:45:56.183" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.204" endtime="20201112 09:45:58.330"></status>
</kw>
<msg timestamp="20201112 09:45:58.332" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47349007, 'wakeups': [47359218, 47369216, 47379216, 47389216, 47399216...</msg>
<status status="PASS" starttime="20201112 09:45:56.201" endtime="20201112 09:45:58.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.339" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47349007, 'wakeups': [47359218, 47369216, 47379216, 47389216, 47399216...</msg>
<status status="PASS" starttime="20201112 09:45:58.335" endtime="20201112 09:45:58.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.341" endtime="20201112 09:45:58.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.193" endtime="20201112 09:45:58.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.188" endtime="20201112 09:45:58.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:58.356" level="INFO">${RESULT} = {'wakeups': [47359218, 47369216, 47379216, 47389216, 47399216, 47409216, 47419216, 47429217, 47439216, 47449216, 47459216, 47469216, 47479216, 47489217, 47499218, 47509216, 47519216, 47529217, 4753921...</msg>
<status status="PASS" starttime="20201112 09:45:58.350" endtime="20201112 09:45:58.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.366" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:58.364" endtime="20201112 09:45:58.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.371" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:58.368" endtime="20201112 09:45:58.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.358" endtime="20201112 09:45:58.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.383" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:58.380" endtime="20201112 09:45:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.387" level="INFO">VALUE: 47349007</msg>
<status status="PASS" starttime="20201112 09:45:58.385" endtime="20201112 09:45:58.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.374" endtime="20201112 09:45:58.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.399" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:58.397" endtime="20201112 09:45:58.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.404" level="INFO">VALUE: [47359218, 47369216, 47379216, 47389216, 47399216, 47409216, 47419216, 47429217, 47439216, 47449216, 47459216, 47469216, 47479216, 47489217, 47499218, 47509216, 47519216, 47529217, 47539217, 47549218, 47559216, 47569217, 47579216, 47589217, 47599216, 47609216, 47619218, 47629216, 47639216, 47649217, 47659217, 47669217, 47679218, 47689217, 47699218, 47709216, 47719218, 47729216, 47739218, 47749216, 47759216, 47769216, 47779216, 47789217, 47799216, 47809218, 47819218, 47829216, 47839216, 47849216, 47859217, 47869216, 47879216, 47889216, 47899216, 47909218, 47919217, 47929218, 47939216, 47949216, 47959216, 47969216, 47979218, 47989217, 47999216, 48009218, 48019216, 48029216, 48039217, 48049218, 48059218, 48069216, 48079218, 48089216, 48099218, 48109217, 48119218, 48129217, 48139216, 48149216, 48159217, 48169216, 48179216, 48189216, 48199218, 48209216, 48219217, 48229217, 48239218, 48249216, 48259218, 48269217, 48279218, 48289217, 48299216, 48309217, 48319216, 48329217, 48339216, 48349218]</msg>
<status status="PASS" starttime="20201112 09:45:58.402" endtime="20201112 09:45:58.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.391" endtime="20201112 09:45:58.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.423" endtime="20201112 09:45:58.765"></status>
</kw>
<msg timestamp="20201112 09:45:58.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037673639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047916806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:58.420" endtime="20201112 09:45:58.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037673639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047916806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:58.774" endtime="20201112 09:45:58.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.791" endtime="20201112 09:45:58.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.412" endtime="20201112 09:45:58.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.408" endtime="20201112 09:45:58.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:58.853" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:45:58.799" endtime="20201112 09:45:58.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.864" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:58.861" endtime="20201112 09:45:58.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.868" level="INFO">VALUE: 0.037673639</msg>
<status status="PASS" starttime="20201112 09:45:58.866" endtime="20201112 09:45:58.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.855" endtime="20201112 09:45:58.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.881" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:58.879" endtime="20201112 09:45:58.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.886" level="INFO">VALUE: [0.047916806, 0.057945639, 0.067977375, 0.078009639, 0.088042194, 0.098073361, 0.108105681, 0.118138361, 0.128169042, 0.138200833, 0.148231764, 0.158263139, 0.168293319, 0.178325153, 0.188358056, 0.198387458, 0.208418306, 0.21845125, 0.228483319, 0.238515694, 0.248545583, 0.258577625, 0.268608333, 0.278638847, 0.288668625, 0.298698583, 0.308732083, 0.318760681, 0.328792403, 0.338823694, 0.348854736, 0.358885222, 0.368916792, 0.378945611, 0.3889765, 0.399004042, 0.409035708, 0.419063514, 0.429095778, 0.4391235, 0.449153681, 0.459184444, 0.469216083, 0.4792485, 0.489278056, 0.499310611, 0.509341014, 0.519370333, 0.529402625, 0.539433931, 0.549465056, 0.559495153, 0.569527069, 0.579558486, 0.589590431, 0.599623931, 0.609653722, 0.619684653, 0.629713278, 0.639743778, 0.649774667, 0.659805333, 0.669838208, 0.679868319, 0.689899222, 0.699932764, 0.7099625, 0.719995153, 0.730027875, 0.740059264, 0.750090722, 0.760120528, 0.770153819, 0.780182625, 0.790216222, 0.800244958, 0.810275028, 0.820303014, 0.830332486, 0.840362917, 0.850393472, 0.860423611, 0.870454278, 0.880484944, 0.890519111, 0.900548222, 0.910580139, 0.920612181, 0.930645778, 0.940675792, 0.950709514, 0.960739458, 0.970771417, 0.980800778, 0.990830708, 1.000860958, 1.010889625, 1.0209195, 1.030948556, 1.040980528] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:58.883" endtime="20201112 09:45:58.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.871" endtime="20201112 09:45:58.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.894" endtime="20201112 09:45:58.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:58.902" endtime="20201112 09:45:58.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.898" endtime="20201112 09:45:58.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.890" endtime="20201112 09:45:58.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.184" endtime="20201112 09:45:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.607" endtime="20201112 09:45:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.605" endtime="20201112 09:45:58.929"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:58.934" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.955" endtime="20201112 09:46:01.082"></status>
</kw>
<msg timestamp="20201112 09:46:01.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50092149, 'wakeups': [50102398, 50112399, 50122399, 50132399, 50142399...</msg>
<status status="PASS" starttime="20201112 09:45:58.952" endtime="20201112 09:46:01.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50092149, 'wakeups': [50102398, 50112399, 50122399, 50132399, 50142399...</msg>
<status status="PASS" starttime="20201112 09:46:01.085" endtime="20201112 09:46:01.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.092" endtime="20201112 09:46:01.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.945" endtime="20201112 09:46:01.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.939" endtime="20201112 09:46:01.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:01.105" level="INFO">${RESULT} = {'wakeups': [50102398, 50112399, 50122399, 50132399, 50142399, 50152399, 50162399, 50172399, 50182399, 50192399, 50202399, 50212399, 50222399, 50232400, 50242399, 50252399, 50262399, 50272399, 5028239...</msg>
<status status="PASS" starttime="20201112 09:46:01.101" endtime="20201112 09:46:01.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.120" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:01.118" endtime="20201112 09:46:01.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:01.122" endtime="20201112 09:46:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.112" endtime="20201112 09:46:01.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.137" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:01.135" endtime="20201112 09:46:01.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.141" level="INFO">VALUE: 50092149</msg>
<status status="PASS" starttime="20201112 09:46:01.139" endtime="20201112 09:46:01.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.128" endtime="20201112 09:46:01.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.153" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:01.151" endtime="20201112 09:46:01.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.158" level="INFO">VALUE: [50102398, 50112399, 50122399, 50132399, 50142399, 50152399, 50162399, 50172399, 50182399, 50192399, 50202399, 50212399, 50222399, 50232400, 50242399, 50252399, 50262399, 50272399, 50282399, 50292399, 50302399, 50312399, 50322399, 50332399, 50342399, 50352399, 50362399, 50372399, 50382399, 50392399, 50402399, 50412399, 50422399, 50432399, 50442399, 50452399, 50462399, 50472399, 50482399, 50492399, 50502399, 50512399, 50522399, 50532399, 50542399, 50552399, 50562399, 50572399, 50582399, 50592399, 50602399, 50612399, 50622399, 50632399, 50642399, 50652399, 50662399, 50672399, 50682399, 50692399, 50702399, 50712399, 50722399, 50732399, 50742399, 50752399, 50762399, 50772399, 50782399, 50792399, 50802399, 50812399, 50822399, 50832399, 50842399, 50852399, 50862399, 50872399, 50882399, 50892399, 50902399, 50912399, 50922399, 50932399, 50942399, 50952399, 50962399, 50972399, 50982399, 50992399, 51002399, 51012399, 51022399, 51032399, 51042399, 51052399, 51062399, 51072399, 51082399, 51092399]</msg>
<status status="PASS" starttime="20201112 09:46:01.156" endtime="20201112 09:46:01.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.145" endtime="20201112 09:46:01.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.179" endtime="20201112 09:46:01.522"></status>
</kw>
<msg timestamp="20201112 09:46:01.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043447653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053727528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:01.176" endtime="20201112 09:46:01.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043447653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053727528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:01.531" endtime="20201112 09:46:01.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.548" endtime="20201112 09:46:01.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.167" endtime="20201112 09:46:01.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.162" endtime="20201112 09:46:01.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:01.610" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:01.556" endtime="20201112 09:46:01.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.620" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:01.618" endtime="20201112 09:46:01.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.625" level="INFO">VALUE: 0.043447653</msg>
<status status="PASS" starttime="20201112 09:46:01.623" endtime="20201112 09:46:01.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.611" endtime="20201112 09:46:01.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.638" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:01.636" endtime="20201112 09:46:01.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:01.643" level="INFO">VALUE: [0.053727528, 0.063759597, 0.073790486, 0.083820375, 0.093851236, 0.103882292, 0.113912333, 0.123941972, 0.133972889, 0.14400325, 0.154034708, 0.164064833, 0.174095694, 0.184127278, 0.194156667, 0.204186694, 0.214217764, 0.224247861, 0.234278153, 0.244309028, 0.254340153, 0.264370611, 0.274401792, 0.284431944, 0.2944625, 0.304493069, 0.314523042, 0.32455325, 0.334583333, 0.344611986, 0.354641083, 0.364669653, 0.374698417, 0.384727833, 0.394757722, 0.4047875, 0.414817958, 0.424847722, 0.43487775, 0.444907708, 0.454938042, 0.464968694, 0.474999736, 0.485028736, 0.495058056, 0.505087472, 0.515116972, 0.525145708, 0.535175153, 0.545205736, 0.555236417, 0.565267083, 0.575297236, 0.585326458, 0.595357264, 0.605388097, 0.615418958, 0.625450278, 0.635481292, 0.645512181, 0.655543194, 0.665574861, 0.675605944, 0.685636, 0.695666167, 0.705696264, 0.715727403, 0.725757958, 0.735789347, 0.745819764, 0.755849306, 0.765877639, 0.775906819, 0.785936736, 0.795967542, 0.805997264, 0.816028194, 0.826058236, 0.836090236, 0.846121458, 0.856152653, 0.866182611, 0.876213083, 0.886243639, 0.896274958, 0.906305333, 0.916336097, 0.926366667, 0.936397097, 0.946426944, 0.956457417, 0.966488, 0.976518542, 0.986550833, 0.996584, 1.006616208, 1.016647458, 1.026679181, 1.036710653, 1.04674125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:01.641" endtime="20201112 09:46:01.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.628" endtime="20201112 09:46:01.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.652" endtime="20201112 09:46:01.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:01.660" endtime="20201112 09:46:01.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.656" endtime="20201112 09:46:01.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.648" endtime="20201112 09:46:01.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.936" endtime="20201112 09:46:01.686"></status>
</kw>
<msg timestamp="20201112 09:46:01.686" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:01.709" endtime="20201112 09:46:03.835"></status>
</kw>
<msg timestamp="20201112 09:46:03.837" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52837722, 'wakeups': [52847972, 52857972, 52867972, 52877972, 52887972...</msg>
<status status="PASS" starttime="20201112 09:46:01.705" endtime="20201112 09:46:03.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52837722, 'wakeups': [52847972, 52857972, 52867972, 52877972, 52887972...</msg>
<status status="PASS" starttime="20201112 09:46:03.839" endtime="20201112 09:46:03.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.846" endtime="20201112 09:46:03.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.697" endtime="20201112 09:46:03.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.692" endtime="20201112 09:46:03.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:03.859" level="INFO">${RESULT} = {'wakeups': [52847972, 52857972, 52867972, 52877972, 52887972, 52897972, 52907972, 52917972, 52927972, 52937972, 52947972, 52957972, 52967972, 52977972, 52987972, 52997972, 53007972, 53017973, 5302797...</msg>
<status status="PASS" starttime="20201112 09:46:03.854" endtime="20201112 09:46:03.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.869" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:03.867" endtime="20201112 09:46:03.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.873" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:03.871" endtime="20201112 09:46:03.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.861" endtime="20201112 09:46:03.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.885" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:03.883" endtime="20201112 09:46:03.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.890" level="INFO">VALUE: 52837722</msg>
<status status="PASS" starttime="20201112 09:46:03.888" endtime="20201112 09:46:03.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.877" endtime="20201112 09:46:03.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.902" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:03.900" endtime="20201112 09:46:03.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.908" level="INFO">VALUE: [52847972, 52857972, 52867972, 52877972, 52887972, 52897972, 52907972, 52917972, 52927972, 52937972, 52947972, 52957972, 52967972, 52977972, 52987972, 52997972, 53007972, 53017973, 53027972, 53037972, 53047972, 53057972, 53067972, 53077972, 53087972, 53097972, 53107972, 53117972, 53127972, 53137972, 53147972, 53157972, 53167972, 53177972, 53187972, 53197972, 53207972, 53217972, 53227972, 53237972, 53247972, 53257972, 53267972, 53277972, 53287972, 53297972, 53307972, 53317972, 53327972, 53337972, 53347972, 53357972, 53367972, 53377972, 53387972, 53397972, 53407972, 53417972, 53427972, 53437972, 53447972, 53457972, 53467972, 53477972, 53487972, 53497972, 53507972, 53517972, 53527972, 53537972, 53547972, 53557972, 53567972, 53577972, 53587972, 53597972, 53607972, 53617972, 53627972, 53637972, 53647972, 53657972, 53667972, 53677972, 53687972, 53697972, 53707972, 53717972, 53727972, 53737972, 53747972, 53757972, 53767972, 53777972, 53787972, 53797972, 53807972, 53817972, 53827972, 53837972]</msg>
<status status="PASS" starttime="20201112 09:46:03.905" endtime="20201112 09:46:03.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.893" endtime="20201112 09:46:03.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.926" endtime="20201112 09:46:04.268"></status>
</kw>
<msg timestamp="20201112 09:46:04.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039116181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049399694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:03.923" endtime="20201112 09:46:04.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039116181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049399694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:04.277" endtime="20201112 09:46:04.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.294" endtime="20201112 09:46:04.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.916" endtime="20201112 09:46:04.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.911" endtime="20201112 09:46:04.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:04.356" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:04.303" endtime="20201112 09:46:04.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.366" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:04.364" endtime="20201112 09:46:04.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.371" level="INFO">VALUE: 0.039116181</msg>
<status status="PASS" starttime="20201112 09:46:04.369" endtime="20201112 09:46:04.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.358" endtime="20201112 09:46:04.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.384" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:04.382" endtime="20201112 09:46:04.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.389" level="INFO">VALUE: [0.049399694, 0.059432472, 0.069465153, 0.079496528, 0.089527694, 0.099557986, 0.109589653, 0.119621097, 0.129652403, 0.139683639, 0.149715042, 0.159744569, 0.169775806, 0.179806681, 0.189839444, 0.199870542, 0.209902056, 0.219934431, 0.229965306, 0.239996833, 0.250028486, 0.260059819, 0.270090889, 0.280121611, 0.290153208, 0.300184556, 0.310215792, 0.320246111, 0.330276861, 0.340306625, 0.350336903, 0.360367514, 0.370398347, 0.380428681, 0.390458736, 0.400489208, 0.410519361, 0.420548792, 0.430578444, 0.440610125, 0.450643222, 0.460675875, 0.470708208, 0.480740764, 0.490772417, 0.500802958, 0.510834028, 0.52086525, 0.530896944, 0.540928278, 0.550960417, 0.560990944, 0.571020944, 0.581050361, 0.591079903, 0.601110639, 0.611141583, 0.621171181, 0.631202361, 0.641232083, 0.651262792, 0.661294597, 0.671326625, 0.681359431, 0.691391931, 0.701424403, 0.711456431, 0.721488, 0.731519917, 0.741551708, 0.751582722, 0.761612806, 0.771644139, 0.781674278, 0.791703972, 0.801733458, 0.811764736, 0.821796292, 0.831828458, 0.841860194, 0.851892319, 0.861923611, 0.871954264, 0.881985014, 0.892014764, 0.902044222, 0.912074667, 0.92210425, 0.932133194, 0.942163222, 0.952193472, 0.962224583, 0.972254361, 0.982283236, 0.992314167, 1.002344542, 1.012377069, 1.022406958, 1.032437611, 1.042468306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:04.386" endtime="20201112 09:46:04.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.374" endtime="20201112 09:46:04.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.397" endtime="20201112 09:46:04.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:04.406" endtime="20201112 09:46:04.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.401" endtime="20201112 09:46:04.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.393" endtime="20201112 09:46:04.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:01.688" endtime="20201112 09:46:04.432"></status>
</kw>
<msg timestamp="20201112 09:46:04.432" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.453" endtime="20201112 09:46:06.580"></status>
</kw>
<msg timestamp="20201112 09:46:06.581" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55573279, 'wakeups': [55583528, 55593529, 55603529, 55613529, 55623529...</msg>
<status status="PASS" starttime="20201112 09:46:04.449" endtime="20201112 09:46:06.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55573279, 'wakeups': [55583528, 55593529, 55603529, 55613529, 55623529...</msg>
<status status="PASS" starttime="20201112 09:46:06.583" endtime="20201112 09:46:06.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:06.590" endtime="20201112 09:46:06.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.442" endtime="20201112 09:46:06.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.437" endtime="20201112 09:46:06.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:06.603" level="INFO">${RESULT} = {'wakeups': [55583528, 55593529, 55603529, 55613529, 55623529, 55633529, 55643529, 55653529, 55663529, 55673529, 55683529, 55693529, 55703529, 55713529, 55723529, 55733529, 55743529, 55753529, 5576352...</msg>
<status status="PASS" starttime="20201112 09:46:06.599" endtime="20201112 09:46:06.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.613" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:06.611" endtime="20201112 09:46:06.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.617" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:06.615" endtime="20201112 09:46:06.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.605" endtime="20201112 09:46:06.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.630" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:06.627" endtime="20201112 09:46:06.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.634" level="INFO">VALUE: 55573279</msg>
<status status="PASS" starttime="20201112 09:46:06.632" endtime="20201112 09:46:06.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.621" endtime="20201112 09:46:06.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.646" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:06.644" endtime="20201112 09:46:06.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:06.651" level="INFO">VALUE: [55583528, 55593529, 55603529, 55613529, 55623529, 55633529, 55643529, 55653529, 55663529, 55673529, 55683529, 55693529, 55703529, 55713529, 55723529, 55733529, 55743529, 55753529, 55763529, 55773529, 55783529, 55793529, 55803529, 55813529, 55823529, 55833529, 55843529, 55853529, 55863529, 55873529, 55883529, 55893529, 55903529, 55913529, 55923529, 55933529, 55943529, 55953529, 55963529, 55973529, 55983529, 55993529, 56003529, 56013529, 56023529, 56033529, 56043529, 56053529, 56063529, 56073529, 56083529, 56093529, 56103529, 56113529, 56123529, 56133529, 56143529, 56153529, 56163529, 56173529, 56183529, 56193529, 56203529, 56213529, 56223529, 56233529, 56243529, 56253529, 56263529, 56273529, 56283529, 56293529, 56303529, 56313529, 56323529, 56333529, 56343529, 56353529, 56363529, 56373529, 56383529, 56393529, 56403529, 56413529, 56423529, 56433529, 56443529, 56453529, 56463529, 56473529, 56483529, 56493529, 56503529, 56513529, 56523529, 56533529, 56543529, 56553529, 56563529, 56573529]</msg>
<status status="PASS" starttime="20201112 09:46:06.648" endtime="20201112 09:46:06.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.638" endtime="20201112 09:46:06.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:06.672" endtime="20201112 09:46:07.016"></status>
</kw>
<msg timestamp="20201112 09:46:07.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037850611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:06.668" endtime="20201112 09:46:07.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037850611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:07.033" endtime="20201112 09:46:07.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.050" endtime="20201112 09:46:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.661" endtime="20201112 09:46:07.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:06.654" endtime="20201112 09:46:07.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:07.111" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:07.058" endtime="20201112 09:46:07.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.122" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:46:07.119" endtime="20201112 09:46:07.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.126" level="INFO">VALUE: 0.037850611</msg>
<status status="PASS" starttime="20201112 09:46:07.124" endtime="20201112 09:46:07.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.113" endtime="20201112 09:46:07.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.139" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:07.137" endtime="20201112 09:46:07.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.144" level="INFO">VALUE: [0.048131778, 0.058163097, 0.068194361, 0.078226194, 0.088258861, 0.0982925, 0.108326194, 0.118359903, 0.128393639, 0.138427708, 0.148459569, 0.158490486, 0.168520958, 0.178551278, 0.188583194, 0.198613889, 0.208644625, 0.218675361, 0.228706583, 0.238738292, 0.248769444, 0.258800708, 0.268831944, 0.278862472, 0.288894486, 0.298926806, 0.308958625, 0.318989528, 0.329021514, 0.339052833, 0.349084708, 0.359116194, 0.369148264, 0.379179431, 0.389211042, 0.399241861, 0.409273861, 0.419304917, 0.429336097, 0.439366778, 0.449398236, 0.459430722, 0.469464153, 0.479497875, 0.489530847, 0.499562014, 0.509593319, 0.519624056, 0.529655111, 0.539685222, 0.549716542, 0.559748347, 0.56977975, 0.579810472, 0.589841736, 0.5998735, 0.609905014, 0.619936667, 0.629968097, 0.639999514, 0.650031375, 0.660062389, 0.670093375, 0.680124778, 0.690155458, 0.700186375, 0.710216347, 0.720246653, 0.730279389, 0.740310083, 0.750341361, 0.760371597, 0.770402583, 0.780432181, 0.7904625, 0.800493361, 0.810524611, 0.820555444, 0.830585667, 0.840616472, 0.850647806, 0.860678472, 0.870708875, 0.880740375, 0.890771333, 0.900801583, 0.910831958, 0.920862014, 0.93089225, 0.940922069, 0.950952153, 0.960983153, 0.971015833, 0.98104775, 0.991079653, 1.001111167, 1.011142306, 1.021174167, 1.031206028, 1.041237167] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:07.141" endtime="20201112 09:46:07.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.130" endtime="20201112 09:46:07.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.152" endtime="20201112 09:46:07.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:07.161" endtime="20201112 09:46:07.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.156" endtime="20201112 09:46:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.148" endtime="20201112 09:46:07.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.433" endtime="20201112 09:46:07.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.931" endtime="20201112 09:46:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.930" endtime="20201112 09:46:07.187"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:07.192" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.215" endtime="20201112 09:46:09.363"></status>
</kw>
<msg timestamp="20201112 09:46:09.365" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58327119, 'wakeups': [58337411, 58347410, 58357411, 58367411, 58377411...</msg>
<status status="PASS" starttime="20201112 09:46:07.211" endtime="20201112 09:46:09.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.372" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58327119, 'wakeups': [58337411, 58347410, 58357411, 58367411, 58377411...</msg>
<status status="PASS" starttime="20201112 09:46:09.367" endtime="20201112 09:46:09.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.375" endtime="20201112 09:46:09.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.203" endtime="20201112 09:46:09.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.198" endtime="20201112 09:46:09.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:09.388" level="INFO">${RESULT} = {'wakeups': [58337411, 58347410, 58357411, 58367411, 58377411, 58387411, 58397411, 58407410, 58417411, 58427410, 58437411, 58447411, 58457410, 58467411, 58477411, 58487410, 58497411, 58507411, 5851741...</msg>
<status status="PASS" starttime="20201112 09:46:09.383" endtime="20201112 09:46:09.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.398" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:09.395" endtime="20201112 09:46:09.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.402" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:09.400" endtime="20201112 09:46:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.389" endtime="20201112 09:46:09.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.414" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:09.412" endtime="20201112 09:46:09.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.419" level="INFO">VALUE: 58327119</msg>
<status status="PASS" starttime="20201112 09:46:09.416" endtime="20201112 09:46:09.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.405" endtime="20201112 09:46:09.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.431" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:09.429" endtime="20201112 09:46:09.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.435" level="INFO">VALUE: [58337411, 58347410, 58357411, 58367411, 58377411, 58387411, 58397411, 58407410, 58417411, 58427410, 58437411, 58447411, 58457410, 58467411, 58477411, 58487410, 58497411, 58507411, 58517411, 58527410, 58537411, 58547411, 58557410, 58567411, 58577411, 58587410, 58597410, 58607411, 58617410, 58627410, 58637411, 58647410, 58657411, 58667410, 58677411, 58687411, 58697411, 58707410, 58717411, 58727410, 58737410, 58747411, 58757410, 58767411, 58777410, 58787411, 58797411, 58807411, 58817410, 58827410, 58837411, 58847410, 58857411, 58867410, 58877411, 58887411, 58897411, 58907411, 58917411, 58927411, 58937410, 58947410, 58957410, 58967410, 58977411, 58987411, 58997411, 59007411, 59017411, 59027411, 59037411, 59047411, 59057411, 59067411, 59077411, 59087411, 59097411, 59107410, 59117411, 59127411, 59137411, 59147411, 59157410, 59167411, 59177411, 59187411, 59197410, 59207411, 59217410, 59227411, 59237411, 59247411, 59257411, 59267410, 59277411, 59287411, 59297411, 59307411, 59317411, 59327411]</msg>
<status status="PASS" starttime="20201112 09:46:09.433" endtime="20201112 09:46:09.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.422" endtime="20201112 09:46:09.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.455" endtime="20201112 09:46:09.811"></status>
</kw>
<msg timestamp="20201112 09:46:09.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044943389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055266569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:09.451" endtime="20201112 09:46:09.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044943389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055266569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:09.820" endtime="20201112 09:46:09.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.838" endtime="20201112 09:46:09.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.444" endtime="20201112 09:46:09.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.439" endtime="20201112 09:46:09.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:09.901" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:09.847" endtime="20201112 09:46:09.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.912" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:09.910" endtime="20201112 09:46:09.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.916" level="INFO">VALUE: 0.044943389</msg>
<status status="PASS" starttime="20201112 09:46:09.914" endtime="20201112 09:46:09.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.903" endtime="20201112 09:46:09.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.930" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:09.928" endtime="20201112 09:46:09.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:09.934" level="INFO">VALUE: [0.055266569, 0.065295417, 0.075326903, 0.085355958, 0.095386167, 0.105416236, 0.115446972, 0.125478111, 0.135510708, 0.145541292, 0.155573625, 0.165604375, 0.175634972, 0.185665556, 0.195695194, 0.205724333, 0.215755944, 0.225786542, 0.235817528, 0.245847681, 0.255880042, 0.265912667, 0.275944917, 0.285978694, 0.296011889, 0.306044028, 0.316074958, 0.326106306, 0.336135875, 0.346168458, 0.356201597, 0.366232958, 0.376265667, 0.386295806, 0.396329931, 0.4063635, 0.416398083, 0.426429319, 0.436461306, 0.446490486, 0.456521875, 0.466553833, 0.476584708, 0.486616819, 0.496648806, 0.506681431, 0.516713861, 0.526745139, 0.536775958, 0.546806458, 0.556839125, 0.566868667, 0.576901861, 0.586931639, 0.596962208, 0.606992556, 0.617024236, 0.627054597, 0.637085514, 0.647115667, 0.657146778, 0.667177597, 0.677209667, 0.687241514, 0.697273806, 0.707305458, 0.717336556, 0.727367764, 0.737398736, 0.747428875, 0.757459292, 0.767490306, 0.777521708, 0.787553431, 0.797585222, 0.807616583, 0.817648361, 0.827679347, 0.837713458, 0.847745847, 0.857777375, 0.867808583, 0.877839083, 0.887871444, 0.897903611, 0.907934111, 0.917963472, 0.927995653, 0.938024736, 0.948056111, 0.958086347, 0.968116875, 0.978147972, 0.988178681, 0.998210944, 1.008241625, 1.018274111, 1.028305375, 1.038336764, 1.048367972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:09.932" endtime="20201112 09:46:09.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.920" endtime="20201112 09:46:09.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.943" endtime="20201112 09:46:09.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:09.951" endtime="20201112 09:46:09.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.947" endtime="20201112 09:46:09.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.939" endtime="20201112 09:46:09.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.194" endtime="20201112 09:46:09.977"></status>
</kw>
<msg timestamp="20201112 09:46:09.978" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:09.998" endtime="20201112 09:46:12.126"></status>
</kw>
<msg timestamp="20201112 09:46:12.127" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61102312, 'wakeups': [61112604, 61122604, 61132604, 61142604, 61152604...</msg>
<status status="PASS" starttime="20201112 09:46:09.995" endtime="20201112 09:46:12.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61102312, 'wakeups': [61112604, 61122604, 61132604, 61142604, 61152604...</msg>
<status status="PASS" starttime="20201112 09:46:12.129" endtime="20201112 09:46:12.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.136" endtime="20201112 09:46:12.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.988" endtime="20201112 09:46:12.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.982" endtime="20201112 09:46:12.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.149" level="INFO">${RESULT} = {'wakeups': [61112604, 61122604, 61132604, 61142604, 61152604, 61162604, 61172603, 61182604, 61192604, 61202603, 61212604, 61222603, 61232604, 61242604, 61252604, 61262603, 61272604, 61282604, 6129260...</msg>
<status status="PASS" starttime="20201112 09:46:12.144" endtime="20201112 09:46:12.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.159" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:12.157" endtime="20201112 09:46:12.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.163" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:12.161" endtime="20201112 09:46:12.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.151" endtime="20201112 09:46:12.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.181" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.179" endtime="20201112 09:46:12.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.186" level="INFO">VALUE: 61102312</msg>
<status status="PASS" starttime="20201112 09:46:12.184" endtime="20201112 09:46:12.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.172" endtime="20201112 09:46:12.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.198" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.196" endtime="20201112 09:46:12.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.203" level="INFO">VALUE: [61112604, 61122604, 61132604, 61142604, 61152604, 61162604, 61172603, 61182604, 61192604, 61202603, 61212604, 61222603, 61232604, 61242604, 61252604, 61262603, 61272604, 61282604, 61292604, 61302604, 61312603, 61322604, 61332604, 61342603, 61352604, 61362604, 61372604, 61382603, 61392604, 61402604, 61412604, 61422604, 61432604, 61442604, 61452604, 61462604, 61472604, 61482603, 61492603, 61502604, 61512604, 61522604, 61532604, 61542604, 61552604, 61562604, 61572604, 61582604, 61592604, 61602604, 61612603, 61622604, 61632604, 61642604, 61652604, 61662604, 61672603, 61682604, 61692604, 61702603, 61712604, 61722604, 61732604, 61742604, 61752603, 61762604, 61772603, 61782604, 61792603, 61802604, 61812604, 61822603, 61832604, 61842604, 61852604, 61862603, 61872604, 61882604, 61892604, 61902604, 61912603, 61922604, 61932604, 61942603, 61952604, 61962604, 61972604, 61982604, 61992604, 62002603, 62012604, 62022603, 62032604, 62042604, 62052604, 62062603, 62072603, 62082603, 62092604, 62102604]</msg>
<status status="PASS" starttime="20201112 09:46:12.200" endtime="20201112 09:46:12.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.189" endtime="20201112 09:46:12.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.224" endtime="20201112 09:46:12.566"></status>
</kw>
<msg timestamp="20201112 09:46:12.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037749861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048075736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.220" endtime="20201112 09:46:12.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037749861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048075736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.574" endtime="20201112 09:46:12.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.592" endtime="20201112 09:46:12.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.213" endtime="20201112 09:46:12.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.206" endtime="20201112 09:46:12.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.652" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:12.600" endtime="20201112 09:46:12.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.663" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.661" endtime="20201112 09:46:12.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.667" level="INFO">VALUE: 0.037749861</msg>
<status status="PASS" starttime="20201112 09:46:12.665" endtime="20201112 09:46:12.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.654" endtime="20201112 09:46:12.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.680" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.678" endtime="20201112 09:46:12.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.685" level="INFO">VALUE: [0.048075736, 0.058108028, 0.06814025, 0.078172, 0.088201958, 0.098232194, 0.108262736, 0.118294403, 0.128325278, 0.138356625, 0.148389444, 0.158417833, 0.168448528, 0.178479389, 0.188510333, 0.198540306, 0.208573306, 0.218604125, 0.22863475, 0.238665347, 0.248695986, 0.258729569, 0.268761389, 0.278791, 0.288823056, 0.298853792, 0.308886292, 0.318917597, 0.328950486, 0.338981875, 0.349013722, 0.359044889, 0.369075764, 0.3791065, 0.3891385, 0.399169153, 0.409200542, 0.419231, 0.429262361, 0.439295153, 0.44932675, 0.459358014, 0.469389903, 0.479421486, 0.489453542, 0.499484875, 0.509517222, 0.519548083, 0.529579542, 0.539611181, 0.549643236, 0.559676444, 0.569709278, 0.579740903, 0.589772306, 0.599804625, 0.609836833, 0.619870556, 0.629904472, 0.639936042, 0.649969708, 0.660001375, 0.670032889, 0.680064069, 0.690094389, 0.700126306, 0.710155708, 0.720187764, 0.730217847, 0.7402505, 0.750281611, 0.760311958, 0.770345306, 0.780376708, 0.790407944, 0.800438792, 0.810471694, 0.820504056, 0.830536514, 0.840567194, 0.850596792, 0.860628486, 0.870660306, 0.880690611, 0.890723319, 0.900755111, 0.910786736, 0.920818569, 0.930850903, 0.940881792, 0.950915472, 0.96094675, 0.970980444, 0.98101275, 0.991043861, 1.001074361, 1.011106181, 1.021136903, 1.031169792, 1.041200806] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:12.683" endtime="20201112 09:46:12.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.671" endtime="20201112 09:46:12.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.694" endtime="20201112 09:46:12.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:12.703" endtime="20201112 09:46:12.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.698" endtime="20201112 09:46:12.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.690" endtime="20201112 09:46:12.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:09.979" endtime="20201112 09:46:12.728"></status>
</kw>
<msg timestamp="20201112 09:46:12.729" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.752" endtime="20201112 09:46:14.879"></status>
</kw>
<msg timestamp="20201112 09:46:14.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63847613, 'wakeups': [63857905, 63867905, 63877904, 63887905, 63897905...</msg>
<status status="PASS" starttime="20201112 09:46:12.749" endtime="20201112 09:46:14.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63847613, 'wakeups': [63857905, 63867905, 63877904, 63887905, 63897905...</msg>
<status status="PASS" starttime="20201112 09:46:14.882" endtime="20201112 09:46:14.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.889" endtime="20201112 09:46:14.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.739" endtime="20201112 09:46:14.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.734" endtime="20201112 09:46:14.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:14.902" level="INFO">${RESULT} = {'wakeups': [63857905, 63867905, 63877904, 63887905, 63897905, 63907904, 63917905, 63927905, 63937905, 63947905, 63957904, 63967905, 63977905, 63987905, 63997905, 64007904, 64017905, 64027904, 6403790...</msg>
<status status="PASS" starttime="20201112 09:46:14.898" endtime="20201112 09:46:14.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.912" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:14.910" endtime="20201112 09:46:14.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.916" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:14.914" endtime="20201112 09:46:14.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.904" endtime="20201112 09:46:14.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.929" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:14.926" endtime="20201112 09:46:14.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.933" level="INFO">VALUE: 63847613</msg>
<status status="PASS" starttime="20201112 09:46:14.931" endtime="20201112 09:46:14.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.920" endtime="20201112 09:46:14.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.945" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:14.943" endtime="20201112 09:46:14.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:14.950" level="INFO">VALUE: [63857905, 63867905, 63877904, 63887905, 63897905, 63907904, 63917905, 63927905, 63937905, 63947905, 63957904, 63967905, 63977905, 63987905, 63997905, 64007904, 64017905, 64027904, 64037905, 64047905, 64057905, 64067904, 64077905, 64087905, 64097904, 64107904, 64117905, 64127905, 64137905, 64147904, 64157905, 64167905, 64177905, 64187904, 64197905, 64207905, 64217905, 64227905, 64237905, 64247905, 64257905, 64267905, 64277904, 64287904, 64297905, 64307904, 64317905, 64327905, 64337905, 64347904, 64357905, 64367905, 64377905, 64387905, 64397904, 64407905, 64417905, 64427905, 64437905, 64447905, 64457905, 64467904, 64477905, 64487905, 64497905, 64507904, 64517905, 64527904, 64537905, 64547905, 64557905, 64567905, 64577905, 64587905, 64597905, 64607905, 64617905, 64627905, 64637905, 64647905, 64657904, 64667905, 64677904, 64687904, 64697905, 64707904, 64717905, 64727905, 64737904, 64747904, 64757905, 64767905, 64777905, 64787904, 64797905, 64807904, 64817905, 64827905, 64837905, 64847905]</msg>
<status status="PASS" starttime="20201112 09:46:14.947" endtime="20201112 09:46:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.936" endtime="20201112 09:46:14.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:14.969" endtime="20201112 09:46:15.313"></status>
</kw>
<msg timestamp="20201112 09:46:15.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050425264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:14.966" endtime="20201112 09:46:15.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050425264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:15.322" endtime="20201112 09:46:15.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.339" endtime="20201112 09:46:15.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.959" endtime="20201112 09:46:15.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:14.954" endtime="20201112 09:46:15.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:15.401" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:15.347" endtime="20201112 09:46:15.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.411" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:15.409" endtime="20201112 09:46:15.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.415" level="INFO">VALUE: 0.040098333</msg>
<status status="PASS" starttime="20201112 09:46:15.413" endtime="20201112 09:46:15.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.402" endtime="20201112 09:46:15.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.429" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:15.426" endtime="20201112 09:46:15.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.434" level="INFO">VALUE: [0.050425264, 0.060457292, 0.070488139, 0.080520042, 0.090550431, 0.100579222, 0.110610625, 0.120640972, 0.130672139, 0.140703875, 0.150734431, 0.160768986, 0.170802111, 0.180835653, 0.190868792, 0.200899736, 0.210931375, 0.220959875, 0.230991708, 0.241022014, 0.251051806, 0.261079694, 0.271110847, 0.281139917, 0.291168542, 0.301197847, 0.311228819, 0.321257597, 0.331285861, 0.341313875, 0.351345208, 0.361374875, 0.371405083, 0.381434694, 0.391467, 0.401498917, 0.411531875, 0.421564736, 0.431598069, 0.441630167, 0.451663819, 0.461694472, 0.471724611, 0.481754486, 0.491785972, 0.501816153, 0.511848458, 0.521879167, 0.531909806, 0.541939583, 0.551973083, 0.562005431, 0.572038222, 0.582069069, 0.592098931, 0.602130653, 0.612163347, 0.622195458, 0.632227917, 0.642259708, 0.652291958, 0.662320944, 0.672352125, 0.682383208, 0.6924165, 0.702445806, 0.712477236, 0.722507347, 0.732539611, 0.742570889, 0.752603014, 0.762634889, 0.772667056, 0.782698458, 0.792730375, 0.802761806, 0.812793889, 0.822826583, 0.832858722, 0.842890181, 0.852920653, 0.862951972, 0.872982208, 0.883013306, 0.893046167, 0.903076792, 0.913109042, 0.923139736, 0.933169653, 0.94319975, 0.953231458, 0.963261917, 0.973293361, 0.983323681, 0.993356514, 1.003388056, 1.013420931, 1.023451736, 1.033483208, 1.043514417] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:15.431" endtime="20201112 09:46:15.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.419" endtime="20201112 09:46:15.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.442" endtime="20201112 09:46:15.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:15.451" endtime="20201112 09:46:15.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.446" endtime="20201112 09:46:15.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.438" endtime="20201112 09:46:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.730" endtime="20201112 09:46:15.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.190" endtime="20201112 09:46:15.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.188" endtime="20201112 09:46:15.477"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:15.483" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.504" endtime="20201112 09:46:17.631"></status>
</kw>
<msg timestamp="20201112 09:46:17.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66591602, 'wakeups': [66601929, 66611930, 66621930, 66631930, 66641930...</msg>
<status status="PASS" starttime="20201112 09:46:15.500" endtime="20201112 09:46:17.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.639" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66591602, 'wakeups': [66601929, 66611930, 66621930, 66631930, 66641930...</msg>
<status status="PASS" starttime="20201112 09:46:17.635" endtime="20201112 09:46:17.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.642" endtime="20201112 09:46:17.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.493" endtime="20201112 09:46:17.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.488" endtime="20201112 09:46:17.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:17.654" level="INFO">${RESULT} = {'wakeups': [66601929, 66611930, 66621930, 66631930, 66641930, 66651930, 66661930, 66671930, 66681930, 66691930, 66701930, 66711930, 66721930, 66731930, 66741930, 66751930, 66761930, 66771930, 6678193...</msg>
<status status="PASS" starttime="20201112 09:46:17.650" endtime="20201112 09:46:17.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.664" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:17.662" endtime="20201112 09:46:17.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.669" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:17.667" endtime="20201112 09:46:17.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.656" endtime="20201112 09:46:17.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.681" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:17.679" endtime="20201112 09:46:17.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.685" level="INFO">VALUE: 66591602</msg>
<status status="PASS" starttime="20201112 09:46:17.683" endtime="20201112 09:46:17.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.672" endtime="20201112 09:46:17.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.698" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:17.695" endtime="20201112 09:46:17.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.702" level="INFO">VALUE: [66601929, 66611930, 66621930, 66631930, 66641930, 66651930, 66661930, 66671930, 66681930, 66691930, 66701930, 66711930, 66721930, 66731930, 66741930, 66751930, 66761930, 66771930, 66781930, 66791930, 66801930, 66811930, 66821930, 66831930, 66841930, 66851930, 66861930, 66871930, 66881930, 66891930, 66901930, 66911930, 66921930, 66931930, 66941930, 66951930, 66961930, 66971930, 66981930, 66991930, 67001930, 67011930, 67021930, 67031930, 67041930, 67051930, 67061930, 67071930, 67081930, 67091930, 67101930, 67111930, 67121930, 67131930, 67141930, 67151930, 67161930, 67171930, 67181930, 67191930, 67201930, 67211930, 67221930, 67231930, 67241930, 67251930, 67261930, 67271930, 67281930, 67291930, 67301930, 67311930, 67321930, 67331930, 67341930, 67351930, 67361930, 67371930, 67381930, 67391930, 67401930, 67411930, 67421930, 67431930, 67441930, 67451930, 67461930, 67471930, 67481930, 67491930, 67501930, 67511930, 67521930, 67531930, 67541930, 67551930, 67561930, 67571930, 67581930, 67591930]</msg>
<status status="PASS" starttime="20201112 09:46:17.700" endtime="20201112 09:46:17.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.689" endtime="20201112 09:46:17.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.723" endtime="20201112 09:46:18.066"></status>
</kw>
<msg timestamp="20201112 09:46:18.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054664097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:17.720" endtime="20201112 09:46:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054664097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:18.074" endtime="20201112 09:46:18.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.092" endtime="20201112 09:46:18.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.713" endtime="20201112 09:46:18.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.708" endtime="20201112 09:46:18.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:18.154" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:18.101" endtime="20201112 09:46:18.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.164" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:18.162" endtime="20201112 09:46:18.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.169" level="INFO">VALUE: 0.044307097</msg>
<status status="PASS" starttime="20201112 09:46:18.167" endtime="20201112 09:46:18.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.156" endtime="20201112 09:46:18.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.182" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:18.180" endtime="20201112 09:46:18.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.187" level="INFO">VALUE: [0.054664097, 0.064694014, 0.074723889, 0.084754347, 0.094784528, 0.104814403, 0.114844611, 0.124875264, 0.134906361, 0.144937208, 0.154966542, 0.164996486, 0.175027806, 0.185058583, 0.195090625, 0.205122208, 0.215154306, 0.225185597, 0.235215875, 0.245247514, 0.255279083, 0.265310458, 0.275341542, 0.285373306, 0.295404319, 0.305434694, 0.315465819, 0.325496278, 0.335526431, 0.345557014, 0.355587792, 0.365618028, 0.375649764, 0.385680875, 0.395713389, 0.405744569, 0.415775486, 0.425804833, 0.435835028, 0.445864583, 0.455895125, 0.465923667, 0.475952708, 0.485982014, 0.496011875, 0.506040028, 0.516070861, 0.52610075, 0.536130806, 0.546160708, 0.556191069, 0.566220903, 0.576249819, 0.586279208, 0.596307708, 0.606336514, 0.616365333, 0.626395417, 0.636427542, 0.646458764, 0.656490292, 0.666520458, 0.67655, 0.686579264, 0.696608833, 0.706638722, 0.716667639, 0.726697472, 0.736728833, 0.746759917, 0.756791792, 0.766823792, 0.776855333, 0.786886875, 0.796918139, 0.806947819, 0.816976611, 0.827007889, 0.837039611, 0.847071639, 0.857103389, 0.867134958, 0.877166, 0.887196972, 0.897228069, 0.907258278, 0.917289556, 0.927320792, 0.937352514, 0.947382625, 0.957414, 0.967445611, 0.977477569, 0.98750975, 0.997541625, 1.007573542, 1.017605736, 1.027637028, 1.037668875, 1.047698792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:18.184" endtime="20201112 09:46:18.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.172" endtime="20201112 09:46:18.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.195" endtime="20201112 09:46:18.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:18.204" endtime="20201112 09:46:18.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.199" endtime="20201112 09:46:18.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.191" endtime="20201112 09:46:18.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.484" endtime="20201112 09:46:18.230"></status>
</kw>
<msg timestamp="20201112 09:46:18.231" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.252" endtime="20201112 09:46:20.379"></status>
</kw>
<msg timestamp="20201112 09:46:20.380" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69330792, 'wakeups': [69341120, 69351120, 69361120, 69371120, 69381120...</msg>
<status status="PASS" starttime="20201112 09:46:18.248" endtime="20201112 09:46:20.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69330792, 'wakeups': [69341120, 69351120, 69361120, 69371120, 69381120...</msg>
<status status="PASS" starttime="20201112 09:46:20.382" endtime="20201112 09:46:20.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.389" endtime="20201112 09:46:20.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.241" endtime="20201112 09:46:20.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.236" endtime="20201112 09:46:20.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:20.402" level="INFO">${RESULT} = {'wakeups': [69341120, 69351120, 69361120, 69371120, 69381120, 69391120, 69401120, 69411120, 69421120, 69431120, 69441120, 69451120, 69461120, 69471120, 69481120, 69491120, 69501120, 69511120, 6952112...</msg>
<status status="PASS" starttime="20201112 09:46:20.397" endtime="20201112 09:46:20.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.412" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:20.410" endtime="20201112 09:46:20.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:20.415" endtime="20201112 09:46:20.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.404" endtime="20201112 09:46:20.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.429" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:20.427" endtime="20201112 09:46:20.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.433" level="INFO">VALUE: 69330792</msg>
<status status="PASS" starttime="20201112 09:46:20.431" endtime="20201112 09:46:20.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.420" endtime="20201112 09:46:20.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.445" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:20.443" endtime="20201112 09:46:20.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.450" level="INFO">VALUE: [69341120, 69351120, 69361120, 69371120, 69381120, 69391120, 69401120, 69411120, 69421120, 69431120, 69441120, 69451120, 69461120, 69471120, 69481120, 69491120, 69501120, 69511120, 69521120, 69531120, 69541120, 69551120, 69561120, 69571120, 69581120, 69591120, 69601120, 69611120, 69621120, 69631120, 69641120, 69651120, 69661120, 69671120, 69681120, 69691120, 69701120, 69711120, 69721120, 69731120, 69741120, 69751120, 69761120, 69771120, 69781120, 69791120, 69801120, 69811120, 69821120, 69831120, 69841120, 69851120, 69861120, 69871120, 69881120, 69891120, 69901120, 69911120, 69921120, 69931120, 69941120, 69951120, 69961120, 69971120, 69981120, 69991120, 70001120, 70011120, 70021120, 70031120, 70041120, 70051120, 70061120, 70071120, 70081120, 70091120, 70101120, 70111120, 70121120, 70131120, 70141120, 70151120, 70161120, 70171120, 70181120, 70191120, 70201120, 70211120, 70221120, 70231120, 70241120, 70251120, 70261120, 70271120, 70281120, 70291120, 70301120, 70311120, 70321120, 70331120]</msg>
<status status="PASS" starttime="20201112 09:46:20.448" endtime="20201112 09:46:20.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.437" endtime="20201112 09:46:20.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.469" endtime="20201112 09:46:20.813"></status>
</kw>
<msg timestamp="20201112 09:46:20.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037446375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047805986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:20.466" endtime="20201112 09:46:20.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037446375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047805986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:20.821" endtime="20201112 09:46:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.839" endtime="20201112 09:46:20.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.459" endtime="20201112 09:46:20.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.454" endtime="20201112 09:46:20.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:20.901" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:20.850" endtime="20201112 09:46:20.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.912" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:20.910" endtime="20201112 09:46:20.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.916" level="INFO">VALUE: 0.037446375</msg>
<status status="PASS" starttime="20201112 09:46:20.914" endtime="20201112 09:46:20.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.903" endtime="20201112 09:46:20.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.929" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:20.927" endtime="20201112 09:46:20.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.935" level="INFO">VALUE: [0.047805986, 0.057836486, 0.067867958, 0.077897875, 0.087929625, 0.097962014, 0.107994389, 0.118025431, 0.128059694, 0.138092625, 0.148126417, 0.158159972, 0.168194472, 0.178228847, 0.188261722, 0.198293681, 0.208324778, 0.218355431, 0.228387764, 0.238420889, 0.248453931, 0.258486514, 0.268518917, 0.278550806, 0.288582861, 0.298615653, 0.308647833, 0.318678819, 0.328710597, 0.33874225, 0.348775056, 0.358807278, 0.368839583, 0.378872056, 0.388905514, 0.398936653, 0.408968278, 0.418999931, 0.429033167, 0.439067014, 0.449101444, 0.459135097, 0.469168597, 0.479199778, 0.489232375, 0.499264472, 0.509296597, 0.519326625, 0.529356764, 0.539386472, 0.549415958, 0.559444778, 0.569475694, 0.5795055, 0.589535944, 0.599566264, 0.609596819, 0.61962775, 0.629659694, 0.639691375, 0.649723875, 0.659755667, 0.669788528, 0.679820181, 0.689851139, 0.6998825, 0.709914292, 0.719945264, 0.729977444, 0.740008153, 0.750040306, 0.760070472, 0.770100667, 0.780131389, 0.790163125, 0.8001945, 0.810225681, 0.820255042, 0.830285681, 0.840315556, 0.850346319, 0.860377403, 0.870406764, 0.88043625, 0.890467097, 0.900498125, 0.910529278, 0.920559694, 0.930591153, 0.940623375, 0.950657, 0.9606905, 0.970722153, 0.980752958, 0.990783764, 1.000814431, 1.010846153, 1.020876083, 1.030906417, 1.040936694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:20.932" endtime="20201112 09:46:20.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.920" endtime="20201112 09:46:20.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.943" endtime="20201112 09:46:20.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:20.952" endtime="20201112 09:46:20.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.947" endtime="20201112 09:46:20.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.939" endtime="20201112 09:46:20.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.232" endtime="20201112 09:46:20.977"></status>
</kw>
<msg timestamp="20201112 09:46:20.977" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.998" endtime="20201112 09:46:23.125"></status>
</kw>
<msg timestamp="20201112 09:46:23.127" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72069102, 'wakeups': [72079430, 72089430, 72099430, 72109430, 72119430...</msg>
<status status="PASS" starttime="20201112 09:46:20.995" endtime="20201112 09:46:23.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.133" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72069102, 'wakeups': [72079430, 72089430, 72099430, 72109430, 72119430...</msg>
<status status="PASS" starttime="20201112 09:46:23.129" endtime="20201112 09:46:23.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.136" endtime="20201112 09:46:23.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.988" endtime="20201112 09:46:23.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.982" endtime="20201112 09:46:23.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:23.150" level="INFO">${RESULT} = {'wakeups': [72079430, 72089430, 72099430, 72109430, 72119430, 72129430, 72139430, 72149430, 72159430, 72169430, 72179430, 72189430, 72199430, 72209430, 72219430, 72229430, 72239430, 72249430, 7225943...</msg>
<status status="PASS" starttime="20201112 09:46:23.146" endtime="20201112 09:46:23.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.160" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:23.158" endtime="20201112 09:46:23.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.164" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:23.162" endtime="20201112 09:46:23.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.152" endtime="20201112 09:46:23.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.177" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:23.174" endtime="20201112 09:46:23.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.181" level="INFO">VALUE: 72069102</msg>
<status status="PASS" starttime="20201112 09:46:23.179" endtime="20201112 09:46:23.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.168" endtime="20201112 09:46:23.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.193" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:23.191" endtime="20201112 09:46:23.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.199" level="INFO">VALUE: [72079430, 72089430, 72099430, 72109430, 72119430, 72129430, 72139430, 72149430, 72159430, 72169430, 72179430, 72189430, 72199430, 72209430, 72219430, 72229430, 72239430, 72249430, 72259430, 72269430, 72279430, 72289430, 72299430, 72309430, 72319430, 72329430, 72339430, 72349430, 72359430, 72369430, 72379430, 72389430, 72399430, 72409430, 72419430, 72429430, 72439430, 72449430, 72459430, 72469430, 72479430, 72489430, 72499430, 72509430, 72519430, 72529430, 72539430, 72549430, 72559430, 72569430, 72579430, 72589430, 72599430, 72609430, 72619430, 72629430, 72639430, 72649430, 72659430, 72669430, 72679430, 72689430, 72699430, 72709430, 72719430, 72729430, 72739430, 72749430, 72759430, 72769430, 72779430, 72789430, 72799430, 72809430, 72819430, 72829430, 72839430, 72849430, 72859430, 72869430, 72879430, 72889430, 72899430, 72909430, 72919430, 72929430, 72939430, 72949430, 72959430, 72969430, 72979430, 72989430, 72999430, 73009430, 73019430, 73029430, 73039430, 73049430, 73059430, 73069430]</msg>
<status status="PASS" starttime="20201112 09:46:23.196" endtime="20201112 09:46:23.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.184" endtime="20201112 09:46:23.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.218" endtime="20201112 09:46:23.561"></status>
</kw>
<msg timestamp="20201112 09:46:23.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037543472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04790375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:46:23.214" endtime="20201112 09:46:23.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037543472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04790375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:46:23.570" endtime="20201112 09:46:23.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.587" endtime="20201112 09:46:23.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.207" endtime="20201112 09:46:23.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.203" endtime="20201112 09:46:23.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:23.648" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:23.595" endtime="20201112 09:46:23.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.659" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:23.657" endtime="20201112 09:46:23.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.663" level="INFO">VALUE: 0.037543472</msg>
<status status="PASS" starttime="20201112 09:46:23.661" endtime="20201112 09:46:23.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.650" endtime="20201112 09:46:23.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.677" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:23.674" endtime="20201112 09:46:23.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.681" level="INFO">VALUE: [0.04790375, 0.057935014, 0.067967153, 0.077997931, 0.088029069, 0.098059861, 0.108091153, 0.118121389, 0.128152097, 0.138183042, 0.14821525, 0.158246208, 0.168278153, 0.178309444, 0.188342958, 0.198376292, 0.208408653, 0.218440736, 0.228472347, 0.2385035, 0.248534792, 0.258565931, 0.268597681, 0.278628833, 0.288660181, 0.298690389, 0.308721111, 0.318753125, 0.328784778, 0.338815653, 0.348847847, 0.358878903, 0.368909903, 0.378940736, 0.388972931, 0.399004597, 0.409035889, 0.419067944, 0.429099333, 0.439129264, 0.449160667, 0.459191667, 0.469223889, 0.479256569, 0.489289653, 0.499321861, 0.509354236, 0.519387319, 0.529419792, 0.539451528, 0.549484153, 0.559516444, 0.569549778, 0.579582931, 0.589615306, 0.599647292, 0.609679764, 0.619711556, 0.629743472, 0.639775111, 0.649806097, 0.659838236, 0.669870917, 0.679903, 0.689935653, 0.699969611, 0.710003556, 0.72003575, 0.730068778, 0.740101875, 0.750136042, 0.760169236, 0.7702025, 0.780236694, 0.790270556, 0.800302958, 0.810334819, 0.820365722, 0.830398333, 0.840429111, 0.850460347, 0.860491444, 0.870521347, 0.880551264, 0.890582458, 0.900615903, 0.910650014, 0.920683167, 0.930715389, 0.940748542, 0.950780278, 0.960811014, 0.970841403, 0.980870639, 0.990900292, 1.000931083, 1.010961806, 1.020992375, 1.031022903, 1.041053292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:23.679" endtime="20201112 09:46:23.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.667" endtime="20201112 09:46:23.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.690" endtime="20201112 09:46:23.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:23.698" endtime="20201112 09:46:23.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.694" endtime="20201112 09:46:23.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.685" endtime="20201112 09:46:23.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.979" endtime="20201112 09:46:23.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.480" endtime="20201112 09:46:23.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.478" endtime="20201112 09:46:23.725"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:23.731" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.751" endtime="20201112 09:46:25.879"></status>
</kw>
<msg timestamp="20201112 09:46:25.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74813691, 'wakeups': [74824063, 74834062, 74844062, 74854062, 748640...</msg>
<status status="PASS" starttime="20201112 09:46:23.748" endtime="20201112 09:46:25.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74813691, 'wakeups': [74824063, 74834062, 74844062, 74854062, 748640...</msg>
<status status="PASS" starttime="20201112 09:46:25.882" endtime="20201112 09:46:25.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:25.889" endtime="20201112 09:46:25.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.741" endtime="20201112 09:46:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.735" endtime="20201112 09:46:25.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:25.902" level="INFO">${RESULT} = {'wakeups': [74824063, 74834062, 74844062, 74854062, 74864062, 74874062, 74884062, 74894062, 74904062, 74914062, 74924062, 74934062, 74944062, 74954062, 74964062, 74974062, 74984062, 74994062, 7500406...</msg>
<status status="PASS" starttime="20201112 09:46:25.897" endtime="20201112 09:46:25.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.912" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:25.909" endtime="20201112 09:46:25.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.916" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:25.914" endtime="20201112 09:46:25.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.903" endtime="20201112 09:46:25.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.928" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:25.926" endtime="20201112 09:46:25.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.933" level="INFO">VALUE: 74813691</msg>
<status status="PASS" starttime="20201112 09:46:25.931" endtime="20201112 09:46:25.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.920" endtime="20201112 09:46:25.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.945" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:25.943" endtime="20201112 09:46:25.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:25.952" level="INFO">VALUE: [74824063, 74834062, 74844062, 74854062, 74864062, 74874062, 74884062, 74894062, 74904062, 74914062, 74924062, 74934062, 74944062, 74954062, 74964062, 74974062, 74984062, 74994062, 75004062, 75014062, 75024062, 75034062, 75044062, 75054062, 75064062, 75074062, 75084062, 75094062, 75104062, 75114062, 75124062, 75134062, 75144062, 75154062, 75164062, 75174062, 75184062, 75194062, 75204062, 75214062, 75224062, 75234062, 75244062, 75254062, 75264062, 75274062, 75284062, 75294062, 75304062, 75314062, 75324062, 75334062, 75344062, 75354062, 75364062, 75374062, 75384062, 75394062, 75404062, 75414062, 75424062, 75434062, 75444062, 75454062, 75464062, 75474062, 75484062, 75494062, 75504062, 75514062, 75524062, 75534062, 75544062, 75554062, 75564062, 75574062, 75584062, 75594062, 75604062, 75614062, 75624062, 75634062, 75644062, 75654062, 75664062, 75674062, 75684062, 75694062, 75704062, 75714062, 75724062, 75734062, 75744062, 75754062, 75764062, 75774062, 75784062, 75794062, 75804062, 75814062]</msg>
<status status="PASS" starttime="20201112 09:46:25.947" endtime="20201112 09:46:25.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.936" endtime="20201112 09:46:25.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:25.971" endtime="20201112 09:46:26.315"></status>
</kw>
<msg timestamp="20201112 09:46:26.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044136889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:25.967" endtime="20201112 09:46:26.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044136889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:26.323" endtime="20201112 09:46:26.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.340" endtime="20201112 09:46:26.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.960" endtime="20201112 09:46:26.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:25.955" endtime="20201112 09:46:26.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:26.402" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:26.349" endtime="20201112 09:46:26.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.413" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:26.411" endtime="20201112 09:46:26.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.417" level="INFO">VALUE: 0.044136889</msg>
<status status="PASS" starttime="20201112 09:46:26.415" endtime="20201112 09:46:26.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.404" endtime="20201112 09:46:26.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.431" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:26.428" endtime="20201112 09:46:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.435" level="INFO">VALUE: [0.054541153, 0.064571236, 0.074602097, 0.084631458, 0.094661889, 0.104692431, 0.114724361, 0.124756389, 0.134787528, 0.144818667, 0.154849944, 0.164881653, 0.174914708, 0.184946972, 0.194978069, 0.205008889, 0.215040653, 0.225071236, 0.235101708, 0.245131806, 0.255162847, 0.265194944, 0.275226625, 0.285257417, 0.29528875, 0.305319528, 0.315350875, 0.325382014, 0.335413778, 0.345444403, 0.355475389, 0.365505722, 0.375536319, 0.385567597, 0.395599889, 0.405630875, 0.415662458, 0.42569375, 0.435726181, 0.445756986, 0.455787806, 0.465817833, 0.475847861, 0.485877972, 0.495909542, 0.505940931, 0.515973208, 0.526004556, 0.536034764, 0.546064972, 0.556095597, 0.566125389, 0.576155847, 0.586186167, 0.596216472, 0.606247444, 0.616278736, 0.626308708, 0.636340403, 0.6463715, 0.656402486, 0.666433722, 0.676465681, 0.686495708, 0.696525111, 0.706555167, 0.716584819, 0.726615194, 0.736644736, 0.746673764, 0.756703833, 0.766734528, 0.776765583, 0.786795208, 0.796825625, 0.806856083, 0.816886014, 0.826915542, 0.836945514, 0.846976236, 0.857006819, 0.867036986, 0.877067667, 0.887097458, 0.897128569, 0.907159319, 0.917190097, 0.927220222, 0.937250208, 0.947280264, 0.957311417, 0.967342347, 0.977373028, 0.987403569, 0.997434069, 1.007463847, 1.017495056, 1.027525792, 1.037557139, 1.047588375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:26.433" endtime="20201112 09:46:26.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.421" endtime="20201112 09:46:26.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.444" endtime="20201112 09:46:26.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:26.452" endtime="20201112 09:46:26.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.448" endtime="20201112 09:46:26.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.439" endtime="20201112 09:46:26.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.732" endtime="20201112 09:46:26.478"></status>
</kw>
<msg timestamp="20201112 09:46:26.478" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.499" endtime="20201112 09:46:28.627"></status>
</kw>
<msg timestamp="20201112 09:46:28.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77553035, 'wakeups': [77563408, 77573406, 77583406, 77593406, 776034...</msg>
<status status="PASS" starttime="20201112 09:46:26.495" endtime="20201112 09:46:28.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.640" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77553035, 'wakeups': [77563408, 77573406, 77583406, 77593406, 776034...</msg>
<status status="PASS" starttime="20201112 09:46:28.630" endtime="20201112 09:46:28.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:28.642" endtime="20201112 09:46:28.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.488" endtime="20201112 09:46:28.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.483" endtime="20201112 09:46:28.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:28.655" level="INFO">${RESULT} = {'wakeups': [77563408, 77573406, 77583406, 77593406, 77603406, 77613406, 77623406, 77633406, 77643406, 77653406, 77663406, 77673406, 77683406, 77693406, 77703406, 77713406, 77723406, 77733406, 7774340...</msg>
<status status="PASS" starttime="20201112 09:46:28.651" endtime="20201112 09:46:28.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.665" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:28.663" endtime="20201112 09:46:28.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.670" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:28.668" endtime="20201112 09:46:28.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:28.657" endtime="20201112 09:46:28.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.683" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:28.680" endtime="20201112 09:46:28.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.687" level="INFO">VALUE: 77553035</msg>
<status status="PASS" starttime="20201112 09:46:28.685" endtime="20201112 09:46:28.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:28.673" endtime="20201112 09:46:28.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.699" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:28.697" endtime="20201112 09:46:28.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:28.704" level="INFO">VALUE: [77563408, 77573406, 77583406, 77593406, 77603406, 77613406, 77623406, 77633406, 77643406, 77653406, 77663406, 77673406, 77683406, 77693406, 77703406, 77713406, 77723406, 77733406, 77743406, 77753406, 77763406, 77773406, 77783406, 77793406, 77803406, 77813406, 77823406, 77833406, 77843406, 77853406, 77863406, 77873406, 77883406, 77893406, 77903406, 77913406, 77923406, 77933406, 77943406, 77953406, 77963406, 77973406, 77983406, 77993406, 78003406, 78013406, 78023406, 78033406, 78043406, 78053406, 78063406, 78073406, 78083406, 78093406, 78103406, 78113406, 78123406, 78133406, 78143406, 78153406, 78163406, 78173406, 78183406, 78193406, 78203406, 78213406, 78223406, 78233406, 78243406, 78253406, 78263406, 78273406, 78283406, 78293406, 78303406, 78313406, 78323406, 78333406, 78343406, 78353406, 78363406, 78373406, 78383406, 78393406, 78403406, 78413406, 78423406, 78433406, 78443406, 78453406, 78463406, 78473406, 78483406, 78493406, 78503406, 78513406, 78523406, 78533406, 78543406, 78553406]</msg>
<status status="PASS" starttime="20201112 09:46:28.702" endtime="20201112 09:46:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:28.691" endtime="20201112 09:46:28.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:28.723" endtime="20201112 09:46:29.066"></status>
</kw>
<msg timestamp="20201112 09:46:29.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047933528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:28.719" endtime="20201112 09:46:29.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047933528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:29.075" endtime="20201112 09:46:29.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:29.092" endtime="20201112 09:46:29.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:28.712" endtime="20201112 09:46:29.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:28.708" endtime="20201112 09:46:29.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:29.153" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:29.102" endtime="20201112 09:46:29.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.164" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:29.162" endtime="20201112 09:46:29.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.169" level="INFO">VALUE: 0.037530458</msg>
<status status="PASS" starttime="20201112 09:46:29.167" endtime="20201112 09:46:29.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.155" endtime="20201112 09:46:29.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.182" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:29.180" endtime="20201112 09:46:29.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:29.186" level="INFO">VALUE: [0.047933528, 0.057960764, 0.067990458, 0.078019319, 0.088049361, 0.098078889, 0.108107583, 0.118136611, 0.128167264, 0.138196819, 0.148227153, 0.158258333, 0.168290153, 0.178321667, 0.188353194, 0.198384236, 0.208416319, 0.218447583, 0.228480042, 0.238511986, 0.248544319, 0.258574611, 0.268606167, 0.278636694, 0.288666944, 0.298695611, 0.308725528, 0.318754361, 0.328783139, 0.338813056, 0.348842889, 0.358871847, 0.368901708, 0.378932972, 0.388962097, 0.398990486, 0.409019944, 0.419049222, 0.429079, 0.439108472, 0.449137597, 0.459166722, 0.469196861, 0.479226431, 0.489256278, 0.499286583, 0.509316472, 0.519343222, 0.529373014, 0.539402389, 0.549432264, 0.559462625, 0.569492375, 0.579522153, 0.589551208, 0.599579056, 0.609608722, 0.619637875, 0.629667764, 0.639698167, 0.649727861, 0.659757556, 0.669787278, 0.679816806, 0.689847014, 0.699877778, 0.709908556, 0.719937875, 0.729966903, 0.739995792, 0.750025597, 0.760055181, 0.770085403, 0.780115167, 0.790145333, 0.800174514, 0.810204181, 0.820233361, 0.830263375, 0.840291903, 0.850320375, 0.860348264, 0.870376625, 0.880404153, 0.890432806, 0.900460861, 0.91049075, 0.920519236, 0.930547792, 0.940575694, 0.950603778, 0.960632333, 0.970660958, 0.980689069, 0.990717306, 1.000746361, 1.010775736, 1.020805222, 1.030834292, 1.040863972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:29.184" endtime="20201112 09:46:29.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.172" endtime="20201112 09:46:29.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:29.195" endtime="20201112 09:46:29.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:29.203" endtime="20201112 09:46:29.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.199" endtime="20201112 09:46:29.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.191" endtime="20201112 09:46:29.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.479" endtime="20201112 09:46:29.229"></status>
</kw>
<msg timestamp="20201112 09:46:29.229" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:29.250" endtime="20201112 09:46:31.378"></status>
</kw>
<msg timestamp="20201112 09:46:31.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80296075, 'wakeups': [80306447, 80316446, 80326446, 80336446, 803464...</msg>
<status status="PASS" starttime="20201112 09:46:29.247" endtime="20201112 09:46:31.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80296075, 'wakeups': [80306447, 80316446, 80326446, 80336446, 803464...</msg>
<status status="PASS" starttime="20201112 09:46:31.381" endtime="20201112 09:46:31.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.388" endtime="20201112 09:46:31.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.240" endtime="20201112 09:46:31.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.234" endtime="20201112 09:46:31.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:31.403" level="INFO">${RESULT} = {'wakeups': [80306447, 80316446, 80326446, 80336446, 80346446, 80356446, 80366446, 80376446, 80386446, 80396446, 80406446, 80416446, 80426446, 80436446, 80446446, 80456446, 80466446, 80476446, 8048644...</msg>
<status status="PASS" starttime="20201112 09:46:31.398" endtime="20201112 09:46:31.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.413" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:31.410" endtime="20201112 09:46:31.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:31.415" endtime="20201112 09:46:31.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.404" endtime="20201112 09:46:31.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.430" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:31.428" endtime="20201112 09:46:31.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.434" level="INFO">VALUE: 80296075</msg>
<status status="PASS" starttime="20201112 09:46:31.432" endtime="20201112 09:46:31.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.421" endtime="20201112 09:46:31.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.446" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:31.444" endtime="20201112 09:46:31.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.451" level="INFO">VALUE: [80306447, 80316446, 80326446, 80336446, 80346446, 80356446, 80366446, 80376446, 80386446, 80396446, 80406446, 80416446, 80426446, 80436446, 80446446, 80456446, 80466446, 80476446, 80486446, 80496446, 80506446, 80516446, 80526446, 80536446, 80546446, 80556446, 80566446, 80576446, 80586446, 80596446, 80606446, 80616446, 80626446, 80636446, 80646446, 80656446, 80666446, 80676446, 80686446, 80696446, 80706446, 80716446, 80726446, 80736446, 80746446, 80756446, 80766446, 80776446, 80786446, 80796446, 80806446, 80816446, 80826446, 80836446, 80846446, 80856446, 80866446, 80876446, 80886446, 80896446, 80906446, 80916446, 80926446, 80936446, 80946446, 80956446, 80966446, 80976446, 80986446, 80996446, 81006446, 81016446, 81026446, 81036446, 81046446, 81056446, 81066446, 81076446, 81086446, 81096446, 81106446, 81116446, 81126446, 81136446, 81146446, 81156446, 81166446, 81176446, 81186446, 81196446, 81206446, 81216446, 81226446, 81236446, 81246446, 81256446, 81266446, 81276446, 81286446, 81296446]</msg>
<status status="PASS" starttime="20201112 09:46:31.449" endtime="20201112 09:46:31.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.438" endtime="20201112 09:46:31.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.470" endtime="20201112 09:46:31.814"></status>
</kw>
<msg timestamp="20201112 09:46:31.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047850931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:31.467" endtime="20201112 09:46:31.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047850931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:31.823" endtime="20201112 09:46:31.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.840" endtime="20201112 09:46:31.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.460" endtime="20201112 09:46:31.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.455" endtime="20201112 09:46:31.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:31.903" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:46:31.849" endtime="20201112 09:46:31.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.914" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:31.911" endtime="20201112 09:46:31.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.918" level="INFO">VALUE: 0.037445889</msg>
<status status="PASS" starttime="20201112 09:46:31.916" endtime="20201112 09:46:31.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.905" endtime="20201112 09:46:31.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.931" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:31.929" endtime="20201112 09:46:31.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.936" level="INFO">VALUE: [0.047850931, 0.057881861, 0.067914264, 0.077945986, 0.087977236, 0.098009611, 0.108041639, 0.118072764, 0.128104597, 0.138135403, 0.148167403, 0.158199333, 0.168231667, 0.178264403, 0.188299361, 0.198333139, 0.208367431, 0.2184015, 0.228435819, 0.238468611, 0.248500569, 0.258530708, 0.268562319, 0.278594014, 0.288627125, 0.298658792, 0.308690264, 0.318722764, 0.328755764, 0.338788972, 0.348823097, 0.358854875, 0.368886806, 0.378918611, 0.388950958, 0.398983361, 0.409014458, 0.419045306, 0.429076542, 0.439108611, 0.449142681, 0.459175319, 0.469208028, 0.479239917, 0.489273181, 0.499304833, 0.509337458, 0.519369944, 0.529402486, 0.539434486, 0.549467139, 0.559500139, 0.569534222, 0.579567403, 0.589600597, 0.599633319, 0.609666319, 0.619698444, 0.629731236, 0.639762597, 0.649794361, 0.659825486, 0.669857306, 0.679888806, 0.689920458, 0.699950403, 0.709980653, 0.720011, 0.730042153, 0.740074236, 0.75010725, 0.760137722, 0.770169361, 0.780199569, 0.790230931, 0.80026225, 0.810295167, 0.820326458, 0.830356944, 0.840386736, 0.850418611, 0.860449514, 0.870480458, 0.880511764, 0.890544, 0.900576681, 0.91060875, 0.920641181, 0.930673153, 0.940705028, 0.950737222, 0.960769, 0.970800972, 0.980832597, 0.990863847, 1.00089425, 1.010925639, 1.020957194, 1.030988514, 1.041020292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:31.933" endtime="20201112 09:46:31.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.922" endtime="20201112 09:46:31.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.945" endtime="20201112 09:46:31.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:31.953" endtime="20201112 09:46:31.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.949" endtime="20201112 09:46:31.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.941" endtime="20201112 09:46:31.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:29.231" endtime="20201112 09:46:31.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.728" endtime="20201112 09:46:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.726" endtime="20201112 09:46:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.358" endtime="20201112 09:46:31.981"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 09:45:09.227" endtime="20201112 09:46:31.983" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:45:06.735" endtime="20201112 09:46:31.991"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:38.463" endtime="20201112 09:46:32.030"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
