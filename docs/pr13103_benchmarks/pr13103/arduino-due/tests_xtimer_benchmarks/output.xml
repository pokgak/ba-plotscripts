<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:41:41.345" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.984" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:44.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:46.134" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:44.983" endtime="20201112 12:41:46.135"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.137" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:46.136" endtime="20201112 12:41:46.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.981" endtime="20201112 12:41:46.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.140" endtime="20201112 12:41:46.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.139" endtime="20201112 12:41:46.325"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.339" endtime="20201112 12:41:49.360"></status>
</kw>
<msg timestamp="20201112 12:41:49.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.337" endtime="20201112 12:41:49.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.364" endtime="20201112 12:41:49.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.373" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:49.369" endtime="20201112 12:41:49.374"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.335" endtime="20201112 12:41:49.376"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.332" endtime="20201112 12:41:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.330" endtime="20201112 12:41:49.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:49.385" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:49.384" endtime="20201112 12:41:49.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.379" endtime="20201112 12:41:49.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.330" endtime="20201112 12:41:49.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.329" endtime="20201112 12:41:49.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.389" endtime="20201112 12:41:49.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.327" endtime="20201112 12:41:49.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.395" endtime="20201112 12:41:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.326" endtime="20201112 12:41:49.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.979" endtime="20201112 12:41:49.400"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.413" endtime="20201112 12:41:49.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.410" endtime="20201112 12:41:49.436"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.458" endtime="20201112 12:41:52.480"></status>
</kw>
<msg timestamp="20201112 12:41:52.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.457" endtime="20201112 12:41:52.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.486" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.483" endtime="20201112 12:41:52.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.492" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:52.488" endtime="20201112 12:41:52.493"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.454" endtime="20201112 12:41:52.494"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.452" endtime="20201112 12:41:52.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.449" endtime="20201112 12:41:52.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:52.504" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:52.502" endtime="20201112 12:41:52.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.498" endtime="20201112 12:41:52.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.447" endtime="20201112 12:41:52.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.446" endtime="20201112 12:41:52.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.508" endtime="20201112 12:41:52.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.441" endtime="20201112 12:41:52.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.437" endtime="20201112 12:41:52.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.407" endtime="20201112 12:41:52.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.529" endtime="20201112 12:41:52.543"></status>
</kw>
<msg timestamp="20201112 12:41:52.544" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.525" endtime="20201112 12:41:52.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.549" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.546" endtime="20201112 12:41:52.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.551" endtime="20201112 12:41:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.519" endtime="20201112 12:41:52.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.515" endtime="20201112 12:41:52.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.565" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:41:52.563" endtime="20201112 12:41:52.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.570" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:41:52.568" endtime="20201112 12:41:52.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.558" endtime="20201112 12:41:52.572"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:49.401" endtime="20201112 12:41:52.573" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:41.458" endtime="20201112 12:41:52.580"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.649" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:52.657" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:53.730" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:52.648" endtime="20201112 12:41:53.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.734" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:53.732" endtime="20201112 12:41:53.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.646" endtime="20201112 12:41:53.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.738" endtime="20201112 12:41:53.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.736" endtime="20201112 12:41:53.960"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.972" endtime="20201112 12:41:56.995"></status>
</kw>
<msg timestamp="20201112 12:41:56.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.971" endtime="20201112 12:41:56.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.998" endtime="20201112 12:41:57.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.008" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:57.004" endtime="20201112 12:41:57.009"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:53.968" endtime="20201112 12:41:57.010"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:53.966" endtime="20201112 12:41:57.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.965" endtime="20201112 12:41:57.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:57.020" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:57.019" endtime="20201112 12:41:57.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.014" endtime="20201112 12:41:57.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.964" endtime="20201112 12:41:57.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.963" endtime="20201112 12:41:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.024" endtime="20201112 12:41:57.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.962" endtime="20201112 12:41:57.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.030" endtime="20201112 12:41:57.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.960" endtime="20201112 12:41:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.645" endtime="20201112 12:41:57.035"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.046" endtime="20201112 12:41:57.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.043" endtime="20201112 12:41:57.070"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.087" endtime="20201112 12:42:00.109"></status>
</kw>
<msg timestamp="20201112 12:42:00.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.085" endtime="20201112 12:42:00.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.113" endtime="20201112 12:42:00.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.122" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:00.118" endtime="20201112 12:42:00.123"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:57.083" endtime="20201112 12:42:00.125"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:57.080" endtime="20201112 12:42:00.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.079" endtime="20201112 12:42:00.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:00.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:00.133" endtime="20201112 12:42:00.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.128" endtime="20201112 12:42:00.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.078" endtime="20201112 12:42:00.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.078" endtime="20201112 12:42:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.138" endtime="20201112 12:42:00.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.074" endtime="20201112 12:42:00.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.071" endtime="20201112 12:42:00.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.041" endtime="20201112 12:42:00.144"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:00.148" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.165" endtime="20201112 12:42:00.180"></status>
</kw>
<msg timestamp="20201112 12:42:00.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.162" endtime="20201112 12:42:00.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.183" endtime="20201112 12:42:00.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.189" endtime="20201112 12:42:00.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.156" endtime="20201112 12:42:00.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.152" endtime="20201112 12:42:00.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.209" endtime="20201112 12:42:00.493"></status>
</kw>
<msg timestamp="20201112 12:42:00.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108805792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108813958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.205" endtime="20201112 12:42:00.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108805792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108813958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.497" endtime="20201112 12:42:00.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.503" endtime="20201112 12:42:00.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.200" endtime="20201112 12:42:00.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.196" endtime="20201112 12:42:00.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.509" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:00.508" endtime="20201112 12:42:00.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.514" level="INFO">VALUE: [{'time': 3.108805792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108813958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.165999999754092e-06, 'source_diff': 8.165999999754092e-06}, {'time': 3.1088195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5420000002470715e-06, 'source_diff': 5.5420000002470715e-06}, {'time': 3.108825097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999912811e-06, 'source_diff': 5.596999999912811e-06}, {'time': 3.108825639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108829778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000069615e-06, 'source_diff': 4.139000000069615e-06}, {'time': 3.108833708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000096356e-06, 'source_diff': 3.930000000096356e-06}, {'time': 3.108843042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.334000000027487e-06, 'source_diff': 9.334000000027487e-06}, {'time': 3.108850958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999941192e-06, 'source_diff': 7.915999999941192e-06}, {'time': 3.1088515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108853472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9719999997391824e-06, 'source_diff': 1.9719999997391824e-06}, {'time': 3.108863292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000271278e-06, 'source_diff': 9.820000000271278e-06}, {'time': 3.108863833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.108870264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4310000000844525e-06, 'source_diff': 6.4310000000844525e-06}, {'time': 3.108877778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.513999999986254e-06, 'source_diff': 7.513999999986254e-06}, {'time': 3.108886958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999719968e-06, 'source_diff': 9.179999999719968e-06}, {'time': 3.108890903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000005194e-06, 'source_diff': 3.945000000005194e-06}, {'time': 3.108896194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000351431e-06, 'source_diff': 5.291000000351431e-06}, {'time': 3.108905625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430999999615608e-06, 'source_diff': 9.430999999615608e-06}, {'time': 3.108914319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000364355e-06, 'source_diff': 8.694000000364355e-06}, {'time': 3.108917236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.916999999769132e-06, 'source_diff': 2.916999999769132e-06}, {'time': 3.108921417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180999999991997e-06, 'source_diff': 4.180999999991997e-06}, {'time': 3.108930778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000041031e-06, 'source_diff': 9.361000000041031e-06}, {'time': 3.108936597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819000000073515e-06, 'source_diff': 5.819000000073515e-06}, {'time': 3.108937139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108943639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.500000000020378e-06, 'source_diff': 6.500000000020378e-06}, {'time': 3.108946167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 3.108953681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513999999986254e-06, 'source_diff': 7.513999999986254e-06}, {'time': 3.108960625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999897699e-06, 'source_diff': 6.943999999897699e-06}, {'time': 3.108961167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108963917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.750000000162345e-06, 'source_diff': 2.750000000162345e-06}, {'time': 3.108966375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.457999999982974e-06, 'source_diff': 2.457999999982974e-06}, {'time': 3.108971972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999912811e-06, 'source_diff': 5.596999999912811e-06}, {'time': 3.108972514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.108977986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000228405e-06, 'source_diff': 5.472000000228405e-06}, {'time': 3.108987903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9169999998594e-06, 'source_diff': 9.9169999998594e-06}, {'time': 3.108995819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999941192e-06, 'source_diff': 7.915999999941192e-06}, {'time': 3.108999194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999916639e-06, 'source_diff': 3.374999999916639e-06}, {'time': 3.109008319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000054229e-06, 'source_diff': 9.125000000054229e-06}, {'time': 3.109010986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.666999999956232e-06, 'source_diff': 2.666999999956232e-06}, {'time': 3.109020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999957944e-06, 'source_diff': 9.096999999957944e-06}, {'time': 3.109020625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.10902825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000288651e-06, 'source_diff': 7.625000000288651e-06}, {'time': 3.109037667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41699999978951e-06, 'source_diff': 9.41699999978951e-06}, {'time': 3.109042333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000153048e-06, 'source_diff': 4.666000000153048e-06}, {'time': 3.109051278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944999999815906e-06, 'source_diff': 8.944999999815906e-06}, {'time': 3.109054972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.694000000109554e-06, 'source_diff': 3.694000000109554e-06}, {'time': 3.109063139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999836833e-06, 'source_diff': 8.166999999836833e-06}, {'time': 3.109068486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000099911e-06, 'source_diff': 5.347000000099911e-06}, {'time': 3.109073069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999946935e-06, 'source_diff': 4.582999999946935e-06}, {'time': 3.109080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 3.109089931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.584000000284476e-06, 'source_diff': 9.584000000284476e-06}, {'time': 3.109098819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999984686e-06, 'source_diff': 8.887999999984686e-06}, {'time': 3.109105806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986999999902821e-06, 'source_diff': 6.986999999902821e-06}, {'time': 3.109111069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.262999999811058e-06, 'source_diff': 5.262999999811058e-06}, {'time': 3.109116667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597999999995551e-06, 'source_diff': 5.597999999995551e-06}, {'time': 3.109117208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.109122819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000182997e-06, 'source_diff': 5.611000000182997e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:00.510" endtime="20201112 12:42:00.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.506" endtime="20201112 12:42:00.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:00.531" level="INFO">${debug-compressed} = {'time': [3.108805792, 3.108813958, 3.1088195, 3.108825097, 3.108825639, 3.108829778, 3.108833708, 3.108843042, 3.108850958, 3.1088515, 3.108853472, 3.108863292, 3.108863833, 3.108870264, 3.108877778,...</msg>
<status status="PASS" starttime="20201112 12:42:00.516" endtime="20201112 12:42:00.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.535" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:00.534" endtime="20201112 12:42:00.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.538" level="INFO">VALUE: {'time': [3.108805792, 3.108813958, 3.1088195, 3.108825097, 3.108825639, 3.108829778, 3.108833708, 3.108843042, 3.108850958, 3.1088515, 3.108853472, 3.108863292, 3.108863833, 3.108870264, 3.108877778, 3.108886958, 3.108890903, 3.108896194, 3.108905625, 3.108914319, 3.108917236, 3.108921417, 3.108930778, 3.108936597, 3.108937139, 3.108943639, 3.108946167, 3.108953681, 3.108960625, 3.108961167, 3.108963917, 3.108966375, 3.108971972, 3.108972514, 3.108977986, 3.108987903, 3.108995819, 3.108999194, 3.109008319, 3.109010986, 3.109020083, 3.109020625, 3.10902825, 3.109037667, 3.109042333, 3.109051278, 3.109054972, 3.109063139, 3.109068486, 3.109073069, 3.109080347, 3.109089931, 3.109098819, 3.109105806, 3.109111069, 3.109116667, 3.109117208, 3.109122819], 'eventsourcediff': [0, 8.165999999754092e-06, 5.5420000002470715e-06, 5.596999999912811e-06, 5.419999999922709e-07, 4.139000000069615e-06, 3.930000000096356e-06, 9.334000000027487e-06, 7.915999999941192e-06, 5.419999999922709e-07, 1.9719999997391824e-06, 9.820000000271278e-06, 5.409999999095305e-07, 6.4310000000844525e-06, 7.513999999986254e-06, 9.179999999719968e-06, 3.945000000005194e-06, 5.291000000351431e-06, 9.430999999615608e-06, 8.694000000364355e-06, 2.916999999769132e-06, 4.180999999991997e-06, 9.361000000041031e-06, 5.819000000073515e-06, 5.419999999922709e-07, 6.500000000020378e-06, 2.52800000000164e-06, 7.513999999986254e-06, 6.943999999897699e-06, 5.419999999922709e-07, 2.750000000162345e-06, 2.457999999982974e-06, 5.596999999912811e-06, 5.419999999922709e-07, 5.472000000228405e-06, 9.9169999998594e-06, 7.915999999941192e-06, 3.374999999916639e-06, 9.125000000054229e-06, 2.666999999956232e-06, 9.096999999957944e-06, 5.419999999922709e-07, 7.625000000288651e-06, 9.41699999978951e-06, 4.666000000153048e-06, 8.944999999815906e-06, 3.694000000109554e-06, 8.166999999836833e-06, 5.347000000099911e-06, 4.582999999946935e-06, 7.2779999999994516e-06, 9.584000000284476e-06, 8.887999999984686e-06, 6.986999999902821e-06, 5.262999999811058e-06, 5.597999999995551e-06, 5.409999999095305e-07, 5.611000000182997e-06], 'source_diff': [0, 8.165999999754092e-06, 5.5420000002470715e-06, 5.596999999912811e-06, 5.419999999922709e-07, 4.139000000069615e-06, 3.930000000096356e-06, 9.334000000027487e-06, 7.915999999941192e-06, 5.419999999922709e-07, 1.9719999997391824e-06, 9.820000000271278e-06, 5.409999999095305e-07, 6.4310000000844525e-06, 7.513999999986254e-06, 9.179999999719968e-06, 3.945000000005194e-06, 5.291000000351431e-06, 9.430999999615608e-06, 8.694000000364355e-06, 2.916999999769132e-06, 4.180999999991997e-06, 9.361000000041031e-06, 5.819000000073515e-06, 5.419999999922709e-07, 6.500000000020378e-06, 2.52800000000164e-06, 7.513999999986254e-06, 6.943999999897699e-06, 5.419999999922709e-07, 2.750000000162345e-06, 2.457999999982974e-06, 5.596999999912811e-06, 5.419999999922709e-07, 5.472000000228405e-06, 9.9169999998594e-06, 7.915999999941192e-06, 3.374999999916639e-06, 9.125000000054229e-06, 2.666999999956232e-06, 9.096999999957944e-06, 5.419999999922709e-07, 7.625000000288651e-06, 9.41699999978951e-06, 4.666000000153048e-06, 8.944999999815906e-06, 3.694000000109554e-06, 8.166999999836833e-06, 5.347000000099911e-06, 4.582999999946935e-06, 7.2779999999994516e-06, 9.584000000284476e-06, 8.887999999984686e-06, 6.986999999902821e-06, 5.262999999811058e-06, 5.597999999995551e-06, 5.409999999095305e-07, 5.611000000182997e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:00.536" endtime="20201112 12:42:00.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.532" endtime="20201112 12:42:00.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.543" level="INFO">${RESULT} = [{'time': 3.108813958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.165999999754092e-06, 'source_diff': 8.165999999754092e-06}, {'time': 3.108825097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:00.540" endtime="20201112 12:42:00.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.552" level="INFO">${GPIO_OVERHEAD} = {'time': [3.108813958, 3.108825097, 3.108829778, 3.108843042, 3.1088515, 3.108863292, 3.108870264, 3.108886958, 3.108896194, 3.108914319, 3.108921417, 3.108936597, 3.108943639, 3.108953681, 3.10896116...</msg>
<status status="PASS" starttime="20201112 12:42:00.544" endtime="20201112 12:42:00.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.556" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:00.555" endtime="20201112 12:42:00.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.559" level="INFO">VALUE: [8.165999999754092e-06, 5.596999999912811e-06, 4.139000000069615e-06, 9.334000000027487e-06, 5.419999999922709e-07, 9.820000000271278e-06, 6.4310000000844525e-06, 9.179999999719968e-06, 5.291000000351431e-06, 8.694000000364355e-06, 4.180999999991997e-06, 5.819000000073515e-06, 6.500000000020378e-06, 7.513999999986254e-06, 5.419999999922709e-07, 2.457999999982974e-06, 5.419999999922709e-07, 9.9169999998594e-06, 3.374999999916639e-06, 2.666999999956232e-06, 5.419999999922709e-07, 9.41699999978951e-06, 8.944999999815906e-06, 8.166999999836833e-06, 4.582999999946935e-06, 9.584000000284476e-06, 6.986999999902821e-06, 5.597999999995551e-06, 5.611000000182997e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.557" endtime="20201112 12:42:00.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.553" endtime="20201112 12:42:00.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.562" endtime="20201112 12:42:00.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.566" endtime="20201112 12:42:00.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.565" endtime="20201112 12:42:00.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.560" endtime="20201112 12:42:00.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.149" endtime="20201112 12:42:00.587"></status>
</kw>
<msg timestamp="20201112 12:42:00.588" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.595" endtime="20201112 12:42:00.606"></status>
</kw>
<msg timestamp="20201112 12:42:00.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.594" endtime="20201112 12:42:00.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.609" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.608" endtime="20201112 12:42:00.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.610" endtime="20201112 12:42:00.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.591" endtime="20201112 12:42:00.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.589" endtime="20201112 12:42:00.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.619" endtime="20201112 12:42:00.892"></status>
</kw>
<msg timestamp="20201112 12:42:00.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017679986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.618" endtime="20201112 12:42:00.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017679986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.896" endtime="20201112 12:42:00.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.901" endtime="20201112 12:42:00.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.615" endtime="20201112 12:42:00.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.613" endtime="20201112 12:42:00.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.908" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:00.907" endtime="20201112 12:42:00.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.912" level="INFO">VALUE: [{'time': 0.017672056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017679986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.017688903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.017689444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017691583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.017692125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017699986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.017703917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.017704458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017706431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.017706972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017712069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017715028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.017719944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017729597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.017733292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.017740028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.017748, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.017757111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017765514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.017769375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017777292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017782347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017786458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017793181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.017801431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.017804403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017813278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017815958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.017825847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017833833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.017836514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017839708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.017849486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.017852417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.017857056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017857597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017865778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.017872333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.017874833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.017883208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.017886556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017894278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.017904056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.017913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.415999999998204e-06, 'source_diff': 9.415999999998204e-06}, {'time': 0.017920764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.017926111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017926653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017929111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017936611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.017937153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017943819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.017951819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.017954958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.0179555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017964389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.017967611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017976986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:00.909" endtime="20201112 12:42:00.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.905" endtime="20201112 12:42:00.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:00.931" level="INFO">${debug-compressed} = {'time': [0.017672056, 0.017679986, 0.017688903, 0.017689444, 0.017691583, 0.017692125, 0.017699986, 0.017703917, 0.017704458, 0.017706431, 0.017706972, 0.017712069, 0.017715028, 0.017719944, 0.017729...</msg>
<status status="PASS" starttime="20201112 12:42:00.914" endtime="20201112 12:42:00.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.935" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:00.934" endtime="20201112 12:42:00.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.938" level="INFO">VALUE: {'time': [0.017672056, 0.017679986, 0.017688903, 0.017689444, 0.017691583, 0.017692125, 0.017699986, 0.017703917, 0.017704458, 0.017706431, 0.017706972, 0.017712069, 0.017715028, 0.017719944, 0.017729597, 0.017733292, 0.017740028, 0.017748, 0.017757111, 0.017765514, 0.017769375, 0.017777292, 0.017782347, 0.017786458, 0.017793181, 0.017801431, 0.017804403, 0.017813278, 0.017815958, 0.017825847, 0.017833833, 0.017836514, 0.017839708, 0.017849486, 0.017852417, 0.017857056, 0.017857597, 0.017865778, 0.017872333, 0.017874833, 0.017883208, 0.017886556, 0.017894278, 0.017904056, 0.017913472, 0.017920764, 0.017926111, 0.017926653, 0.017929111, 0.017936611, 0.017937153, 0.017943819, 0.017951819, 0.017954958, 0.0179555, 0.017964389, 0.017967611, 0.017976986], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 7.930000000003212e-06, 8.916999999997177e-06, 5.409999999997361e-07, 2.139000000001695e-06, 5.419999999992098e-07, 7.861000000001367e-06, 3.9309999999986855e-06, 5.409999999997361e-07, 1.973000000002334e-06, 5.409999999997361e-07, 5.096999999999047e-06, 2.9590000000002947e-06, 4.916000000000642e-06, 9.652999999998357e-06, 3.695000000001475e-06, 6.736000000000242e-06, 7.971999999998453e-06, 9.110999999999148e-06, 8.403000000000577e-06, 3.861000000000836e-06, 7.916999999999647e-06, 5.055000000000337e-06, 4.111000000001086e-06, 6.7230000000001455e-06, 8.249999999997842e-06, 2.972000000000391e-06, 8.874999999998467e-06, 2.6800000000014312e-06, 9.888999999999037e-06, 7.986000000001492e-06, 2.681000000000905e-06, 3.1939999999980317e-06, 9.778000000001952e-06, 2.9309999999976855e-06, 4.639000000000726e-06, 5.409999999997361e-07, 8.180999999999466e-06, 6.555000000001837e-06, 2.4999999999990308e-06, 8.375000000001437e-06, 3.3480000000002397e-06, 7.721999999998203e-06, 9.778000000001952e-06, 9.415999999998204e-06, 7.2919999999990215e-06, 5.347000000002766e-06, 5.419999999992098e-07, 2.458000000000321e-06, 7.500000000000562e-06, 5.419999999992098e-07, 6.665999999998923e-06, 8.000000000001062e-06, 3.1389999999992257e-06, 5.419999999992098e-07, 8.889000000001507e-06, 3.222000000000641e-06, 9.374999999998967e-06], 'source_diff': [0, 7.930000000003212e-06, 8.916999999997177e-06, 5.409999999997361e-07, 2.139000000001695e-06, 5.419999999992098e-07, 7.861000000001367e-06, 3.9309999999986855e-06, 5.409999999997361e-07, 1.973000000002334e-06, 5.409999999997361e-07, 5.096999999999047e-06, 2.9590000000002947e-06, 4.916000000000642e-06, 9.652999999998357e-06, 3.695000000001475e-06, 6.736000000000242e-06, 7.971999999998453e-06, 9.110999999999148e-06, 8.403000000000577e-06, 3.861000000000836e-06, 7.916999999999647e-06, 5.055000000000337e-06, 4.111000000001086e-06, 6.7230000000001455e-06, 8.249999999997842e-06, 2.972000000000391e-06, 8.874999999998467e-06, 2.6800000000014312e-06, 9.888999999999037e-06, 7.986000000001492e-06, 2.681000000000905e-06, 3.1939999999980317e-06, 9.778000000001952e-06, 2.9309999999976855e-06, 4.639000000000726e-06, 5.409999999997361e-07, 8.180999999999466e-06, 6.555000000001837e-06, 2.4999999999990308e-06, 8.375000000001437e-06, 3.3480000000002397e-06, 7.721999999998203e-06, 9.778000000001952e-06, 9.415999999998204e-06, 7.2919999999990215e-06, 5.347000000002766e-06, 5.419999999992098e-07, 2.458000000000321e-06, 7.500000000000562e-06, 5.419999999992098e-07, 6.665999999998923e-06, 8.000000000001062e-06, 3.1389999999992257e-06, 5.419999999992098e-07, 8.889000000001507e-06, 3.222000000000641e-06, 9.374999999998967e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:00.936" endtime="20201112 12:42:00.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.932" endtime="20201112 12:42:00.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.943" level="INFO">${RESULT} = [{'time': 0.017679986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.017689444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:00.940" endtime="20201112 12:42:00.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.952" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017679986, 0.017689444, 0.017692125, 0.017703917, 0.017706431, 0.017712069, 0.017719944, 0.017733292, 0.017748, 0.017765514, 0.017777292, 0.017786458, 0.017801431, 0.017813278, 0.017825847...</msg>
<status status="PASS" starttime="20201112 12:42:00.944" endtime="20201112 12:42:00.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.956" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:00.955" endtime="20201112 12:42:00.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.959" level="INFO">VALUE: [7.930000000003212e-06, 5.409999999997361e-07, 5.419999999992098e-07, 3.9309999999986855e-06, 1.973000000002334e-06, 5.096999999999047e-06, 4.916000000000642e-06, 3.695000000001475e-06, 7.971999999998453e-06, 8.403000000000577e-06, 7.916999999999647e-06, 4.111000000001086e-06, 8.249999999997842e-06, 8.874999999998467e-06, 9.888999999999037e-06, 2.681000000000905e-06, 9.778000000001952e-06, 4.639000000000726e-06, 8.180999999999466e-06, 2.4999999999990308e-06, 3.3480000000002397e-06, 9.778000000001952e-06, 7.2919999999990215e-06, 5.419999999992098e-07, 7.500000000000562e-06, 6.665999999998923e-06, 3.1389999999992257e-06, 8.889000000001507e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.957" endtime="20201112 12:42:00.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.953" endtime="20201112 12:42:00.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.962" endtime="20201112 12:42:00.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.965" endtime="20201112 12:42:00.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.964" endtime="20201112 12:42:00.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.960" endtime="20201112 12:42:00.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.588" endtime="20201112 12:42:00.986"></status>
</kw>
<msg timestamp="20201112 12:42:00.987" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.994" endtime="20201112 12:42:01.006"></status>
</kw>
<msg timestamp="20201112 12:42:01.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.993" endtime="20201112 12:42:01.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.008" endtime="20201112 12:42:01.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.010" endtime="20201112 12:42:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.990" endtime="20201112 12:42:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.989" endtime="20201112 12:42:01.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.019" endtime="20201112 12:42:01.294"></status>
</kw>
<msg timestamp="20201112 12:42:01.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018602319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.018" endtime="20201112 12:42:01.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018602319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.297" endtime="20201112 12:42:01.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.303" endtime="20201112 12:42:01.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.015" endtime="20201112 12:42:01.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.013" endtime="20201112 12:42:01.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.310" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:01.309" endtime="20201112 12:42:01.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.314" level="INFO">VALUE: [{'time': 0.018594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018602319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.018607917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.018608458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018614, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.018614542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018620972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999998243e-06, 'source_diff': 6.429999999998243e-06}, {'time': 0.018629361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018633944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018634486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018642194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.018644611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018645153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018654458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.018658319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018663917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018672875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.018678708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018682806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018683347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018691056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.018694986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018702486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.018703028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018705722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.018721389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.018728597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.018734847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018742764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018751472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.018760875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018761417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018767375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018776722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018781847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018788806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.018789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018793875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018803056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.018809792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.018812528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018815042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018819625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.018826958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01883625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.018844403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018850181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018856972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.018864014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.018869917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018878958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.0188795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018885069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.018888986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018889528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018893569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018894111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018896611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018906222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018911847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:01.311" endtime="20201112 12:42:01.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.306" endtime="20201112 12:42:01.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:01.332" level="INFO">${debug-compressed} = {'time': [0.018594806, 0.018602319, 0.018607917, 0.018608458, 0.018614, 0.018614542, 0.018620972, 0.018629361, 0.018633944, 0.018634486, 0.018642194, 0.018644611, 0.018645153, 0.018654458, 0.018658319...</msg>
<status status="PASS" starttime="20201112 12:42:01.316" endtime="20201112 12:42:01.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.336" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:01.335" endtime="20201112 12:42:01.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.339" level="INFO">VALUE: {'time': [0.018594806, 0.018602319, 0.018607917, 0.018608458, 0.018614, 0.018614542, 0.018620972, 0.018629361, 0.018633944, 0.018634486, 0.018642194, 0.018644611, 0.018645153, 0.018654458, 0.018658319, 0.018663917, 0.018672875, 0.018678708, 0.018682806, 0.018683347, 0.018691056, 0.018694986, 0.018702486, 0.018703028, 0.018705722, 0.018713444, 0.018721389, 0.018728597, 0.018734847, 0.018742764, 0.018751472, 0.018760875, 0.018761417, 0.018767375, 0.018776722, 0.018781847, 0.018788806, 0.018789347, 0.018793875, 0.018803056, 0.018809792, 0.018812528, 0.018815042, 0.018819625, 0.018826417, 0.018826958, 0.01883625, 0.018844403, 0.018850181, 0.018856972, 0.018864014, 0.018869917, 0.018878958, 0.0188795, 0.018885069, 0.018888986, 0.018889528, 0.018893569, 0.018894111, 0.018896611, 0.018906222, 0.018911847], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcediff': [0, 7.513000000000658e-06, 5.59800000000249e-06, 5.409999999997361e-07, 5.541999999997271e-06, 5.420000000026792e-07, 6.429999999998243e-06, 8.389000000001007e-06, 4.582999999998977e-06, 5.419999999992098e-07, 7.708000000002102e-06, 2.4169999999976155e-06, 5.420000000026792e-07, 9.304999999997648e-06, 3.861000000000836e-06, 5.5979999999990204e-06, 8.957999999999883e-06, 5.833000000000227e-06, 4.09800000000099e-06, 5.409999999997361e-07, 7.709000000001576e-06, 3.929999999999212e-06, 7.500000000000562e-06, 5.419999999992098e-07, 2.694000000001001e-06, 7.721999999998203e-06, 7.945000000002256e-06, 7.2079999999981326e-06, 6.249999999999312e-06, 7.916999999999647e-06, 8.708000000003102e-06, 9.402999999998107e-06, 5.419999999992098e-07, 5.958000000000352e-06, 9.346999999999828e-06, 5.125000000001656e-06, 6.959000000000826e-06, 5.409999999997361e-07, 4.528000000000171e-06, 9.180999999996997e-06, 6.736000000000242e-06, 2.735999999999711e-06, 2.51400000000207e-06, 4.582999999998977e-06, 6.792000000001991e-06, 5.409999999997361e-07, 9.291999999997552e-06, 8.153000000000327e-06, 5.778000000001421e-06, 6.790999999999048e-06, 7.0419999999987715e-06, 5.903000000001546e-06, 9.041000000001298e-06, 5.419999999992098e-07, 5.569000000000407e-06, 3.916999999999116e-06, 5.419999999992098e-07, 4.040999999999767e-06, 5.420000000026792e-07, 2.4999999999990308e-06, 9.610999999999648e-06, 5.624999999998687e-06], 'source_diff': [0, 7.513000000000658e-06, 5.59800000000249e-06, 5.409999999997361e-07, 5.541999999997271e-06, 5.420000000026792e-07, 6.429999999998243e-06, 8.389000000001007e-06, 4.582999999998977e-06, 5.419999999992098e-07, 7.708000000002102e-06, 2.4169999999976155e-06, 5.420000000026792e-07, 9.304999999997648e-06, 3.861000000000836e-06, 5.5979999999990204e-06, 8.957999999999883e-06, 5.833000000000227e-06, 4.09800000000099e-06, 5.409999999997361e-07, 7.709000000001576e-06, 3.929999999999212e-06, 7.500000000000562e-06, 5.419999999992098e-07, 2.694000000001001e-06, 7.721999999998203e-06, 7.945000000002256e-06, 7.2079999999981326e-06, 6.249999999999312e-06, 7.916999999999647e-06, 8.708000000003102e-06, 9.402999999998107e-06, 5.419999999992098e-07, 5.958000000000352e-06, 9.346999999999828e-06, 5.125000000001656e-06, 6.959000000000826e-06, 5.409999999997361e-07, 4.528000000000171e-06, 9.180999999996997e-06, 6.736000000000242e-06, 2.735999999999711e-06, 2.51400000000207e-06, 4.582999999998977e-06, 6.792000000001991e-06, 5.409999999997361e-07, 9.291999999997552e-06, 8.153000000000327e-06, 5.778000000001421e-06, 6.790999999999048e-06, 7.0419999999987715e-06, 5.903000000001546e-06, 9.041000000001298e-06, 5.419999999992098e-07, 5.569000000000407e-06, 3.916999999999116e-06, 5.419999999992098e-07, 4.040999999999767e-06, 5.420000000026792e-07, 2.4999999999990308e-06, 9.610999999999648e-06, 5.624999999998687e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:01.337" endtime="20201112 12:42:01.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.333" endtime="20201112 12:42:01.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.344" level="INFO">${RESULT} = [{'time': 0.018602319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.018608458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:01.341" endtime="20201112 12:42:01.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.353" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018602319, 0.018608458, 0.018614542, 0.018629361, 0.018634486, 0.018644611, 0.018654458, 0.018663917, 0.018678708, 0.018683347, 0.018694986, 0.018703028, 0.018713444, 0.018728597, 0.018742...</msg>
<status status="PASS" starttime="20201112 12:42:01.345" endtime="20201112 12:42:01.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.358" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:01.357" endtime="20201112 12:42:01.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.360" level="INFO">VALUE: [7.513000000000658e-06, 5.409999999997361e-07, 5.420000000026792e-07, 8.389000000001007e-06, 5.419999999992098e-07, 2.4169999999976155e-06, 9.304999999997648e-06, 5.5979999999990204e-06, 5.833000000000227e-06, 5.409999999997361e-07, 3.929999999999212e-06, 5.419999999992098e-07, 7.721999999998203e-06, 7.2079999999981326e-06, 7.916999999999647e-06, 9.402999999998107e-06, 5.958000000000352e-06, 5.125000000001656e-06, 5.409999999997361e-07, 9.180999999996997e-06, 2.735999999999711e-06, 4.582999999998977e-06, 5.409999999997361e-07, 8.153000000000327e-06, 6.790999999999048e-06, 5.903000000001546e-06, 5.419999999992098e-07, 3.916999999999116e-06, 4.040999999999767e-06, 2.4999999999990308e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.359" endtime="20201112 12:42:01.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.354" endtime="20201112 12:42:01.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.364" endtime="20201112 12:42:01.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.367" endtime="20201112 12:42:01.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.366" endtime="20201112 12:42:01.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.362" endtime="20201112 12:42:01.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.987" endtime="20201112 12:42:01.388"></status>
</kw>
<msg timestamp="20201112 12:42:01.389" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.397" endtime="20201112 12:42:01.408"></status>
</kw>
<msg timestamp="20201112 12:42:01.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.395" endtime="20201112 12:42:01.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.410" endtime="20201112 12:42:01.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.412" endtime="20201112 12:42:01.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.393" endtime="20201112 12:42:01.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.391" endtime="20201112 12:42:01.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.422" endtime="20201112 12:42:01.705"></status>
</kw>
<msg timestamp="20201112 12:42:01.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.421" endtime="20201112 12:42:01.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.713" endtime="20201112 12:42:01.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.727" endtime="20201112 12:42:01.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.417" endtime="20201112 12:42:01.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.415" endtime="20201112 12:42:01.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.740" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:01.738" endtime="20201112 12:42:01.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.748" level="INFO">VALUE: [{'time': 0.018913139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018919417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018923486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.018924028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018933139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.018933681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018937722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018938264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018946194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.018955542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.018961625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018971444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018975556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.018981889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.018985097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018985639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.019001972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.019005361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.019012875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019016333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.019024486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019034306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019034847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.019045222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.019054569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019062, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.019062542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019071264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.019079347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.019085181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.019085722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019088347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.019091028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019096625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.019101444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019101986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019106125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019115722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.019122958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999997272e-06, 'source_diff': 7.235999999997272e-06}, {'time': 0.0191235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019125472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019126014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019129194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.019133056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.019141819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.019150944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.019157028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.019160417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.019168083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.019168625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019174889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.019183347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019183889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019187014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.019192778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019201389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.019204861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.019213292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.019219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.019220514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019222722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.019223264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:01.742" endtime="20201112 12:42:01.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.733" endtime="20201112 12:42:01.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:01.768" level="INFO">${debug-compressed} = {'time': [0.018913139, 0.018919417, 0.018923486, 0.018924028, 0.018933139, 0.018933681, 0.018937722, 0.018938264, 0.018946194, 0.018955542, 0.018961625, 0.018971444, 0.018975556, 0.018981889, 0.018985...</msg>
<status status="PASS" starttime="20201112 12:42:01.751" endtime="20201112 12:42:01.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.771" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:01.770" endtime="20201112 12:42:01.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.775" level="INFO">VALUE: {'time': [0.018913139, 0.018919417, 0.018923486, 0.018924028, 0.018933139, 0.018933681, 0.018937722, 0.018938264, 0.018946194, 0.018955542, 0.018961625, 0.018971444, 0.018975556, 0.018981889, 0.018985097, 0.018985639, 0.018995, 0.019001972, 0.019005361, 0.019012875, 0.019016333, 0.019024486, 0.019034306, 0.019034847, 0.019041514, 0.019045222, 0.019054569, 0.019062, 0.019062542, 0.019071264, 0.019079347, 0.019085181, 0.019085722, 0.019088347, 0.019091028, 0.019096625, 0.019101444, 0.019101986, 0.019106125, 0.019115722, 0.019122958, 0.0191235, 0.019125472, 0.019126014, 0.019129194, 0.019133056, 0.019141819, 0.019150944, 0.019157028, 0.019160417, 0.019168083, 0.019168625, 0.019174889, 0.019183347, 0.019183889, 0.019187014, 0.019192778, 0.019201389, 0.019204861, 0.019213292, 0.019219972, 0.019220514, 0.019222722, 0.019223264], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcediff': [0, 6.278000000001921e-06, 4.068999999998907e-06, 5.419999999992098e-07, 9.111000000002617e-06, 5.419999999992098e-07, 4.040999999999767e-06, 5.419999999992098e-07, 7.929999999999743e-06, 9.347999999999301e-06, 6.083000000000477e-06, 9.819000000001188e-06, 4.11200000000056e-06, 6.3329999999972575e-06, 3.208000000001071e-06, 5.419999999992098e-07, 9.361000000002867e-06, 6.9719999999974525e-06, 3.3889999999994758e-06, 7.514000000000132e-06, 3.458000000001321e-06, 8.153000000000327e-06, 9.820000000000662e-06, 5.409999999997361e-07, 6.6669999999983964e-06, 3.708000000001571e-06, 9.346999999999828e-06, 7.430999999998716e-06, 5.419999999992098e-07, 8.722000000002672e-06, 8.082999999999008e-06, 5.8339999999997005e-06, 5.409999999997361e-07, 2.6249999999991558e-06, 2.681000000000905e-06, 5.596999999999547e-06, 4.818999999999657e-06, 5.420000000026792e-07, 4.139000000000226e-06, 9.597000000000078e-06, 7.235999999997272e-06, 5.420000000026792e-07, 1.971999999999391e-06, 5.419999999992098e-07, 3.179999999998462e-06, 3.86200000000031e-06, 8.763000000001908e-06, 9.124999999998717e-06, 6.0839999999999506e-06, 3.3889999999994758e-06, 7.665999999999923e-06, 5.420000000026792e-07, 6.2639999999988816e-06, 8.457999999999383e-06, 5.419999999992098e-07, 3.124999999999656e-06, 5.764000000001851e-06, 8.610999999998648e-06, 3.472000000000891e-06, 8.430999999999716e-06, 6.679999999998493e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07], 'source_diff': [0, 6.278000000001921e-06, 4.068999999998907e-06, 5.419999999992098e-07, 9.111000000002617e-06, 5.419999999992098e-07, 4.040999999999767e-06, 5.419999999992098e-07, 7.929999999999743e-06, 9.347999999999301e-06, 6.083000000000477e-06, 9.819000000001188e-06, 4.11200000000056e-06, 6.3329999999972575e-06, 3.208000000001071e-06, 5.419999999992098e-07, 9.361000000002867e-06, 6.9719999999974525e-06, 3.3889999999994758e-06, 7.514000000000132e-06, 3.458000000001321e-06, 8.153000000000327e-06, 9.820000000000662e-06, 5.409999999997361e-07, 6.6669999999983964e-06, 3.708000000001571e-06, 9.346999999999828e-06, 7.430999999998716e-06, 5.419999999992098e-07, 8.722000000002672e-06, 8.082999999999008e-06, 5.8339999999997005e-06, 5.409999999997361e-07, 2.6249999999991558e-06, 2.681000000000905e-06, 5.596999999999547e-06, 4.818999999999657e-06, 5.420000000026792e-07, 4.139000000000226e-06, 9.597000000000078e-06, 7.235999999997272e-06, 5.420000000026792e-07, 1.971999999999391e-06, 5.419999999992098e-07, 3.179999999998462e-06, 3.86200000000031e-06, 8.763000000001908e-06, 9.124999999998717e-06, 6.0839999999999506e-06, 3.3889999999994758e-06, 7.665999999999923e-06, 5.420000000026792e-07, 6.2639999999988816e-06, 8.457999999999383e-06, 5.419999999992098e-07, 3.124999999999656e-06, 5.764000000001851e-06, 8.610999999998648e-06, 3.472000000000891e-06, 8.430999999999716e-06, 6.679999999998493e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:01.773" endtime="20201112 12:42:01.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.769" endtime="20201112 12:42:01.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.780" level="INFO">${RESULT} = [{'time': 0.018919417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018924028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:01.777" endtime="20201112 12:42:01.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.789" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018919417, 0.018924028, 0.018933681, 0.018938264, 0.018955542, 0.018971444, 0.018981889, 0.018985639, 0.019001972, 0.019012875, 0.019024486, 0.019034847, 0.019045222, 0.019062, 0.019071264...</msg>
<status status="PASS" starttime="20201112 12:42:01.781" endtime="20201112 12:42:01.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.794" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:01.793" endtime="20201112 12:42:01.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.796" level="INFO">VALUE: [6.278000000001921e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.347999999999301e-06, 9.819000000001188e-06, 6.3329999999972575e-06, 5.419999999992098e-07, 6.9719999999974525e-06, 7.514000000000132e-06, 8.153000000000327e-06, 5.409999999997361e-07, 3.708000000001571e-06, 7.430999999998716e-06, 8.722000000002672e-06, 5.8339999999997005e-06, 2.6249999999991558e-06, 5.596999999999547e-06, 5.420000000026792e-07, 9.597000000000078e-06, 5.420000000026792e-07, 5.419999999992098e-07, 3.86200000000031e-06, 9.124999999998717e-06, 3.3889999999994758e-06, 5.420000000026792e-07, 8.457999999999383e-06, 3.124999999999656e-06, 8.610999999998648e-06, 8.430999999999716e-06, 5.420000000026792e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 12:42:01.795" endtime="20201112 12:42:01.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.790" endtime="20201112 12:42:01.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.800" endtime="20201112 12:42:01.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.803" endtime="20201112 12:42:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.802" endtime="20201112 12:42:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.798" endtime="20201112 12:42:01.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.389" endtime="20201112 12:42:01.824"></status>
</kw>
<msg timestamp="20201112 12:42:01.824" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.832" endtime="20201112 12:42:01.842"></status>
</kw>
<msg timestamp="20201112 12:42:01.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.830" endtime="20201112 12:42:01.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.844" endtime="20201112 12:42:01.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.847" endtime="20201112 12:42:01.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.828" endtime="20201112 12:42:01.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.826" endtime="20201112 12:42:01.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.857" endtime="20201112 12:42:02.129"></status>
</kw>
<msg timestamp="20201112 12:42:02.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017586958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.856" endtime="20201112 12:42:02.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017586958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.132" endtime="20201112 12:42:02.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.138" endtime="20201112 12:42:02.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.851" endtime="20201112 12:42:02.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.850" endtime="20201112 12:42:02.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.144" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.143" endtime="20201112 12:42:02.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.148" level="INFO">VALUE: [{'time': 0.017586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017586958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017590764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.017591306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017603833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.017609611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017618944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017626153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.017629861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.017632361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.01764075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017643903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017652153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.017659639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.017660181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017667806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.017672931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017678, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017682653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017689611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017696097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.017696639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017704806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.017708542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017716181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.017716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017720306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.017725361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.017729806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.017732764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.017741153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.017747236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017753083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017761486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.017765583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017774458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017780778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017785139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017792167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.017801028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.017810861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.017815528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017822542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.017825542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017829181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017833028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017833569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017838653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.017847528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902999999997076e-06, 'source_diff': 4.902999999997076e-06}, {'time': 0.017861347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916000000001173e-06, 'source_diff': 8.916000000001173e-06}, {'time': 0.017868653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.017871639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017877931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.01788475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.145" endtime="20201112 12:42:02.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.141" endtime="20201112 12:42:02.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.164" level="INFO">${debug-compressed} = {'time': [0.017586417, 0.017586958, 0.017590764, 0.017591306, 0.017596375, 0.017603833, 0.017609611, 0.017618944, 0.017626153, 0.017629861, 0.017632361, 0.01764075, 0.017643903, 0.017652153, 0.0176596...</msg>
<status status="PASS" starttime="20201112 12:42:02.150" endtime="20201112 12:42:02.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.169" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.168" endtime="20201112 12:42:02.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.172" level="INFO">VALUE: {'time': [0.017586417, 0.017586958, 0.017590764, 0.017591306, 0.017596375, 0.017603833, 0.017609611, 0.017618944, 0.017626153, 0.017629861, 0.017632361, 0.01764075, 0.017643903, 0.017652153, 0.017659639, 0.017660181, 0.017667806, 0.017672931, 0.017678, 0.017682653, 0.017689611, 0.017696097, 0.017696639, 0.017704806, 0.017708542, 0.017716181, 0.017716722, 0.017720306, 0.017725361, 0.017729806, 0.017732764, 0.017741153, 0.017747236, 0.017753083, 0.017761486, 0.017765583, 0.017774458, 0.017780778, 0.017785139, 0.017792167, 0.017801028, 0.017810861, 0.017815528, 0.017822542, 0.017825542, 0.017829181, 0.017833028, 0.017833569, 0.017838653, 0.017847528, 0.017852431, 0.017861347, 0.017868653, 0.017871639, 0.017877931, 0.01788475], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcediff': [0, 5.409999999997361e-07, 3.8059999999985605e-06, 5.420000000026792e-07, 5.068999999999907e-06, 7.457999999998383e-06, 5.778000000001421e-06, 9.333000000000258e-06, 7.208999999997606e-06, 3.708000000001571e-06, 2.4999999999990308e-06, 8.389000000001007e-06, 3.1529999999987957e-06, 8.250000000001312e-06, 7.486000000000992e-06, 5.419999999992098e-07, 7.625000000000687e-06, 5.1249999999981866e-06, 5.068999999999907e-06, 4.653000000000296e-06, 6.958000000001352e-06, 6.485999999999992e-06, 5.419999999992098e-07, 8.166999999999897e-06, 3.736000000000711e-06, 7.639000000000257e-06, 5.409999999997361e-07, 3.5840000000009198e-06, 5.0549999999968676e-06, 4.445000000002225e-06, 2.958000000000821e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.846999999999797e-06, 8.403000000000577e-06, 4.097000000001516e-06, 8.874999999998467e-06, 6.320000000000631e-06, 4.360999999997867e-06, 7.028000000002671e-06, 8.860999999998898e-06, 9.833000000000758e-06, 4.666999999999866e-06, 7.013999999999632e-06, 2.999999999999531e-06, 3.6389999999997258e-06, 3.847000000001266e-06, 5.409999999997361e-07, 5.0839999999989505e-06, 8.875000000001937e-06, 4.902999999997076e-06, 8.916000000001173e-06, 7.306000000002061e-06, 2.985999999999961e-06, 6.291999999998021e-06, 6.819000000001657e-06], 'source_diff': [0, 5.409999999997361e-07, 3.8059999999985605e-06, 5.420000000026792e-07, 5.068999999999907e-06, 7.457999999998383e-06, 5.778000000001421e-06, 9.333000000000258e-06, 7.208999999997606e-06, 3.708000000001571e-06, 2.4999999999990308e-06, 8.389000000001007e-06, 3.1529999999987957e-06, 8.250000000001312e-06, 7.486000000000992e-06, 5.419999999992098e-07, 7.625000000000687e-06, 5.1249999999981866e-06, 5.068999999999907e-06, 4.653000000000296e-06, 6.958000000001352e-06, 6.485999999999992e-06, 5.419999999992098e-07, 8.166999999999897e-06, 3.736000000000711e-06, 7.639000000000257e-06, 5.409999999997361e-07, 3.5840000000009198e-06, 5.0549999999968676e-06, 4.445000000002225e-06, 2.958000000000821e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.846999999999797e-06, 8.403000000000577e-06, 4.097000000001516e-06, 8.874999999998467e-06, 6.320000000000631e-06, 4.360999999997867e-06, 7.028000000002671e-06, 8.860999999998898e-06, 9.833000000000758e-06, 4.666999999999866e-06, 7.013999999999632e-06, 2.999999999999531e-06, 3.6389999999997258e-06, 3.847000000001266e-06, 5.409999999997361e-07, 5.0839999999989505e-06, 8.875000000001937e-06, 4.902999999997076e-06, 8.916000000001173e-06, 7.306000000002061e-06, 2.985999999999961e-06, 6.291999999998021e-06, 6.819000000001657e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:02.170" endtime="20201112 12:42:02.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.165" endtime="20201112 12:42:02.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.177" level="INFO">${RESULT} = [{'time': 0.017586958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017591306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.174" endtime="20201112 12:42:02.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.186" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017586958, 0.017591306, 0.017603833, 0.017618944, 0.017629861, 0.01764075, 0.017652153, 0.017660181, 0.017672931, 0.017682653, 0.017696097, 0.017704806, 0.017716181, 0.017720306, 0.0177298...</msg>
<status status="PASS" starttime="20201112 12:42:02.178" endtime="20201112 12:42:02.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.190" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.189" endtime="20201112 12:42:02.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.193" level="INFO">VALUE: [5.409999999997361e-07, 5.420000000026792e-07, 7.457999999998383e-06, 9.333000000000258e-06, 3.708000000001571e-06, 8.389000000001007e-06, 8.250000000001312e-06, 5.419999999992098e-07, 5.1249999999981866e-06, 4.653000000000296e-06, 6.485999999999992e-06, 8.166999999999897e-06, 7.639000000000257e-06, 3.5840000000009198e-06, 4.445000000002225e-06, 8.388999999997537e-06, 5.846999999999797e-06, 4.097000000001516e-06, 6.320000000000631e-06, 7.028000000002671e-06, 9.833000000000758e-06, 7.013999999999632e-06, 3.6389999999997258e-06, 5.409999999997361e-07, 8.875000000001937e-06, 8.916000000001173e-06, 2.985999999999961e-06, 6.819000000001657e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.191" endtime="20201112 12:42:02.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.187" endtime="20201112 12:42:02.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.196" endtime="20201112 12:42:02.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.199" endtime="20201112 12:42:02.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.198" endtime="20201112 12:42:02.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.194" endtime="20201112 12:42:02.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.825" endtime="20201112 12:42:02.220"></status>
</kw>
<msg timestamp="20201112 12:42:02.220" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.228" endtime="20201112 12:42:02.239"></status>
</kw>
<msg timestamp="20201112 12:42:02.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.226" endtime="20201112 12:42:02.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.240" endtime="20201112 12:42:02.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.243" endtime="20201112 12:42:02.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.224" endtime="20201112 12:42:02.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.222" endtime="20201112 12:42:02.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.252" endtime="20201112 12:42:02.526"></status>
</kw>
<msg timestamp="20201112 12:42:02.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017638472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.250" endtime="20201112 12:42:02.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017638472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.529" endtime="20201112 12:42:02.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.535" endtime="20201112 12:42:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.248" endtime="20201112 12:42:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.246" endtime="20201112 12:42:02.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.542" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.541" endtime="20201112 12:42:02.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.546" level="INFO">VALUE: [{'time': 0.017638472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017646444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.017646986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01765325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017656486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017663514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.017667139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6249999999966864e-06, 'source_diff': 3.6249999999966864e-06}, {'time': 0.017667681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017669889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.017670431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017673361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017679458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017686722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017689639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017695542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.017703194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.651999999996884e-06, 'source_diff': 7.651999999996884e-06}, {'time': 0.017710833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.017711375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017717639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017723167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017723708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017731403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.017740514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017745111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017749708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.017759083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017767889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.01777725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.017787069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.017792667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.017796097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017802069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017802611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017810236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.017812903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017813444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017820903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458999999997856e-06, 'source_diff': 7.458999999997856e-06}, {'time': 0.017826667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017827208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017834681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.017844264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.582999999997038e-06, 'source_diff': 9.582999999997038e-06}, {'time': 0.017848597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.017852694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017853236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017858069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017867431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.017873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.017874514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017878556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017879097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017887667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.017890347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.017895181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.01790125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017904014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017907236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017913722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.017920681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.017921222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017923833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017924375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017928028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.543" endtime="20201112 12:42:02.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.538" endtime="20201112 12:42:02.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.564" level="INFO">${debug-compressed} = {'time': [0.017638472, 0.017641931, 0.017646444, 0.017646986, 0.01765325, 0.017656486, 0.017663514, 0.017667139, 0.017667681, 0.017669889, 0.017670431, 0.017673361, 0.017679458, 0.017686722, 0.0176896...</msg>
<status status="PASS" starttime="20201112 12:42:02.548" endtime="20201112 12:42:02.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.569" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.568" endtime="20201112 12:42:02.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.573" level="INFO">VALUE: {'time': [0.017638472, 0.017641931, 0.017646444, 0.017646986, 0.01765325, 0.017656486, 0.017663514, 0.017667139, 0.017667681, 0.017669889, 0.017670431, 0.017673361, 0.017679458, 0.017686722, 0.017689639, 0.017695542, 0.017703194, 0.017710833, 0.017711375, 0.017717639, 0.017723167, 0.017723708, 0.017731403, 0.017740514, 0.017745111, 0.017749708, 0.017758542, 0.017759083, 0.017767889, 0.01777725, 0.017787069, 0.017792667, 0.017796097, 0.017802069, 0.017802611, 0.017810236, 0.017812903, 0.017813444, 0.017820903, 0.017826667, 0.017827208, 0.017834681, 0.017844264, 0.017848597, 0.017852694, 0.017853236, 0.017858069, 0.017867431, 0.017873972, 0.017874514, 0.017878556, 0.017879097, 0.017887667, 0.017890347, 0.017895181, 0.01790125, 0.017904014, 0.017907236, 0.017913722, 0.017920681, 0.017921222, 0.017923833, 0.017924375, 0.017928028], 'eventsourcediff': [0, 3.4590000000007948e-06, 4.513000000001127e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 3.236000000000211e-06, 7.028000000002671e-06, 3.6249999999966864e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07, 2.929999999998212e-06, 6.097000000000047e-06, 7.263999999999882e-06, 2.917000000001585e-06, 5.903000000001546e-06, 7.651999999996884e-06, 7.639000000000257e-06, 5.420000000026792e-07, 6.2639999999988816e-06, 5.528000000001171e-06, 5.409999999997361e-07, 7.694999999998536e-06, 9.110999999999148e-06, 4.597000000002016e-06, 4.596999999998547e-06, 8.833999999999231e-06, 5.409999999997361e-07, 8.806000000000092e-06, 9.361000000002867e-06, 9.818999999997718e-06, 5.59800000000249e-06, 3.429999999998712e-06, 5.971999999999922e-06, 5.419999999992098e-07, 7.625000000000687e-06, 2.667000000001335e-06, 5.409999999997361e-07, 7.458999999997856e-06, 5.764000000001851e-06, 5.409999999997361e-07, 7.473000000000896e-06, 9.582999999997038e-06, 4.333000000002196e-06, 4.096999999998047e-06, 5.420000000026792e-07, 4.832999999999227e-06, 9.361999999998871e-06, 6.540999999998798e-06, 5.420000000026792e-07, 4.041999999999241e-06, 5.409999999997361e-07, 8.569999999999411e-06, 2.6800000000014312e-06, 4.8339999999987004e-06, 6.069000000000907e-06, 2.7639999999988507e-06, 3.222000000000641e-06, 6.485999999999992e-06, 6.959000000000826e-06, 5.409999999997361e-07, 2.610999999999586e-06, 5.419999999992098e-07, 3.6529999999992957e-06], 'source_diff': [0, 3.4590000000007948e-06, 4.513000000001127e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 3.236000000000211e-06, 7.028000000002671e-06, 3.6249999999966864e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07, 2.929999999998212e-06, 6.097000000000047e-06, 7.263999999999882e-06, 2.917000000001585e-06, 5.903000000001546e-06, 7.651999999996884e-06, 7.639000000000257e-06, 5.420000000026792e-07, 6.2639999999988816e-06, 5.528000000001171e-06, 5.409999999997361e-07, 7.694999999998536e-06, 9.110999999999148e-06, 4.597000000002016e-06, 4.596999999998547e-06, 8.833999999999231e-06, 5.409999999997361e-07, 8.806000000000092e-06, 9.361000000002867e-06, 9.818999999997718e-06, 5.59800000000249e-06, 3.429999999998712e-06, 5.971999999999922e-06, 5.419999999992098e-07, 7.625000000000687e-06, 2.667000000001335e-06, 5.409999999997361e-07, 7.458999999997856e-06, 5.764000000001851e-06, 5.409999999997361e-07, 7.473000000000896e-06, 9.582999999997038e-06, 4.333000000002196e-06, 4.096999999998047e-06, 5.420000000026792e-07, 4.832999999999227e-06, 9.361999999998871e-06, 6.540999999998798e-06, 5.420000000026792e-07, 4.041999999999241e-06, 5.409999999997361e-07, 8.569999999999411e-06, 2.6800000000014312e-06, 4.8339999999987004e-06, 6.069000000000907e-06, 2.7639999999988507e-06, 3.222000000000641e-06, 6.485999999999992e-06, 6.959000000000826e-06, 5.409999999997361e-07, 2.610999999999586e-06, 5.419999999992098e-07, 3.6529999999992957e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:02.570" endtime="20201112 12:42:02.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.565" endtime="20201112 12:42:02.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.577" level="INFO">${RESULT} = [{'time': 0.017641931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017646986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.575" endtime="20201112 12:42:02.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.587" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017641931, 0.017646986, 0.017656486, 0.017667139, 0.017669889, 0.017673361, 0.017686722, 0.017695542, 0.017710833, 0.017717639, 0.017723708, 0.017740514, 0.017749708, 0.017759083, 0.017777...</msg>
<status status="PASS" starttime="20201112 12:42:02.578" endtime="20201112 12:42:02.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.591" endtime="20201112 12:42:02.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.594" level="INFO">VALUE: [3.4590000000007948e-06, 5.419999999992098e-07, 3.236000000000211e-06, 3.6249999999966864e-06, 2.208000000000071e-06, 2.929999999998212e-06, 7.263999999999882e-06, 5.903000000001546e-06, 7.639000000000257e-06, 6.2639999999988816e-06, 5.409999999997361e-07, 9.110999999999148e-06, 4.596999999998547e-06, 5.409999999997361e-07, 9.361000000002867e-06, 5.59800000000249e-06, 5.971999999999922e-06, 7.625000000000687e-06, 5.409999999997361e-07, 5.764000000001851e-06, 7.473000000000896e-06, 4.333000000002196e-06, 5.420000000026792e-07, 9.361999999998871e-06, 5.420000000026792e-07, 5.409999999997361e-07, 2.6800000000014312e-06, 6.069000000000907e-06, 3.222000000000641e-06, 6.959000000000826e-06, 2.610999999999586e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.593" endtime="20201112 12:42:02.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.588" endtime="20201112 12:42:02.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.597" endtime="20201112 12:42:02.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.601" endtime="20201112 12:42:02.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.599" endtime="20201112 12:42:02.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.596" endtime="20201112 12:42:02.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.221" endtime="20201112 12:42:02.622"></status>
</kw>
<msg timestamp="20201112 12:42:02.622" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.629" endtime="20201112 12:42:02.640"></status>
</kw>
<msg timestamp="20201112 12:42:02.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.628" endtime="20201112 12:42:02.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.642" endtime="20201112 12:42:02.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.644" endtime="20201112 12:42:02.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.625" endtime="20201112 12:42:02.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.624" endtime="20201112 12:42:02.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.653" endtime="20201112 12:42:02.922"></status>
</kw>
<msg timestamp="20201112 12:42:02.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017579819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.652" endtime="20201112 12:42:02.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017579819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.925" endtime="20201112 12:42:02.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.931" endtime="20201112 12:42:02.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.649" endtime="20201112 12:42:02.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.648" endtime="20201112 12:42:02.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.937" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.936" endtime="20201112 12:42:02.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.941" level="INFO">VALUE: [{'time': 0.017569931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017579819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.017585431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.017590083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017597847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.017600514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017608431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017614986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.017622667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.017629403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.735999999996772e-06, 'source_diff': 6.735999999996772e-06}, {'time': 0.017634056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017636722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.017637264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017640736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017645806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.017651889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017658611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017661764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017669778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.017677917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.017682097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.017691917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.017701097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.017708056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.017716764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.017723486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017730778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.017740125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017746125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.017752694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.017756236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017762167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930999999997216e-06, 'source_diff': 5.930999999997216e-06}, {'time': 0.017768486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.017776653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.017779319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.017781778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.459000000003264e-06, 'source_diff': 2.459000000003264e-06}, {'time': 0.017788333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.017793514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017798819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017804361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017812111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.017818194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017825875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.017831958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.017838208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.017844931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.017847611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.017853861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017863444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.017869931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.017870472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017878181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.938" endtime="20201112 12:42:02.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.934" endtime="20201112 12:42:02.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.957" level="INFO">${debug-compressed} = {'time': [0.017569931, 0.017579819, 0.017585431, 0.017590083, 0.017597847, 0.017600514, 0.017608431, 0.017614986, 0.017622667, 0.017629403, 0.017634056, 0.017636722, 0.017637264, 0.017640736, 0.017645...</msg>
<status status="PASS" starttime="20201112 12:42:02.944" endtime="20201112 12:42:02.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.961" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.960" endtime="20201112 12:42:02.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.964" level="INFO">VALUE: {'time': [0.017569931, 0.017579819, 0.017585431, 0.017590083, 0.017597847, 0.017600514, 0.017608431, 0.017614986, 0.017622667, 0.017629403, 0.017634056, 0.017636722, 0.017637264, 0.017640736, 0.017645806, 0.017651889, 0.017658611, 0.017661764, 0.017669778, 0.017677917, 0.017682097, 0.017691917, 0.017701097, 0.017708056, 0.017716764, 0.017723486, 0.017730778, 0.017740125, 0.017746125, 0.017752694, 0.017756236, 0.017762167, 0.017768486, 0.017776653, 0.017779319, 0.017781778, 0.017788333, 0.017793514, 0.017798819, 0.017804361, 0.017812111, 0.017818194, 0.017825875, 0.017831958, 0.017838208, 0.017844931, 0.017847611, 0.017853861, 0.017863444, 0.017869931, 0.017870472, 0.017878181], 'eventsourcediff': [0, 9.887999999999564e-06, 5.61199999999859e-06, 4.652000000000822e-06, 7.764000000000382e-06, 2.667000000001335e-06, 7.916999999999647e-06, 6.554999999998368e-06, 7.681000000002436e-06, 6.735999999996772e-06, 4.653000000000296e-06, 2.6660000000018613e-06, 5.419999999992098e-07, 3.472000000000891e-06, 5.0699999999993806e-06, 6.083000000000477e-06, 6.722000000000672e-06, 3.1529999999987957e-06, 8.014000000000632e-06, 8.139000000000757e-06, 4.179999999999462e-06, 9.820000000000662e-06, 9.179999999997523e-06, 6.959000000000826e-06, 8.707999999999633e-06, 6.722000000000672e-06, 7.2919999999990215e-06, 9.346999999999828e-06, 6.000000000002531e-06, 6.568999999997938e-06, 3.54200000000221e-06, 5.930999999997216e-06, 6.319000000001157e-06, 8.166999999999897e-06, 2.665999999998392e-06, 2.459000000003264e-06, 6.554999999998368e-06, 5.180999999999936e-06, 5.305000000000587e-06, 5.542000000000741e-06, 7.749999999997342e-06, 6.083000000000477e-06, 7.681000000002436e-06, 6.0829999999970075e-06, 6.250000000002781e-06, 6.7230000000001455e-06, 2.679999999997962e-06, 6.249999999999312e-06, 9.583000000000508e-06, 6.486999999999465e-06, 5.409999999997361e-07, 7.709000000001576e-06], 'source_diff': [0, 9.887999999999564e-06, 5.61199999999859e-06, 4.652000000000822e-06, 7.764000000000382e-06, 2.667000000001335e-06, 7.916999999999647e-06, 6.554999999998368e-06, 7.681000000002436e-06, 6.735999999996772e-06, 4.653000000000296e-06, 2.6660000000018613e-06, 5.419999999992098e-07, 3.472000000000891e-06, 5.0699999999993806e-06, 6.083000000000477e-06, 6.722000000000672e-06, 3.1529999999987957e-06, 8.014000000000632e-06, 8.139000000000757e-06, 4.179999999999462e-06, 9.820000000000662e-06, 9.179999999997523e-06, 6.959000000000826e-06, 8.707999999999633e-06, 6.722000000000672e-06, 7.2919999999990215e-06, 9.346999999999828e-06, 6.000000000002531e-06, 6.568999999997938e-06, 3.54200000000221e-06, 5.930999999997216e-06, 6.319000000001157e-06, 8.166999999999897e-06, 2.665999999998392e-06, 2.459000000003264e-06, 6.554999999998368e-06, 5.180999999999936e-06, 5.305000000000587e-06, 5.542000000000741e-06, 7.749999999997342e-06, 6.083000000000477e-06, 7.681000000002436e-06, 6.0829999999970075e-06, 6.250000000002781e-06, 6.7230000000001455e-06, 2.679999999997962e-06, 6.249999999999312e-06, 9.583000000000508e-06, 6.486999999999465e-06, 5.409999999997361e-07, 7.709000000001576e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:02.962" endtime="20201112 12:42:02.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.958" endtime="20201112 12:42:02.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.970" level="INFO">${RESULT} = [{'time': 0.017579819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.017590083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.967" endtime="20201112 12:42:02.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.978" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017579819, 0.017590083, 0.017600514, 0.017614986, 0.017629403, 0.017636722, 0.017640736, 0.017651889, 0.017661764, 0.017677917, 0.017691917, 0.017708056, 0.017723486, 0.017740125, 0.017752...</msg>
<status status="PASS" starttime="20201112 12:42:02.971" endtime="20201112 12:42:02.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.982" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.981" endtime="20201112 12:42:02.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.985" level="INFO">VALUE: [9.887999999999564e-06, 4.652000000000822e-06, 2.667000000001335e-06, 6.554999999998368e-06, 6.735999999996772e-06, 2.6660000000018613e-06, 3.472000000000891e-06, 6.083000000000477e-06, 3.1529999999987957e-06, 8.139000000000757e-06, 9.820000000000662e-06, 6.959000000000826e-06, 6.722000000000672e-06, 9.346999999999828e-06, 6.568999999997938e-06, 5.930999999997216e-06, 8.166999999999897e-06, 2.459000000003264e-06, 5.180999999999936e-06, 5.542000000000741e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.7230000000001455e-06, 6.249999999999312e-06, 6.486999999999465e-06, 7.709000000001576e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.983" endtime="20201112 12:42:02.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.979" endtime="20201112 12:42:02.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.988" endtime="20201112 12:42:02.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.992" endtime="20201112 12:42:03.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.990" endtime="20201112 12:42:03.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.987" endtime="20201112 12:42:03.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.622" endtime="20201112 12:42:03.012"></status>
</kw>
<msg timestamp="20201112 12:42:03.013" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.020" endtime="20201112 12:42:03.030"></status>
</kw>
<msg timestamp="20201112 12:42:03.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.019" endtime="20201112 12:42:03.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.032" endtime="20201112 12:42:03.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.034" endtime="20201112 12:42:03.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.016" endtime="20201112 12:42:03.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.014" endtime="20201112 12:42:03.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.044" endtime="20201112 12:42:03.315"></status>
</kw>
<msg timestamp="20201112 12:42:03.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017533667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017538944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.043" endtime="20201112 12:42:03.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017533667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017538944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.318" endtime="20201112 12:42:03.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.324" endtime="20201112 12:42:03.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.039" endtime="20201112 12:42:03.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.038" endtime="20201112 12:42:03.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.330" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:03.329" endtime="20201112 12:42:03.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.334" level="INFO">VALUE: [{'time': 0.017533667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017538944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.017544958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017555389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017559986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017565292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017568028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017568569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017575069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.017584722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.017592403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.017598417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017606333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.017611153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.017611694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017621, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.017624847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017628014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017631417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017635097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.017639278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.017643944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.017649542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017658889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017661639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017667194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017676278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.017676819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017683958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.0176845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017692125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.017696944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017699708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.017709278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569999999996942e-06, 'source_diff': 9.569999999996942e-06}, {'time': 0.017718625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.017725431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.017729847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017733486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017736931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}, {'time': 0.01774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.017752833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.017753375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017756236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8610000000033053e-06, 'source_diff': 2.8610000000033053e-06}, {'time': 0.017764458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.017773806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.0177825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.017789236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.017796986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.017801097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.017807361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.017816931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.017822306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017829583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.017832486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017833028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017841903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017842444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:03.331" endtime="20201112 12:42:03.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.327" endtime="20201112 12:42:03.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:03.351" level="INFO">${debug-compressed} = {'time': [0.017533667, 0.017538944, 0.017544958, 0.017554847, 0.017555389, 0.017559986, 0.017565292, 0.017568028, 0.017568569, 0.017575069, 0.017584722, 0.017592403, 0.017598417, 0.017606333, 0.017611...</msg>
<status status="PASS" starttime="20201112 12:42:03.337" endtime="20201112 12:42:03.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.355" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:03.354" endtime="20201112 12:42:03.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.358" level="INFO">VALUE: {'time': [0.017533667, 0.017538944, 0.017544958, 0.017554847, 0.017555389, 0.017559986, 0.017565292, 0.017568028, 0.017568569, 0.017575069, 0.017584722, 0.017592403, 0.017598417, 0.017606333, 0.017611153, 0.017611694, 0.017621, 0.017624847, 0.017628014, 0.017631417, 0.017635097, 0.017639278, 0.017643944, 0.017649542, 0.017658889, 0.017661639, 0.017667194, 0.017676278, 0.017676819, 0.017683958, 0.0176845, 0.017692125, 0.017696944, 0.017699708, 0.017709278, 0.017718625, 0.017725431, 0.017729847, 0.017733486, 0.017736931, 0.01774375, 0.017752833, 0.017753375, 0.017756236, 0.017764458, 0.017773806, 0.0177825, 0.017789236, 0.017796986, 0.017801097, 0.017807361, 0.017816931, 0.017822306, 0.017829583, 0.017832486, 0.017833028, 0.017841903, 0.017842444], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcediff': [0, 5.277000000001447e-06, 6.0139999999986316e-06, 9.888999999999037e-06, 5.420000000026792e-07, 4.596999999998547e-06, 5.306000000000061e-06, 2.735999999999711e-06, 5.409999999997361e-07, 6.499999999999562e-06, 9.653000000001827e-06, 7.680999999998966e-06, 6.014000000002101e-06, 7.915999999996703e-06, 4.8200000000026e-06, 5.409999999997361e-07, 9.306000000000592e-06, 3.846999999997797e-06, 3.167000000001835e-06, 3.4029999999990457e-06, 3.679999999998962e-06, 4.181000000002405e-06, 4.666000000000392e-06, 5.5979999999990204e-06, 9.346999999999828e-06, 2.749999999999281e-06, 5.555000000000837e-06, 9.083999999999481e-06, 5.409999999997361e-07, 7.138999999999757e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.818999999999657e-06, 2.76400000000232e-06, 9.569999999996942e-06, 9.347000000003297e-06, 6.805999999998091e-06, 4.416000000000142e-06, 3.6389999999997258e-06, 3.445000000001225e-06, 6.818999999998188e-06, 9.083000000000008e-06, 5.419999999992098e-07, 2.8610000000033053e-06, 8.221999999998703e-06, 9.347999999999301e-06, 8.694000000000063e-06, 6.736000000000242e-06, 7.750000000000812e-06, 4.1109999999976166e-06, 6.264000000002351e-06, 9.570000000000412e-06, 5.374999999998437e-06, 7.276999999999978e-06, 2.903000000002015e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07], 'source_diff': [0, 5.277000000001447e-06, 6.0139999999986316e-06, 9.888999999999037e-06, 5.420000000026792e-07, 4.596999999998547e-06, 5.306000000000061e-06, 2.735999999999711e-06, 5.409999999997361e-07, 6.499999999999562e-06, 9.653000000001827e-06, 7.680999999998966e-06, 6.014000000002101e-06, 7.915999999996703e-06, 4.8200000000026e-06, 5.409999999997361e-07, 9.306000000000592e-06, 3.846999999997797e-06, 3.167000000001835e-06, 3.4029999999990457e-06, 3.679999999998962e-06, 4.181000000002405e-06, 4.666000000000392e-06, 5.5979999999990204e-06, 9.346999999999828e-06, 2.749999999999281e-06, 5.555000000000837e-06, 9.083999999999481e-06, 5.409999999997361e-07, 7.138999999999757e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.818999999999657e-06, 2.76400000000232e-06, 9.569999999996942e-06, 9.347000000003297e-06, 6.805999999998091e-06, 4.416000000000142e-06, 3.6389999999997258e-06, 3.445000000001225e-06, 6.818999999998188e-06, 9.083000000000008e-06, 5.419999999992098e-07, 2.8610000000033053e-06, 8.221999999998703e-06, 9.347999999999301e-06, 8.694000000000063e-06, 6.736000000000242e-06, 7.750000000000812e-06, 4.1109999999976166e-06, 6.264000000002351e-06, 9.570000000000412e-06, 5.374999999998437e-06, 7.276999999999978e-06, 2.903000000002015e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:03.356" endtime="20201112 12:42:03.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.352" endtime="20201112 12:42:03.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.363" level="INFO">${RESULT} = [{'time': 0.017538944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.017554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:03.360" endtime="20201112 12:42:03.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.373" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017538944, 0.017554847, 0.017559986, 0.017568028, 0.017575069, 0.017592403, 0.017606333, 0.017611694, 0.017624847, 0.017631417, 0.017639278, 0.017649542, 0.017661639, 0.017676278, 0.017683...</msg>
<status status="PASS" starttime="20201112 12:42:03.364" endtime="20201112 12:42:03.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:03.376" endtime="20201112 12:42:03.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.380" level="INFO">VALUE: [5.277000000001447e-06, 9.888999999999037e-06, 4.596999999998547e-06, 2.735999999999711e-06, 6.499999999999562e-06, 7.680999999998966e-06, 7.915999999996703e-06, 5.409999999997361e-07, 3.846999999997797e-06, 3.4029999999990457e-06, 4.181000000002405e-06, 5.5979999999990204e-06, 2.749999999999281e-06, 9.083999999999481e-06, 7.138999999999757e-06, 7.625000000000687e-06, 2.76400000000232e-06, 9.347000000003297e-06, 4.416000000000142e-06, 3.445000000001225e-06, 9.083000000000008e-06, 2.8610000000033053e-06, 9.347999999999301e-06, 6.736000000000242e-06, 4.1109999999976166e-06, 9.570000000000412e-06, 7.276999999999978e-06, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:42:03.378" endtime="20201112 12:42:03.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.374" endtime="20201112 12:42:03.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.383" endtime="20201112 12:42:03.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.386" endtime="20201112 12:42:03.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.385" endtime="20201112 12:42:03.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.381" endtime="20201112 12:42:03.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.013" endtime="20201112 12:42:03.407"></status>
</kw>
<msg timestamp="20201112 12:42:03.407" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.416" endtime="20201112 12:42:03.428"></status>
</kw>
<msg timestamp="20201112 12:42:03.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.414" endtime="20201112 12:42:03.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.431" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.429" endtime="20201112 12:42:03.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.432" endtime="20201112 12:42:03.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.411" endtime="20201112 12:42:03.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.409" endtime="20201112 12:42:03.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.441" endtime="20201112 12:42:03.706"></status>
</kw>
<msg timestamp="20201112 12:42:03.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.439" endtime="20201112 12:42:03.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.709" endtime="20201112 12:42:03.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.715" endtime="20201112 12:42:03.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.437" endtime="20201112 12:42:03.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.435" endtime="20201112 12:42:03.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.722" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:03.721" endtime="20201112 12:42:03.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.725" level="INFO">VALUE: [{'time': 0.018188722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018201, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.018205361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018213264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018213806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018219833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.018225431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018225972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018234306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.018243722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416000000001673e-06, 'source_diff': 9.416000000001673e-06}, {'time': 0.018252597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018256056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.018259875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.018266111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.018269736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018277722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.018278264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018282389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018290611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018298708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.018301208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018308486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.018316167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.018319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018323028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.018326486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018331611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018336986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018341347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018343764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018344306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.01835225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.018355403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018364736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018373375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018383264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018391986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018401556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.018404986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.018408111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018414903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018418056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018421056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.018424986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018431069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018440014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999999786e-06, 'source_diff': 8.944999999999786e-06}, {'time': 0.018445306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018448736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.018454708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018459361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018459903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018466653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.018472972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:03.723" endtime="20201112 12:42:03.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.718" endtime="20201112 12:42:03.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:03.742" level="INFO">${debug-compressed} = {'time': [0.018188722, 0.018191194, 0.018201, 0.018205361, 0.018213264, 0.018213806, 0.018219833, 0.018225431, 0.018225972, 0.018234306, 0.018243722, 0.018252597, 0.018256056, 0.018259875, 0.018266111...</msg>
<status status="PASS" starttime="20201112 12:42:03.728" endtime="20201112 12:42:03.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.746" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:03.745" endtime="20201112 12:42:03.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.749" level="INFO">VALUE: {'time': [0.018188722, 0.018191194, 0.018201, 0.018205361, 0.018213264, 0.018213806, 0.018219833, 0.018225431, 0.018225972, 0.018234306, 0.018243722, 0.018252597, 0.018256056, 0.018259875, 0.018266111, 0.018269736, 0.018277722, 0.018278264, 0.018282389, 0.018290611, 0.018298708, 0.018301208, 0.018308486, 0.018316167, 0.018319625, 0.018323028, 0.018326486, 0.018331611, 0.018336986, 0.018341347, 0.018343764, 0.018344306, 0.01835225, 0.018355403, 0.018364736, 0.018373375, 0.018383264, 0.018391986, 0.018401556, 0.018404986, 0.018408111, 0.018414903, 0.018418056, 0.018421056, 0.018424986, 0.018431069, 0.018440014, 0.018445306, 0.018448736, 0.018454708, 0.018459361, 0.018459903, 0.018466653, 0.018472972, 0.018477625], 'eventsourcediff': [0, 2.471999999999891e-06, 9.805999999997622e-06, 4.361000000001336e-06, 7.903000000000077e-06, 5.419999999992098e-07, 6.027000000002197e-06, 5.5979999999990204e-06, 5.409999999997361e-07, 8.333999999998731e-06, 9.416000000001673e-06, 8.874999999998467e-06, 3.4590000000007948e-06, 3.818999999998657e-06, 6.236000000003211e-06, 3.625000000000156e-06, 7.985999999998022e-06, 5.419999999992098e-07, 4.125000000000656e-06, 8.221999999998703e-06, 8.097000000002047e-06, 2.4999999999990308e-06, 7.2779999999994516e-06, 7.681000000002436e-06, 3.4579999999978517e-06, 3.403000000002515e-06, 3.4579999999978517e-06, 5.125000000001656e-06, 5.374999999998437e-06, 4.361000000001336e-06, 2.4169999999976155e-06, 5.420000000026792e-07, 7.943999999999313e-06, 3.1529999999987957e-06, 9.333000000000258e-06, 8.639000000001257e-06, 9.888999999999037e-06, 8.721999999999203e-06, 9.570000000000412e-06, 3.4300000000021813e-06, 3.124999999999656e-06, 6.7919999999985214e-06, 3.1529999999987957e-06, 3.0000000000030003e-06, 3.929999999999212e-06, 6.083000000000477e-06, 8.944999999999786e-06, 5.292000000000491e-06, 3.429999999998712e-06, 5.971999999999922e-06, 4.653000000000296e-06, 5.419999999992098e-07, 6.749999999999812e-06, 6.319000000001157e-06, 4.653000000000296e-06], 'source_diff': [0, 2.471999999999891e-06, 9.805999999997622e-06, 4.361000000001336e-06, 7.903000000000077e-06, 5.419999999992098e-07, 6.027000000002197e-06, 5.5979999999990204e-06, 5.409999999997361e-07, 8.333999999998731e-06, 9.416000000001673e-06, 8.874999999998467e-06, 3.4590000000007948e-06, 3.818999999998657e-06, 6.236000000003211e-06, 3.625000000000156e-06, 7.985999999998022e-06, 5.419999999992098e-07, 4.125000000000656e-06, 8.221999999998703e-06, 8.097000000002047e-06, 2.4999999999990308e-06, 7.2779999999994516e-06, 7.681000000002436e-06, 3.4579999999978517e-06, 3.403000000002515e-06, 3.4579999999978517e-06, 5.125000000001656e-06, 5.374999999998437e-06, 4.361000000001336e-06, 2.4169999999976155e-06, 5.420000000026792e-07, 7.943999999999313e-06, 3.1529999999987957e-06, 9.333000000000258e-06, 8.639000000001257e-06, 9.888999999999037e-06, 8.721999999999203e-06, 9.570000000000412e-06, 3.4300000000021813e-06, 3.124999999999656e-06, 6.7919999999985214e-06, 3.1529999999987957e-06, 3.0000000000030003e-06, 3.929999999999212e-06, 6.083000000000477e-06, 8.944999999999786e-06, 5.292000000000491e-06, 3.429999999998712e-06, 5.971999999999922e-06, 4.653000000000296e-06, 5.419999999992098e-07, 6.749999999999812e-06, 6.319000000001157e-06, 4.653000000000296e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:03.747" endtime="20201112 12:42:03.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.743" endtime="20201112 12:42:03.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.754" level="INFO">${RESULT} = [{'time': 0.018191194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018205361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:03.751" endtime="20201112 12:42:03.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.762" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018191194, 0.018205361, 0.018213806, 0.018225431, 0.018234306, 0.018252597, 0.018259875, 0.018269736, 0.018278264, 0.018290611, 0.018301208, 0.018316167, 0.018323028, 0.018331611, 0.018341...</msg>
<status status="PASS" starttime="20201112 12:42:03.755" endtime="20201112 12:42:03.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.768" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:03.766" endtime="20201112 12:42:03.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.770" level="INFO">VALUE: [2.471999999999891e-06, 4.361000000001336e-06, 5.419999999992098e-07, 5.5979999999990204e-06, 8.333999999998731e-06, 8.874999999998467e-06, 3.818999999998657e-06, 3.625000000000156e-06, 5.419999999992098e-07, 8.221999999998703e-06, 2.4999999999990308e-06, 7.681000000002436e-06, 3.403000000002515e-06, 5.125000000001656e-06, 4.361000000001336e-06, 5.420000000026792e-07, 3.1529999999987957e-06, 8.639000000001257e-06, 8.721999999999203e-06, 3.4300000000021813e-06, 6.7919999999985214e-06, 3.0000000000030003e-06, 6.083000000000477e-06, 5.292000000000491e-06, 5.971999999999922e-06, 5.419999999992098e-07, 6.319000000001157e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.769" endtime="20201112 12:42:03.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.763" endtime="20201112 12:42:03.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.773" endtime="20201112 12:42:03.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.777" endtime="20201112 12:42:03.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.775" endtime="20201112 12:42:03.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.772" endtime="20201112 12:42:03.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.408" endtime="20201112 12:42:03.798"></status>
</kw>
<msg timestamp="20201112 12:42:03.798" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.806" endtime="20201112 12:42:03.817"></status>
</kw>
<msg timestamp="20201112 12:42:03.818" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.804" endtime="20201112 12:42:03.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.819" endtime="20201112 12:42:03.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.821" endtime="20201112 12:42:03.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.801" endtime="20201112 12:42:03.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.800" endtime="20201112 12:42:03.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.831" endtime="20201112 12:42:04.099"></status>
</kw>
<msg timestamp="20201112 12:42:04.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:03.829" endtime="20201112 12:42:04.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:04.102" endtime="20201112 12:42:04.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.108" endtime="20201112 12:42:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.826" endtime="20201112 12:42:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.825" endtime="20201112 12:42:04.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.115" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:04.114" endtime="20201112 12:42:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.119" level="INFO">VALUE: [{'time': 0.018336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018339458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.01834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018345014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018350069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.018355847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018359056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2089999999970753e-06, 'source_diff': 3.2089999999970753e-06}, {'time': 0.018359597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01836675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.018371389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.018371931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018377736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.018384278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.018394167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018397319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.018397861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018404069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.018407306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2369999999996846e-06, 'source_diff': 3.2369999999996846e-06}, {'time': 0.018413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018414139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018416042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018420694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018424847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018430181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.01844425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.018453361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.018456306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.018464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000002547e-06, 'source_diff': 8.597000000002547e-06}, {'time': 0.018471944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.018480333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018483806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.018487972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018488514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018491847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.018494611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.018500139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018509569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430000000001243e-06, 'source_diff': 9.430000000001243e-06}, {'time': 0.018513972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018517931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.959000000001295e-06, 'source_diff': 3.959000000001295e-06}, {'time': 0.018525667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.018533819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.018538403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.0185435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018548111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018548653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018557778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.018566403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.018573847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.018576292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.018578722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.018579264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.01858625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.985999999997022e-06, 'source_diff': 6.985999999997022e-06}, {'time': 0.018595181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018603889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018611083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018615028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018621611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:04.116" endtime="20201112 12:42:04.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.111" endtime="20201112 12:42:04.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:04.136" level="INFO">${debug-compressed} = {'time': [0.018336, 0.018339458, 0.01834, 0.018345014, 0.018350069, 0.018355847, 0.018359056, 0.018359597, 0.01836675, 0.018371389, 0.018371931, 0.018377736, 0.018384278, 0.018394167, 0.018397319, 0.0...</msg>
<status status="PASS" starttime="20201112 12:42:04.121" endtime="20201112 12:42:04.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.140" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:04.139" endtime="20201112 12:42:04.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.144" level="INFO">VALUE: {'time': [0.018336, 0.018339458, 0.01834, 0.018345014, 0.018350069, 0.018355847, 0.018359056, 0.018359597, 0.01836675, 0.018371389, 0.018371931, 0.018377736, 0.018384278, 0.018394167, 0.018397319, 0.018397861, 0.018404069, 0.018407306, 0.018413597, 0.018414139, 0.018416042, 0.018420694, 0.018424847, 0.018430181, 0.018436264, 0.01844425, 0.018453361, 0.018456306, 0.018464903, 0.018471944, 0.018480333, 0.018483806, 0.018487972, 0.018488514, 0.018491847, 0.018494611, 0.018500139, 0.018509569, 0.018513972, 0.018517931, 0.018525667, 0.018533819, 0.018538403, 0.0185435, 0.018548111, 0.018548653, 0.018557778, 0.018566403, 0.018573847, 0.018576292, 0.018578722, 0.018579264, 0.01858625, 0.018595181, 0.018603889, 0.018611083, 0.018611625, 0.018615028, 0.018621611], 'eventsourcediff': [0, 3.4579999999978517e-06, 5.419999999992098e-07, 5.014000000001101e-06, 5.055000000000337e-06, 5.778000000001421e-06, 3.2089999999970753e-06, 5.409999999997361e-07, 7.153000000002796e-06, 4.6389999999972564e-06, 5.420000000026792e-07, 5.804999999997618e-06, 6.542000000001741e-06, 9.888999999999037e-06, 3.151999999999322e-06, 5.420000000026792e-07, 6.2079999999971325e-06, 3.2369999999996846e-06, 6.291000000002017e-06, 5.419999999992098e-07, 1.903000000001015e-06, 4.652000000000822e-06, 4.152999999999796e-06, 5.3339999999992005e-06, 6.083000000000477e-06, 7.985999999998022e-06, 9.111000000002617e-06, 2.9449999999972554e-06, 8.597000000002547e-06, 7.040999999999298e-06, 8.389000000001007e-06, 3.4729999999968952e-06, 4.165999999999892e-06, 5.420000000026792e-07, 3.3329999999977267e-06, 2.76400000000232e-06, 5.527999999997701e-06, 9.430000000001243e-06, 4.403000000000046e-06, 3.959000000001295e-06, 7.735999999997772e-06, 8.152000000000853e-06, 4.5839999999984504e-06, 5.097000000002516e-06, 4.610999999998117e-06, 5.419999999992098e-07, 9.125000000002187e-06, 8.624999999998217e-06, 7.444000000002282e-06, 2.4450000000002248e-06, 2.4299999999977118e-06, 5.420000000026792e-07, 6.985999999997022e-06, 8.931000000000217e-06, 8.707999999999633e-06, 7.194000000002032e-06, 5.419999999992098e-07, 3.4029999999990457e-06, 6.583000000000977e-06], 'source_diff': [0, 3.4579999999978517e-06, 5.419999999992098e-07, 5.014000000001101e-06, 5.055000000000337e-06, 5.778000000001421e-06, 3.2089999999970753e-06, 5.409999999997361e-07, 7.153000000002796e-06, 4.6389999999972564e-06, 5.420000000026792e-07, 5.804999999997618e-06, 6.542000000001741e-06, 9.888999999999037e-06, 3.151999999999322e-06, 5.420000000026792e-07, 6.2079999999971325e-06, 3.2369999999996846e-06, 6.291000000002017e-06, 5.419999999992098e-07, 1.903000000001015e-06, 4.652000000000822e-06, 4.152999999999796e-06, 5.3339999999992005e-06, 6.083000000000477e-06, 7.985999999998022e-06, 9.111000000002617e-06, 2.9449999999972554e-06, 8.597000000002547e-06, 7.040999999999298e-06, 8.389000000001007e-06, 3.4729999999968952e-06, 4.165999999999892e-06, 5.420000000026792e-07, 3.3329999999977267e-06, 2.76400000000232e-06, 5.527999999997701e-06, 9.430000000001243e-06, 4.403000000000046e-06, 3.959000000001295e-06, 7.735999999997772e-06, 8.152000000000853e-06, 4.5839999999984504e-06, 5.097000000002516e-06, 4.610999999998117e-06, 5.419999999992098e-07, 9.125000000002187e-06, 8.624999999998217e-06, 7.444000000002282e-06, 2.4450000000002248e-06, 2.4299999999977118e-06, 5.420000000026792e-07, 6.985999999997022e-06, 8.931000000000217e-06, 8.707999999999633e-06, 7.194000000002032e-06, 5.419999999992098e-07, 3.4029999999990457e-06, 6.583000000000977e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:04.141" endtime="20201112 12:42:04.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.137" endtime="20201112 12:42:04.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.149" level="INFO">${RESULT} = [{'time': 0.018339458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018345014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:04.146" endtime="20201112 12:42:04.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.157" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018339458, 0.018345014, 0.018355847, 0.018359597, 0.018371389, 0.018377736, 0.018394167, 0.018397861, 0.018407306, 0.018414139, 0.018420694, 0.018430181, 0.01844425, 0.018456306, 0.0184719...</msg>
<status status="PASS" starttime="20201112 12:42:04.150" endtime="20201112 12:42:04.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.162" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:04.161" endtime="20201112 12:42:04.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.164" level="INFO">VALUE: [3.4579999999978517e-06, 5.014000000001101e-06, 5.778000000001421e-06, 5.409999999997361e-07, 4.6389999999972564e-06, 5.804999999997618e-06, 9.888999999999037e-06, 5.420000000026792e-07, 3.2369999999996846e-06, 5.419999999992098e-07, 4.652000000000822e-06, 5.3339999999992005e-06, 7.985999999998022e-06, 2.9449999999972554e-06, 7.040999999999298e-06, 3.4729999999968952e-06, 5.420000000026792e-07, 2.76400000000232e-06, 9.430000000001243e-06, 3.959000000001295e-06, 8.152000000000853e-06, 5.097000000002516e-06, 5.419999999992098e-07, 8.624999999998217e-06, 2.4450000000002248e-06, 5.420000000026792e-07, 8.931000000000217e-06, 7.194000000002032e-06, 3.4029999999990457e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.163" endtime="20201112 12:42:04.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.158" endtime="20201112 12:42:04.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.169" endtime="20201112 12:42:04.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.172" endtime="20201112 12:42:04.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.171" endtime="20201112 12:42:04.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.167" endtime="20201112 12:42:04.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.798" endtime="20201112 12:42:04.193"></status>
</kw>
<msg timestamp="20201112 12:42:04.193" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.201" endtime="20201112 12:42:04.213"></status>
</kw>
<msg timestamp="20201112 12:42:04.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.199" endtime="20201112 12:42:04.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.216" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.214" endtime="20201112 12:42:04.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.217" endtime="20201112 12:42:04.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.197" endtime="20201112 12:42:04.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.195" endtime="20201112 12:42:04.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.226" endtime="20201112 12:42:04.494"></status>
</kw>
<msg timestamp="20201112 12:42:04.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017399486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.224" endtime="20201112 12:42:04.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017399486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.498" endtime="20201112 12:42:04.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.504" endtime="20201112 12:42:04.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.222" endtime="20201112 12:42:04.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.220" endtime="20201112 12:42:04.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.510" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:04.509" endtime="20201112 12:42:04.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.514" level="INFO">VALUE: [{'time': 0.017399486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.017415542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.017416083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017419431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017423056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017428181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017433069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.887999999998033e-06, 'source_diff': 4.887999999998033e-06}, {'time': 0.017442028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.017451125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.017454514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017459333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017459875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017465903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017471667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.017472208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017476514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.01747925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.017482639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017487292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017495278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.017495819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017503792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.017512222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430000000000243e-06, 'source_diff': 8.430000000000243e-06}, {'time': 0.017516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017520736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.017524444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.017529264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.017536319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000002337e-06, 'source_diff': 7.055000000002337e-06}, {'time': 0.017541611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.017550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.017553778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017563653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017564194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.017572667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.017577736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017583042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017591431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.017594472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017598778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017604056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.017606514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017614903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017622569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.017626042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.017634194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.017642778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.58400000000245e-06, 'source_diff': 8.58400000000245e-06}, {'time': 0.017649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.017652736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017659903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.017660444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017667361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.017676944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.01768275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017687847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017693681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017694222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:04.511" endtime="20201112 12:42:04.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.507" endtime="20201112 12:42:04.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:04.531" level="INFO">${debug-compressed} = {'time': [0.017399486, 0.017408347, 0.017415542, 0.017416083, 0.017419431, 0.017423056, 0.017428181, 0.017433069, 0.017442028, 0.017451125, 0.017454514, 0.017459333, 0.017459875, 0.017465903, 0.017471...</msg>
<status status="PASS" starttime="20201112 12:42:04.517" endtime="20201112 12:42:04.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.534" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:04.533" endtime="20201112 12:42:04.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.538" level="INFO">VALUE: {'time': [0.017399486, 0.017408347, 0.017415542, 0.017416083, 0.017419431, 0.017423056, 0.017428181, 0.017433069, 0.017442028, 0.017451125, 0.017454514, 0.017459333, 0.017459875, 0.017465903, 0.017471667, 0.017472208, 0.017476514, 0.01747925, 0.017482639, 0.017487292, 0.017495278, 0.017495819, 0.017503792, 0.017512222, 0.017516111, 0.017520736, 0.017524444, 0.017529264, 0.017536319, 0.017541611, 0.017550542, 0.017553778, 0.017563653, 0.017564194, 0.017572667, 0.017577736, 0.017583042, 0.017591431, 0.017593931, 0.017594472, 0.017598778, 0.017604056, 0.017606514, 0.017614903, 0.017622569, 0.017626042, 0.017634194, 0.017642778, 0.017649958, 0.017652736, 0.017659903, 0.017660444, 0.017667361, 0.017676944, 0.01768275, 0.017687847, 0.017693681, 0.017694222], 'eventsourcediff': [0, 8.861000000002367e-06, 7.194999999998036e-06, 5.409999999997361e-07, 3.3480000000002397e-06, 3.625000000000156e-06, 5.125000000001656e-06, 4.887999999998033e-06, 8.958999999999356e-06, 9.097000000003047e-06, 3.3889999999994758e-06, 4.818999999999657e-06, 5.419999999992098e-07, 6.028000000001671e-06, 5.7639999999983815e-06, 5.409999999997361e-07, 4.305999999999061e-06, 2.7360000000031803e-06, 3.3889999999994758e-06, 4.653000000000296e-06, 7.985999999998022e-06, 5.409999999997361e-07, 7.973000000001396e-06, 8.430000000000243e-06, 3.888999999999976e-06, 4.6249999999976865e-06, 3.708000000001571e-06, 4.8199999999991305e-06, 7.055000000002337e-06, 5.291999999997021e-06, 8.931000000000217e-06, 3.236000000000211e-06, 9.874999999999468e-06, 5.410000000032056e-07, 8.472999999998426e-06, 5.068999999999907e-06, 5.306000000000061e-06, 8.389000000001007e-06, 2.4999999999990308e-06, 5.409999999997361e-07, 4.305999999999061e-06, 5.278000000000921e-06, 2.458000000000321e-06, 8.389000000001007e-06, 7.665999999999923e-06, 3.4730000000003647e-06, 8.151999999997384e-06, 8.58400000000245e-06, 7.179999999998993e-06, 2.7779999999984206e-06, 7.167000000002366e-06, 5.409999999997361e-07, 6.9169999999986465e-06, 9.583000000000508e-06, 5.806000000000561e-06, 5.096999999999047e-06, 5.8339999999997005e-06, 5.409999999997361e-07], 'source_diff': [0, 8.861000000002367e-06, 7.194999999998036e-06, 5.409999999997361e-07, 3.3480000000002397e-06, 3.625000000000156e-06, 5.125000000001656e-06, 4.887999999998033e-06, 8.958999999999356e-06, 9.097000000003047e-06, 3.3889999999994758e-06, 4.818999999999657e-06, 5.419999999992098e-07, 6.028000000001671e-06, 5.7639999999983815e-06, 5.409999999997361e-07, 4.305999999999061e-06, 2.7360000000031803e-06, 3.3889999999994758e-06, 4.653000000000296e-06, 7.985999999998022e-06, 5.409999999997361e-07, 7.973000000001396e-06, 8.430000000000243e-06, 3.888999999999976e-06, 4.6249999999976865e-06, 3.708000000001571e-06, 4.8199999999991305e-06, 7.055000000002337e-06, 5.291999999997021e-06, 8.931000000000217e-06, 3.236000000000211e-06, 9.874999999999468e-06, 5.410000000032056e-07, 8.472999999998426e-06, 5.068999999999907e-06, 5.306000000000061e-06, 8.389000000001007e-06, 2.4999999999990308e-06, 5.409999999997361e-07, 4.305999999999061e-06, 5.278000000000921e-06, 2.458000000000321e-06, 8.389000000001007e-06, 7.665999999999923e-06, 3.4730000000003647e-06, 8.151999999997384e-06, 8.58400000000245e-06, 7.179999999998993e-06, 2.7779999999984206e-06, 7.167000000002366e-06, 5.409999999997361e-07, 6.9169999999986465e-06, 9.583000000000508e-06, 5.806000000000561e-06, 5.096999999999047e-06, 5.8339999999997005e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:04.536" endtime="20201112 12:42:04.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.532" endtime="20201112 12:42:04.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.542" level="INFO">${RESULT} = [{'time': 0.017408347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.017416083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.540" endtime="20201112 12:42:04.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.552" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017408347, 0.017416083, 0.017423056, 0.017433069, 0.017451125, 0.017459333, 0.017465903, 0.017472208, 0.01747925, 0.017487292, 0.017495819, 0.017512222, 0.017520736, 0.017529264, 0.0175416...</msg>
<status status="PASS" starttime="20201112 12:42:04.543" endtime="20201112 12:42:04.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.556" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:04.555" endtime="20201112 12:42:04.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.559" level="INFO">VALUE: [8.861000000002367e-06, 5.409999999997361e-07, 3.625000000000156e-06, 4.887999999998033e-06, 9.097000000003047e-06, 4.818999999999657e-06, 6.028000000001671e-06, 5.409999999997361e-07, 2.7360000000031803e-06, 4.653000000000296e-06, 5.409999999997361e-07, 8.430000000000243e-06, 4.6249999999976865e-06, 4.8199999999991305e-06, 5.291999999997021e-06, 3.236000000000211e-06, 5.410000000032056e-07, 5.068999999999907e-06, 8.389000000001007e-06, 5.409999999997361e-07, 5.278000000000921e-06, 8.389000000001007e-06, 3.4730000000003647e-06, 8.58400000000245e-06, 2.7779999999984206e-06, 5.409999999997361e-07, 9.583000000000508e-06, 5.096999999999047e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:42:04.557" endtime="20201112 12:42:04.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.553" endtime="20201112 12:42:04.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.562" endtime="20201112 12:42:04.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.565" endtime="20201112 12:42:04.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.564" endtime="20201112 12:42:04.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.560" endtime="20201112 12:42:04.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.194" endtime="20201112 12:42:04.589"></status>
</kw>
<msg timestamp="20201112 12:42:04.590" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.606" endtime="20201112 12:42:04.621"></status>
</kw>
<msg timestamp="20201112 12:42:04.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.602" endtime="20201112 12:42:04.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.624" endtime="20201112 12:42:04.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.629" endtime="20201112 12:42:04.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.597" endtime="20201112 12:42:04.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.593" endtime="20201112 12:42:04.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.648" endtime="20201112 12:42:04.927"></status>
</kw>
<msg timestamp="20201112 12:42:04.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030608667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030616097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.645" endtime="20201112 12:42:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030608667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030616097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.930" endtime="20201112 12:42:04.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.936" endtime="20201112 12:42:04.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.639" endtime="20201112 12:42:04.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.636" endtime="20201112 12:42:04.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.942" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:04.941" endtime="20201112 12:42:04.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.946" level="INFO">VALUE: [{'time': 0.030608667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030616097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.030616639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.030623611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.030624153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.030631597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.030632139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030639361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.030644028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.030653958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.030659931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.973000000002865e-06, 'source_diff': 5.973000000002865e-06}, {'time': 0.0306645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.030672653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.030673194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.030678736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.030679278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030685319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.030689722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.030699375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.030708792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.030717431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.030722125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.030727847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.030728389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.030734236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.030739611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.030749069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.030752653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.030759931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.030764625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.030769, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.030775806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.030783069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.030783611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030787181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.030793042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.030799056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.030804333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.030804875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03080875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.030809292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.030816764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.030824417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.030831958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.030838417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.030843486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.030852653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.030858667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.030864014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.030870056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.030874458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.030875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030884292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.030893958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.030898833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.030899375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.030906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.030908875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.030912333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:04.944" endtime="20201112 12:42:04.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.939" endtime="20201112 12:42:04.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:04.964" level="INFO">${debug-compressed} = {'time': [0.030608667, 0.030616097, 0.030616639, 0.030623611, 0.030624153, 0.030631597, 0.030632139, 0.030639361, 0.030644028, 0.030653958, 0.030659931, 0.0306645, 0.030672653, 0.030673194, 0.03067873...</msg>
<status status="PASS" starttime="20201112 12:42:04.949" endtime="20201112 12:42:04.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.968" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:04.967" endtime="20201112 12:42:04.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.972" level="INFO">VALUE: {'time': [0.030608667, 0.030616097, 0.030616639, 0.030623611, 0.030624153, 0.030631597, 0.030632139, 0.030639361, 0.030644028, 0.030653958, 0.030659931, 0.0306645, 0.030672653, 0.030673194, 0.030678736, 0.030679278, 0.030685319, 0.030689722, 0.030699375, 0.030708792, 0.030717431, 0.030722125, 0.030727847, 0.030728389, 0.030731014, 0.030734236, 0.030739611, 0.030749069, 0.030752653, 0.030759931, 0.030764625, 0.030769, 0.030775806, 0.030783069, 0.030783611, 0.030787181, 0.030793042, 0.030799056, 0.030804333, 0.030804875, 0.03080875, 0.030809292, 0.030812153, 0.030816764, 0.030824417, 0.030831958, 0.030838417, 0.030843486, 0.030852653, 0.030858667, 0.030864014, 0.030870056, 0.030874458, 0.030875, 0.030884292, 0.030893958, 0.030898833, 0.030899375, 0.030906347, 0.030908875, 0.030912333], 'eventsourcediff': [0, 7.429999999999243e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 5.420000000026792e-07, 7.443999999998813e-06, 5.419999999992098e-07, 7.222000000001172e-06, 4.666999999999866e-06, 9.929999999998274e-06, 5.973000000002865e-06, 4.568999999999407e-06, 8.153000000000327e-06, 5.409999999997361e-07, 5.542000000000741e-06, 5.419999999992098e-07, 6.040999999998298e-06, 4.403000000000046e-06, 9.653000000001827e-06, 9.416999999997677e-06, 8.639000000001257e-06, 4.693999999999532e-06, 5.721999999999672e-06, 5.419999999992098e-07, 2.6250000000026252e-06, 3.222000000000641e-06, 5.374999999998437e-06, 9.458000000000383e-06, 3.5840000000009198e-06, 7.2779999999994516e-06, 4.693999999999532e-06, 4.375000000000906e-06, 6.805999999998091e-06, 7.263000000000408e-06, 5.419999999992098e-07, 3.57000000000135e-06, 5.860999999999367e-06, 6.0139999999986316e-06, 5.277000000001447e-06, 5.419999999992098e-07, 3.875000000000406e-06, 5.419999999992098e-07, 2.860999999999836e-06, 4.611000000001586e-06, 7.652999999999827e-06, 7.540999999999798e-06, 6.459000000000326e-06, 5.068999999999907e-06, 9.167000000000897e-06, 6.0139999999986316e-06, 5.346999999999297e-06, 6.042000000001241e-06, 4.402000000000572e-06, 5.419999999992098e-07, 9.292000000001022e-06, 9.665999999998454e-06, 4.875000000001406e-06, 5.419999999992098e-07, 6.972000000000922e-06, 2.5279999999981706e-06, 3.458000000001321e-06], 'source_diff': [0, 7.429999999999243e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 5.420000000026792e-07, 7.443999999998813e-06, 5.419999999992098e-07, 7.222000000001172e-06, 4.666999999999866e-06, 9.929999999998274e-06, 5.973000000002865e-06, 4.568999999999407e-06, 8.153000000000327e-06, 5.409999999997361e-07, 5.542000000000741e-06, 5.419999999992098e-07, 6.040999999998298e-06, 4.403000000000046e-06, 9.653000000001827e-06, 9.416999999997677e-06, 8.639000000001257e-06, 4.693999999999532e-06, 5.721999999999672e-06, 5.419999999992098e-07, 2.6250000000026252e-06, 3.222000000000641e-06, 5.374999999998437e-06, 9.458000000000383e-06, 3.5840000000009198e-06, 7.2779999999994516e-06, 4.693999999999532e-06, 4.375000000000906e-06, 6.805999999998091e-06, 7.263000000000408e-06, 5.419999999992098e-07, 3.57000000000135e-06, 5.860999999999367e-06, 6.0139999999986316e-06, 5.277000000001447e-06, 5.419999999992098e-07, 3.875000000000406e-06, 5.419999999992098e-07, 2.860999999999836e-06, 4.611000000001586e-06, 7.652999999999827e-06, 7.540999999999798e-06, 6.459000000000326e-06, 5.068999999999907e-06, 9.167000000000897e-06, 6.0139999999986316e-06, 5.346999999999297e-06, 6.042000000001241e-06, 4.402000000000572e-06, 5.419999999992098e-07, 9.292000000001022e-06, 9.665999999998454e-06, 4.875000000001406e-06, 5.419999999992098e-07, 6.972000000000922e-06, 2.5279999999981706e-06, 3.458000000001321e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:04.969" endtime="20201112 12:42:04.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.965" endtime="20201112 12:42:04.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.976" level="INFO">${RESULT} = [{'time': 0.030616097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.030623611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.973" endtime="20201112 12:42:04.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.986" level="INFO">${GPIO_OVERHEAD} = {'time': [0.030616097, 0.030623611, 0.030631597, 0.030639361, 0.030653958, 0.0306645, 0.030673194, 0.030679278, 0.030689722, 0.030708792, 0.030722125, 0.030728389, 0.030734236, 0.030749069, 0.03075993...</msg>
<status status="PASS" starttime="20201112 12:42:04.977" endtime="20201112 12:42:04.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.991" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:04.989" endtime="20201112 12:42:04.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.994" level="INFO">VALUE: [7.429999999999243e-06, 6.9719999999974525e-06, 7.443999999998813e-06, 7.222000000001172e-06, 9.929999999998274e-06, 4.568999999999407e-06, 5.409999999997361e-07, 5.419999999992098e-07, 4.403000000000046e-06, 9.416999999997677e-06, 4.693999999999532e-06, 5.419999999992098e-07, 3.222000000000641e-06, 9.458000000000383e-06, 7.2779999999994516e-06, 4.375000000000906e-06, 7.263000000000408e-06, 3.57000000000135e-06, 6.0139999999986316e-06, 5.419999999992098e-07, 5.419999999992098e-07, 4.611000000001586e-06, 7.540999999999798e-06, 5.068999999999907e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 5.419999999992098e-07, 9.665999999998454e-06, 5.419999999992098e-07, 2.5279999999981706e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.992" endtime="20201112 12:42:04.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.987" endtime="20201112 12:42:04.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.997" endtime="20201112 12:42:04.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.000" endtime="20201112 12:42:05.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.999" endtime="20201112 12:42:05.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.995" endtime="20201112 12:42:05.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.591" endtime="20201112 12:42:05.021"></status>
</kw>
<msg timestamp="20201112 12:42:05.021" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.029" endtime="20201112 12:42:05.041"></status>
</kw>
<msg timestamp="20201112 12:42:05.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.027" endtime="20201112 12:42:05.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.043" endtime="20201112 12:42:05.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.045" endtime="20201112 12:42:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.025" endtime="20201112 12:42:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.023" endtime="20201112 12:42:05.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.054" endtime="20201112 12:42:05.327"></status>
</kw>
<msg timestamp="20201112 12:42:05.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017658514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.053" endtime="20201112 12:42:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017658514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.331" endtime="20201112 12:42:05.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.337" endtime="20201112 12:42:05.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.050" endtime="20201112 12:42:05.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.048" endtime="20201112 12:42:05.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.343" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:05.342" endtime="20201112 12:42:05.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.347" level="INFO">VALUE: [{'time': 0.017657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017658514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017661208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.017667528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.017670986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017671528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017677333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.01768675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.017691806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017694958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.017698417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017703819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.401999999998103e-06, 'source_diff': 5.401999999998103e-06}, {'time': 0.017710514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.017720361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.017726819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.017729986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017737458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.017745569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.017751583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017760931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.017768625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.017775569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.017776111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017780181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.01778625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017791139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017797861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017803722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017806444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017813125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.01781675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017820444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.017820986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017826222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017829944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017837125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.017837667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017842903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.01784725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017856694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.444000000000813e-06, 'source_diff': 9.444000000000813e-06}, {'time': 0.017865056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.017865597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017870903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017871444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017880083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.017880625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017886653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.017894639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.017904014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.017909111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017918292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.017921792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017929444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.017937667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.017941056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017948806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.017949347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017957986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.017963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:05.344" endtime="20201112 12:42:05.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.340" endtime="20201112 12:42:05.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:05.365" level="INFO">${debug-compressed} = {'time': [0.017657972, 0.017658514, 0.017661208, 0.017667528, 0.017670986, 0.017671528, 0.017677333, 0.01768675, 0.017691806, 0.017694958, 0.017698417, 0.017703819, 0.017710514, 0.017720361, 0.0177268...</msg>
<status status="PASS" starttime="20201112 12:42:05.350" endtime="20201112 12:42:05.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.369" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:05.368" endtime="20201112 12:42:05.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.372" level="INFO">VALUE: {'time': [0.017657972, 0.017658514, 0.017661208, 0.017667528, 0.017670986, 0.017671528, 0.017677333, 0.01768675, 0.017691806, 0.017694958, 0.017698417, 0.017703819, 0.017710514, 0.017720361, 0.017726819, 0.017729986, 0.017737458, 0.017745569, 0.017751583, 0.017760931, 0.017768625, 0.017775569, 0.017776111, 0.017780181, 0.01778625, 0.017791139, 0.017797861, 0.017803722, 0.017806444, 0.017813125, 0.01781675, 0.017820444, 0.017820986, 0.017826222, 0.017829944, 0.017837125, 0.017837667, 0.017842903, 0.01784725, 0.017856694, 0.017865056, 0.017865597, 0.017870903, 0.017871444, 0.017880083, 0.017880625, 0.017886653, 0.017894639, 0.017904014, 0.017909111, 0.017918292, 0.017921792, 0.017929444, 0.017937667, 0.017941056, 0.017948806, 0.017949347, 0.017957986, 0.017963292], 'eventsourcediff': [0, 5.419999999992098e-07, 2.694000000001001e-06, 6.319999999997161e-06, 3.458000000001321e-06, 5.419999999992098e-07, 5.805000000001087e-06, 9.417000000001147e-06, 5.055999999999811e-06, 3.151999999999322e-06, 3.4590000000007948e-06, 5.401999999998103e-06, 6.695000000001006e-06, 9.847000000000328e-06, 6.458000000000852e-06, 3.1669999999983656e-06, 7.472000000001422e-06, 8.110999999998147e-06, 6.014000000002101e-06, 9.347999999999301e-06, 7.693999999999063e-06, 6.944000000001782e-06, 5.419999999992098e-07, 4.0699999999983805e-06, 6.069000000000907e-06, 4.889000000000976e-06, 6.722000000000672e-06, 5.860999999999367e-06, 2.722000000000141e-06, 6.680999999997966e-06, 3.625000000000156e-06, 3.6940000000020012e-06, 5.419999999992098e-07, 5.235999999998742e-06, 3.722000000001141e-06, 7.180999999998466e-06, 5.420000000026792e-07, 5.235999999998742e-06, 4.346999999998297e-06, 9.444000000000813e-06, 8.36200000000134e-06, 5.409999999997361e-07, 5.306000000000061e-06, 5.409999999997361e-07, 8.639000000001257e-06, 5.419999999992098e-07, 6.0279999999982015e-06, 7.986000000001492e-06, 9.374999999998967e-06, 5.096999999999047e-06, 9.181000000000467e-06, 3.500000000000031e-06, 7.652000000000353e-06, 8.223000000001646e-06, 3.3889999999994758e-06, 7.750000000000812e-06, 5.409999999997361e-07, 8.638999999997787e-06, 5.306000000000061e-06], 'source_diff': [0, 5.419999999992098e-07, 2.694000000001001e-06, 6.319999999997161e-06, 3.458000000001321e-06, 5.419999999992098e-07, 5.805000000001087e-06, 9.417000000001147e-06, 5.055999999999811e-06, 3.151999999999322e-06, 3.4590000000007948e-06, 5.401999999998103e-06, 6.695000000001006e-06, 9.847000000000328e-06, 6.458000000000852e-06, 3.1669999999983656e-06, 7.472000000001422e-06, 8.110999999998147e-06, 6.014000000002101e-06, 9.347999999999301e-06, 7.693999999999063e-06, 6.944000000001782e-06, 5.419999999992098e-07, 4.0699999999983805e-06, 6.069000000000907e-06, 4.889000000000976e-06, 6.722000000000672e-06, 5.860999999999367e-06, 2.722000000000141e-06, 6.680999999997966e-06, 3.625000000000156e-06, 3.6940000000020012e-06, 5.419999999992098e-07, 5.235999999998742e-06, 3.722000000001141e-06, 7.180999999998466e-06, 5.420000000026792e-07, 5.235999999998742e-06, 4.346999999998297e-06, 9.444000000000813e-06, 8.36200000000134e-06, 5.409999999997361e-07, 5.306000000000061e-06, 5.409999999997361e-07, 8.639000000001257e-06, 5.419999999992098e-07, 6.0279999999982015e-06, 7.986000000001492e-06, 9.374999999998967e-06, 5.096999999999047e-06, 9.181000000000467e-06, 3.500000000000031e-06, 7.652000000000353e-06, 8.223000000001646e-06, 3.3889999999994758e-06, 7.750000000000812e-06, 5.409999999997361e-07, 8.638999999997787e-06, 5.306000000000061e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:05.370" endtime="20201112 12:42:05.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.366" endtime="20201112 12:42:05.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.377" level="INFO">${RESULT} = [{'time': 0.017658514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017667528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.374" endtime="20201112 12:42:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.386" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017658514, 0.017667528, 0.017671528, 0.01768675, 0.017694958, 0.017703819, 0.017720361, 0.017729986, 0.017745569, 0.017760931, 0.017775569, 0.017780181, 0.017791139, 0.017803722, 0.0178131...</msg>
<status status="PASS" starttime="20201112 12:42:05.378" endtime="20201112 12:42:05.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.395" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:05.393" endtime="20201112 12:42:05.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.400" level="INFO">VALUE: [5.419999999992098e-07, 6.319999999997161e-06, 5.419999999992098e-07, 9.417000000001147e-06, 3.151999999999322e-06, 5.401999999998103e-06, 9.847000000000328e-06, 3.1669999999983656e-06, 8.110999999998147e-06, 9.347999999999301e-06, 6.944000000001782e-06, 4.0699999999983805e-06, 4.889000000000976e-06, 5.860999999999367e-06, 6.680999999997966e-06, 3.6940000000020012e-06, 5.235999999998742e-06, 7.180999999998466e-06, 5.235999999998742e-06, 9.444000000000813e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 7.986000000001492e-06, 5.096999999999047e-06, 3.500000000000031e-06, 8.223000000001646e-06, 7.750000000000812e-06, 8.638999999997787e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.397" endtime="20201112 12:42:05.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.388" endtime="20201112 12:42:05.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.407" endtime="20201112 12:42:05.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.414" endtime="20201112 12:42:05.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.411" endtime="20201112 12:42:05.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.404" endtime="20201112 12:42:05.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.022" endtime="20201112 12:42:05.439"></status>
</kw>
<msg timestamp="20201112 12:42:05.440" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.459" endtime="20201112 12:42:05.473"></status>
</kw>
<msg timestamp="20201112 12:42:05.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.455" endtime="20201112 12:42:05.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.477" endtime="20201112 12:42:05.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.482" endtime="20201112 12:42:05.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.448" endtime="20201112 12:42:05.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.444" endtime="20201112 12:42:05.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.494" endtime="20201112 12:42:05.765"></status>
</kw>
<msg timestamp="20201112 12:42:05.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034106125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034114292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.493" endtime="20201112 12:42:05.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034106125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034114292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.768" endtime="20201112 12:42:05.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.774" endtime="20201112 12:42:05.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.490" endtime="20201112 12:42:05.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.488" endtime="20201112 12:42:05.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.780" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:05.779" endtime="20201112 12:42:05.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.784" level="INFO">VALUE: [{'time': 0.034106125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034114292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.034119708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.034126444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.034130806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.034140444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.637999999999314e-06, 'source_diff': 9.637999999999314e-06}, {'time': 0.034147903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.034155819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.0341595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6810000000053744e-06, 'source_diff': 3.6810000000053744e-06}, {'time': 0.034163861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.034172097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.0341765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.034179194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6940000000044706e-06, 'source_diff': 2.6940000000044706e-06}, {'time': 0.034188597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.034192722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.034202653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.0342125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.034220167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.034225944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.034235764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.034244722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.034249833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.034250375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.034253472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.034257972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.034260361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3890000000054146e-06, 'source_diff': 2.3890000000054146e-06}, {'time': 0.034265639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.034268139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.034275375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999993803e-06, 'source_diff': 7.235999999993803e-06}, {'time': 0.034282139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7640000000063205e-06, 'source_diff': 6.7640000000063205e-06}, {'time': 0.034289625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999994053e-06, 'source_diff': 7.485999999994053e-06}, {'time': 0.034298764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.034305014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.034309667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.034316639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.034325736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.034326278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.034330819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.034338722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.034345764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.034354083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.034359611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.034366861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.034375444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.034375986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.034385264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.034385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.034390639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.034395958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3189999999966875e-06, 'source_diff': 5.3189999999966875e-06}, {'time': 0.034405806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.034414222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416000000004142e-06, 'source_diff': 8.416000000004142e-06}, {'time': 0.034414764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.034418569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.034424417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847999999995801e-06, 'source_diff': 5.847999999995801e-06}, {'time': 0.034433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000003782e-06, 'source_diff': 8.944000000003782e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:05.781" endtime="20201112 12:42:05.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.777" endtime="20201112 12:42:05.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:05.801" level="INFO">${debug-compressed} = {'time': [0.034106125, 0.034114292, 0.034119708, 0.034126444, 0.034130806, 0.034140444, 0.034147903, 0.034155819, 0.0341595, 0.034163861, 0.034172097, 0.0341765, 0.034179194, 0.034188597, 0.034192722,...</msg>
<status status="PASS" starttime="20201112 12:42:05.787" endtime="20201112 12:42:05.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.805" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:05.804" endtime="20201112 12:42:05.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.808" level="INFO">VALUE: {'time': [0.034106125, 0.034114292, 0.034119708, 0.034126444, 0.034130806, 0.034140444, 0.034147903, 0.034155819, 0.0341595, 0.034163861, 0.034172097, 0.0341765, 0.034179194, 0.034188597, 0.034192722, 0.034202653, 0.0342125, 0.034220167, 0.034225944, 0.034235764, 0.034244722, 0.034249833, 0.034250375, 0.034253472, 0.034257972, 0.034260361, 0.034265639, 0.034268139, 0.034275375, 0.034282139, 0.034289625, 0.034298764, 0.034305014, 0.034309667, 0.034316639, 0.034325736, 0.034326278, 0.034330819, 0.034338722, 0.034345764, 0.034354083, 0.034359611, 0.034366861, 0.034375444, 0.034375986, 0.034385264, 0.034385806, 0.034390639, 0.034395958, 0.034405806, 0.034414222, 0.034414764, 0.034418569, 0.034424417, 0.034433361], 'eventsourcediff': [0, 8.166999999996427e-06, 5.416000000001142e-06, 6.736000000000242e-06, 4.36200000000081e-06, 9.637999999999314e-06, 7.459000000001326e-06, 7.915999999996703e-06, 3.6810000000053744e-06, 4.360999999994397e-06, 8.236000000001742e-06, 4.403000000000046e-06, 2.6940000000044706e-06, 9.402999999998107e-06, 4.125000000000656e-06, 9.930999999997747e-06, 9.847000000000328e-06, 7.667000000002866e-06, 5.776999999998478e-06, 9.820000000000662e-06, 8.957999999996413e-06, 5.111000000002086e-06, 5.419999999992098e-07, 3.097000000000516e-06, 4.4999999999975615e-06, 2.3890000000054146e-06, 5.277999999997451e-06, 2.5000000000025002e-06, 7.235999999993803e-06, 6.7640000000063205e-06, 7.485999999994053e-06, 9.139000000005226e-06, 6.249999999999312e-06, 4.653000000000296e-06, 6.972000000000922e-06, 9.096999999999578e-06, 5.419999999992098e-07, 4.540999999996798e-06, 7.903000000003546e-06, 7.0419999999987715e-06, 8.318999999999688e-06, 5.527999999997701e-06, 7.250000000000312e-06, 8.582999999999508e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.419999999992098e-07, 4.833000000002696e-06, 5.3189999999966875e-06, 9.847999999999801e-06, 8.416000000004142e-06, 5.419999999992098e-07, 3.8050000000025563e-06, 5.847999999995801e-06, 8.944000000003782e-06], 'source_diff': [0, 8.166999999996427e-06, 5.416000000001142e-06, 6.736000000000242e-06, 4.36200000000081e-06, 9.637999999999314e-06, 7.459000000001326e-06, 7.915999999996703e-06, 3.6810000000053744e-06, 4.360999999994397e-06, 8.236000000001742e-06, 4.403000000000046e-06, 2.6940000000044706e-06, 9.402999999998107e-06, 4.125000000000656e-06, 9.930999999997747e-06, 9.847000000000328e-06, 7.667000000002866e-06, 5.776999999998478e-06, 9.820000000000662e-06, 8.957999999996413e-06, 5.111000000002086e-06, 5.419999999992098e-07, 3.097000000000516e-06, 4.4999999999975615e-06, 2.3890000000054146e-06, 5.277999999997451e-06, 2.5000000000025002e-06, 7.235999999993803e-06, 6.7640000000063205e-06, 7.485999999994053e-06, 9.139000000005226e-06, 6.249999999999312e-06, 4.653000000000296e-06, 6.972000000000922e-06, 9.096999999999578e-06, 5.419999999992098e-07, 4.540999999996798e-06, 7.903000000003546e-06, 7.0419999999987715e-06, 8.318999999999688e-06, 5.527999999997701e-06, 7.250000000000312e-06, 8.582999999999508e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.419999999992098e-07, 4.833000000002696e-06, 5.3189999999966875e-06, 9.847999999999801e-06, 8.416000000004142e-06, 5.419999999992098e-07, 3.8050000000025563e-06, 5.847999999995801e-06, 8.944000000003782e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:05.806" endtime="20201112 12:42:05.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.802" endtime="20201112 12:42:05.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.813" level="INFO">${RESULT} = [{'time': 0.034114292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.034126444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.810" endtime="20201112 12:42:05.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.821" level="INFO">${GPIO_OVERHEAD} = {'time': [0.034114292, 0.034126444, 0.034140444, 0.034155819, 0.034163861, 0.0341765, 0.034188597, 0.034202653, 0.034220167, 0.034235764, 0.034249833, 0.034253472, 0.034260361, 0.034268139, 0.03428213...</msg>
<status status="PASS" starttime="20201112 12:42:05.814" endtime="20201112 12:42:05.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.826" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:05.825" endtime="20201112 12:42:05.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.828" level="INFO">VALUE: [8.166999999996427e-06, 6.736000000000242e-06, 9.637999999999314e-06, 7.915999999996703e-06, 4.360999999994397e-06, 4.403000000000046e-06, 9.402999999998107e-06, 9.930999999997747e-06, 7.667000000002866e-06, 9.820000000000662e-06, 5.111000000002086e-06, 3.097000000000516e-06, 2.3890000000054146e-06, 2.5000000000025002e-06, 6.7640000000063205e-06, 9.139000000005226e-06, 4.653000000000296e-06, 9.096999999999578e-06, 4.540999999996798e-06, 7.0419999999987715e-06, 5.527999999997701e-06, 8.582999999999508e-06, 9.278000000001452e-06, 4.833000000002696e-06, 9.847999999999801e-06, 5.419999999992098e-07, 5.847999999995801e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.827" endtime="20201112 12:42:05.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.822" endtime="20201112 12:42:05.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.832" endtime="20201112 12:42:05.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.835" endtime="20201112 12:42:05.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.834" endtime="20201112 12:42:05.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.830" endtime="20201112 12:42:05.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.441" endtime="20201112 12:42:05.856"></status>
</kw>
<msg timestamp="20201112 12:42:05.856" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.864" endtime="20201112 12:42:05.876"></status>
</kw>
<msg timestamp="20201112 12:42:05.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.862" endtime="20201112 12:42:05.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.879" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.877" endtime="20201112 12:42:05.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.880" endtime="20201112 12:42:05.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.860" endtime="20201112 12:42:05.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.858" endtime="20201112 12:42:05.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.889" endtime="20201112 12:42:06.157"></status>
</kw>
<msg timestamp="20201112 12:42:06.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018077319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01808175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:05.888" endtime="20201112 12:42:06.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018077319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01808175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:06.160" endtime="20201112 12:42:06.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.166" endtime="20201112 12:42:06.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.885" endtime="20201112 12:42:06.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.883" endtime="20201112 12:42:06.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.173" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:06.172" endtime="20201112 12:42:06.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.177" level="INFO">VALUE: [{'time': 0.018077319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01808175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018088778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018094139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018097375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018101, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018106056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018106597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018122208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018126069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018126611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018135736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018142694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.0181495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018155986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018162944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018168556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018174875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018183819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018191569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.018198556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9869999999999655e-06, 'source_diff': 6.9869999999999655e-06}, {'time': 0.018207903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018213417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018216597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1800000000019313e-06, 'source_diff': 3.1800000000019313e-06}, {'time': 0.018226472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018229625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018238569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018244681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11199999999909e-06, 'source_diff': 6.11199999999909e-06}, {'time': 0.018247819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.137999999999752e-06, 'source_diff': 3.137999999999752e-06}, {'time': 0.018251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.018259667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018264583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018272069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.018281222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018290819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.018299917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097999999999051e-06, 'source_diff': 9.097999999999051e-06}, {'time': 0.018302375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018307278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018314306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018314847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018319444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018326181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7369999999997154e-06, 'source_diff': 6.7369999999997154e-06}, {'time': 0.018334667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018343819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152000000001853e-06, 'source_diff': 9.152000000001853e-06}, {'time': 0.018353403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.018357583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018361681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018362222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018368653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999997716e-06, 'source_diff': 6.430999999997716e-06}, {'time': 0.018375861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.018378528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018379069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018384778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018385319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018392944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:06.174" endtime="20201112 12:42:06.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.169" endtime="20201112 12:42:06.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:06.194" level="INFO">${debug-compressed} = {'time': [0.018077319, 0.01808175, 0.018088778, 0.018094139, 0.018097375, 0.018101, 0.018106056, 0.018106597, 0.018112389, 0.018122208, 0.018126069, 0.018126611, 0.018135736, 0.018142694, 0.0181495, 0...</msg>
<status status="PASS" starttime="20201112 12:42:06.179" endtime="20201112 12:42:06.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.199" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:06.198" endtime="20201112 12:42:06.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.202" level="INFO">VALUE: {'time': [0.018077319, 0.01808175, 0.018088778, 0.018094139, 0.018097375, 0.018101, 0.018106056, 0.018106597, 0.018112389, 0.018122208, 0.018126069, 0.018126611, 0.018135736, 0.018142694, 0.0181495, 0.018155986, 0.018162944, 0.018168556, 0.018174875, 0.018183819, 0.018191569, 0.018198556, 0.018207903, 0.018213417, 0.018216597, 0.018226472, 0.018229625, 0.018238569, 0.018244681, 0.018247819, 0.018251028, 0.018259667, 0.018264583, 0.018272069, 0.018281222, 0.018290819, 0.018299917, 0.018302375, 0.018302917, 0.018307278, 0.018314306, 0.018314847, 0.018319444, 0.018326181, 0.018334667, 0.018343819, 0.018353403, 0.018357583, 0.018361681, 0.018362222, 0.018368653, 0.018375861, 0.018378528, 0.018379069, 0.018384778, 0.018385319, 0.018392944], 'eventsourcediff': [0, 4.430999999999186e-06, 7.0279999999992016e-06, 5.360999999998867e-06, 3.236000000000211e-06, 3.625000000000156e-06, 5.055999999999811e-06, 5.409999999997361e-07, 5.792000000000991e-06, 9.819000000001188e-06, 3.861000000000836e-06, 5.419999999992098e-07, 9.124999999998717e-06, 6.958000000001352e-06, 6.805999999998091e-06, 6.485999999999992e-06, 6.958000000001352e-06, 5.61199999999859e-06, 6.319000000001157e-06, 8.944000000000313e-06, 7.750000000000812e-06, 6.9869999999999655e-06, 9.346999999999828e-06, 5.5139999999981315e-06, 3.1800000000019313e-06, 9.874999999999468e-06, 3.1529999999987957e-06, 8.944000000000313e-06, 6.11199999999909e-06, 3.137999999999752e-06, 3.2090000000005448e-06, 8.639000000001257e-06, 4.916000000000642e-06, 7.485999999997522e-06, 9.153000000001327e-06, 9.597000000000078e-06, 9.097999999999051e-06, 2.458000000000321e-06, 5.419999999992098e-07, 4.361000000001336e-06, 7.0279999999992016e-06, 5.409999999997361e-07, 4.597000000002016e-06, 6.7369999999997154e-06, 8.485999999998523e-06, 9.152000000001853e-06, 9.583999999999981e-06, 4.179999999999462e-06, 4.09800000000099e-06, 5.409999999997361e-07, 6.430999999997716e-06, 7.208000000001602e-06, 2.667000000001335e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 7.625000000000687e-06], 'source_diff': [0, 4.430999999999186e-06, 7.0279999999992016e-06, 5.360999999998867e-06, 3.236000000000211e-06, 3.625000000000156e-06, 5.055999999999811e-06, 5.409999999997361e-07, 5.792000000000991e-06, 9.819000000001188e-06, 3.861000000000836e-06, 5.419999999992098e-07, 9.124999999998717e-06, 6.958000000001352e-06, 6.805999999998091e-06, 6.485999999999992e-06, 6.958000000001352e-06, 5.61199999999859e-06, 6.319000000001157e-06, 8.944000000000313e-06, 7.750000000000812e-06, 6.9869999999999655e-06, 9.346999999999828e-06, 5.5139999999981315e-06, 3.1800000000019313e-06, 9.874999999999468e-06, 3.1529999999987957e-06, 8.944000000000313e-06, 6.11199999999909e-06, 3.137999999999752e-06, 3.2090000000005448e-06, 8.639000000001257e-06, 4.916000000000642e-06, 7.485999999997522e-06, 9.153000000001327e-06, 9.597000000000078e-06, 9.097999999999051e-06, 2.458000000000321e-06, 5.419999999992098e-07, 4.361000000001336e-06, 7.0279999999992016e-06, 5.409999999997361e-07, 4.597000000002016e-06, 6.7369999999997154e-06, 8.485999999998523e-06, 9.152000000001853e-06, 9.583999999999981e-06, 4.179999999999462e-06, 4.09800000000099e-06, 5.409999999997361e-07, 6.430999999997716e-06, 7.208000000001602e-06, 2.667000000001335e-06, 5.409999999997361e-07, 5.7089999999995755e-06, 5.409999999997361e-07, 7.625000000000687e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:06.200" endtime="20201112 12:42:06.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.196" endtime="20201112 12:42:06.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.206" level="INFO">${RESULT} = [{'time': 0.01808175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018094139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:06.204" endtime="20201112 12:42:06.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.215" level="INFO">${GPIO_OVERHEAD} = {'time': [0.01808175, 0.018094139, 0.018101, 0.018106597, 0.018122208, 0.018126611, 0.018142694, 0.018155986, 0.018168556, 0.018183819, 0.018198556, 0.018213417, 0.018226472, 0.018238569, 0.018247819,...</msg>
<status status="PASS" starttime="20201112 12:42:06.207" endtime="20201112 12:42:06.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:06.218" endtime="20201112 12:42:06.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.222" level="INFO">VALUE: [4.430999999999186e-06, 5.360999999998867e-06, 3.625000000000156e-06, 5.409999999997361e-07, 9.819000000001188e-06, 5.419999999992098e-07, 6.958000000001352e-06, 6.485999999999992e-06, 5.61199999999859e-06, 8.944000000000313e-06, 6.9869999999999655e-06, 5.5139999999981315e-06, 9.874999999999468e-06, 8.944000000000313e-06, 3.137999999999752e-06, 8.639000000001257e-06, 7.485999999997522e-06, 9.597000000000078e-06, 2.458000000000321e-06, 4.361000000001336e-06, 5.409999999997361e-07, 6.7369999999997154e-06, 9.152000000001853e-06, 4.179999999999462e-06, 5.409999999997361e-07, 7.208000000001602e-06, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:42:06.220" endtime="20201112 12:42:06.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.216" endtime="20201112 12:42:06.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.225" endtime="20201112 12:42:06.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.229" endtime="20201112 12:42:06.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.227" endtime="20201112 12:42:06.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.224" endtime="20201112 12:42:06.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.857" endtime="20201112 12:42:06.250"></status>
</kw>
<msg timestamp="20201112 12:42:06.250" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.258" endtime="20201112 12:42:06.269"></status>
</kw>
<msg timestamp="20201112 12:42:06.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.257" endtime="20201112 12:42:06.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.271" endtime="20201112 12:42:06.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.273" endtime="20201112 12:42:06.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.253" endtime="20201112 12:42:06.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.252" endtime="20201112 12:42:06.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.282" endtime="20201112 12:42:06.553"></status>
</kw>
<msg timestamp="20201112 12:42:06.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:06.281" endtime="20201112 12:42:06.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:06.556" endtime="20201112 12:42:06.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.562" endtime="20201112 12:42:06.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.278" endtime="20201112 12:42:06.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.277" endtime="20201112 12:42:06.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.569" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:06.568" endtime="20201112 12:42:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.573" level="INFO">VALUE: [{'time': 0.018465583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018483444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.018483986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018491681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.018497306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018504736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.018511069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.018518306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236999999996746e-06, 'source_diff': 7.236999999996746e-06}, {'time': 0.018527847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.018532208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018538681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.018542069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.388000000000002e-06, 'source_diff': 3.388000000000002e-06}, {'time': 0.018546403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.018546944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018552417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000002365e-06, 'source_diff': 5.473000000002365e-06}, {'time': 0.018552958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018555889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.018558403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018562764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018567583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018572625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018577944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018583736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018588125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018597944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018600375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.018600917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018606958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.018616292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018623514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.018631722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.018637403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018641986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018645139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018659083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018666264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018666806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018672833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018678917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018684472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018692194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.018692736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018699708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.01870025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018704861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018709903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018715514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018728792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.018729333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.01873625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.018745181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.018750736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018755653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018763292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:06.570" endtime="20201112 12:42:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.565" endtime="20201112 12:42:06.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:06.590" level="INFO">${debug-compressed} = {'time': [0.018465583, 0.0184685, 0.018474819, 0.018483444, 0.018483986, 0.018491681, 0.018497306, 0.018504736, 0.018511069, 0.018518306, 0.018527847, 0.018532208, 0.018538681, 0.018542069, 0.01854640...</msg>
<status status="PASS" starttime="20201112 12:42:06.575" endtime="20201112 12:42:06.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.594" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:06.593" endtime="20201112 12:42:06.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.598" level="INFO">VALUE: {'time': [0.018465583, 0.0184685, 0.018474819, 0.018483444, 0.018483986, 0.018491681, 0.018497306, 0.018504736, 0.018511069, 0.018518306, 0.018527847, 0.018532208, 0.018538681, 0.018542069, 0.018546403, 0.018546944, 0.018552417, 0.018552958, 0.018555889, 0.018558403, 0.018562764, 0.018567583, 0.018572625, 0.018577944, 0.018583736, 0.018588125, 0.018597944, 0.018600375, 0.018600917, 0.018606958, 0.018616292, 0.018623514, 0.018631722, 0.018637403, 0.018641986, 0.018645139, 0.018654486, 0.018659083, 0.018666264, 0.018666806, 0.018672833, 0.018678917, 0.018684472, 0.018692194, 0.018692736, 0.018699708, 0.01870025, 0.018704861, 0.018709903, 0.018715514, 0.018719389, 0.018728792, 0.018729333, 0.01873625, 0.018745181, 0.018750736, 0.018755653, 0.018763292], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 2.9169999999981155e-06, 6.319000000001157e-06, 8.625000000001687e-06, 5.419999999992098e-07, 7.694999999998536e-06, 5.625000000002156e-06, 7.429999999999243e-06, 6.333000000000727e-06, 7.236999999996746e-06, 9.541000000001798e-06, 4.361000000001336e-06, 6.4729999999998955e-06, 3.388000000000002e-06, 4.3339999999982e-06, 5.409999999997361e-07, 5.473000000002365e-06, 5.409999999997361e-07, 2.9309999999976855e-06, 2.51400000000207e-06, 4.360999999997867e-06, 4.818999999999657e-06, 5.042000000000241e-06, 5.319000000000157e-06, 5.792000000000991e-06, 4.389000000000476e-06, 9.819000000001188e-06, 2.4309999999971854e-06, 5.420000000026792e-07, 6.040999999998298e-06, 9.333999999999731e-06, 7.222000000001172e-06, 8.207999999999133e-06, 5.681000000000436e-06, 4.582999999998977e-06, 3.153000000002265e-06, 9.346999999999828e-06, 4.596999999998547e-06, 7.180999999998466e-06, 5.420000000026792e-07, 6.026999999998728e-06, 6.0839999999999506e-06, 5.555000000000837e-06, 7.721999999998203e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 5.420000000026792e-07, 4.610999999998117e-06, 5.042000000000241e-06, 5.610999999999117e-06, 3.875000000000406e-06, 9.403000000001577e-06, 5.409999999997361e-07, 6.9169999999986465e-06, 8.931000000000217e-06, 5.555000000000837e-06, 4.917000000000116e-06, 7.639000000000257e-06], 'source_diff': [0, 2.9169999999981155e-06, 6.319000000001157e-06, 8.625000000001687e-06, 5.419999999992098e-07, 7.694999999998536e-06, 5.625000000002156e-06, 7.429999999999243e-06, 6.333000000000727e-06, 7.236999999996746e-06, 9.541000000001798e-06, 4.361000000001336e-06, 6.4729999999998955e-06, 3.388000000000002e-06, 4.3339999999982e-06, 5.409999999997361e-07, 5.473000000002365e-06, 5.409999999997361e-07, 2.9309999999976855e-06, 2.51400000000207e-06, 4.360999999997867e-06, 4.818999999999657e-06, 5.042000000000241e-06, 5.319000000000157e-06, 5.792000000000991e-06, 4.389000000000476e-06, 9.819000000001188e-06, 2.4309999999971854e-06, 5.420000000026792e-07, 6.040999999998298e-06, 9.333999999999731e-06, 7.222000000001172e-06, 8.207999999999133e-06, 5.681000000000436e-06, 4.582999999998977e-06, 3.153000000002265e-06, 9.346999999999828e-06, 4.596999999998547e-06, 7.180999999998466e-06, 5.420000000026792e-07, 6.026999999998728e-06, 6.0839999999999506e-06, 5.555000000000837e-06, 7.721999999998203e-06, 5.420000000026792e-07, 6.9719999999974525e-06, 5.420000000026792e-07, 4.610999999998117e-06, 5.042000000000241e-06, 5.610999999999117e-06, 3.875000000000406e-06, 9.403000000001577e-06, 5.409999999997361e-07, 6.9169999999986465e-06, 8.931000000000217e-06, 5.555000000000837e-06, 4.917000000000116e-06, 7.639000000000257e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:06.595" endtime="20201112 12:42:06.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.591" endtime="20201112 12:42:06.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.602" level="INFO">${RESULT} = [{'time': 0.0184685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018483444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:06.599" endtime="20201112 12:42:06.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.611" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0184685, 0.018483444, 0.018491681, 0.018504736, 0.018518306, 0.018532208, 0.018542069, 0.018546944, 0.018552958, 0.018558403, 0.018567583, 0.018577944, 0.018588125, 0.018600375, 0.01860695...</msg>
<status status="PASS" starttime="20201112 12:42:06.603" endtime="20201112 12:42:06.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:06.614" endtime="20201112 12:42:06.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.618" level="INFO">VALUE: [2.9169999999981155e-06, 8.625000000001687e-06, 7.694999999998536e-06, 7.429999999999243e-06, 7.236999999996746e-06, 4.361000000001336e-06, 3.388000000000002e-06, 5.409999999997361e-07, 5.409999999997361e-07, 2.51400000000207e-06, 4.818999999999657e-06, 5.319000000000157e-06, 4.389000000000476e-06, 2.4309999999971854e-06, 6.040999999998298e-06, 7.222000000001172e-06, 5.681000000000436e-06, 3.153000000002265e-06, 4.596999999998547e-06, 5.420000000026792e-07, 6.0839999999999506e-06, 7.721999999998203e-06, 6.9719999999974525e-06, 4.610999999998117e-06, 5.610999999999117e-06, 9.403000000001577e-06, 6.9169999999986465e-06, 5.555000000000837e-06, 7.639000000000257e-06]</msg>
<status status="PASS" starttime="20201112 12:42:06.616" endtime="20201112 12:42:06.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.612" endtime="20201112 12:42:06.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.621" endtime="20201112 12:42:06.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.625" endtime="20201112 12:42:06.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.623" endtime="20201112 12:42:06.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.620" endtime="20201112 12:42:06.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.250" endtime="20201112 12:42:06.645"></status>
</kw>
<msg timestamp="20201112 12:42:06.646" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.653" endtime="20201112 12:42:06.664"></status>
</kw>
<msg timestamp="20201112 12:42:06.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.652" endtime="20201112 12:42:06.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.666" endtime="20201112 12:42:06.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.669" endtime="20201112 12:42:06.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.649" endtime="20201112 12:42:06.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.648" endtime="20201112 12:42:06.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.678" endtime="20201112 12:42:06.950"></status>
</kw>
<msg timestamp="20201112 12:42:06.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017675972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017676514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.676" endtime="20201112 12:42:06.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017675972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017676514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.953" endtime="20201112 12:42:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.959" endtime="20201112 12:42:06.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.673" endtime="20201112 12:42:06.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.672" endtime="20201112 12:42:06.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.966" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:06.965" endtime="20201112 12:42:06.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.970" level="INFO">VALUE: [{'time': 0.017675972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017676514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01768175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017691444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.017697514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017703347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.0177115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017715194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017722722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.017727806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.017731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.017736458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.017745167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.017752361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.017752903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017757903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017763194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017763736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017768583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017777917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.017783694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.017793347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.017799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.017800444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017807361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.017816292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.01781975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017820292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017824653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017833833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.01783825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017840944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.017848194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.017848736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.017861556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017868528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.017873347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017881264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017885917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017888667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017896111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.017904028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017911486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.017918222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.017923569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017927264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.017927806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017930014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.01793825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.017945042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.017949431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.017954222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017957722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017967264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.017975097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.017978639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:06.967" endtime="20201112 12:42:06.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.963" endtime="20201112 12:42:06.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:06.987" level="INFO">${debug-compressed} = {'time': [0.017675972, 0.017676514, 0.01768175, 0.017691444, 0.017697514, 0.017703347, 0.0177115, 0.017715194, 0.017722722, 0.017727806, 0.017731, 0.017736458, 0.017745167, 0.017752361, 0.017752903, 0...</msg>
<status status="PASS" starttime="20201112 12:42:06.972" endtime="20201112 12:42:06.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.991" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:06.990" endtime="20201112 12:42:06.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.994" level="INFO">VALUE: {'time': [0.017675972, 0.017676514, 0.01768175, 0.017691444, 0.017697514, 0.017703347, 0.0177115, 0.017715194, 0.017722722, 0.017727806, 0.017731, 0.017736458, 0.017745167, 0.017752361, 0.017752903, 0.017757903, 0.017763194, 0.017763736, 0.017768583, 0.017777917, 0.017783694, 0.017793347, 0.017799903, 0.017800444, 0.017807361, 0.017816292, 0.01781975, 0.017820292, 0.017824653, 0.017833833, 0.01783825, 0.017840944, 0.017848194, 0.017848736, 0.017855486, 0.017861556, 0.017868528, 0.017873347, 0.017881264, 0.017885917, 0.017888667, 0.017896111, 0.017904028, 0.017911486, 0.017918222, 0.017923569, 0.017927264, 0.017927806, 0.017930014, 0.01793825, 0.017945042, 0.017949431, 0.017954222, 0.017957722, 0.017967264, 0.017975097, 0.017978639], 'eventsourcediff': [0, 5.419999999992098e-07, 5.235999999998742e-06, 9.694000000001063e-06, 6.070000000000381e-06, 5.833000000000227e-06, 8.153000000000327e-06, 3.693999999998532e-06, 7.527999999999702e-06, 5.0839999999989505e-06, 3.194000000001501e-06, 5.457999999999852e-06, 8.708999999999106e-06, 7.194000000002032e-06, 5.419999999992098e-07, 4.9999999999980616e-06, 5.291000000001017e-06, 5.419999999992098e-07, 4.847000000002266e-06, 9.333999999999731e-06, 5.776999999998478e-06, 9.653000000001827e-06, 6.555999999997841e-06, 5.409999999997361e-07, 6.917000000002116e-06, 8.931000000000217e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 4.360999999997867e-06, 9.180000000000993e-06, 4.416999999999616e-06, 2.694000000001001e-06, 7.250000000000312e-06, 5.419999999992098e-07, 6.749999999999812e-06, 6.070000000000381e-06, 6.972000000000922e-06, 4.818999999999657e-06, 7.916999999999647e-06, 4.653000000000296e-06, 2.749999999999281e-06, 7.443999999998813e-06, 7.916999999999647e-06, 7.458000000001852e-06, 6.736000000000242e-06, 5.346999999999297e-06, 3.6949999999980054e-06, 5.420000000026792e-07, 2.208000000000071e-06, 8.235999999998272e-06, 6.792000000001991e-06, 4.388999999997006e-06, 4.791000000000517e-06, 3.500000000000031e-06, 9.542000000001272e-06, 7.832999999998758e-06, 3.54200000000221e-06], 'source_diff': [0, 5.419999999992098e-07, 5.235999999998742e-06, 9.694000000001063e-06, 6.070000000000381e-06, 5.833000000000227e-06, 8.153000000000327e-06, 3.693999999998532e-06, 7.527999999999702e-06, 5.0839999999989505e-06, 3.194000000001501e-06, 5.457999999999852e-06, 8.708999999999106e-06, 7.194000000002032e-06, 5.419999999992098e-07, 4.9999999999980616e-06, 5.291000000001017e-06, 5.419999999992098e-07, 4.847000000002266e-06, 9.333999999999731e-06, 5.776999999998478e-06, 9.653000000001827e-06, 6.555999999997841e-06, 5.409999999997361e-07, 6.917000000002116e-06, 8.931000000000217e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 4.360999999997867e-06, 9.180000000000993e-06, 4.416999999999616e-06, 2.694000000001001e-06, 7.250000000000312e-06, 5.419999999992098e-07, 6.749999999999812e-06, 6.070000000000381e-06, 6.972000000000922e-06, 4.818999999999657e-06, 7.916999999999647e-06, 4.653000000000296e-06, 2.749999999999281e-06, 7.443999999998813e-06, 7.916999999999647e-06, 7.458000000001852e-06, 6.736000000000242e-06, 5.346999999999297e-06, 3.6949999999980054e-06, 5.420000000026792e-07, 2.208000000000071e-06, 8.235999999998272e-06, 6.792000000001991e-06, 4.388999999997006e-06, 4.791000000000517e-06, 3.500000000000031e-06, 9.542000000001272e-06, 7.832999999998758e-06, 3.54200000000221e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:06.992" endtime="20201112 12:42:06.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.988" endtime="20201112 12:42:06.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.999" level="INFO">${RESULT} = [{'time': 0.017676514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017691444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:06.996" endtime="20201112 12:42:06.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.007" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017676514, 0.017691444, 0.017703347, 0.017715194, 0.017727806, 0.017736458, 0.017752361, 0.017757903, 0.017763736, 0.017777917, 0.017793347, 0.017800444, 0.017816292, 0.017820292, 0.017833...</msg>
<status status="PASS" starttime="20201112 12:42:07.000" endtime="20201112 12:42:07.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.012" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:07.011" endtime="20201112 12:42:07.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.014" level="INFO">VALUE: [5.419999999992098e-07, 9.694000000001063e-06, 5.833000000000227e-06, 3.693999999998532e-06, 5.0839999999989505e-06, 5.457999999999852e-06, 7.194000000002032e-06, 4.9999999999980616e-06, 5.419999999992098e-07, 9.333999999999731e-06, 9.653000000001827e-06, 5.409999999997361e-07, 8.931000000000217e-06, 5.420000000026792e-07, 9.180000000000993e-06, 2.694000000001001e-06, 5.419999999992098e-07, 6.070000000000381e-06, 4.818999999999657e-06, 4.653000000000296e-06, 7.443999999998813e-06, 7.458000000001852e-06, 5.346999999999297e-06, 5.420000000026792e-07, 8.235999999998272e-06, 4.388999999997006e-06, 3.500000000000031e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201112 12:42:07.013" endtime="20201112 12:42:07.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.008" endtime="20201112 12:42:07.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.019" endtime="20201112 12:42:07.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.022" endtime="20201112 12:42:07.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.021" endtime="20201112 12:42:07.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.017" endtime="20201112 12:42:07.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.646" endtime="20201112 12:42:07.043"></status>
</kw>
<msg timestamp="20201112 12:42:07.043" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.051" endtime="20201112 12:42:07.061"></status>
</kw>
<msg timestamp="20201112 12:42:07.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.050" endtime="20201112 12:42:07.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.063" endtime="20201112 12:42:07.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.065" endtime="20201112 12:42:07.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.047" endtime="20201112 12:42:07.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.045" endtime="20201112 12:42:07.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.074" endtime="20201112 12:42:07.348"></status>
</kw>
<msg timestamp="20201112 12:42:07.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017607542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:07.073" endtime="20201112 12:42:07.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017607542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:07.351" endtime="20201112 12:42:07.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.357" endtime="20201112 12:42:07.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.070" endtime="20201112 12:42:07.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.069" endtime="20201112 12:42:07.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.364" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:07.363" endtime="20201112 12:42:07.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.368" level="INFO">VALUE: [{'time': 0.017607, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017607542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017612139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017618625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.017627333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.017633111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017642458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017648542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017654806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017658486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}, {'time': 0.017664264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017671472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.017675569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017676111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017681653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.017682194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017688514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017692153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017692694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017699125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.017702042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017708056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017716681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017717222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017724931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708999999998106e-06, 'source_diff': 7.708999999998106e-06}, {'time': 0.017732611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017738694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.86200000000184e-06, 'source_diff': 8.86200000000184e-06}, {'time': 0.017753569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.017757903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.017762958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.0177635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017767069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5689999999984068e-06, 'source_diff': 3.5689999999984068e-06}, {'time': 0.017774819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.017775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017780125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.017783819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017784361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017786333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.01779425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.0178005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017801042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017809167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.017817056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000000507e-06, 'source_diff': 7.889000000000507e-06}, {'time': 0.017823167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017825931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017831431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017841319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888000000003033e-06, 'source_diff': 9.888000000003033e-06}, {'time': 0.017845667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.017848417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017850875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017856389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.017864139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.017870708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.017873236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017875986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017884597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.017888056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017888597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017896292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:07.365" endtime="20201112 12:42:07.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.360" endtime="20201112 12:42:07.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:07.386" level="INFO">${debug-compressed} = {'time': [0.017607, 0.017607542, 0.017612139, 0.017618625, 0.017627333, 0.017633111, 0.017642458, 0.017648542, 0.017654806, 0.017658486, 0.017664264, 0.017671472, 0.017675569, 0.017676111, 0.017681653...</msg>
<status status="PASS" starttime="20201112 12:42:07.370" endtime="20201112 12:42:07.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.390" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:07.389" endtime="20201112 12:42:07.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.393" level="INFO">VALUE: {'time': [0.017607, 0.017607542, 0.017612139, 0.017618625, 0.017627333, 0.017633111, 0.017642458, 0.017648542, 0.017654806, 0.017658486, 0.017664264, 0.017671472, 0.017675569, 0.017676111, 0.017681653, 0.017682194, 0.017687972, 0.017688514, 0.017692153, 0.017692694, 0.017699125, 0.017702042, 0.017708056, 0.017716681, 0.017717222, 0.017724931, 0.017732611, 0.017738694, 0.017747556, 0.017753569, 0.017757903, 0.017762958, 0.0177635, 0.017767069, 0.017774819, 0.017775361, 0.017780125, 0.017783819, 0.017784361, 0.017786333, 0.01779425, 0.0178005, 0.017801042, 0.017809167, 0.017817056, 0.017823167, 0.017825931, 0.017831431, 0.017841319, 0.017845667, 0.017848417, 0.017850875, 0.017856389, 0.017864139, 0.017870708, 0.017873236, 0.017875986, 0.017884597, 0.017888056, 0.017888597, 0.017896292], 'eventsourcediff': [0, 5.419999999992098e-07, 4.596999999998547e-06, 6.485999999999992e-06, 8.707999999999633e-06, 5.778000000001421e-06, 9.346999999999828e-06, 6.0839999999999506e-06, 6.2639999999988816e-06, 3.6800000000024313e-06, 5.7779999999979514e-06, 7.208000000001602e-06, 4.096999999998047e-06, 5.420000000026792e-07, 5.541999999997271e-06, 5.409999999997361e-07, 5.778000000001421e-06, 5.419999999992098e-07, 3.6389999999997258e-06, 5.409999999997361e-07, 6.431000000001186e-06, 2.917000000001585e-06, 6.0139999999986316e-06, 8.625000000001687e-06, 5.409999999997361e-07, 7.708999999998106e-06, 7.679999999999493e-06, 6.083000000000477e-06, 8.86200000000184e-06, 6.012999999999158e-06, 4.3339999999982e-06, 5.055000000000337e-06, 5.420000000026792e-07, 3.5689999999984068e-06, 7.750000000000812e-06, 5.419999999992098e-07, 4.764000000000851e-06, 3.693999999998532e-06, 5.419999999992098e-07, 1.9720000000028604e-06, 7.916999999999647e-06, 6.249999999999312e-06, 5.419999999992098e-07, 8.125000000001187e-06, 7.889000000000507e-06, 6.110999999999617e-06, 2.7639999999988507e-06, 5.499999999998562e-06, 9.888000000003033e-06, 4.34799999999777e-06, 2.749999999999281e-06, 2.458000000000321e-06, 5.514000000001601e-06, 7.750000000000812e-06, 6.568999999997938e-06, 2.52800000000164e-06, 2.749999999999281e-06, 8.610999999998648e-06, 3.4590000000007948e-06, 5.409999999997361e-07, 7.695000000002006e-06], 'source_diff': [0, 5.419999999992098e-07, 4.596999999998547e-06, 6.485999999999992e-06, 8.707999999999633e-06, 5.778000000001421e-06, 9.346999999999828e-06, 6.0839999999999506e-06, 6.2639999999988816e-06, 3.6800000000024313e-06, 5.7779999999979514e-06, 7.208000000001602e-06, 4.096999999998047e-06, 5.420000000026792e-07, 5.541999999997271e-06, 5.409999999997361e-07, 5.778000000001421e-06, 5.419999999992098e-07, 3.6389999999997258e-06, 5.409999999997361e-07, 6.431000000001186e-06, 2.917000000001585e-06, 6.0139999999986316e-06, 8.625000000001687e-06, 5.409999999997361e-07, 7.708999999998106e-06, 7.679999999999493e-06, 6.083000000000477e-06, 8.86200000000184e-06, 6.012999999999158e-06, 4.3339999999982e-06, 5.055000000000337e-06, 5.420000000026792e-07, 3.5689999999984068e-06, 7.750000000000812e-06, 5.419999999992098e-07, 4.764000000000851e-06, 3.693999999998532e-06, 5.419999999992098e-07, 1.9720000000028604e-06, 7.916999999999647e-06, 6.249999999999312e-06, 5.419999999992098e-07, 8.125000000001187e-06, 7.889000000000507e-06, 6.110999999999617e-06, 2.7639999999988507e-06, 5.499999999998562e-06, 9.888000000003033e-06, 4.34799999999777e-06, 2.749999999999281e-06, 2.458000000000321e-06, 5.514000000001601e-06, 7.750000000000812e-06, 6.568999999997938e-06, 2.52800000000164e-06, 2.749999999999281e-06, 8.610999999998648e-06, 3.4590000000007948e-06, 5.409999999997361e-07, 7.695000000002006e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:07.391" endtime="20201112 12:42:07.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.387" endtime="20201112 12:42:07.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.398" level="INFO">${RESULT} = [{'time': 0.017607542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017618625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:07.395" endtime="20201112 12:42:07.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.407" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017607542, 0.017618625, 0.017633111, 0.017648542, 0.017658486, 0.017671472, 0.017676111, 0.017682194, 0.017688514, 0.017692694, 0.017702042, 0.017716681, 0.017724931, 0.017738694, 0.017753...</msg>
<status status="PASS" starttime="20201112 12:42:07.399" endtime="20201112 12:42:07.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.411" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:07.410" endtime="20201112 12:42:07.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.414" level="INFO">VALUE: [5.419999999992098e-07, 6.485999999999992e-06, 5.778000000001421e-06, 6.0839999999999506e-06, 3.6800000000024313e-06, 7.208000000001602e-06, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 2.917000000001585e-06, 8.625000000001687e-06, 7.708999999998106e-06, 6.083000000000477e-06, 6.012999999999158e-06, 5.055000000000337e-06, 3.5689999999984068e-06, 5.419999999992098e-07, 3.693999999998532e-06, 1.9720000000028604e-06, 6.249999999999312e-06, 8.125000000001187e-06, 6.110999999999617e-06, 5.499999999998562e-06, 4.34799999999777e-06, 2.458000000000321e-06, 7.750000000000812e-06, 2.52800000000164e-06, 8.610999999998648e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:42:07.413" endtime="20201112 12:42:07.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.408" endtime="20201112 12:42:07.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.417" endtime="20201112 12:42:07.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.421" endtime="20201112 12:42:07.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.419" endtime="20201112 12:42:07.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.416" endtime="20201112 12:42:07.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.044" endtime="20201112 12:42:07.442"></status>
</kw>
<msg timestamp="20201112 12:42:07.443" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.450" endtime="20201112 12:42:07.462"></status>
</kw>
<msg timestamp="20201112 12:42:07.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.449" endtime="20201112 12:42:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.465" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.464" endtime="20201112 12:42:07.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.466" endtime="20201112 12:42:07.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.446" endtime="20201112 12:42:07.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.444" endtime="20201112 12:42:07.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.475" endtime="20201112 12:42:07.749"></status>
</kw>
<msg timestamp="20201112 12:42:07.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017677639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.474" endtime="20201112 12:42:07.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017677639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.752" endtime="20201112 12:42:07.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.758" endtime="20201112 12:42:07.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.471" endtime="20201112 12:42:07.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.469" endtime="20201112 12:42:07.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.765" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:07.763" endtime="20201112 12:42:07.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.769" level="INFO">VALUE: [{'time': 0.017677097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017677639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017686764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.017694444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017704333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017710875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.017716833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017726653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819999999997192e-06, 'source_diff': 9.819999999997192e-06}, {'time': 0.017733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.017737389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017737931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017740069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1380000000022215e-06, 'source_diff': 2.1380000000022215e-06}, {'time': 0.017740611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017746083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017752333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017752875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017756042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017763333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.017771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.017775111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017782458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.01778775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017796861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017806681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.017816569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.017826444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.017835042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.017840806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017846583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.017855458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017863667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.017864208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017871375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.017880222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847000000002797e-06, 'source_diff': 8.847000000002797e-06}, {'time': 0.017886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.017891597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017892139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017896264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.017903792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.528000000003171e-06, 'source_diff': 7.528000000003171e-06}, {'time': 0.017909861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.017916181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017918625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017921292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017921833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.017924208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.01792475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017927917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017937264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017942319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017942861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017944833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.017953708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017960431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.017962944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5130000000025965e-06, 'source_diff': 2.5130000000025965e-06}, {'time': 0.017965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017974597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.017983292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.017989347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.017989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017994653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:07.766" endtime="20201112 12:42:07.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.761" endtime="20201112 12:42:07.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:07.786" level="INFO">${debug-compressed} = {'time': [0.017677097, 0.017677639, 0.017686764, 0.017694444, 0.017704333, 0.017710875, 0.017716833, 0.017726653, 0.017733222, 0.017737389, 0.017737931, 0.017740069, 0.017740611, 0.017746083, 0.017752...</msg>
<status status="PASS" starttime="20201112 12:42:07.771" endtime="20201112 12:42:07.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.790" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:07.789" endtime="20201112 12:42:07.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.794" level="INFO">VALUE: {'time': [0.017677097, 0.017677639, 0.017686764, 0.017694444, 0.017704333, 0.017710875, 0.017716833, 0.017726653, 0.017733222, 0.017737389, 0.017737931, 0.017740069, 0.017740611, 0.017746083, 0.017752333, 0.017752875, 0.017756042, 0.017763333, 0.017771944, 0.017775111, 0.017782458, 0.01778775, 0.017796861, 0.017806681, 0.017816569, 0.017826444, 0.017835042, 0.017840806, 0.017846583, 0.017855458, 0.017863667, 0.017864208, 0.017871375, 0.017880222, 0.017886542, 0.017891597, 0.017892139, 0.017896264, 0.017903792, 0.017909861, 0.017916181, 0.017918625, 0.017921292, 0.017921833, 0.017924208, 0.01792475, 0.017927917, 0.017937264, 0.017942319, 0.017942861, 0.017944833, 0.017953708, 0.017960431, 0.017962944, 0.017965417, 0.017974597, 0.017983292, 0.017989347, 0.017989889, 0.017994653], 'eventsourcediff': [0, 5.419999999992098e-07, 9.125000000002187e-06, 7.679999999999493e-06, 9.888999999999037e-06, 6.542000000001741e-06, 5.958000000000352e-06, 9.819999999997192e-06, 6.569000000001407e-06, 4.166999999999366e-06, 5.419999999992098e-07, 2.1380000000022215e-06, 5.419999999992098e-07, 5.471999999999422e-06, 6.249999999999312e-06, 5.420000000026792e-07, 3.1669999999983656e-06, 7.290999999999548e-06, 8.611000000002117e-06, 3.1669999999983656e-06, 7.347000000001297e-06, 5.292000000000491e-06, 9.110999999999148e-06, 9.820000000000662e-06, 9.887999999999564e-06, 9.874999999999468e-06, 8.597999999998551e-06, 5.764000000001851e-06, 5.776999999998478e-06, 8.875000000001937e-06, 8.208999999998606e-06, 5.409999999997361e-07, 7.1669999999988965e-06, 8.847000000002797e-06, 6.319999999997161e-06, 5.055000000000337e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.528000000003171e-06, 6.0689999999974376e-06, 6.320000000000631e-06, 2.444000000000751e-06, 2.6669999999978655e-06, 5.410000000032056e-07, 2.3749999999989058e-06, 5.419999999992098e-07, 3.167000000001835e-06, 9.346999999999828e-06, 5.055000000000337e-06, 5.419999999992098e-07, 1.971999999999391e-06, 8.874999999998467e-06, 6.7230000000001455e-06, 2.5130000000025965e-06, 2.4729999999993646e-06, 9.179999999997523e-06, 8.695000000003006e-06, 6.054999999997868e-06, 5.419999999992098e-07, 4.764000000000851e-06], 'source_diff': [0, 5.419999999992098e-07, 9.125000000002187e-06, 7.679999999999493e-06, 9.888999999999037e-06, 6.542000000001741e-06, 5.958000000000352e-06, 9.819999999997192e-06, 6.569000000001407e-06, 4.166999999999366e-06, 5.419999999992098e-07, 2.1380000000022215e-06, 5.419999999992098e-07, 5.471999999999422e-06, 6.249999999999312e-06, 5.420000000026792e-07, 3.1669999999983656e-06, 7.290999999999548e-06, 8.611000000002117e-06, 3.1669999999983656e-06, 7.347000000001297e-06, 5.292000000000491e-06, 9.110999999999148e-06, 9.820000000000662e-06, 9.887999999999564e-06, 9.874999999999468e-06, 8.597999999998551e-06, 5.764000000001851e-06, 5.776999999998478e-06, 8.875000000001937e-06, 8.208999999998606e-06, 5.409999999997361e-07, 7.1669999999988965e-06, 8.847000000002797e-06, 6.319999999997161e-06, 5.055000000000337e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.528000000003171e-06, 6.0689999999974376e-06, 6.320000000000631e-06, 2.444000000000751e-06, 2.6669999999978655e-06, 5.410000000032056e-07, 2.3749999999989058e-06, 5.419999999992098e-07, 3.167000000001835e-06, 9.346999999999828e-06, 5.055000000000337e-06, 5.419999999992098e-07, 1.971999999999391e-06, 8.874999999998467e-06, 6.7230000000001455e-06, 2.5130000000025965e-06, 2.4729999999993646e-06, 9.179999999997523e-06, 8.695000000003006e-06, 6.054999999997868e-06, 5.419999999992098e-07, 4.764000000000851e-06]}</msg>
<status status="PASS" starttime="20201112 12:42:07.792" endtime="20201112 12:42:07.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.787" endtime="20201112 12:42:07.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.799" level="INFO">${RESULT} = [{'time': 0.017677639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017694444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:07.796" endtime="20201112 12:42:07.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.808" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017677639, 0.017694444, 0.017710875, 0.017726653, 0.017737389, 0.017740069, 0.017746083, 0.017752875, 0.017763333, 0.017775111, 0.01778775, 0.017806681, 0.017826444, 0.017840806, 0.0178554...</msg>
<status status="PASS" starttime="20201112 12:42:07.800" endtime="20201112 12:42:07.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.812" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:07.811" endtime="20201112 12:42:07.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.815" level="INFO">VALUE: [5.419999999992098e-07, 7.679999999999493e-06, 6.542000000001741e-06, 9.819999999997192e-06, 4.166999999999366e-06, 2.1380000000022215e-06, 5.471999999999422e-06, 5.420000000026792e-07, 7.290999999999548e-06, 3.1669999999983656e-06, 5.292000000000491e-06, 9.820000000000662e-06, 9.874999999999468e-06, 5.764000000001851e-06, 8.875000000001937e-06, 5.409999999997361e-07, 8.847000000002797e-06, 5.055000000000337e-06, 4.1249999999971865e-06, 6.0689999999974376e-06, 2.444000000000751e-06, 5.410000000032056e-07, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 8.874999999998467e-06, 2.5130000000025965e-06, 9.179999999997523e-06, 6.054999999997868e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201112 12:42:07.813" endtime="20201112 12:42:07.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.808" endtime="20201112 12:42:07.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.818" endtime="20201112 12:42:07.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.821" endtime="20201112 12:42:07.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.820" endtime="20201112 12:42:07.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.816" endtime="20201112 12:42:07.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.443" endtime="20201112 12:42:07.842"></status>
</kw>
<msg timestamp="20201112 12:42:07.842" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.851" endtime="20201112 12:42:07.863"></status>
</kw>
<msg timestamp="20201112 12:42:07.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.849" endtime="20201112 12:42:07.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.864" endtime="20201112 12:42:07.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.867" endtime="20201112 12:42:07.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.846" endtime="20201112 12:42:07.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.844" endtime="20201112 12:42:07.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.876" endtime="20201112 12:42:08.147"></status>
</kw>
<msg timestamp="20201112 12:42:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018993903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.874" endtime="20201112 12:42:08.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018993903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.151" endtime="20201112 12:42:08.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.157" endtime="20201112 12:42:08.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.872" endtime="20201112 12:42:08.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.870" endtime="20201112 12:42:08.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.164" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:08.163" endtime="20201112 12:42:08.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.168" level="INFO">VALUE: [{'time': 0.018986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018993903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.019002986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.019003528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019010667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019011208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.01901675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.019017292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019021097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.019021639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019030458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.019040097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.019040639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.019044056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.019046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019050444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.019059792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.019064361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.019072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.019078431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.019082611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.019086306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.019086847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019088833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019094194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019100222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019105028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019114861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.019117292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.0191245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.019127, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.019127542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019136125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019139097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.019139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019147028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019151125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019151667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019153875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.019154417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019163236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.019166208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.01916675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019172222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019172764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0191795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.0191825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.0191855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.019194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.019197028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.019203986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9579999999978825e-06, 'source_diff': 6.9579999999978825e-06}, {'time': 0.019204528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019213167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.019213708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019217583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.019218125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019224083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019229917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.019230458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019234819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019239875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.019245722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.019259264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.019264542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.019265083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019268958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.0192695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:08.165" endtime="20201112 12:42:08.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.161" endtime="20201112 12:42:08.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:08.188" level="INFO">${debug-compressed} = {'time': [0.018986681, 0.018993903, 0.019002986, 0.019003528, 0.019010667, 0.019011208, 0.01901675, 0.019017292, 0.019021097, 0.019021639, 0.019030458, 0.019040097, 0.019040639, 0.019044056, 0.0190467...</msg>
<status status="PASS" starttime="20201112 12:42:08.171" endtime="20201112 12:42:08.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.192" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:08.191" endtime="20201112 12:42:08.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.196" level="INFO">VALUE: {'time': [0.018986681, 0.018993903, 0.019002986, 0.019003528, 0.019010667, 0.019011208, 0.01901675, 0.019017292, 0.019021097, 0.019021639, 0.019030458, 0.019040097, 0.019040639, 0.019044056, 0.019046736, 0.019050444, 0.019059792, 0.019064361, 0.019072819, 0.019078431, 0.019082611, 0.019086306, 0.019086847, 0.019088833, 0.019094194, 0.019100222, 0.019105028, 0.019114861, 0.019117292, 0.0191245, 0.019127, 0.019127542, 0.019136125, 0.019139097, 0.019139639, 0.019147028, 0.019151125, 0.019151667, 0.019153875, 0.019154417, 0.019163236, 0.019166208, 0.01916675, 0.019172222, 0.019172764, 0.0191795, 0.0191825, 0.0191855, 0.019194125, 0.019197028, 0.019203986, 0.019204528, 0.019213167, 0.019213708, 0.019217583, 0.019218125, 0.019224083, 0.019229917, 0.019230458, 0.019234819, 0.019239875, 0.019245722, 0.019251028, 0.019259264, 0.019264542, 0.019265083, 0.019268958, 0.0192695], 'eventsourcediff': [0, 7.222000000001172e-06, 9.083000000000008e-06, 5.419999999992098e-07, 7.138999999999757e-06, 5.410000000032056e-07, 5.541999999997271e-06, 5.420000000026792e-07, 3.804999999999087e-06, 5.419999999992098e-07, 8.819000000000188e-06, 9.638999999998787e-06, 5.420000000026792e-07, 3.4169999999986156e-06, 2.6800000000014312e-06, 3.7079999999981017e-06, 9.347999999999301e-06, 4.568999999999407e-06, 8.458000000002852e-06, 5.61199999999859e-06, 4.179999999999462e-06, 3.695000000001475e-06, 5.409999999997361e-07, 1.985999999998961e-06, 5.360999999998867e-06, 6.028000000001671e-06, 4.805999999999561e-06, 9.833000000000758e-06, 2.431000000000655e-06, 7.2079999999981326e-06, 2.5000000000025002e-06, 5.419999999992098e-07, 8.582999999999508e-06, 2.972000000000391e-06, 5.419999999992098e-07, 7.389000000000007e-06, 4.097000000001516e-06, 5.419999999992098e-07, 2.208000000000071e-06, 5.419999999992098e-07, 8.819000000000188e-06, 2.972000000000391e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.419999999992098e-07, 6.736000000000242e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 8.624999999998217e-06, 2.903000000002015e-06, 6.9579999999978825e-06, 5.419999999992098e-07, 8.639000000001257e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07, 5.958000000000352e-06, 5.8339999999997005e-06, 5.409999999997361e-07, 4.361000000001336e-06, 5.055999999999811e-06, 5.846999999999797e-06, 5.306000000000061e-06, 8.236000000001742e-06, 5.277999999997451e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07], 'source_diff': [0, 7.222000000001172e-06, 9.083000000000008e-06, 5.419999999992098e-07, 7.138999999999757e-06, 5.410000000032056e-07, 5.541999999997271e-06, 5.420000000026792e-07, 3.804999999999087e-06, 5.419999999992098e-07, 8.819000000000188e-06, 9.638999999998787e-06, 5.420000000026792e-07, 3.4169999999986156e-06, 2.6800000000014312e-06, 3.7079999999981017e-06, 9.347999999999301e-06, 4.568999999999407e-06, 8.458000000002852e-06, 5.61199999999859e-06, 4.179999999999462e-06, 3.695000000001475e-06, 5.409999999997361e-07, 1.985999999998961e-06, 5.360999999998867e-06, 6.028000000001671e-06, 4.805999999999561e-06, 9.833000000000758e-06, 2.431000000000655e-06, 7.2079999999981326e-06, 2.5000000000025002e-06, 5.419999999992098e-07, 8.582999999999508e-06, 2.972000000000391e-06, 5.419999999992098e-07, 7.389000000000007e-06, 4.097000000001516e-06, 5.419999999992098e-07, 2.208000000000071e-06, 5.419999999992098e-07, 8.819000000000188e-06, 2.972000000000391e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.419999999992098e-07, 6.736000000000242e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 8.624999999998217e-06, 2.903000000002015e-06, 6.9579999999978825e-06, 5.419999999992098e-07, 8.639000000001257e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07, 5.958000000000352e-06, 5.8339999999997005e-06, 5.409999999997361e-07, 4.361000000001336e-06, 5.055999999999811e-06, 5.846999999999797e-06, 5.306000000000061e-06, 8.236000000001742e-06, 5.277999999997451e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:08.193" endtime="20201112 12:42:08.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.189" endtime="20201112 12:42:08.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.201" level="INFO">${RESULT} = [{'time': 0.018993903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.019003528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:08.198" endtime="20201112 12:42:08.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.210" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018993903, 0.019003528, 0.019011208, 0.019017292, 0.019021639, 0.019040097, 0.019044056, 0.019050444, 0.019064361, 0.019078431, 0.019086306, 0.019088833, 0.019100222, 0.019114861, 0.019124...</msg>
<status status="PASS" starttime="20201112 12:42:08.202" endtime="20201112 12:42:08.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:08.214" endtime="20201112 12:42:08.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.218" level="INFO">VALUE: [7.222000000001172e-06, 5.419999999992098e-07, 5.410000000032056e-07, 5.420000000026792e-07, 5.419999999992098e-07, 9.638999999998787e-06, 3.4169999999986156e-06, 3.7079999999981017e-06, 4.568999999999407e-06, 5.61199999999859e-06, 3.695000000001475e-06, 1.985999999998961e-06, 6.028000000001671e-06, 9.833000000000758e-06, 7.2079999999981326e-06, 5.419999999992098e-07, 2.972000000000391e-06, 7.389000000000007e-06, 5.419999999992098e-07, 5.419999999992098e-07, 2.972000000000391e-06, 5.471999999999422e-06, 6.736000000000242e-06, 2.999999999999531e-06, 2.903000000002015e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.8339999999997005e-06, 4.361000000001336e-06, 5.846999999999797e-06, 8.236000000001742e-06, 5.409999999997361e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 12:42:08.217" endtime="20201112 12:42:08.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.212" endtime="20201112 12:42:08.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.221" endtime="20201112 12:42:08.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.225" endtime="20201112 12:42:08.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.223" endtime="20201112 12:42:08.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.220" endtime="20201112 12:42:08.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.843" endtime="20201112 12:42:08.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.146" endtime="20201112 12:42:08.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.250" endtime="20201112 12:42:08.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.248" endtime="20201112 12:42:08.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.247" endtime="20201112 12:42:08.271"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:57.036" endtime="20201112 12:42:08.271" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.278" endtime="20201112 12:42:08.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.277" endtime="20201112 12:42:08.298"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.312" endtime="20201112 12:42:11.334"></status>
</kw>
<msg timestamp="20201112 12:42:11.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.310" endtime="20201112 12:42:11.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.337" endtime="20201112 12:42:11.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.347" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:11.342" endtime="20201112 12:42:11.347"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.307" endtime="20201112 12:42:11.349"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.305" endtime="20201112 12:42:11.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.304" endtime="20201112 12:42:11.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:11.361" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:11.357" endtime="20201112 12:42:11.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.353" endtime="20201112 12:42:11.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.303" endtime="20201112 12:42:11.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.302" endtime="20201112 12:42:11.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.365" endtime="20201112 12:42:11.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.301" endtime="20201112 12:42:11.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.299" endtime="20201112 12:42:11.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.275" endtime="20201112 12:42:11.371"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:11.375" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.392" endtime="20201112 12:42:11.407"></status>
</kw>
<msg timestamp="20201112 12:42:11.408" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.389" endtime="20201112 12:42:11.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.413" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.410" endtime="20201112 12:42:11.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.416" endtime="20201112 12:42:11.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.383" endtime="20201112 12:42:11.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.379" endtime="20201112 12:42:11.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.435" endtime="20201112 12:42:11.733"></status>
</kw>
<msg timestamp="20201112 12:42:11.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10445975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104461486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:11.432" endtime="20201112 12:42:11.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10445975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104461486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:11.737" endtime="20201112 12:42:11.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.746" endtime="20201112 12:42:11.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.426" endtime="20201112 12:42:11.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.423" endtime="20201112 12:42:11.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.753" level="INFO">${RESULT} = [{'time': 3.104461486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.73599999975238e-06, 'source_diff': 1.73599999975238e-06}, {'time': 3.104465875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:11.750" endtime="20201112 12:42:11.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:11.767" level="INFO">${OVERHEAD} = {'time': [3.104461486, 3.104465875, 3.104470778, 3.104477611, 3.104482486, 3.104490403, 3.10449475, 3.104505389, 3.104514528, 3.104525653, 3.104534056, 3.104540625, 3.104550708, 3.10455675, 3.10456280...</msg>
<status status="PASS" starttime="20201112 12:42:11.754" endtime="20201112 12:42:11.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.771" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:11.770" endtime="20201112 12:42:11.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.774" level="INFO">VALUE: [1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.792000000389038e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7919999999449487e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7639999998486644e-06, 1.7369999998351204e-06, 1.7499999995784776e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7079999996560957e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.777999999674762e-06]</msg>
<status status="PASS" starttime="20201112 12:42:11.772" endtime="20201112 12:42:11.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.768" endtime="20201112 12:42:11.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.777" endtime="20201112 12:42:11.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.782" endtime="20201112 12:42:11.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.780" endtime="20201112 12:42:11.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.776" endtime="20201112 12:42:11.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.376" endtime="20201112 12:42:11.803"></status>
</kw>
<msg timestamp="20201112 12:42:11.803" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.811" endtime="20201112 12:42:11.823"></status>
</kw>
<msg timestamp="20201112 12:42:11.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.809" endtime="20201112 12:42:11.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.825" endtime="20201112 12:42:11.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.827" endtime="20201112 12:42:11.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.806" endtime="20201112 12:42:11.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.805" endtime="20201112 12:42:11.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.837" endtime="20201112 12:42:12.118"></status>
</kw>
<msg timestamp="20201112 12:42:12.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.835" endtime="20201112 12:42:12.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.123" endtime="20201112 12:42:12.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.131" endtime="20201112 12:42:12.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.832" endtime="20201112 12:42:12.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.831" endtime="20201112 12:42:12.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.138" level="INFO">${RESULT} = [{'time': 0.018148486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018158069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.135" endtime="20201112 12:42:12.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.152" level="INFO">${OVERHEAD} = {'time': [0.018148486, 0.018158069, 0.018162681, 0.018166653, 0.018176083, 0.018185056, 0.018194667, 0.018204042, 0.018208181, 0.018212125, 0.018223403, 0.018230625, 0.018239125, 0.018247625, 0.018254...</msg>
<status status="PASS" starttime="20201112 12:42:12.139" endtime="20201112 12:42:12.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.156" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.155" endtime="20201112 12:42:12.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.159" level="INFO">VALUE: [1.707999999999571e-06, 1.7499999999982807e-06, 1.7229999999986145e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7920000000004599e-06, 1.77800000000089e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.157" endtime="20201112 12:42:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.153" endtime="20201112 12:42:12.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.162" endtime="20201112 12:42:12.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.167" endtime="20201112 12:42:12.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.165" endtime="20201112 12:42:12.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.161" endtime="20201112 12:42:12.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.803" endtime="20201112 12:42:12.188"></status>
</kw>
<msg timestamp="20201112 12:42:12.188" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.196" endtime="20201112 12:42:12.208"></status>
</kw>
<msg timestamp="20201112 12:42:12.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.194" endtime="20201112 12:42:12.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.210" endtime="20201112 12:42:12.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.212" endtime="20201112 12:42:12.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.192" endtime="20201112 12:42:12.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.190" endtime="20201112 12:42:12.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.221" endtime="20201112 12:42:12.502"></status>
</kw>
<msg timestamp="20201112 12:42:12.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018217431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018219194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.220" endtime="20201112 12:42:12.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018217431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018219194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.507" endtime="20201112 12:42:12.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.515" endtime="20201112 12:42:12.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.217" endtime="20201112 12:42:12.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.215" endtime="20201112 12:42:12.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.522" level="INFO">${RESULT} = [{'time': 0.018219194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.018230278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.518" endtime="20201112 12:42:12.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.536" level="INFO">${OVERHEAD} = {'time': [0.018219194, 0.018230278, 0.018241319, 0.018248403, 0.018252819, 0.018257917, 0.018267292, 0.018277667, 0.018287042, 0.01829125, 0.018299014, 0.018304181, 0.018310694, 0.018319417, 0.0183268...</msg>
<status status="PASS" starttime="20201112 12:42:12.523" endtime="20201112 12:42:12.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.541" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.540" endtime="20201112 12:42:12.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.543" level="INFO">VALUE: [1.7630000000018464e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.762999999998377e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7630000000018464e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.8049999999970867e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.694000000000001e-06, 1.76400000000132e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.542" endtime="20201112 12:42:12.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.537" endtime="20201112 12:42:12.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.547" endtime="20201112 12:42:12.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.551" endtime="20201112 12:42:12.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.549" endtime="20201112 12:42:12.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.545" endtime="20201112 12:42:12.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.189" endtime="20201112 12:42:12.572"></status>
</kw>
<msg timestamp="20201112 12:42:12.572" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.580" endtime="20201112 12:42:12.591"></status>
</kw>
<msg timestamp="20201112 12:42:12.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.578" endtime="20201112 12:42:12.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.593" endtime="20201112 12:42:12.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.595" endtime="20201112 12:42:12.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.576" endtime="20201112 12:42:12.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.574" endtime="20201112 12:42:12.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.605" endtime="20201112 12:42:12.888"></status>
</kw>
<msg timestamp="20201112 12:42:12.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018042681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018044444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.603" endtime="20201112 12:42:12.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018042681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018044444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.892" endtime="20201112 12:42:12.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.901" endtime="20201112 12:42:12.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.601" endtime="20201112 12:42:12.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.599" endtime="20201112 12:42:12.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.908" level="INFO">${RESULT} = [{'time': 0.018044444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018048389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.904" endtime="20201112 12:42:12.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.921" level="INFO">${OVERHEAD} = {'time': [0.018044444, 0.018048389, 0.018052361, 0.018061083, 0.018068375, 0.018077208, 0.018082042, 0.018092208, 0.018099667, 0.018109764, 0.018119361, 0.018126903, 0.018135389, 0.018140014, 0.018151...</msg>
<status status="PASS" starttime="20201112 12:42:12.909" endtime="20201112 12:42:12.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.924" endtime="20201112 12:42:12.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.928" level="INFO">VALUE: [1.762999999998377e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.819000000000126e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7220000000026103e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7639999999978506e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.927" endtime="20201112 12:42:12.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.922" endtime="20201112 12:42:12.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.932" endtime="20201112 12:42:12.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.936" endtime="20201112 12:42:12.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.934" endtime="20201112 12:42:12.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.930" endtime="20201112 12:42:12.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.573" endtime="20201112 12:42:12.957"></status>
</kw>
<msg timestamp="20201112 12:42:12.957" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.965" endtime="20201112 12:42:12.976"></status>
</kw>
<msg timestamp="20201112 12:42:12.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.963" endtime="20201112 12:42:12.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.977" endtime="20201112 12:42:12.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.980" endtime="20201112 12:42:12.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.961" endtime="20201112 12:42:12.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.959" endtime="20201112 12:42:12.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.989" endtime="20201112 12:42:13.271"></status>
</kw>
<msg timestamp="20201112 12:42:13.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.987" endtime="20201112 12:42:13.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.275" endtime="20201112 12:42:13.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.283" endtime="20201112 12:42:13.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.985" endtime="20201112 12:42:13.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.983" endtime="20201112 12:42:13.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.290" level="INFO">${RESULT} = [{'time': 0.018111028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018117514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:13.287" endtime="20201112 12:42:13.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:13.304" level="INFO">${OVERHEAD} = {'time': [0.018111028, 0.018117514, 0.018128556, 0.018138222, 0.018149458, 0.018160306, 0.018166653, 0.018170667, 0.018180778, 0.018190931, 0.018199819, 0.018211167, 0.018220069, 0.018227375, 0.018232...</msg>
<status status="PASS" starttime="20201112 12:42:13.291" endtime="20201112 12:42:13.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.308" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:13.307" endtime="20201112 12:42:13.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.311" level="INFO">VALUE: [1.76400000000132e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.7499999999982807e-06, 1.7910000000009862e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7630000000018464e-06, 1.7779999999974205e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.309" endtime="20201112 12:42:13.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.305" endtime="20201112 12:42:13.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.314" endtime="20201112 12:42:13.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.319" endtime="20201112 12:42:13.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.316" endtime="20201112 12:42:13.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.313" endtime="20201112 12:42:13.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.958" endtime="20201112 12:42:13.340"></status>
</kw>
<msg timestamp="20201112 12:42:13.340" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.348" endtime="20201112 12:42:13.361"></status>
</kw>
<msg timestamp="20201112 12:42:13.361" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.346" endtime="20201112 12:42:13.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.364" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.362" endtime="20201112 12:42:13.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.365" endtime="20201112 12:42:13.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.343" endtime="20201112 12:42:13.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.342" endtime="20201112 12:42:13.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.374" endtime="20201112 12:42:13.657"></status>
</kw>
<msg timestamp="20201112 12:42:13.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018977056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.372" endtime="20201112 12:42:13.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018977056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.662" endtime="20201112 12:42:13.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.670" endtime="20201112 12:42:13.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.370" endtime="20201112 12:42:13.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.368" endtime="20201112 12:42:13.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.677" level="INFO">${RESULT} = [{'time': 0.018978833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018988722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:13.674" endtime="20201112 12:42:13.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:13.690" level="INFO">${OVERHEAD} = {'time': [0.018978833, 0.018988722, 0.018999125, 0.019006875, 0.019012222, 0.019019972, 0.019028944, 0.019040056, 0.019048042, 0.019057667, 0.019065847, 0.019074986, 0.019085375, 0.019092444, 0.019096...</msg>
<status status="PASS" starttime="20201112 12:42:13.678" endtime="20201112 12:42:13.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.695" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:13.694" endtime="20201112 12:42:13.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.697" level="INFO">VALUE: [1.7770000000014163e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7639999999978506e-06, 1.6660000000008612e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.819000000000126e-06, 1.762999999998377e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7909999999975168e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.696" endtime="20201112 12:42:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.691" endtime="20201112 12:42:13.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.701" endtime="20201112 12:42:13.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.705" endtime="20201112 12:42:13.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.703" endtime="20201112 12:42:13.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.699" endtime="20201112 12:42:13.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.340" endtime="20201112 12:42:13.727"></status>
</kw>
<msg timestamp="20201112 12:42:13.727" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.736" endtime="20201112 12:42:13.748"></status>
</kw>
<msg timestamp="20201112 12:42:13.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.735" endtime="20201112 12:42:13.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.750" endtime="20201112 12:42:13.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.753" endtime="20201112 12:42:13.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.732" endtime="20201112 12:42:13.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.729" endtime="20201112 12:42:13.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.763" endtime="20201112 12:42:14.052"></status>
</kw>
<msg timestamp="20201112 12:42:14.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.761" endtime="20201112 12:42:14.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.057" endtime="20201112 12:42:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.065" endtime="20201112 12:42:14.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.758" endtime="20201112 12:42:14.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.756" endtime="20201112 12:42:14.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.072" level="INFO">${RESULT} = [{'time': 0.020321444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.020325569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.069" endtime="20201112 12:42:14.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.087" level="INFO">${OVERHEAD} = {'time': [0.020321444, 0.020325569, 0.020336847, 0.020345333, 0.020349944, 0.020356333, 0.020366611, 0.020372014, 0.020376708, 0.020387486, 0.020398667, 0.020406778, 0.020414958, 0.020419403, 0.020423...</msg>
<status status="PASS" starttime="20201112 12:42:14.073" endtime="20201112 12:42:14.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.091" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:14.090" endtime="20201112 12:42:14.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.093" level="INFO">VALUE: [1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.8339999999991696e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7229999999986145e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7770000000014163e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7769999999979469e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.092" endtime="20201112 12:42:14.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.088" endtime="20201112 12:42:14.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.097" endtime="20201112 12:42:14.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.102" endtime="20201112 12:42:14.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.099" endtime="20201112 12:42:14.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.095" endtime="20201112 12:42:14.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.727" endtime="20201112 12:42:14.123"></status>
</kw>
<msg timestamp="20201112 12:42:14.123" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.130" endtime="20201112 12:42:14.142"></status>
</kw>
<msg timestamp="20201112 12:42:14.142" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.129" endtime="20201112 12:42:14.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.143" endtime="20201112 12:42:14.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.146" endtime="20201112 12:42:14.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.126" endtime="20201112 12:42:14.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.125" endtime="20201112 12:42:14.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.155" endtime="20201112 12:42:14.437"></status>
</kw>
<msg timestamp="20201112 12:42:14.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018128972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018130708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.154" endtime="20201112 12:42:14.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018128972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018130708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.441" endtime="20201112 12:42:14.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.450" endtime="20201112 12:42:14.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.151" endtime="20201112 12:42:14.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.149" endtime="20201112 12:42:14.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.457" level="INFO">${RESULT} = [{'time': 0.018130708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018135153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.453" endtime="20201112 12:42:14.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.470" level="INFO">${OVERHEAD} = {'time': [0.018130708, 0.018135153, 0.018142931, 0.018152292, 0.018163597, 0.018171819, 0.018179764, 0.018185167, 0.018192625, 0.018197972, 0.018203819, 0.018209917, 0.018214694, 0.018224542, 0.018228...</msg>
<status status="PASS" starttime="20201112 12:42:14.458" endtime="20201112 12:42:14.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.474" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:14.473" endtime="20201112 12:42:14.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.477" level="INFO">VALUE: [1.7359999999987108e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.76400000000132e-06, 1.7370000000016539e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.476" endtime="20201112 12:42:14.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.471" endtime="20201112 12:42:14.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.481" endtime="20201112 12:42:14.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.485" endtime="20201112 12:42:14.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.483" endtime="20201112 12:42:14.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.479" endtime="20201112 12:42:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.123" endtime="20201112 12:42:14.506"></status>
</kw>
<msg timestamp="20201112 12:42:14.506" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.514" endtime="20201112 12:42:14.527"></status>
</kw>
<msg timestamp="20201112 12:42:14.527" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.512" endtime="20201112 12:42:14.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.528" endtime="20201112 12:42:14.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.531" endtime="20201112 12:42:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.510" endtime="20201112 12:42:14.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.508" endtime="20201112 12:42:14.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.540" endtime="20201112 12:42:14.825"></status>
</kw>
<msg timestamp="20201112 12:42:14.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018013056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01801475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:14.538" endtime="20201112 12:42:14.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018013056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01801475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:14.830" endtime="20201112 12:42:14.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.838" endtime="20201112 12:42:14.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.536" endtime="20201112 12:42:14.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.534" endtime="20201112 12:42:14.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.845" level="INFO">${RESULT} = [{'time': 0.01801475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018020778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:14.842" endtime="20201112 12:42:14.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.859" level="INFO">${OVERHEAD} = {'time': [0.01801475, 0.018020778, 0.018027542, 0.018034278, 0.018040792, 0.018045708, 0.018053486, 0.018061194, 0.018068889, 0.018076139, 0.018084611, 0.0180935, 0.018097639, 0.018102736, 0.018110903...</msg>
<status status="PASS" starttime="20201112 12:42:14.846" endtime="20201112 12:42:14.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.863" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:14.862" endtime="20201112 12:42:14.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.866" level="INFO">VALUE: [1.694000000000001e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.7370000000016539e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7910000000009862e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.864" endtime="20201112 12:42:14.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.860" endtime="20201112 12:42:14.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.869" endtime="20201112 12:42:14.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.873" endtime="20201112 12:42:14.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.871" endtime="20201112 12:42:14.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.868" endtime="20201112 12:42:14.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.507" endtime="20201112 12:42:14.894"></status>
</kw>
<msg timestamp="20201112 12:42:14.894" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.902" endtime="20201112 12:42:14.914"></status>
</kw>
<msg timestamp="20201112 12:42:14.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.901" endtime="20201112 12:42:14.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.916" endtime="20201112 12:42:14.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.918" endtime="20201112 12:42:14.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.898" endtime="20201112 12:42:14.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.896" endtime="20201112 12:42:14.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.927" endtime="20201112 12:42:15.207"></status>
</kw>
<msg timestamp="20201112 12:42:15.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.926" endtime="20201112 12:42:15.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.212" endtime="20201112 12:42:15.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.220" endtime="20201112 12:42:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.923" endtime="20201112 12:42:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.921" endtime="20201112 12:42:15.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.227" level="INFO">${RESULT} = [{'time': 0.018231736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018236556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:15.224" endtime="20201112 12:42:15.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:15.240" level="INFO">${OVERHEAD} = {'time': [0.018231736, 0.018236556, 0.018245056, 0.018252514, 0.018257597, 0.018267917, 0.018277528, 0.018282917, 0.018287542, 0.018295778, 0.018306181, 0.018314833, 0.018324292, 0.018333639, 0.018343...</msg>
<status status="PASS" starttime="20201112 12:42:15.228" endtime="20201112 12:42:15.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:15.244" endtime="20201112 12:42:15.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.247" level="INFO">VALUE: [1.7219999999991409e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7630000000018464e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1.8060000000000298e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7500000000017502e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.246" endtime="20201112 12:42:15.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.241" endtime="20201112 12:42:15.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.251" endtime="20201112 12:42:15.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.255" endtime="20201112 12:42:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.253" endtime="20201112 12:42:15.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.249" endtime="20201112 12:42:15.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.895" endtime="20201112 12:42:15.276"></status>
</kw>
<msg timestamp="20201112 12:42:15.277" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.284" endtime="20201112 12:42:15.297"></status>
</kw>
<msg timestamp="20201112 12:42:15.298" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.283" endtime="20201112 12:42:15.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.299" endtime="20201112 12:42:15.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.301" endtime="20201112 12:42:15.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.280" endtime="20201112 12:42:15.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.278" endtime="20201112 12:42:15.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.311" endtime="20201112 12:42:15.595"></status>
</kw>
<msg timestamp="20201112 12:42:15.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018002639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.309" endtime="20201112 12:42:15.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018002639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.599" endtime="20201112 12:42:15.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.608" endtime="20201112 12:42:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.307" endtime="20201112 12:42:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.305" endtime="20201112 12:42:15.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.615" level="INFO">${RESULT} = [{'time': 0.018002639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018009139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:15.611" endtime="20201112 12:42:15.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:15.630" level="INFO">${OVERHEAD} = {'time': [0.018002639, 0.018009139, 0.018019764, 0.018030097, 0.018037889, 0.018041847, 0.018049042, 0.018057931, 0.018067083, 0.018076986, 0.018081681, 0.018091111, 0.018100472, 0.018111514, 0.018119...</msg>
<status status="PASS" starttime="20201112 12:42:15.616" endtime="20201112 12:42:15.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.634" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:15.633" endtime="20201112 12:42:15.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.636" level="INFO">VALUE: [1.76400000000132e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.7639999999978506e-06, 1.7920000000004599e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.635" endtime="20201112 12:42:15.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.631" endtime="20201112 12:42:15.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.640" endtime="20201112 12:42:15.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.644" endtime="20201112 12:42:15.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.642" endtime="20201112 12:42:15.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.638" endtime="20201112 12:42:15.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.277" endtime="20201112 12:42:15.665"></status>
</kw>
<msg timestamp="20201112 12:42:15.666" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.674" endtime="20201112 12:42:15.687"></status>
</kw>
<msg timestamp="20201112 12:42:15.687" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.672" endtime="20201112 12:42:15.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.689" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.688" endtime="20201112 12:42:15.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.691" endtime="20201112 12:42:15.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.670" endtime="20201112 12:42:15.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.668" endtime="20201112 12:42:15.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.700" endtime="20201112 12:42:15.990"></status>
</kw>
<msg timestamp="20201112 12:42:15.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.698" endtime="20201112 12:42:15.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.994" endtime="20201112 12:42:16.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.002" endtime="20201112 12:42:16.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.696" endtime="20201112 12:42:16.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.694" endtime="20201112 12:42:16.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.009" level="INFO">${RESULT} = [{'time': 0.018646958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018656333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:16.006" endtime="20201112 12:42:16.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.023" level="INFO">${OVERHEAD} = {'time': [0.018646958, 0.018656333, 0.018665236, 0.018672222, 0.018682056, 0.018686972, 0.018697375, 0.018704611, 0.018714278, 0.018719736, 0.018730069, 0.018735403, 0.018745097, 0.018751653, 0.018760...</msg>
<status status="PASS" starttime="20201112 12:42:16.010" endtime="20201112 12:42:16.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.027" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:16.026" endtime="20201112 12:42:16.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.030" level="INFO">VALUE: [1.7500000000017502e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7770000000014163e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.6799999999969617e-06, 1.7630000000018464e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.8200000000030692e-06, 1.762999999998377e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.694000000000001e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.028" endtime="20201112 12:42:16.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.024" endtime="20201112 12:42:16.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.033" endtime="20201112 12:42:16.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.038" endtime="20201112 12:42:16.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.035" endtime="20201112 12:42:16.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.032" endtime="20201112 12:42:16.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.666" endtime="20201112 12:42:16.058"></status>
</kw>
<msg timestamp="20201112 12:42:16.059" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.066" endtime="20201112 12:42:16.079"></status>
</kw>
<msg timestamp="20201112 12:42:16.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.065" endtime="20201112 12:42:16.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.082" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.081" endtime="20201112 12:42:16.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.084" endtime="20201112 12:42:16.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.062" endtime="20201112 12:42:16.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.061" endtime="20201112 12:42:16.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.093" endtime="20201112 12:42:16.376"></status>
</kw>
<msg timestamp="20201112 12:42:16.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018053056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.091" endtime="20201112 12:42:16.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018053056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.381" endtime="20201112 12:42:16.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.389" endtime="20201112 12:42:16.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.089" endtime="20201112 12:42:16.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.087" endtime="20201112 12:42:16.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.396" level="INFO">${RESULT} = [{'time': 0.018054875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018059903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.392" endtime="20201112 12:42:16.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.410" level="INFO">${OVERHEAD} = {'time': [0.018054875, 0.018059903, 0.018066875, 0.018074653, 0.01807925, 0.018083389, 0.018091583, 0.018099583, 0.018110375, 0.018115236, 0.018123708, 0.018132375, 0.018142778, 0.018154056, 0.0181617...</msg>
<status status="PASS" starttime="20201112 12:42:16.397" endtime="20201112 12:42:16.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.414" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:16.413" endtime="20201112 12:42:16.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.416" level="INFO">VALUE: [1.819000000000126e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7779999999974205e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.6949999999994747e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.762999999998377e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6800000000004311e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.415" endtime="20201112 12:42:16.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.411" endtime="20201112 12:42:16.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.420" endtime="20201112 12:42:16.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.424" endtime="20201112 12:42:16.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.422" endtime="20201112 12:42:16.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.418" endtime="20201112 12:42:16.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.059" endtime="20201112 12:42:16.445"></status>
</kw>
<msg timestamp="20201112 12:42:16.445" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.453" endtime="20201112 12:42:16.465"></status>
</kw>
<msg timestamp="20201112 12:42:16.465" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.451" endtime="20201112 12:42:16.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.466" endtime="20201112 12:42:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.469" endtime="20201112 12:42:16.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.449" endtime="20201112 12:42:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.447" endtime="20201112 12:42:16.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.478" endtime="20201112 12:42:16.764"></status>
</kw>
<msg timestamp="20201112 12:42:16.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018010194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018011931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.476" endtime="20201112 12:42:16.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018010194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018011931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.768" endtime="20201112 12:42:16.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.777" endtime="20201112 12:42:16.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.474" endtime="20201112 12:42:16.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.472" endtime="20201112 12:42:16.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.783" level="INFO">${RESULT} = [{'time': 0.018011931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.018015903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:16.780" endtime="20201112 12:42:16.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.797" level="INFO">${OVERHEAD} = {'time': [0.018011931, 0.018015903, 0.018021528, 0.018031847, 0.018042417, 0.018049875, 0.018057208, 0.018061375, 0.018068208, 0.018073361, 0.018078444, 0.018087444, 0.01809725, 0.018107097, 0.0181113...</msg>
<status status="PASS" starttime="20201112 12:42:16.784" endtime="20201112 12:42:16.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:16.800" endtime="20201112 12:42:16.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.804" level="INFO">VALUE: [1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7630000000018464e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7770000000014163e-06, 1.7499999999982807e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.802" endtime="20201112 12:42:16.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.798" endtime="20201112 12:42:16.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.807" endtime="20201112 12:42:16.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.812" endtime="20201112 12:42:16.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.809" endtime="20201112 12:42:16.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.806" endtime="20201112 12:42:16.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.446" endtime="20201112 12:42:16.833"></status>
</kw>
<msg timestamp="20201112 12:42:16.833" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.841" endtime="20201112 12:42:16.853"></status>
</kw>
<msg timestamp="20201112 12:42:16.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.839" endtime="20201112 12:42:16.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.855" endtime="20201112 12:42:16.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.858" endtime="20201112 12:42:16.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.836" endtime="20201112 12:42:16.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.835" endtime="20201112 12:42:16.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.867" endtime="20201112 12:42:17.148"></status>
</kw>
<msg timestamp="20201112 12:42:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01818625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:16.865" endtime="20201112 12:42:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01818625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:17.152" endtime="20201112 12:42:17.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.161" endtime="20201112 12:42:17.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.863" endtime="20201112 12:42:17.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.861" endtime="20201112 12:42:17.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.168" level="INFO">${RESULT} = [{'time': 0.01818625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018195681, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:17.164" endtime="20201112 12:42:17.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.182" level="INFO">${OVERHEAD} = {'time': [0.01818625, 0.018195681, 0.018201319, 0.018209097, 0.01821925, 0.018225278, 0.018234653, 0.018241708, 0.018252833, 0.018262972, 0.018272347, 0.018277917, 0.018287528, 0.018297208, 0.01830705...</msg>
<status status="PASS" starttime="20201112 12:42:17.169" endtime="20201112 12:42:17.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.187" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:17.186" endtime="20201112 12:42:17.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.189" level="INFO">VALUE: [1.7500000000017502e-06, 1.7369999999981844e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7220000000026103e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:17.188" endtime="20201112 12:42:17.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.183" endtime="20201112 12:42:17.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.197" endtime="20201112 12:42:17.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.201" endtime="20201112 12:42:17.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.199" endtime="20201112 12:42:17.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.195" endtime="20201112 12:42:17.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.833" endtime="20201112 12:42:17.222"></status>
</kw>
<msg timestamp="20201112 12:42:17.223" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.230" endtime="20201112 12:42:17.244"></status>
</kw>
<msg timestamp="20201112 12:42:17.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.229" endtime="20201112 12:42:17.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.245" endtime="20201112 12:42:17.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.248" endtime="20201112 12:42:17.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.226" endtime="20201112 12:42:17.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.224" endtime="20201112 12:42:17.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.257" endtime="20201112 12:42:17.540"></status>
</kw>
<msg timestamp="20201112 12:42:17.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019005069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019006806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.255" endtime="20201112 12:42:17.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019005069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019006806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.544" endtime="20201112 12:42:17.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.552" endtime="20201112 12:42:17.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.253" endtime="20201112 12:42:17.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.251" endtime="20201112 12:42:17.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.559" level="INFO">${RESULT} = [{'time': 0.019006806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.019013806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:17.556" endtime="20201112 12:42:17.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.573" level="INFO">${OVERHEAD} = {'time': [0.019006806, 0.019013806, 0.019022278, 0.019026903, 0.019031014, 0.019038319, 0.019048944, 0.019059097, 0.019066889, 0.019071014, 0.019076639, 0.019082194, 0.019091806, 0.019097375, 0.019101...</msg>
<status status="PASS" starttime="20201112 12:42:17.560" endtime="20201112 12:42:17.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.577" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:17.576" endtime="20201112 12:42:17.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.580" level="INFO">VALUE: [1.7370000000016539e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.7220000000026103e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:42:17.578" endtime="20201112 12:42:17.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.574" endtime="20201112 12:42:17.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.583" endtime="20201112 12:42:17.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.588" endtime="20201112 12:42:17.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.585" endtime="20201112 12:42:17.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.582" endtime="20201112 12:42:17.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.223" endtime="20201112 12:42:17.609"></status>
</kw>
<msg timestamp="20201112 12:42:17.609" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.617" endtime="20201112 12:42:17.628"></status>
</kw>
<msg timestamp="20201112 12:42:17.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.615" endtime="20201112 12:42:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.629" endtime="20201112 12:42:17.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.632" endtime="20201112 12:42:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.612" endtime="20201112 12:42:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.611" endtime="20201112 12:42:17.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.641" endtime="20201112 12:42:17.922"></status>
</kw>
<msg timestamp="20201112 12:42:17.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018205694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.640" endtime="20201112 12:42:17.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018205694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.926" endtime="20201112 12:42:17.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.934" endtime="20201112 12:42:17.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.637" endtime="20201112 12:42:17.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.635" endtime="20201112 12:42:17.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.941" level="INFO">${RESULT} = [{'time': 0.018207431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.018212514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:17.938" endtime="20201112 12:42:17.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.955" level="INFO">${OVERHEAD} = {'time': [0.018207431, 0.018212514, 0.018217861, 0.018222458, 0.018232056, 0.018241903, 0.018250556, 0.018258569, 0.018265625, 0.0182765, 0.018286181, 0.018295861, 0.018302444, 0.018311583, 0.01831720...</msg>
<status status="PASS" starttime="20201112 12:42:17.942" endtime="20201112 12:42:17.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.959" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:17.958" endtime="20201112 12:42:17.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.962" level="INFO">VALUE: [1.7369999999981844e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.6660000000008612e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.8049999999970867e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7369999999981844e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201112 12:42:17.960" endtime="20201112 12:42:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.956" endtime="20201112 12:42:17.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.965" endtime="20201112 12:42:17.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.970" endtime="20201112 12:42:17.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.967" endtime="20201112 12:42:17.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.964" endtime="20201112 12:42:17.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.609" endtime="20201112 12:42:17.991"></status>
</kw>
<msg timestamp="20201112 12:42:17.991" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.999" endtime="20201112 12:42:18.010"></status>
</kw>
<msg timestamp="20201112 12:42:18.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.997" endtime="20201112 12:42:18.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.012" endtime="20201112 12:42:18.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.014" endtime="20201112 12:42:18.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.994" endtime="20201112 12:42:18.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.993" endtime="20201112 12:42:18.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.024" endtime="20201112 12:42:18.305"></status>
</kw>
<msg timestamp="20201112 12:42:18.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.022" endtime="20201112 12:42:18.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018228806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.309" endtime="20201112 12:42:18.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.318" endtime="20201112 12:42:18.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.020" endtime="20201112 12:42:18.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.018" endtime="20201112 12:42:18.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.325" level="INFO">${RESULT} = [{'time': 0.018228806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018235653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.321" endtime="20201112 12:42:18.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:18.338" level="INFO">${OVERHEAD} = {'time': [0.018228806, 0.018235653, 0.018244111, 0.018254444, 0.018260542, 0.018271417, 0.018280069, 0.018290153, 0.018295069, 0.018306431, 0.018311347, 0.018320944, 0.018327528, 0.018338403, 0.018343...</msg>
<status status="PASS" starttime="20201112 12:42:18.326" endtime="20201112 12:42:18.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.343" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:18.341" endtime="20201112 12:42:18.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.345" level="INFO">VALUE: [1.7500000000017502e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7920000000004599e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7089999999990446e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.344" endtime="20201112 12:42:18.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.339" endtime="20201112 12:42:18.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.349" endtime="20201112 12:42:18.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.353" endtime="20201112 12:42:18.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.351" endtime="20201112 12:42:18.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.347" endtime="20201112 12:42:18.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.991" endtime="20201112 12:42:18.374"></status>
</kw>
<msg timestamp="20201112 12:42:18.374" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.382" endtime="20201112 12:42:18.394"></status>
</kw>
<msg timestamp="20201112 12:42:18.395" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.380" endtime="20201112 12:42:18.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.397" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.396" endtime="20201112 12:42:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.398" endtime="20201112 12:42:18.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.378" endtime="20201112 12:42:18.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.376" endtime="20201112 12:42:18.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.407" endtime="20201112 12:42:18.696"></status>
</kw>
<msg timestamp="20201112 12:42:18.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.406" endtime="20201112 12:42:18.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.701" endtime="20201112 12:42:18.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.710" endtime="20201112 12:42:18.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.403" endtime="20201112 12:42:18.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.401" endtime="20201112 12:42:18.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.717" level="INFO">${RESULT} = [{'time': 0.018629889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018637194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.713" endtime="20201112 12:42:18.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:18.732" level="INFO">${OVERHEAD} = {'time': [0.018629889, 0.018637194, 0.018642306, 0.0186495, 0.018658236, 0.018664972, 0.018676319, 0.018687125, 0.018695375, 0.018701722, 0.018707528, 0.01871475, 0.018722208, 0.018731181, 0.018736569...</msg>
<status status="PASS" starttime="20201112 12:42:18.718" endtime="20201112 12:42:18.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.736" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:18.735" endtime="20201112 12:42:18.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.739" level="INFO">VALUE: [1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7080000000030404e-06, 1.7630000000018464e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.6670000000003349e-06, 1.7639999999978506e-06, 1.7909999999975168e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.737" endtime="20201112 12:42:18.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.732" endtime="20201112 12:42:18.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.742" endtime="20201112 12:42:18.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.746" endtime="20201112 12:42:18.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.744" endtime="20201112 12:42:18.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.740" endtime="20201112 12:42:18.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.375" endtime="20201112 12:42:18.767"></status>
</kw>
<msg timestamp="20201112 12:42:18.768" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.775" endtime="20201112 12:42:18.787"></status>
</kw>
<msg timestamp="20201112 12:42:18.788" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.774" endtime="20201112 12:42:18.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.789" endtime="20201112 12:42:18.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.791" endtime="20201112 12:42:18.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.771" endtime="20201112 12:42:18.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.769" endtime="20201112 12:42:18.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.800" endtime="20201112 12:42:19.089"></status>
</kw>
<msg timestamp="20201112 12:42:19.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018530639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.799" endtime="20201112 12:42:19.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018530639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.093" endtime="20201112 12:42:19.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.102" endtime="20201112 12:42:19.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.796" endtime="20201112 12:42:19.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.795" endtime="20201112 12:42:19.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.109" level="INFO">${RESULT} = [{'time': 0.018530639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018538889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:19.105" endtime="20201112 12:42:19.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:19.122" level="INFO">${OVERHEAD} = {'time': [0.018530639, 0.018538889, 0.01854475, 0.018550389, 0.018560056, 0.018567597, 0.018578222, 0.018583319, 0.018588389, 0.018594917, 0.018600778, 0.018605389, 0.018616653, 0.018627056, 0.0186326...</msg>
<status status="PASS" starttime="20201112 12:42:19.110" endtime="20201112 12:42:19.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:19.126" endtime="20201112 12:42:19.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.129" level="INFO">VALUE: [1.76400000000132e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7630000000018464e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.8060000000000298e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7499999999982807e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201112 12:42:19.128" endtime="20201112 12:42:19.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.123" endtime="20201112 12:42:19.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.133" endtime="20201112 12:42:19.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.137" endtime="20201112 12:42:19.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.135" endtime="20201112 12:42:19.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.131" endtime="20201112 12:42:19.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.768" endtime="20201112 12:42:19.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.373" endtime="20201112 12:42:19.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.163" endtime="20201112 12:42:19.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.161" endtime="20201112 12:42:19.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.160" endtime="20201112 12:42:19.183"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:08.273" endtime="20201112 12:42:19.184" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.191" endtime="20201112 12:42:19.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.189" endtime="20201112 12:42:19.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.224" endtime="20201112 12:42:22.246"></status>
</kw>
<msg timestamp="20201112 12:42:22.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.223" endtime="20201112 12:42:22.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.249" endtime="20201112 12:42:22.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.259" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:22.255" endtime="20201112 12:42:22.259"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.220" endtime="20201112 12:42:22.261"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.218" endtime="20201112 12:42:22.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.216" endtime="20201112 12:42:22.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:22.270" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:22.269" endtime="20201112 12:42:22.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.264" endtime="20201112 12:42:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.215" endtime="20201112 12:42:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.215" endtime="20201112 12:42:22.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.274" endtime="20201112 12:42:22.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.213" endtime="20201112 12:42:22.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.212" endtime="20201112 12:42:22.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.188" endtime="20201112 12:42:22.280"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.301" endtime="20201112 12:42:22.330"></status>
</kw>
<msg timestamp="20201112 12:42:22.331" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.298" endtime="20201112 12:42:22.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.336" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.333" endtime="20201112 12:42:22.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.338" endtime="20201112 12:42:22.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.292" endtime="20201112 12:42:22.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.285" endtime="20201112 12:42:22.344"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.348" endtime="20201112 12:42:22.352"></status>
</kw>
<msg timestamp="20201112 12:42:22.352" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:22.345" endtime="20201112 12:42:22.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.361" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:22.359" endtime="20201112 12:42:22.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.365" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:22.363" endtime="20201112 12:42:22.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.354" endtime="20201112 12:42:22.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.372" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:22.371" endtime="20201112 12:42:22.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.374" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:22.373" endtime="20201112 12:42:22.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.369" endtime="20201112 12:42:22.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.382" endtime="20201112 12:42:22.678"></status>
</kw>
<msg timestamp="20201112 12:42:22.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106798431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106802722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.380" endtime="20201112 12:42:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106798431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106802722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.683" endtime="20201112 12:42:22.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.691" endtime="20201112 12:42:22.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.378" endtime="20201112 12:42:22.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.376" endtime="20201112 12:42:22.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.698" level="INFO">${RESULT} = [{'time': 3.106802722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.290999999767564e-06, 'source_diff': 4.290999999767564e-06}, {'time': 3.106815875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.694" endtime="20201112 12:42:22.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:22.711" level="INFO">${OVERHEAD} = {'time': [3.106802722, 3.106815875, 3.106826153, 3.106833417, 3.106845681, 3.106859306, 3.106868167, 3.106875667, 3.106889514, 3.106903625, 3.106912472, 3.106926167, 3.106932903, 3.106942931, 3.106952...</msg>
<status status="PASS" starttime="20201112 12:42:22.699" endtime="20201112 12:42:22.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.717" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:22.715" endtime="20201112 12:42:22.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.720" level="INFO">VALUE: [4.290999999767564e-06, 4.389000000326604e-06, 4.375000000056417e-06, 4.36099999978623e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.388999999882515e-06, 4.389000000326604e-06, 4.375000000056417e-06, 4.389000000326604e-06, 4.36099999978623e-06, 4.375000000056417e-06, 4.389000000326604e-06, 4.375000000056417e-06, 4.388999999882515e-06, 4.389000000326604e-06, 4.375000000056417e-06, 4.389000000326604e-06, 4.375000000056417e-06, 4.375000000056417e-06, 4.375000000056417e-06, 4.388999999882515e-06, 4.375000000056417e-06, 4.388999999882515e-06, 4.402999999708612e-06, 4.375000000056417e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.389000000326604e-06, 4.388999999882515e-06, 4.388999999882515e-06, 4.333000000134035e-06, 4.361999999868971e-06, 4.388999999882515e-06, 4.333000000134035e-06, 4.415999999896059e-06, 4.443999999992343e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.36099999978623e-06, 4.374999999612328e-06, 4.389000000326604e-06, 4.389000000326604e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.375000000056417e-06]</msg>
<status status="PASS" starttime="20201112 12:42:22.719" endtime="20201112 12:42:22.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.712" endtime="20201112 12:42:22.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.723" endtime="20201112 12:42:22.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.727" endtime="20201112 12:42:22.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.725" endtime="20201112 12:42:22.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.722" endtime="20201112 12:42:22.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.281" endtime="20201112 12:42:22.748"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:19.185" endtime="20201112 12:42:22.748" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.756" endtime="20201112 12:42:22.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.754" endtime="20201112 12:42:22.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.789" endtime="20201112 12:42:25.811"></status>
</kw>
<msg timestamp="20201112 12:42:25.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.788" endtime="20201112 12:42:25.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.814" endtime="20201112 12:42:25.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.823" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:25.819" endtime="20201112 12:42:25.824"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:22.785" endtime="20201112 12:42:25.826"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:22.782" endtime="20201112 12:42:25.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.781" endtime="20201112 12:42:25.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:25.835" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:25.834" endtime="20201112 12:42:25.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.829" endtime="20201112 12:42:25.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.780" endtime="20201112 12:42:25.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.780" endtime="20201112 12:42:25.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.839" endtime="20201112 12:42:25.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.778" endtime="20201112 12:42:25.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.777" endtime="20201112 12:42:25.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.753" endtime="20201112 12:42:25.845"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.866" endtime="20201112 12:42:25.930"></status>
</kw>
<msg timestamp="20201112 12:42:25.931" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.863" endtime="20201112 12:42:25.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.934" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.932" endtime="20201112 12:42:25.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.935" endtime="20201112 12:42:25.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.857" endtime="20201112 12:42:25.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.850" endtime="20201112 12:42:25.937"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.939" endtime="20201112 12:42:25.941"></status>
</kw>
<msg timestamp="20201112 12:42:25.941" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:25.938" endtime="20201112 12:42:25.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.946" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:25.945" endtime="20201112 12:42:25.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.948" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:25.947" endtime="20201112 12:42:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.942" endtime="20201112 12:42:25.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.952" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:25.951" endtime="20201112 12:42:25.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.955" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:25.954" endtime="20201112 12:42:25.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.949" endtime="20201112 12:42:25.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.962" endtime="20201112 12:42:26.261"></status>
</kw>
<msg timestamp="20201112 12:42:26.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102881111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.960" endtime="20201112 12:42:26.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102881111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.266" endtime="20201112 12:42:26.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.274" endtime="20201112 12:42:26.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.958" endtime="20201112 12:42:26.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.956" endtime="20201112 12:42:26.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.281" level="INFO">${RESULT} = [{'time': 3.102912819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.170800000029672e-05, 'source_diff': 3.170800000029672e-05}, {'time': 3.103796264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.277" endtime="20201112 12:42:26.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:26.294" level="INFO">${OVERHEAD} = {'time': [3.102912819, 3.103796264, 3.104675583, 3.105553028, 3.106434, 3.107317444, 3.108195653, 3.109078792, 3.109963417, 3.110844236, 3.111726194, 3.112606306, 3.11348825, 3.114370986, 3.115250639,...</msg>
<status status="PASS" starttime="20201112 12:42:26.282" endtime="20201112 12:42:26.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.301" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:26.300" endtime="20201112 12:42:26.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.303" level="INFO">VALUE: [3.170800000029672e-05, 3.17640000000452e-05, 3.1735999999948916e-05, 3.17640000000452e-05, 3.17500000002191e-05, 3.1735999999948916e-05, 3.172200000012282e-05, 3.168099999983909e-05, 3.181999999979368e-05, 3.180500000032893e-05, 3.17500000002191e-05, 3.1749999999775014e-05, 3.17500000002191e-05, 3.170799999985263e-05, 3.17640000000452e-05, 3.180599999996758e-05, 3.17500000002191e-05, 3.17640000000452e-05, 3.17500000002191e-05, 3.180500000032893e-05, 3.1737000000031657e-05, 3.1735999999948916e-05, 3.17500000002191e-05, 3.17500000002191e-05, 3.1792000000141485e-05, 3.1737000000031657e-05, 3.1735999999948916e-05, 3.1735999999948916e-05, 3.1749999999775014e-05, 3.1735999999948916e-05, 3.17640000000452e-05, 3.1749999999775014e-05, 3.1749999999775014e-05, 3.17500000002191e-05, 3.166599999993025e-05, 3.1749999999775014e-05, 3.176299999996246e-05, 3.1735999999948916e-05, 3.170799999985263e-05, 3.1749999999775014e-05, 3.1735999999948916e-05, 3.17640000000452e-05, 3.168099999983909e-05, 3.170799999985263e-05, 3.1749999999775014e-05, 3.1749999999775014e-05, 3.1749999999775014e-05, 3.17640000000452e-05, 3.176299999996246e-05, 3.180599999996758e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.302" endtime="20201112 12:42:26.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.296" endtime="20201112 12:42:26.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.307" endtime="20201112 12:42:26.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.310" endtime="20201112 12:42:26.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.309" endtime="20201112 12:42:26.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.305" endtime="20201112 12:42:26.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.846" endtime="20201112 12:42:26.331"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:22.750" endtime="20201112 12:42:26.332" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.339" endtime="20201112 12:42:26.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.338" endtime="20201112 12:42:26.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.372" endtime="20201112 12:42:29.393"></status>
</kw>
<msg timestamp="20201112 12:42:29.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.371" endtime="20201112 12:42:29.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.397" endtime="20201112 12:42:29.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.406" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:29.402" endtime="20201112 12:42:29.407"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:26.368" endtime="20201112 12:42:29.408"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:26.366" endtime="20201112 12:42:29.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.364" endtime="20201112 12:42:29.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:29.418" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:29.416" endtime="20201112 12:42:29.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.412" endtime="20201112 12:42:29.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.364" endtime="20201112 12:42:29.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.363" endtime="20201112 12:42:29.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.421" endtime="20201112 12:42:29.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.362" endtime="20201112 12:42:29.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.360" endtime="20201112 12:42:29.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.336" endtime="20201112 12:42:29.428"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.449" endtime="20201112 12:42:29.633"></status>
</kw>
<msg timestamp="20201112 12:42:29.634" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.446" endtime="20201112 12:42:29.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.637" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.635" endtime="20201112 12:42:29.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.638" endtime="20201112 12:42:29.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.440" endtime="20201112 12:42:29.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.433" endtime="20201112 12:42:29.640"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.642" endtime="20201112 12:42:29.644"></status>
</kw>
<msg timestamp="20201112 12:42:29.644" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:29.641" endtime="20201112 12:42:29.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.649" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:29.648" endtime="20201112 12:42:29.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.651" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:29.650" endtime="20201112 12:42:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.645" endtime="20201112 12:42:29.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.656" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:29.654" endtime="20201112 12:42:29.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.658" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:29.657" endtime="20201112 12:42:29.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.652" endtime="20201112 12:42:29.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.665" endtime="20201112 12:42:29.966"></status>
</kw>
<msg timestamp="20201112 12:42:29.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104770986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.663" endtime="20201112 12:42:29.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104770986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.970" endtime="20201112 12:42:29.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.978" endtime="20201112 12:42:29.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.661" endtime="20201112 12:42:29.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.659" endtime="20201112 12:42:29.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.985" level="INFO">${RESULT} = [{'time': 3.104831847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.086099999969008e-05, 'source_diff': 6.086099999969008e-05}, {'time': 3.108106986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.982" endtime="20201112 12:42:29.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:29.999" level="INFO">${OVERHEAD} = {'time': [3.104831847, 3.108106986, 3.111383319, 3.114659431, 3.117938292, 3.121215806, 3.124494653, 3.127776236, 3.131051472, 3.134332319, 3.13760825, 3.140885319, 3.144161958, 3.147437583, 3.1507124...</msg>
<status status="PASS" starttime="20201112 12:42:29.987" endtime="20201112 12:42:30.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.005" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:30.003" endtime="20201112 12:42:30.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.007" level="INFO">VALUE: [6.086099999969008e-05, 6.0389000000160564e-05, 6.0388000000077824e-05, 6.040299999998666e-05, 6.047300000000533e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.0388999999716475e-05, 6.0388999999716475e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.0388000000077824e-05, 6.0389000000160564e-05, 6.040199999990392e-05, 6.0389000000160564e-05, 6.040299999998666e-05, 6.041699999981276e-05, 6.0332999999967996e-05, 6.040299999998666e-05, 6.0389000000160564e-05, 6.04439999998263e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.037499999989038e-05, 6.040299999998666e-05, 6.0388999999716475e-05, 6.0389000000160564e-05, 6.0389000000160564e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.036100000006428e-05, 6.037499999989038e-05, 6.0388999999716475e-05, 6.044400000027039e-05, 6.0388999999716475e-05, 6.0389000000160564e-05, 6.037499999989038e-05, 6.0389000000160564e-05, 6.0389000000160564e-05, 6.040299999998666e-05, 6.037499999989038e-05, 6.040299999998666e-05, 6.032000000022464e-05, 6.034699999979409e-05, 6.0389000000160564e-05, 6.0389000000160564e-05, 6.040299999998666e-05, 6.0389000000160564e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.006" endtime="20201112 12:42:30.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.000" endtime="20201112 12:42:30.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.010" endtime="20201112 12:42:30.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.014" endtime="20201112 12:42:30.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.012" endtime="20201112 12:42:30.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.009" endtime="20201112 12:42:30.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.429" endtime="20201112 12:42:30.035"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:26.333" endtime="20201112 12:42:30.036" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.043" endtime="20201112 12:42:30.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.042" endtime="20201112 12:42:30.063"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.077" endtime="20201112 12:42:33.098"></status>
</kw>
<msg timestamp="20201112 12:42:33.099" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.075" endtime="20201112 12:42:33.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.104" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.101" endtime="20201112 12:42:33.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:33.106" endtime="20201112 12:42:33.111"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:30.072" endtime="20201112 12:42:33.113"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:30.070" endtime="20201112 12:42:33.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.069" endtime="20201112 12:42:33.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:33.123" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:33.122" endtime="20201112 12:42:33.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.117" endtime="20201112 12:42:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.068" endtime="20201112 12:42:33.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.067" endtime="20201112 12:42:33.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.128" endtime="20201112 12:42:33.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.066" endtime="20201112 12:42:33.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.064" endtime="20201112 12:42:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.040" endtime="20201112 12:42:33.134"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.148" endtime="20201112 12:42:33.168"></status>
</kw>
<msg timestamp="20201112 12:42:33.169" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.146" endtime="20201112 12:42:33.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.171" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.170" endtime="20201112 12:42:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.172" endtime="20201112 12:42:33.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.142" endtime="20201112 12:42:33.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.140" endtime="20201112 12:42:33.175"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.177" endtime="20201112 12:42:33.179"></status>
</kw>
<msg timestamp="20201112 12:42:33.179" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:33.176" endtime="20201112 12:42:33.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.184" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:33.182" endtime="20201112 12:42:33.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.186" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:33.185" endtime="20201112 12:42:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.180" endtime="20201112 12:42:33.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.191" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:33.190" endtime="20201112 12:42:33.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.193" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:33.192" endtime="20201112 12:42:33.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.187" endtime="20201112 12:42:33.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.200" endtime="20201112 12:42:33.497"></status>
</kw>
<msg timestamp="20201112 12:42:33.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096071694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096072639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.198" endtime="20201112 12:42:33.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096071694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096072639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.501" endtime="20201112 12:42:33.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.510" endtime="20201112 12:42:33.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.196" endtime="20201112 12:42:33.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.194" endtime="20201112 12:42:33.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.517" level="INFO">${RESULT} = [{'time': 3.096072639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000299497e-07, 'source_diff': 9.450000000299497e-07}, {'time': 3.09608175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:33.513" endtime="20201112 12:42:33.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:33.531" level="INFO">${OVERHEAD} = {'time': [3.096072639, 3.09608175, 3.096092583, 3.096100819, 3.096112417, 3.096123083, 3.096136083, 3.096147167, 3.096157333, 3.096169639, 3.096180708, 3.096194903, 3.096202236, 3.09621625, 3.096225, ...</msg>
<status status="PASS" starttime="20201112 12:42:33.518" endtime="20201112 12:42:33.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.536" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:33.534" endtime="20201112 12:42:33.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.538" level="INFO">VALUE: [9.450000000299497e-07, 9.030000001075678e-07, 8.88999999837381e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.020000000248274e-07, 9.160000002950142e-07, 8.88999999837381e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.169999999336653e-07, 8.750000000112834e-07, 9.029999996634785e-07, 9.029999996634785e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.030000001075678e-07, 8.88999999837381e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.310000002038521e-07, 9.029999996634785e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.170000003777545e-07, 9.030000001075678e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.030000001075678e-07, 9.160000002950142e-07, 8.890000002814702e-07, 8.88999999837381e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.020000000248274e-07, 9.020000000248274e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.15999999850925e-07, 8.890000002814702e-07, 9.029999996634785e-07, 8.750000000112834e-07, 8.88999999837381e-07]</msg>
<status status="PASS" starttime="20201112 12:42:33.537" endtime="20201112 12:42:33.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.531" endtime="20201112 12:42:33.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.542" endtime="20201112 12:42:33.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.545" endtime="20201112 12:42:33.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.544" endtime="20201112 12:42:33.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.540" endtime="20201112 12:42:33.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.136" endtime="20201112 12:42:33.566"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:30.038" endtime="20201112 12:42:33.567" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.574" endtime="20201112 12:42:33.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.573" endtime="20201112 12:42:33.594"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.609" endtime="20201112 12:42:36.631"></status>
</kw>
<msg timestamp="20201112 12:42:36.632" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.607" endtime="20201112 12:42:36.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.634" endtime="20201112 12:42:36.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.644" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:36.640" endtime="20201112 12:42:36.644"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:33.604" endtime="20201112 12:42:36.646"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:33.601" endtime="20201112 12:42:36.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.600" endtime="20201112 12:42:36.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:36.656" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:36.655" endtime="20201112 12:42:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.650" endtime="20201112 12:42:36.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.599" endtime="20201112 12:42:36.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.598" endtime="20201112 12:42:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.660" endtime="20201112 12:42:36.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.597" endtime="20201112 12:42:36.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.595" endtime="20201112 12:42:36.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.571" endtime="20201112 12:42:36.666"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.687" endtime="20201112 12:42:36.753"></status>
</kw>
<msg timestamp="20201112 12:42:36.753" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.683" endtime="20201112 12:42:36.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.756" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.754" endtime="20201112 12:42:36.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.757" endtime="20201112 12:42:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.675" endtime="20201112 12:42:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.671" endtime="20201112 12:42:36.760"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.762" endtime="20201112 12:42:36.763"></status>
</kw>
<msg timestamp="20201112 12:42:36.764" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:36.760" endtime="20201112 12:42:36.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.768" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:36.767" endtime="20201112 12:42:36.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.770" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:36.769" endtime="20201112 12:42:36.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.765" endtime="20201112 12:42:36.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.775" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:36.774" endtime="20201112 12:42:36.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.777" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:36.776" endtime="20201112 12:42:36.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.772" endtime="20201112 12:42:36.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.784" endtime="20201112 12:42:37.085"></status>
</kw>
<msg timestamp="20201112 12:42:37.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105208958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.783" endtime="20201112 12:42:37.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105208958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.090" endtime="20201112 12:42:37.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.098" endtime="20201112 12:42:37.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.780" endtime="20201112 12:42:37.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.778" endtime="20201112 12:42:37.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.105" level="INFO">${RESULT} = [{'time': 3.105218569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.61099999985393e-06, 'source_diff': 9.61099999985393e-06}, {'time': 3.106106056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:37.102" endtime="20201112 12:42:37.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:37.119" level="INFO">${OVERHEAD} = {'time': [3.105218569, 3.106106056, 3.10699975, 3.107886833, 3.108776236, 3.109668556, 3.110556292, 3.111447194, 3.112336347, 3.113230056, 3.114117542, 3.115011292, 3.115902903, 3.116794917, 3.1176886...</msg>
<status status="PASS" starttime="20201112 12:42:37.106" endtime="20201112 12:42:37.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.125" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:37.122" endtime="20201112 12:42:37.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.128" level="INFO">VALUE: [9.61099999985393e-06, 9.597999999666484e-06, 9.61099999985393e-06, 9.61099999985393e-06, 9.61100000029802e-06, 9.598000000110574e-06, 9.61099999985393e-06, 9.597000000027833e-06, 9.582999999757646e-06, 9.598000000110574e-06, 9.61099999985393e-06, 9.57000000001429e-06, 9.61099999985393e-06, 9.583999999840387e-06, 9.598000000110574e-06, 9.624999999680028e-06, 9.61099999985393e-06, 9.625000000124118e-06, 9.61099999985393e-06, 9.61099999985393e-06, 9.597000000027833e-06, 9.598000000110574e-06, 9.597999999666484e-06, 9.598000000110574e-06, 9.584000000284476e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.61099999985393e-06, 9.583000000201736e-06, 9.624999999680028e-06, 9.61099999985393e-06, 9.528000000091907e-06, 9.61099999985393e-06, 9.61100000029802e-06, 9.597000000027833e-06, 9.625000000124118e-06, 9.61099999985393e-06, 9.540999999835265e-06, 9.61099999985393e-06, 9.624999999680028e-06, 9.555999999744103e-06, 9.61099999985393e-06, 9.583000000201736e-06, 9.598000000110574e-06, 9.61099999985393e-06, 9.61100000029802e-06, 9.61099999985393e-06, 9.597999999666484e-06, 9.597000000027833e-06]</msg>
<status status="PASS" starttime="20201112 12:42:37.126" endtime="20201112 12:42:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.120" endtime="20201112 12:42:37.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.131" endtime="20201112 12:42:37.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.134" endtime="20201112 12:42:37.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.133" endtime="20201112 12:42:37.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.129" endtime="20201112 12:42:37.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.667" endtime="20201112 12:42:37.155"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:33.569" endtime="20201112 12:42:37.156" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.163" endtime="20201112 12:42:37.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.162" endtime="20201112 12:42:37.183"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.197" endtime="20201112 12:42:40.219"></status>
</kw>
<msg timestamp="20201112 12:42:40.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.195" endtime="20201112 12:42:40.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.222" endtime="20201112 12:42:40.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.232" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:40.227" endtime="20201112 12:42:40.232"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.192" endtime="20201112 12:42:40.234"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.190" endtime="20201112 12:42:40.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.189" endtime="20201112 12:42:40.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:40.243" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:40.242" endtime="20201112 12:42:40.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.238" endtime="20201112 12:42:40.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.188" endtime="20201112 12:42:40.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.187" endtime="20201112 12:42:40.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.247" endtime="20201112 12:42:40.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.186" endtime="20201112 12:42:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.184" endtime="20201112 12:42:40.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.160" endtime="20201112 12:42:40.253"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.274" endtime="20201112 12:42:40.463"></status>
</kw>
<msg timestamp="20201112 12:42:40.464" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.271" endtime="20201112 12:42:40.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.466" endtime="20201112 12:42:40.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.471" endtime="20201112 12:42:40.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.263" endtime="20201112 12:42:40.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.258" endtime="20201112 12:42:40.477"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.481" endtime="20201112 12:42:40.484"></status>
</kw>
<msg timestamp="20201112 12:42:40.485" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:40.478" endtime="20201112 12:42:40.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.494" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:40.492" endtime="20201112 12:42:40.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.499" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:40.496" endtime="20201112 12:42:40.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.487" endtime="20201112 12:42:40.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.509" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:40.507" endtime="20201112 12:42:40.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.513" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:40.511" endtime="20201112 12:42:40.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.502" endtime="20201112 12:42:40.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.529" endtime="20201112 12:42:40.835"></status>
</kw>
<msg timestamp="20201112 12:42:40.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.526" endtime="20201112 12:42:40.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.844" endtime="20201112 12:42:40.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.852" endtime="20201112 12:42:40.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.520" endtime="20201112 12:42:40.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.516" endtime="20201112 12:42:40.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.859" level="INFO">${RESULT} = [{'time': 3.106350528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8499999999921357e-05, 'source_diff': 1.8499999999921357e-05}, {'time': 3.109644542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:40.855" endtime="20201112 12:42:40.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:40.873" level="INFO">${OVERHEAD} = {'time': [3.106350528, 3.109644542, 3.11294, 3.116235139, 3.119530333, 3.122823083, 3.126121167, 3.129416069, 3.132709528, 3.136006153, 3.139301861, 3.142595153, 3.145887667, 3.149185972, 3.152484931,...</msg>
<status status="PASS" starttime="20201112 12:42:40.860" endtime="20201112 12:42:40.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.877" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:40.876" endtime="20201112 12:42:40.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.881" level="INFO">VALUE: [1.8499999999921357e-05, 1.8513999999747455e-05, 1.8556000000113926e-05, 1.848600000009526e-05, 1.8541000000205088e-05, 1.85269999999349e-05, 1.854199999984374e-05, 1.8555000000031185e-05, 1.854199999984374e-05, 1.852800000001764e-05, 1.848599999965117e-05, 1.854199999984374e-05, 1.8542000000287828e-05, 1.8514000000191544e-05, 1.854199999984374e-05, 1.852800000001764e-05, 1.8541000000205088e-05, 1.85269999999349e-05, 1.8541000000205088e-05, 1.854199999984374e-05, 1.854199999984374e-05, 1.8596999999953567e-05, 1.848600000009526e-05, 1.858400000021021e-05, 1.85269999999349e-05, 1.8527999999573552e-05, 1.8569999999940023e-05, 1.8472000000269162e-05, 1.852800000001764e-05, 1.852800000001764e-05, 1.8555000000031185e-05, 1.8556000000113926e-05, 1.852800000001764e-05, 1.85269999999349e-05, 1.8555000000031185e-05, 1.8541000000205088e-05, 1.8555000000031185e-05, 1.8499999999921357e-05, 1.8556000000113926e-05, 1.852800000001764e-05, 1.8499999999921357e-05, 1.8513000000108804e-05, 1.8541000000205088e-05, 1.8542000000287828e-05, 1.852800000001764e-05, 1.8542000000287828e-05, 1.8569000000301372e-05, 1.8555000000031185e-05, 1.854199999984374e-05, 1.8542000000287828e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.878" endtime="20201112 12:42:40.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.873" endtime="20201112 12:42:40.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.884" endtime="20201112 12:42:40.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.887" endtime="20201112 12:42:40.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.886" endtime="20201112 12:42:40.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.882" endtime="20201112 12:42:40.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.255" endtime="20201112 12:42:40.908"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:37.158" endtime="20201112 12:42:40.909" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:52.594" endtime="20201112 12:42:40.918"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.988" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:40.996" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:42.143" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:40.986" endtime="20201112 12:42:42.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.150" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:42.147" endtime="20201112 12:42:42.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.985" endtime="20201112 12:42:42.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.156" endtime="20201112 12:42:42.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.153" endtime="20201112 12:42:42.342"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.355" endtime="20201112 12:42:45.377"></status>
</kw>
<msg timestamp="20201112 12:42:45.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.354" endtime="20201112 12:42:45.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.380" endtime="20201112 12:42:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.390" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:45.386" endtime="20201112 12:42:45.390"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:42.351" endtime="20201112 12:42:45.392"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:42.349" endtime="20201112 12:42:45.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.347" endtime="20201112 12:42:45.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:45.402" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:45.400" endtime="20201112 12:42:45.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.396" endtime="20201112 12:42:45.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.346" endtime="20201112 12:42:45.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.346" endtime="20201112 12:42:45.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.408" endtime="20201112 12:42:45.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.344" endtime="20201112 12:42:45.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.414" endtime="20201112 12:42:45.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.343" endtime="20201112 12:42:45.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.984" endtime="20201112 12:42:45.419"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.431" endtime="20201112 12:42:45.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.428" endtime="20201112 12:42:45.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.483" endtime="20201112 12:42:48.506"></status>
</kw>
<msg timestamp="20201112 12:42:48.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.479" endtime="20201112 12:42:48.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.510" endtime="20201112 12:42:48.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.519" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:48.515" endtime="20201112 12:42:48.520"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:45.473" endtime="20201112 12:42:48.521"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:45.468" endtime="20201112 12:42:48.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.465" endtime="20201112 12:42:48.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:48.532" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:48.530" endtime="20201112 12:42:48.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.525" endtime="20201112 12:42:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.463" endtime="20201112 12:42:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.462" endtime="20201112 12:42:48.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.535" endtime="20201112 12:42:48.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.459" endtime="20201112 12:42:48.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.456" endtime="20201112 12:42:48.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.425" endtime="20201112 12:42:48.541"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.564" endtime="20201112 12:42:48.580"></status>
</kw>
<msg timestamp="20201112 12:42:48.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.561" endtime="20201112 12:42:48.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.582" endtime="20201112 12:42:48.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.584" endtime="20201112 12:42:48.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.553" endtime="20201112 12:42:48.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.549" endtime="20201112 12:42:48.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.594" endtime="20201112 12:42:48.903"></status>
</kw>
<msg timestamp="20201112 12:42:48.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124454347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.124457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.593" endtime="20201112 12:42:48.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124454347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.124457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.907" endtime="20201112 12:42:48.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.916" endtime="20201112 12:42:48.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.590" endtime="20201112 12:42:48.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.588" endtime="20201112 12:42:48.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.923" level="INFO">${RESULT} = [{'time': 3.124457625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.277999999884429e-06, 'source_diff': 3.277999999884429e-06}, {'time': 3.124468375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.919" endtime="20201112 12:42:48.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.936" level="INFO">${ACCURACY} = {'time': [3.124457625, 3.124468375, 3.124476431, 3.124484542, 3.124492528, 3.124499375, 3.124511639, 3.124522472, 3.124527514, 3.124540653, 3.124550528, 3.124560542, 3.124572681, 3.1245795, 3.12458770...</msg>
<status status="PASS" starttime="20201112 12:42:48.924" endtime="20201112 12:42:48.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.941" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.940" endtime="20201112 12:42:48.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.943" level="INFO">VALUE: [3.277999999884429e-06, 2.4720000002531606e-06, 2.4870000001619985e-06, 2.4729999998918117e-06, 3.2920000001546157e-06, 2.8750000002908394e-06, 2.8610000000206526e-06, 2.8750000002908394e-06, 2.486000000079258e-06, 3.2220000001359494e-06, 2.87499999984675e-06, 2.459000000065714e-06, 2.9029999999430345e-06, 2.87499999984675e-06, 2.8610000000206526e-06, 2.457999999982974e-06, 3.277999999884429e-06, 2.846999999750466e-06, 2.8610000000206526e-06, 2.443999999712787e-06, 3.277999999884429e-06, 2.8610000000206526e-06, 2.457999999982974e-06, 2.457999999982974e-06, 2.8610000000206526e-06, 2.889000000116937e-06, 2.4729999998918117e-06, 3.278000000328518e-06, 2.889000000116937e-06, 3.2640000000583314e-06, 2.8610000000206526e-06, 2.4440000001568762e-06, 2.8610000000206526e-06, 3.2500000002322338e-06, 2.87499999984675e-06, 2.8750000002908394e-06, 2.4449999997955274e-06, 3.278000000328518e-06, 2.8329999999243682e-06, 2.457999999982974e-06, 2.8610000000206526e-06, 2.4719999998090714e-06, 2.4719999998090714e-06, 2.457999999982974e-06, 2.459000000065714e-06, 3.277999999884429e-06, 2.8610000000206526e-06, 2.4729999998918117e-06, 2.4729999998918117e-06, 2.87499999984675e-06]</msg>
<status status="PASS" starttime="20201112 12:42:48.942" endtime="20201112 12:42:48.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.937" endtime="20201112 12:42:48.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.947" endtime="20201112 12:42:48.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.951" endtime="20201112 12:42:48.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.949" endtime="20201112 12:42:48.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.945" endtime="20201112 12:42:48.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.545" endtime="20201112 12:42:48.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.544" endtime="20201112 12:42:48.972"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.981" endtime="20201112 12:42:48.996"></status>
</kw>
<msg timestamp="20201112 12:42:48.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.979" endtime="20201112 12:42:48.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.997" endtime="20201112 12:42:48.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.000" endtime="20201112 12:42:49.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.976" endtime="20201112 12:42:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.974" endtime="20201112 12:42:49.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.009" endtime="20201112 12:42:49.292"></status>
</kw>
<msg timestamp="20201112 12:42:49.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020856597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:49.007" endtime="20201112 12:42:49.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020856597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:49.296" endtime="20201112 12:42:49.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.305" endtime="20201112 12:42:49.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.005" endtime="20201112 12:42:49.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.003" endtime="20201112 12:42:49.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.311" level="INFO">${RESULT} = [{'time': 0.020856597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.020868639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:49.308" endtime="20201112 12:42:49.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.326" level="INFO">${ACCURACY} = {'time': [0.020856597, 0.020868639, 0.020881708, 0.020888556, 0.020900639, 0.020908722, 0.020914556, 0.020923486, 0.020930597, 0.020939667, 0.020953819, 0.020961653, 0.0209725, 0.020984639, 0.02099745...</msg>
<status status="PASS" starttime="20201112 12:42:49.312" endtime="20201112 12:42:49.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.330" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.329" endtime="20201112 12:42:49.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.333" level="INFO">VALUE: [4.097000000001516e-06, 4.083000000001946e-06, 4.082999999998477e-06, 4.11200000000056e-06, 3.6809999999984355e-06, 4.097000000001516e-06, 3.27800000000239e-06, 3.27800000000239e-06, 4.082999999998477e-06, 4.1249999999971865e-06, 4.471999999998422e-06, 4.08400000000142e-06, 4.069000000002376e-06, 4.096999999998047e-06, 3.665999999999392e-06, 3.6940000000020012e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.068999999998907e-06, 3.695000000001475e-06, 4.082999999998477e-06, 3.6109999999971165e-06, 4.096999999998047e-06, 4.083000000001946e-06, 3.2919999999984906e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.08400000000142e-06, 4.082999999998477e-06, 4.07000000000185e-06, 4.082999999998477e-06, 4.083000000001946e-06, 4.486000000001461e-06, 4.08399999999795e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 4.083000000001946e-06, 3.6669999999988656e-06, 3.6529999999992957e-06, 3.6809999999984355e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.082999999998477e-06, 3.6940000000020012e-06, 4.083000000001946e-06, 3.2919999999984906e-06, 3.681000000001905e-06, 3.695000000001475e-06]</msg>
<status status="PASS" starttime="20201112 12:42:49.331" endtime="20201112 12:42:49.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.327" endtime="20201112 12:42:49.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.337" endtime="20201112 12:42:49.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.340" endtime="20201112 12:42:49.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.338" endtime="20201112 12:42:49.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.335" endtime="20201112 12:42:49.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.972" endtime="20201112 12:42:49.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.972" endtime="20201112 12:42:49.361"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.370" endtime="20201112 12:42:49.385"></status>
</kw>
<msg timestamp="20201112 12:42:49.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.368" endtime="20201112 12:42:49.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.386" endtime="20201112 12:42:49.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.389" endtime="20201112 12:42:49.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.366" endtime="20201112 12:42:49.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.363" endtime="20201112 12:42:49.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.399" endtime="20201112 12:42:49.688"></status>
</kw>
<msg timestamp="20201112 12:42:49.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.398" endtime="20201112 12:42:49.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.692" endtime="20201112 12:42:49.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.701" endtime="20201112 12:42:49.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.395" endtime="20201112 12:42:49.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.393" endtime="20201112 12:42:49.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.708" level="INFO">${RESULT} = [{'time': 0.019972278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.019985139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:49.704" endtime="20201112 12:42:49.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.721" level="INFO">${ACCURACY} = {'time': [0.019972278, 0.019985139, 0.019995347, 0.020006319, 0.020018208, 0.020031194, 0.020040278, 0.020053097, 0.020060042, 0.020075167, 0.020084, 0.020094125, 0.020108056, 0.020119194, 0.020128264...</msg>
<status status="PASS" starttime="20201112 12:42:49.709" endtime="20201112 12:42:49.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.726" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.725" endtime="20201112 12:42:49.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.728" level="INFO">VALUE: [4.485999999997992e-06, 5.292000000000491e-06, 4.554999999999837e-06, 4.902000000001072e-06, 4.8749999999979365e-06, 4.541000000000267e-06, 4.486000000001461e-06, 4.541000000000267e-06, 4.528000000000171e-06, 5.292000000000491e-06, 4.917000000000116e-06, 4.486000000001461e-06, 4.9449999999992555e-06, 5.235999999998742e-06, 4.903000000000546e-06, 4.4999999999975615e-06, 5.306000000000061e-06, 5.292000000000491e-06, 4.958000000002821e-06, 5.290999999997548e-06, 4.889000000000976e-06, 4.486000000001461e-06, 4.903000000000546e-06, 4.8889999999975065e-06, 4.4999999999975615e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.473000000001365e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.305000000000587e-06, 4.889000000000976e-06, 4.485999999997992e-06, 4.528000000000171e-06, 5.304999999997118e-06, 4.8749999999979365e-06, 4.903000000000546e-06, 5.264000000001351e-06, 4.902000000001072e-06, 4.903000000000546e-06, 5.319999999999631e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.861000000001836e-06, 4.4999999999975615e-06, 4.889000000000976e-06, 5.306000000000061e-06, 5.250000000001781e-06]</msg>
<status status="PASS" starttime="20201112 12:42:49.727" endtime="20201112 12:42:49.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.722" endtime="20201112 12:42:49.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.732" endtime="20201112 12:42:49.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.736" endtime="20201112 12:42:49.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.734" endtime="20201112 12:42:49.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.730" endtime="20201112 12:42:49.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.362" endtime="20201112 12:42:49.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.361" endtime="20201112 12:42:49.757"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.765" endtime="20201112 12:42:49.780"></status>
</kw>
<msg timestamp="20201112 12:42:49.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.764" endtime="20201112 12:42:49.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.781" endtime="20201112 12:42:49.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.784" endtime="20201112 12:42:49.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.761" endtime="20201112 12:42:49.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.759" endtime="20201112 12:42:49.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.794" endtime="20201112 12:42:50.078"></status>
</kw>
<msg timestamp="20201112 12:42:50.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.792" endtime="20201112 12:42:50.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.082" endtime="20201112 12:42:50.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.090" endtime="20201112 12:42:50.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.790" endtime="20201112 12:42:50.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.788" endtime="20201112 12:42:50.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.097" level="INFO">${RESULT} = [{'time': 0.020746389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.020758389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.094" endtime="20201112 12:42:50.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.111" level="INFO">${ACCURACY} = {'time': [0.020746389, 0.020758389, 0.020768264, 0.020783264, 0.020793181, 0.020807389, 0.020822486, 0.020834333, 0.020850306, 0.020860167, 0.020872292, 0.020881208, 0.020897264, 0.020910375, 0.020919...</msg>
<status status="PASS" starttime="20201112 12:42:50.098" endtime="20201112 12:42:50.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.115" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.114" endtime="20201112 12:42:50.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.118" level="INFO">VALUE: [5.708000000000102e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.639000000001726e-06, 6.11199999999909e-06, 5.695000000000006e-06, 5.764000000001851e-06, 5.6939999999970625e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 5.306000000000061e-06, 5.721999999999672e-06, 5.291000000001017e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 5.638000000002252e-06, 6.0839999999999506e-06, 5.681000000000436e-06, 5.292000000000491e-06, 6.056000000000811e-06, 5.681000000000436e-06, 6.070000000000381e-06, 5.708000000000102e-06, 6.124999999999187e-06, 5.679999999997493e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 5.292000000000491e-06, 5.681000000000436e-06, 5.709000000003045e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.111000000003086e-06, 5.679999999997493e-06, 6.055000000001337e-06, 5.306000000000061e-06, 5.305000000000587e-06, 6.097000000000047e-06, 5.708000000000102e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.694000000000532e-06, 5.304999999997118e-06, 5.3889999999980065e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.116" endtime="20201112 12:42:50.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.112" endtime="20201112 12:42:50.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.121" endtime="20201112 12:42:50.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.125" endtime="20201112 12:42:50.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.124" endtime="20201112 12:42:50.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.120" endtime="20201112 12:42:50.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.758" endtime="20201112 12:42:50.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.757" endtime="20201112 12:42:50.146"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.155" endtime="20201112 12:42:50.169"></status>
</kw>
<msg timestamp="20201112 12:42:50.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.153" endtime="20201112 12:42:50.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.171" endtime="20201112 12:42:50.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.173" endtime="20201112 12:42:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.151" endtime="20201112 12:42:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.149" endtime="20201112 12:42:50.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.183" endtime="20201112 12:42:50.467"></status>
</kw>
<msg timestamp="20201112 12:42:50.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.182" endtime="20201112 12:42:50.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.472" endtime="20201112 12:42:50.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.480" endtime="20201112 12:42:50.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.179" endtime="20201112 12:42:50.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.177" endtime="20201112 12:42:50.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.487" level="INFO">${RESULT} = [{'time': 0.019768875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.019779764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.484" endtime="20201112 12:42:50.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.500" level="INFO">${ACCURACY} = {'time': [0.019768875, 0.019779764, 0.019791931, 0.019805931, 0.019818681, 0.019834986, 0.019848792, 0.019859014, 0.019868917, 0.019883917, 0.019893972, 0.019908764, 0.019922833, 0.019937958, 0.019950...</msg>
<status status="PASS" starttime="20201112 12:42:50.488" endtime="20201112 12:42:50.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.505" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.504" endtime="20201112 12:42:50.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.508" level="INFO">VALUE: [6.528000000002171e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.917000000002116e-06, 6.9029999999990765e-06, 6.499999999999562e-06, 6.499999999999562e-06, 7.334000000001201e-06, 6.584000000000451e-06, 6.915999999999173e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.915999999999173e-06, 6.917000000002116e-06, 6.527000000002697e-06, 6.5829999999975075e-06, 6.929999999998743e-06, 6.5279999999987015e-06, 7.347000000001297e-06, 7.318999999998688e-06, 7.332999999998258e-06, 6.513999999999132e-06, 6.930999999998216e-06, 6.513999999999132e-06, 6.917000000002116e-06, 6.9169999999986465e-06, 6.500000000003031e-06, 7.320000000001631e-06, 6.472000000000422e-06, 6.929999999998743e-06, 6.9169999999986465e-06, 6.917000000002116e-06, 6.513999999999132e-06, 6.915999999999173e-06, 6.9169999999986465e-06, 7.319000000002157e-06, 7.332999999998258e-06, 6.9169999999986465e-06, 6.9579999999978825e-06, 7.319000000002157e-06, 6.917000000002116e-06, 6.513999999999132e-06, 6.929999999998743e-06, 7.318999999998688e-06, 6.916000000002642e-06, 6.513999999999132e-06, 6.9169999999986465e-06, 6.903000000002546e-06, 6.930000000002212e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.506" endtime="20201112 12:42:50.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.501" endtime="20201112 12:42:50.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.511" endtime="20201112 12:42:50.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.515" endtime="20201112 12:42:50.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.513" endtime="20201112 12:42:50.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.510" endtime="20201112 12:42:50.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.147" endtime="20201112 12:42:50.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.147" endtime="20201112 12:42:50.536"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.544" endtime="20201112 12:42:50.558"></status>
</kw>
<msg timestamp="20201112 12:42:50.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.543" endtime="20201112 12:42:50.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.559" endtime="20201112 12:42:50.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.562" endtime="20201112 12:42:50.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.540" endtime="20201112 12:42:50.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.538" endtime="20201112 12:42:50.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.572" endtime="20201112 12:42:50.860"></status>
</kw>
<msg timestamp="20201112 12:42:50.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.570" endtime="20201112 12:42:50.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.864" endtime="20201112 12:42:50.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.873" endtime="20201112 12:42:50.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.568" endtime="20201112 12:42:50.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.566" endtime="20201112 12:42:50.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.880" level="INFO">${RESULT} = [{'time': 0.020277347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020288486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.877" endtime="20201112 12:42:50.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.894" level="INFO">${ACCURACY} = {'time': [0.020277347, 0.020288486, 0.02030125, 0.020315431, 0.020326431, 0.020341236, 0.020352236, 0.020362361, 0.020373611, 0.020387458, 0.0204025, 0.020413597, 0.020427625, 0.0204435, 0.020459361, ...</msg>
<status status="PASS" starttime="20201112 12:42:50.881" endtime="20201112 12:42:50.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.899" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.898" endtime="20201112 12:42:50.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.902" level="INFO">VALUE: [8.139000000000757e-06, 7.722000000001672e-06, 8.125000000001187e-06, 7.319999999998161e-06, 7.736999999997246e-06, 7.721999999998203e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.736000000001242e-06, 7.693999999999063e-06, 7.722000000001672e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.153000000000327e-06, 8.153000000000327e-06, 8.125000000001187e-06, 7.791000000000048e-06, 7.736000000001242e-06, 7.722000000001672e-06, 8.125000000001187e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.694999999998536e-06, 7.680999999998966e-06, 8.055999999999341e-06, 8.137999999997814e-06, 7.693999999999063e-06, 7.666999999999397e-06, 8.139000000000757e-06, 8.124999999997717e-06, 8.083999999998481e-06, 8.194999999999036e-06, 7.791999999999522e-06, 7.319999999998161e-06, 7.723000000001146e-06, 7.694999999998536e-06, 7.722000000001672e-06, 7.693999999999063e-06, 8.137999999997814e-06, 7.667000000002866e-06, 7.736000000001242e-06, 8.09800000000152e-06, 8.08400000000195e-06, 8.152000000000853e-06, 8.180999999999466e-06, 7.708000000002102e-06, 7.333000000001727e-06, 8.139000000000757e-06, 7.737000000000716e-06, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.900" endtime="20201112 12:42:50.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.895" endtime="20201112 12:42:50.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.905" endtime="20201112 12:42:50.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.909" endtime="20201112 12:42:50.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.907" endtime="20201112 12:42:50.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.903" endtime="20201112 12:42:50.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.537" endtime="20201112 12:42:50.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.536" endtime="20201112 12:42:50.930"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.938" endtime="20201112 12:42:50.953"></status>
</kw>
<msg timestamp="20201112 12:42:50.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.937" endtime="20201112 12:42:50.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.955" endtime="20201112 12:42:50.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.957" endtime="20201112 12:42:50.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.934" endtime="20201112 12:42:50.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.932" endtime="20201112 12:42:50.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.967" endtime="20201112 12:42:51.252"></status>
</kw>
<msg timestamp="20201112 12:42:51.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019680611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.966" endtime="20201112 12:42:51.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019680611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.256" endtime="20201112 12:42:51.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.264" endtime="20201112 12:42:51.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.963" endtime="20201112 12:42:51.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.961" endtime="20201112 12:42:51.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.271" level="INFO">${RESULT} = [{'time': 0.019689556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944999999999786e-06, 'source_diff': 8.944999999999786e-06}, {'time': 0.019708431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.268" endtime="20201112 12:42:51.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.285" level="INFO">${ACCURACY} = {'time': [0.019689556, 0.019708431, 0.019723431, 0.019737486, 0.019754236, 0.0197655, 0.019782389, 0.019797556, 0.019814208, 0.019829514, 0.019843569, 0.019855264, 0.019868569, 0.019882292, 0.01989737...</msg>
<status status="PASS" starttime="20201112 12:42:51.272" endtime="20201112 12:42:51.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.289" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.288" endtime="20201112 12:42:51.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.292" level="INFO">VALUE: [8.944999999999786e-06, 8.944999999999786e-06, 9.306000000000592e-06, 9.304999999997648e-06, 8.944000000000313e-06, 8.541999999996802e-06, 8.861000000002367e-06, 8.555999999999842e-06, 8.916000000001173e-06, 8.528000000000702e-06, 9.346999999999828e-06, 8.931000000000217e-06, 9.346999999999828e-06, 8.542000000000272e-06, 8.957999999999883e-06, 9.333000000000258e-06, 8.528000000000702e-06, 9.360999999999398e-06, 8.568999999999938e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.957999999999883e-06, 9.347999999999301e-06, 8.944999999999786e-06, 8.944999999999786e-06, 8.541000000000798e-06, 8.860999999998898e-06, 8.528000000000702e-06, 9.346999999999828e-06, 8.944000000000313e-06, 8.528000000000702e-06, 8.931000000000217e-06, 9.360999999999398e-06, 8.499999999998092e-06, 9.346999999999828e-06, 8.528000000000702e-06, 8.889000000001507e-06, 9.333000000000258e-06, 8.985999999999023e-06, 8.931000000000217e-06, 8.542000000000272e-06, 8.528000000000702e-06, 8.986000000002492e-06, 8.931000000000217e-06, 8.513999999997662e-06, 8.472000000002422e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.473000000001896e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.290" endtime="20201112 12:42:51.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.286" endtime="20201112 12:42:51.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.295" endtime="20201112 12:42:51.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.299" endtime="20201112 12:42:51.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.297" endtime="20201112 12:42:51.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.294" endtime="20201112 12:42:51.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.931" endtime="20201112 12:42:51.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.930" endtime="20201112 12:42:51.320"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.329" endtime="20201112 12:42:51.343"></status>
</kw>
<msg timestamp="20201112 12:42:51.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.327" endtime="20201112 12:42:51.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.345" endtime="20201112 12:42:51.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.347" endtime="20201112 12:42:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.325" endtime="20201112 12:42:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.322" endtime="20201112 12:42:51.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.358" endtime="20201112 12:42:51.644"></status>
</kw>
<msg timestamp="20201112 12:42:51.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.356" endtime="20201112 12:42:51.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.648" endtime="20201112 12:42:51.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.657" endtime="20201112 12:42:51.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.353" endtime="20201112 12:42:51.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.352" endtime="20201112 12:42:51.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.663" level="INFO">${RESULT} = [{'time': 0.0199635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.019978597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:51.660" endtime="20201112 12:42:51.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.677" level="INFO">${ACCURACY} = {'time': [0.0199635, 0.019978597, 0.019994417, 0.020014514, 0.020029472, 0.020044528, 0.020057486, 0.020074722, 0.020094583, 0.020112472, 0.020128681, 0.020146417, 0.020161444, 0.020181458, 0.02019554...</msg>
<status status="PASS" starttime="20201112 12:42:51.664" endtime="20201112 12:42:51.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.681" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.680" endtime="20201112 12:42:51.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.684" level="INFO">VALUE: [9.735999999999773e-06, 9.722000000000203e-06, 9.763999999998912e-06, 1.0167000000001897e-05, 9.763999999998912e-06, 9.749999999999343e-06, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0151999999999384e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 9.763999999998912e-06, 1.0165999999998954e-05, 1.0138999999999287e-05, 1.0167000000001897e-05, 9.749999999999343e-06, 9.749999999999343e-06, 1.0166000000002423e-05, 9.749999999999343e-06, 1.0111000000000148e-05, 9.361999999998871e-06, 9.708000000000633e-06, 1.0138999999999287e-05, 9.431000000000717e-06, 1.0152999999998857e-05, 1.0166999999998427e-05, 9.750000000002812e-06, 1.0153000000002327e-05, 1.0111000000000148e-05, 9.305000000001118e-06, 9.763999999998912e-06, 1.0152000000002853e-05, 9.346999999999828e-06, 9.34800000000277e-06, 9.333999999999731e-06, 9.332999999996788e-06, 9.749999999999343e-06, 9.804999999998149e-06, 9.735999999999773e-06, 9.360999999999398e-06, 9.333000000000258e-06, 1.0111000000000148e-05, 9.346999999999828e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.360999999999398e-06, 9.722000000000203e-06, 9.722999999999676e-06, 9.722000000000203e-06, 9.735999999999773e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.683" endtime="20201112 12:42:51.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.678" endtime="20201112 12:42:51.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.688" endtime="20201112 12:42:51.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.691" endtime="20201112 12:42:51.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.690" endtime="20201112 12:42:51.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.686" endtime="20201112 12:42:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.321" endtime="20201112 12:42:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.320" endtime="20201112 12:42:51.712"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.721" endtime="20201112 12:42:51.736"></status>
</kw>
<msg timestamp="20201112 12:42:51.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.719" endtime="20201112 12:42:51.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.737" endtime="20201112 12:42:51.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.740" endtime="20201112 12:42:51.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.717" endtime="20201112 12:42:51.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.715" endtime="20201112 12:42:51.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.750" endtime="20201112 12:42:52.036"></status>
</kw>
<msg timestamp="20201112 12:42:52.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.749" endtime="20201112 12:42:52.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.040" endtime="20201112 12:42:52.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.049" endtime="20201112 12:42:52.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.746" endtime="20201112 12:42:52.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.744" endtime="20201112 12:42:52.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.056" level="INFO">${RESULT} = [{'time': 0.019766083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0958000000001883e-05, 'source_diff': 1.0958000000001883e-05}, {'time': 0.019779139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.052" endtime="20201112 12:42:52.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.069" level="INFO">${ACCURACY} = {'time': [0.019766083, 0.019779139, 0.019800069, 0.019815, 0.019833931, 0.019851111, 0.019868125, 0.019888, 0.019908028, 0.019927903, 0.019941917, 0.019957194, 0.019974056, 0.019989139, 0.020008111, 0...</msg>
<status status="PASS" starttime="20201112 12:42:52.057" endtime="20201112 12:42:52.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.074" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.073" endtime="20201112 12:42:52.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.076" level="INFO">VALUE: [1.0958000000001883e-05, 1.0570000000001412e-05, 1.0986000000001023e-05, 1.0568999999998469e-05, 1.0930999999998747e-05, 1.0569000000001938e-05, 1.1305999999999122e-05, 1.0943999999998844e-05, 1.0556000000001842e-05, 1.0959000000001357e-05, 1.0570000000001412e-05, 1.1347000000001828e-05, 1.0556000000001842e-05, 1.1389000000000538e-05, 1.0971999999997983e-05, 1.1430999999999247e-05, 1.0554999999998899e-05, 1.0943999999998844e-05, 1.0568999999998469e-05, 1.0555999999998372e-05, 1.1388999999997068e-05, 1.1361000000001398e-05, 1.0540999999999329e-05, 1.0556000000001842e-05, 1.0570000000001412e-05, 1.0541999999998802e-05, 1.0958000000001883e-05, 1.1374999999997498e-05, 1.0513999999999663e-05, 1.0597000000001078e-05, 1.0542000000002272e-05, 1.0570000000001412e-05, 1.0944999999998317e-05, 1.1347999999997832e-05, 1.1361999999997402e-05, 1.0569999999997942e-05, 1.0541999999998802e-05, 1.1374999999997498e-05, 1.0555999999998372e-05, 1.0929999999999274e-05, 1.1375000000000968e-05, 1.0540999999999329e-05, 1.0973000000000926e-05, 1.0986000000001023e-05, 1.0556000000001842e-05, 1.0971999999997983e-05, 1.0959000000001357e-05, 1.0972000000001453e-05, 1.0570000000001412e-05, 1.129099999999661e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.075" endtime="20201112 12:42:52.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.070" endtime="20201112 12:42:52.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.080" endtime="20201112 12:42:52.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.083" endtime="20201112 12:42:52.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.082" endtime="20201112 12:42:52.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.078" endtime="20201112 12:42:52.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.713" endtime="20201112 12:42:52.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.712" endtime="20201112 12:42:52.104"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.113" endtime="20201112 12:42:52.127"></status>
</kw>
<msg timestamp="20201112 12:42:52.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.112" endtime="20201112 12:42:52.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.129" endtime="20201112 12:42:52.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.131" endtime="20201112 12:42:52.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.109" endtime="20201112 12:42:52.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.107" endtime="20201112 12:42:52.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.141" endtime="20201112 12:42:52.427"></status>
</kw>
<msg timestamp="20201112 12:42:52.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.140" endtime="20201112 12:42:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.431" endtime="20201112 12:42:52.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.440" endtime="20201112 12:42:52.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.137" endtime="20201112 12:42:52.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.135" endtime="20201112 12:42:52.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.446" level="INFO">${RESULT} = [{'time': 0.019896625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019912333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.443" endtime="20201112 12:42:52.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.461" level="INFO">${ACCURACY} = {'time': [0.019896625, 0.019912333, 0.019929278, 0.019946569, 0.019964569, 0.019979611, 0.019999542, 0.020016403, 0.020034556, 0.020053347, 0.020075486, 0.020090458, 0.020109403, 0.020124444, 0.020142...</msg>
<status status="PASS" starttime="20201112 12:42:52.447" endtime="20201112 12:42:52.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.466" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.464" endtime="20201112 12:42:52.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.468" level="INFO">VALUE: [1.1764000000000913e-05, 1.2180000000000524e-05, 1.1375000000000968e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.1764000000000913e-05, 1.2166999999996958e-05, 1.2180999999999997e-05, 1.1763999999997443e-05, 1.2165999999997484e-05, 1.2194000000000094e-05, 1.177699999999754e-05, 1.2180999999999997e-05, 1.177699999999754e-05, 1.1763999999997443e-05, 1.1374999999997498e-05, 1.1346999999998358e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.2194000000000094e-05, 1.1389000000000538e-05, 1.1778000000000483e-05, 1.1763000000001439e-05, 1.1444999999998817e-05, 1.1777000000001009e-05, 1.2180999999999997e-05, 1.2153000000000858e-05, 1.1346999999998358e-05, 1.1362000000000871e-05, 1.1777999999997013e-05, 1.1777000000001009e-05, 1.1360999999997928e-05, 1.1708000000002633e-05, 1.1375000000000968e-05, 1.1778000000000483e-05, 1.1347999999997832e-05, 1.1389000000000538e-05, 1.1360999999997928e-05, 1.1375000000000968e-05, 1.1846999999998858e-05, 1.1375000000000968e-05, 1.1375000000000968e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1805999999999622e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.467" endtime="20201112 12:42:52.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.462" endtime="20201112 12:42:52.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.472" endtime="20201112 12:42:52.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.475" endtime="20201112 12:42:52.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.474" endtime="20201112 12:42:52.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.470" endtime="20201112 12:42:52.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.105" endtime="20201112 12:42:52.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.105" endtime="20201112 12:42:52.496"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.505" endtime="20201112 12:42:52.520"></status>
</kw>
<msg timestamp="20201112 12:42:52.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.503" endtime="20201112 12:42:52.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.521" endtime="20201112 12:42:52.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.524" endtime="20201112 12:42:52.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.501" endtime="20201112 12:42:52.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.499" endtime="20201112 12:42:52.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.534" endtime="20201112 12:42:52.820"></status>
</kw>
<msg timestamp="20201112 12:42:52.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.533" endtime="20201112 12:42:52.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.824" endtime="20201112 12:42:52.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.833" endtime="20201112 12:42:52.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.530" endtime="20201112 12:42:52.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.528" endtime="20201112 12:42:52.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.840" level="INFO">${RESULT} = [{'time': 0.019832292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2598000000002552e-05, 'source_diff': 1.2598000000002552e-05}, {'time': 0.019854194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.836" endtime="20201112 12:42:52.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.853" level="INFO">${ACCURACY} = {'time': [0.019832292, 0.019854194, 0.019874431, 0.019891333, 0.019908417, 0.019926236, 0.019944125, 0.019966083, 0.019988222, 0.020004264, 0.020022111, 0.020041319, 0.020060111, 0.020078375, 0.020094...</msg>
<status status="PASS" starttime="20201112 12:42:52.841" endtime="20201112 12:42:52.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.858" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.857" endtime="20201112 12:42:52.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.860" level="INFO">VALUE: [1.2598000000002552e-05, 1.2999999999999123e-05, 1.2973000000002927e-05, 1.2971999999999984e-05, 1.3403000000002108e-05, 1.2638999999998318e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2569999999999942e-05, 1.2985999999999553e-05, 1.2596999999999609e-05, 1.2985999999999553e-05, 1.3388999999999068e-05, 1.2958999999999887e-05, 1.2583000000000039e-05, 1.2542000000000803e-05, 1.2583000000000039e-05, 1.2527000000001759e-05, 1.2597000000003078e-05, 1.3041999999997833e-05, 1.2569000000000469e-05, 1.2985999999999553e-05, 1.3458000000000914e-05, 1.2583999999999512e-05, 1.2958000000000414e-05, 1.3000000000002593e-05, 1.2569000000000469e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2944999999996848e-05, 1.2541000000001329e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2985999999999553e-05, 1.2584000000002982e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.3388999999999068e-05, 1.2166000000000954e-05, 1.3041999999997833e-05, 1.2166000000000954e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.2986000000003023e-05, 1.2569999999999942e-05, 1.2931000000000747e-05, 1.2167000000000427e-05, 1.2999999999999123e-05, 1.2999999999999123e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.859" endtime="20201112 12:42:52.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.854" endtime="20201112 12:42:52.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.864" endtime="20201112 12:42:52.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.868" endtime="20201112 12:42:52.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.866" endtime="20201112 12:42:52.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.862" endtime="20201112 12:42:52.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.497" endtime="20201112 12:42:52.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.497" endtime="20201112 12:42:52.889"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.897" endtime="20201112 12:42:52.913"></status>
</kw>
<msg timestamp="20201112 12:42:52.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.896" endtime="20201112 12:42:52.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.914" endtime="20201112 12:42:52.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.917" endtime="20201112 12:42:52.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.893" endtime="20201112 12:42:52.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.891" endtime="20201112 12:42:52.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.927" endtime="20201112 12:42:53.214"></status>
</kw>
<msg timestamp="20201112 12:42:53.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.925" endtime="20201112 12:42:53.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.218" endtime="20201112 12:42:53.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.226" endtime="20201112 12:42:53.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.923" endtime="20201112 12:42:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.921" endtime="20201112 12:42:53.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.233" level="INFO">${RESULT} = [{'time': 0.019862847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019883736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.230" endtime="20201112 12:42:53.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.247" level="INFO">${ACCURACY} = {'time': [0.019862847, 0.019883736, 0.019904694, 0.019926931, 0.019948931, 0.019967875, 0.019991986, 0.020011917, 0.020029875, 0.020051875, 0.020071806, 0.020091819, 0.020109681, 0.020132806, 0.020156...</msg>
<status status="PASS" starttime="20201112 12:42:53.235" endtime="20201112 12:42:53.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.252" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.251" endtime="20201112 12:42:53.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.254" level="INFO">VALUE: [1.3360999999999928e-05, 1.3388999999999068e-05, 1.3401999999999165e-05, 1.4208999999997668e-05, 1.4194999999998098e-05, 1.4236000000000804e-05, 1.4207999999998194e-05, 1.3848000000000332e-05, 1.3388999999999068e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3401999999999165e-05, 1.3403000000002108e-05, 1.3431000000001247e-05, 1.3736000000000304e-05, 1.4209000000001137e-05, 1.4193999999998624e-05, 1.4208000000001664e-05, 1.379099999999911e-05, 1.3792000000002053e-05, 1.3389000000002538e-05, 1.3805999999998153e-05, 1.4221999999997764e-05, 1.3792000000002053e-05, 1.4152999999999388e-05, 1.3388999999999068e-05, 1.4208000000001664e-05, 1.3791000000002579e-05, 1.3736000000000304e-05, 1.4193999999998624e-05, 1.380499999999868e-05, 1.3820000000001192e-05, 1.3403000000002108e-05, 1.3401999999999165e-05, 1.3402999999998638e-05, 1.3402999999998638e-05, 1.3360999999999928e-05, 1.3347000000000359e-05, 1.4236000000000804e-05, 1.3847000000000859e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3402999999998638e-05, 1.4209000000001137e-05, 1.4193999999998624e-05, 1.4207999999998194e-05, 1.3362000000002872e-05, 1.3389000000002538e-05, 1.3415999999998734e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.253" endtime="20201112 12:42:53.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.248" endtime="20201112 12:42:53.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.258" endtime="20201112 12:42:53.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.261" endtime="20201112 12:42:53.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.260" endtime="20201112 12:42:53.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.256" endtime="20201112 12:42:53.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.889" endtime="20201112 12:42:53.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.889" endtime="20201112 12:42:53.282"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.291" endtime="20201112 12:42:53.306"></status>
</kw>
<msg timestamp="20201112 12:42:53.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.290" endtime="20201112 12:42:53.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.308" endtime="20201112 12:42:53.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.310" endtime="20201112 12:42:53.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.287" endtime="20201112 12:42:53.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.285" endtime="20201112 12:42:53.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.320" endtime="20201112 12:42:53.607"></status>
</kw>
<msg timestamp="20201112 12:42:53.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.319" endtime="20201112 12:42:53.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.612" endtime="20201112 12:42:53.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.620" endtime="20201112 12:42:53.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.316" endtime="20201112 12:42:53.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.314" endtime="20201112 12:42:53.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.627" level="INFO">${RESULT} = [{'time': 0.019927514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4611000000001179e-05, 'source_diff': 1.4611000000001179e-05}, {'time': 0.019945403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.624" endtime="20201112 12:42:53.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.641" level="INFO">${ACCURACY} = {'time': [0.019927514, 0.019945403, 0.019966375, 0.019984542, 0.020005486, 0.020029556, 0.020049278, 0.020067486, 0.020085597, 0.020105625, 0.020127417, 0.020152292, 0.020173458, 0.020191264, 0.020213...</msg>
<status status="PASS" starttime="20201112 12:42:53.628" endtime="20201112 12:42:53.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.645" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.644" endtime="20201112 12:42:53.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.648" level="INFO">VALUE: [1.4611000000001179e-05, 1.4597000000001609e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4625000000000749e-05, 1.4612000000000652e-05, 1.4611000000001179e-05, 1.4999999999997654e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.5000000000001124e-05, 1.4999999999997654e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.459699999999814e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.4625000000000749e-05, 1.458299999999857e-05, 1.5084000000002012e-05, 1.4193999999998624e-05, 1.541699999999674e-05, 1.5014000000000693e-05, 1.5415999999997265e-05, 1.541700000000021e-05, 1.4999999999997654e-05, 1.5430000000000305e-05, 1.501300000000122e-05, 1.4639000000000318e-05, 1.4194000000002094e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.53750000000015e-05, 1.4987000000001027e-05, 1.4612000000000652e-05, 1.461099999999771e-05, 1.5070000000002443e-05, 1.540300000000064e-05, 1.5000000000001124e-05, 1.4999999999997654e-05, 1.461099999999771e-05, 1.505499999999993e-05, 1.4625000000000749e-05, 1.4999999999997654e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.646" endtime="20201112 12:42:53.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.642" endtime="20201112 12:42:53.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.656" endtime="20201112 12:42:53.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.660" endtime="20201112 12:42:53.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.658" endtime="20201112 12:42:53.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.654" endtime="20201112 12:42:53.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.283" endtime="20201112 12:42:53.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.283" endtime="20201112 12:42:53.681"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.690" endtime="20201112 12:42:53.706"></status>
</kw>
<msg timestamp="20201112 12:42:53.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.688" endtime="20201112 12:42:53.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.708" endtime="20201112 12:42:53.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.710" endtime="20201112 12:42:53.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.685" endtime="20201112 12:42:53.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.683" endtime="20201112 12:42:53.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.720" endtime="20201112 12:42:54.007"></status>
</kw>
<msg timestamp="20201112 12:42:54.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02104425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:53.719" endtime="20201112 12:42:54.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02104425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:54.011" endtime="20201112 12:42:54.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.020" endtime="20201112 12:42:54.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.716" endtime="20201112 12:42:54.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.714" endtime="20201112 12:42:54.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.027" level="INFO">${RESULT} = [{'time': 0.021060486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6235999999999334e-05, 'source_diff': 1.6235999999999334e-05}, {'time': 0.021084097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.023" endtime="20201112 12:42:54.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.041" level="INFO">${ACCURACY} = {'time': [0.021060486, 0.021084097, 0.021105333, 0.021128417, 0.021148222, 0.021173347, 0.021196292, 0.021220444, 0.021240375, 0.02126025, 0.021284333, 0.021304222, 0.021322361, 0.021347264, 0.0213672...</msg>
<status status="PASS" starttime="20201112 12:42:54.028" endtime="20201112 12:42:54.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.046" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.045" endtime="20201112 12:42:54.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.048" level="INFO">VALUE: [1.6235999999999334e-05, 1.540300000000064e-05, 1.580500000000068e-05, 1.616700000000096e-05, 1.540300000000064e-05, 1.540299999999717e-05, 1.5458999999998918e-05, 1.6208000000000194e-05, 1.6249999999998904e-05, 1.541700000000021e-05, 1.580500000000068e-05, 1.540300000000064e-05, 1.540300000000064e-05, 1.5430999999999778e-05, 1.580500000000068e-05, 1.618099999999706e-05, 1.5819999999999723e-05, 1.5443999999999874e-05, 1.6250000000002374e-05, 1.6235999999999334e-05, 1.5819999999999723e-05, 1.5833999999999293e-05, 1.53889999999976e-05, 1.541700000000021e-05, 1.5333999999998793e-05, 1.580500000000068e-05, 1.541700000000021e-05, 1.583299999999982e-05, 1.6221999999999764e-05, 1.5430999999999778e-05, 1.586100000000243e-05, 1.5819999999999723e-05, 1.6250000000002374e-05, 1.5819999999999723e-05, 1.5875000000002e-05, 1.581900000000025e-05, 1.627700000000204e-05, 1.581900000000025e-05, 1.5806000000000153e-05, 1.6236000000002804e-05, 1.5833999999999293e-05, 1.5430999999999778e-05, 1.6221999999999764e-05, 1.5431000000003248e-05, 1.581900000000025e-05, 1.586099999999896e-05, 1.5416000000000735e-05, 1.5819999999999723e-05, 1.6236999999998808e-05, 1.581900000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.047" endtime="20201112 12:42:54.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.042" endtime="20201112 12:42:54.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.052" endtime="20201112 12:42:54.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.055" endtime="20201112 12:42:54.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.054" endtime="20201112 12:42:54.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.050" endtime="20201112 12:42:54.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.682" endtime="20201112 12:42:54.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.681" endtime="20201112 12:42:54.077"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.086" endtime="20201112 12:42:54.101"></status>
</kw>
<msg timestamp="20201112 12:42:54.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.084" endtime="20201112 12:42:54.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.102" endtime="20201112 12:42:54.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.105" endtime="20201112 12:42:54.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.081" endtime="20201112 12:42:54.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.079" endtime="20201112 12:42:54.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.115" endtime="20201112 12:42:54.401"></status>
</kw>
<msg timestamp="20201112 12:42:54.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.113" endtime="20201112 12:42:54.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.406" endtime="20201112 12:42:54.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.414" endtime="20201112 12:42:54.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.111" endtime="20201112 12:42:54.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.109" endtime="20201112 12:42:54.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.421" level="INFO">${RESULT} = [{'time': 0.020411625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.663899999999885e-05, 'source_diff': 1.663899999999885e-05}, {'time': 0.020432708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.418" endtime="20201112 12:42:54.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.435" level="INFO">${ACCURACY} = {'time': [0.020411625, 0.020432708, 0.020456847, 0.020478875, 0.020498792, 0.020519903, 0.020541653, 0.020564653, 0.020591569, 0.020612944, 0.020639653, 0.020663708, 0.020687597, 0.020710764, 0.020734...</msg>
<status status="PASS" starttime="20201112 12:42:54.422" endtime="20201112 12:42:54.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.439" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.438" endtime="20201112 12:42:54.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.442" level="INFO">VALUE: [1.663899999999885e-05, 1.662499999999928e-05, 1.705500000000193e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.744499999999788e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.705500000000193e-05, 1.7458000000001445e-05, 1.7028000000002264e-05, 1.702699999999932e-05, 1.704099999999889e-05, 1.662499999999928e-05, 1.705500000000193e-05, 1.7459000000000918e-05, 1.663899999999885e-05, 1.705500000000193e-05, 1.6999999999999654e-05, 1.702700000000279e-05, 1.663900000000232e-05, 1.6249999999998904e-05, 1.7042000000001833e-05, 1.7055999999997934e-05, 1.663899999999885e-05, 1.7042000000001833e-05, 1.7041999999998364e-05, 1.662499999999928e-05, 1.659700000000014e-05, 1.663899999999885e-05, 1.6986000000000084e-05, 1.7486000000000584e-05, 1.662499999999928e-05, 1.662500000000275e-05, 1.663900000000232e-05, 1.662499999999928e-05, 1.702699999999932e-05, 1.6637999999999376e-05, 1.7027999999998794e-05, 1.7013999999999224e-05, 1.666700000000146e-05, 1.662499999999928e-05, 1.663900000000232e-05, 1.663900000000232e-05, 1.7027999999998794e-05, 1.6651999999998945e-05, 1.70690000000015e-05, 1.7027999999998794e-05, 1.663899999999885e-05, 1.7013999999999224e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.440" endtime="20201112 12:42:54.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.436" endtime="20201112 12:42:54.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.445" endtime="20201112 12:42:54.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.449" endtime="20201112 12:42:54.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.447" endtime="20201112 12:42:54.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.444" endtime="20201112 12:42:54.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.077" endtime="20201112 12:42:54.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.077" endtime="20201112 12:42:54.470"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.479" endtime="20201112 12:42:54.494"></status>
</kw>
<msg timestamp="20201112 12:42:54.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.477" endtime="20201112 12:42:54.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.495" endtime="20201112 12:42:54.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.498" endtime="20201112 12:42:54.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.475" endtime="20201112 12:42:54.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.472" endtime="20201112 12:42:54.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.508" endtime="20201112 12:42:54.794"></status>
</kw>
<msg timestamp="20201112 12:42:54.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.506" endtime="20201112 12:42:54.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.799" endtime="20201112 12:42:54.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.807" endtime="20201112 12:42:54.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.504" endtime="20201112 12:42:54.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.502" endtime="20201112 12:42:54.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.814" level="INFO">${RESULT} = [{'time': 0.019882708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.784699999999792e-05, 'source_diff': 1.784699999999792e-05}, {'time': 0.019903931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.811" endtime="20201112 12:42:54.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.828" level="INFO">${ACCURACY} = {'time': [0.019882708, 0.019903931, 0.019927736, 0.019953861, 0.019980056, 0.020003889, 0.020028819, 0.020053042, 0.020077736, 0.020104889, 0.020127042, 0.020151028, 0.020171903, 0.020193764, 0.020218...</msg>
<status status="PASS" starttime="20201112 12:42:54.815" endtime="20201112 12:42:54.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.832" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.831" endtime="20201112 12:42:54.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.835" level="INFO">VALUE: [1.784699999999792e-05, 1.8250000000000904e-05, 1.7444000000001875e-05, 1.7443999999998405e-05, 1.790299999999967e-05, 1.818099999999906e-05, 1.7443999999998405e-05, 1.7848000000000863e-05, 1.7443999999998405e-05, 1.7513999999999724e-05, 1.7848000000000863e-05, 1.743100000000178e-05, 1.743100000000178e-05, 1.7457999999997975e-05, 1.8237000000000808e-05, 1.7459000000000918e-05, 1.7513999999999724e-05, 1.7444000000001875e-05, 1.8291999999999614e-05, 1.7848000000000863e-05, 1.783300000000182e-05, 1.7834000000001293e-05, 1.783299999999835e-05, 1.790299999999967e-05, 1.784699999999792e-05, 1.8236000000001334e-05, 1.7430000000002305e-05, 1.784699999999792e-05, 1.784700000000139e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.784699999999792e-05, 1.7429999999998835e-05, 1.7473000000000488e-05, 1.784699999999792e-05, 1.744500000000135e-05, 1.7806000000002153e-05, 1.743099999999831e-05, 1.8236000000001334e-05, 1.7444000000001875e-05, 1.784700000000139e-05, 1.784699999999792e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.7486000000000584e-05, 1.7444000000001875e-05, 1.783299999999835e-05, 1.7429999999998835e-05, 1.8263000000001e-05, 1.8249999999997435e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.834" endtime="20201112 12:42:54.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.829" endtime="20201112 12:42:54.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.839" endtime="20201112 12:42:54.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.842" endtime="20201112 12:42:54.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.841" endtime="20201112 12:42:54.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.837" endtime="20201112 12:42:54.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.471" endtime="20201112 12:42:54.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.470" endtime="20201112 12:42:54.863"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.872" endtime="20201112 12:42:54.887"></status>
</kw>
<msg timestamp="20201112 12:42:54.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.870" endtime="20201112 12:42:54.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.888" endtime="20201112 12:42:54.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.891" endtime="20201112 12:42:54.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.868" endtime="20201112 12:42:54.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.866" endtime="20201112 12:42:54.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.901" endtime="20201112 12:42:55.188"></status>
</kw>
<msg timestamp="20201112 12:42:55.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:54.900" endtime="20201112 12:42:55.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:55.192" endtime="20201112 12:42:55.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.201" endtime="20201112 12:42:55.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.897" endtime="20201112 12:42:55.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.895" endtime="20201112 12:42:55.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.207" level="INFO">${RESULT} = [{'time': 0.019828, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.865299999999695e-05, 'source_diff': 1.865299999999695e-05}, {'time': 0.019852903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:55.204" endtime="20201112 12:42:55.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.221" level="INFO">${ACCURACY} = {'time': [0.019828, 0.019852903, 0.019880847, 0.019906042, 0.019931, 0.019957861, 0.019979861, 0.020006083, 0.020029847, 0.020052097, 0.020077153, 0.020104972, 0.020130931, 0.020155125, 0.020179111, 0...</msg>
<status status="PASS" starttime="20201112 12:42:55.208" endtime="20201112 12:42:55.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.226" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.224" endtime="20201112 12:42:55.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.228" level="INFO">VALUE: [1.865299999999695e-05, 1.9070000000002973e-05, 1.8250000000000904e-05, 1.9069999999999504e-05, 1.9055999999999934e-05, 1.85829999999991e-05, 1.8250000000000904e-05, 1.8652000000000946e-05, 1.8666000000000516e-05, 1.905500000000046e-05, 1.9471999999999545e-05, 1.905500000000046e-05, 1.870900000000217e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8666000000000516e-05, 1.8250000000000904e-05, 1.8264000000000474e-05, 1.8250000000000904e-05, 1.865300000000042e-05, 1.8236000000001334e-05, 1.9028000000000794e-05, 1.8666000000000516e-05, 1.906900000000003e-05, 1.859699999999867e-05, 1.865300000000042e-05, 1.9070000000002973e-05, 1.872299999999827e-05, 1.865300000000042e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.9042000000000364e-05, 1.905500000000046e-05, 1.9457999999999975e-05, 1.908300000000307e-05, 1.865300000000042e-05, 1.866699999999999e-05, 1.861100000000171e-05, 1.9457999999999975e-05, 1.827700000000057e-05, 1.8250000000000904e-05, 1.8264000000000474e-05, 1.866699999999999e-05, 1.834700000000189e-05, 1.8666000000000516e-05, 1.9042000000000364e-05, 1.865300000000042e-05, 1.9499999999998685e-05, 1.9042000000000364e-05, 1.9471999999999545e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.227" endtime="20201112 12:42:55.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.222" endtime="20201112 12:42:55.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.232" endtime="20201112 12:42:55.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.235" endtime="20201112 12:42:55.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.234" endtime="20201112 12:42:55.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.230" endtime="20201112 12:42:55.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.864" endtime="20201112 12:42:55.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.863" endtime="20201112 12:42:55.256"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.265" endtime="20201112 12:42:55.280"></status>
</kw>
<msg timestamp="20201112 12:42:55.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.264" endtime="20201112 12:42:55.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.282" endtime="20201112 12:42:55.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.284" endtime="20201112 12:42:55.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.261" endtime="20201112 12:42:55.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.259" endtime="20201112 12:42:55.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.295" endtime="20201112 12:42:55.579"></status>
</kw>
<msg timestamp="20201112 12:42:55.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.293" endtime="20201112 12:42:55.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.583" endtime="20201112 12:42:55.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.592" endtime="20201112 12:42:55.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.291" endtime="20201112 12:42:55.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.289" endtime="20201112 12:42:55.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.599" level="INFO">${RESULT} = [{'time': 0.019961542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.994500000000038e-05, 'source_diff': 1.994500000000038e-05}, {'time': 0.019986528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.595" endtime="20201112 12:42:55.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.613" level="INFO">${ACCURACY} = {'time': [0.019961542, 0.019986528, 0.020012556, 0.020041542, 0.020067653, 0.020096514, 0.020122514, 0.020148694, 0.020172306, 0.020197583, 0.020224319, 0.020248333, 0.020274347, 0.020300569, 0.020324...</msg>
<status status="PASS" starttime="20201112 12:42:55.600" endtime="20201112 12:42:55.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.618" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.617" endtime="20201112 12:42:55.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.620" level="INFO">VALUE: [1.994500000000038e-05, 1.988899999999863e-05, 1.9500000000002154e-05, 2.0277999999998575e-05, 2.0292000000001614e-05, 1.9457999999999975e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.9430000000000835e-05, 1.9486000000002585e-05, 1.986099999999949e-05, 1.984699999999992e-05, 1.986099999999949e-05, 1.9847999999999394e-05, 1.987499999999906e-05, 1.9806000000000684e-05, 1.979100000000164e-05, 1.9430000000000835e-05, 1.986099999999949e-05, 2.0277999999998575e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.986099999999949e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.986099999999949e-05, 2.0263999999999005e-05, 1.9514000000001724e-05, 2.0278000000002044e-05, 1.947299999999902e-05, 1.987499999999906e-05, 1.9861999999998964e-05, 2.0277999999998575e-05, 2.0263999999999005e-05, 1.987499999999906e-05, 1.987500000000253e-05, 1.9430000000000835e-05, 2.029100000000214e-05, 1.9416000000001266e-05, 2.0278000000002044e-05, 1.9528000000001294e-05, 1.9457999999999975e-05, 2.0278000000002044e-05, 2.0277999999998575e-05, 1.9485999999999115e-05, 2.02769999999991e-05, 2.0291999999998145e-05, 1.9457999999999975e-05, 1.98890000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.619" endtime="20201112 12:42:55.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.614" endtime="20201112 12:42:55.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.624" endtime="20201112 12:42:55.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.628" endtime="20201112 12:42:55.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.626" endtime="20201112 12:42:55.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.622" endtime="20201112 12:42:55.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.257" endtime="20201112 12:42:55.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.257" endtime="20201112 12:42:55.649"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.657" endtime="20201112 12:42:55.673"></status>
</kw>
<msg timestamp="20201112 12:42:55.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.656" endtime="20201112 12:42:55.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.674" endtime="20201112 12:42:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.677" endtime="20201112 12:42:55.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.653" endtime="20201112 12:42:55.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.651" endtime="20201112 12:42:55.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.688" endtime="20201112 12:42:55.974"></status>
</kw>
<msg timestamp="20201112 12:42:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.686" endtime="20201112 12:42:55.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.978" endtime="20201112 12:42:55.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.987" endtime="20201112 12:42:55.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.683" endtime="20201112 12:42:55.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.681" endtime="20201112 12:42:55.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.994" level="INFO">${RESULT} = [{'time': 0.019873597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.108299999999813e-05, 'source_diff': 2.108299999999813e-05}, {'time': 0.019904819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.990" endtime="20201112 12:42:55.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.007" level="INFO">${ACCURACY} = {'time': [0.019873597, 0.019904819, 0.019933625, 0.019964653, 0.019991444, 0.020018597, 0.020049556, 0.020076833, 0.020101764, 0.020125569, 0.020152736, 0.020179708, 0.020204514, 0.020232528, 0.020261...</msg>
<status status="PASS" starttime="20201112 12:42:55.995" endtime="20201112 12:42:56.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.012" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.011" endtime="20201112 12:42:56.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.014" level="INFO">VALUE: [2.108299999999813e-05, 2.151300000000078e-05, 2.109700000000117e-05, 2.10969999999977e-05, 2.026299999999953e-05, 2.108299999999813e-05, 2.1098000000000644e-05, 2.0665999999999046e-05, 2.066700000000199e-05, 2.108299999999813e-05, 2.109700000000117e-05, 2.0708000000001225e-05, 2.1070000000001504e-05, 2.066699999999852e-05, 2.0263999999999005e-05, 2.112500000000031e-05, 2.068100000000156e-05, 2.068100000000156e-05, 2.0693999999998186e-05, 2.1084000000001074e-05, 2.10830000000016e-05, 2.1070000000001504e-05, 2.0263999999999005e-05, 2.10830000000016e-05, 2.0278000000002044e-05, 2.108299999999813e-05, 2.0680000000002086e-05, 2.029099999999867e-05, 2.113899999999988e-05, 2.066700000000199e-05, 2.108299999999813e-05, 2.106899999999856e-05, 2.0679999999998616e-05, 2.066700000000199e-05, 2.0693999999998186e-05, 2.0763999999999505e-05, 2.111100000000074e-05, 2.112499999999684e-05, 2.109700000000117e-05, 2.068100000000156e-05, 2.105500000000246e-05, 2.029100000000214e-05, 2.1069999999998035e-05, 2.1514000000000255e-05, 2.108299999999813e-05, 2.069499999999766e-05, 2.069500000000113e-05, 2.027700000000257e-05, 2.1070000000001504e-05, 2.0679999999998616e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.013" endtime="20201112 12:42:56.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.008" endtime="20201112 12:42:56.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.018" endtime="20201112 12:42:56.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.021" endtime="20201112 12:42:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.020" endtime="20201112 12:42:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.016" endtime="20201112 12:42:56.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.650" endtime="20201112 12:42:56.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.649" endtime="20201112 12:42:56.042"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.051" endtime="20201112 12:42:56.066"></status>
</kw>
<msg timestamp="20201112 12:42:56.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.050" endtime="20201112 12:42:56.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.068" endtime="20201112 12:42:56.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.070" endtime="20201112 12:42:56.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.047" endtime="20201112 12:42:56.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.045" endtime="20201112 12:42:56.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.081" endtime="20201112 12:42:56.366"></status>
</kw>
<msg timestamp="20201112 12:42:56.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01986075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:56.079" endtime="20201112 12:42:56.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01986075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:56.371" endtime="20201112 12:42:56.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.379" endtime="20201112 12:42:56.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.076" endtime="20201112 12:42:56.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.075" endtime="20201112 12:42:56.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.386" level="INFO">${RESULT} = [{'time': 0.01986075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1500000000000685e-05, 'source_diff': 2.1500000000000685e-05}, {'time': 0.0198895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:56.383" endtime="20201112 12:42:56.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.400" level="INFO">${ACCURACY} = {'time': [0.01986075, 0.0198895, 0.019920542, 0.01994975, 0.019977792, 0.020003667, 0.020034556, 0.020065736, 0.020091708, 0.020115847, 0.020141889, 0.020172792, 0.020199708, 0.020229722, 0.020256875,...</msg>
<status status="PASS" starttime="20201112 12:42:56.387" endtime="20201112 12:42:56.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.404" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.403" endtime="20201112 12:42:56.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.407" level="INFO">VALUE: [2.1500000000000685e-05, 2.1486000000001115e-05, 2.19030000000002e-05, 2.1443999999998936e-05, 2.19030000000002e-05, 2.1500000000000685e-05, 2.147299999999755e-05, 2.1486000000001115e-05, 2.1943999999999436e-05, 2.1500000000000685e-05, 2.2292000000000145e-05, 2.1499999999997216e-05, 2.230500000000024e-05, 2.1499999999997216e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1430000000002836e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.19030000000002e-05, 2.2305999999999715e-05, 2.188900000000063e-05, 2.1472000000001545e-05, 2.1805999999999215e-05, 2.1500000000000685e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.1902000000000726e-05, 2.186100000000149e-05, 2.229100000000067e-05, 2.1500000000000685e-05, 2.191699999999977e-05, 2.195899999999848e-05, 2.1888000000001157e-05, 2.188900000000063e-05, 2.1902000000000726e-05, 2.1486000000001115e-05, 2.191699999999977e-05, 2.188900000000063e-05, 2.191699999999977e-05, 2.1500000000000685e-05, 2.1472000000001545e-05, 2.2292000000000145e-05, 2.19030000000002e-05, 2.190299999999673e-05, 2.230500000000024e-05, 2.1486000000001115e-05, 2.193099999999934e-05, 2.1485999999997646e-05, 2.1486000000001115e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.405" endtime="20201112 12:42:56.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.401" endtime="20201112 12:42:56.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.411" endtime="20201112 12:42:56.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.414" endtime="20201112 12:42:56.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.412" endtime="20201112 12:42:56.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.409" endtime="20201112 12:42:56.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.043" endtime="20201112 12:42:56.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.043" endtime="20201112 12:42:56.435"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.444" endtime="20201112 12:42:56.459"></status>
</kw>
<msg timestamp="20201112 12:42:56.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.442" endtime="20201112 12:42:56.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.461" endtime="20201112 12:42:56.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.463" endtime="20201112 12:42:56.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.440" endtime="20201112 12:42:56.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.438" endtime="20201112 12:42:56.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.474" endtime="20201112 12:42:56.759"></status>
</kw>
<msg timestamp="20201112 12:42:56.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.472" endtime="20201112 12:42:56.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.763" endtime="20201112 12:42:56.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.772" endtime="20201112 12:42:56.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.470" endtime="20201112 12:42:56.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.468" endtime="20201112 12:42:56.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.779" level="INFO">${RESULT} = [{'time': 0.019950278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2721999999999326e-05, 'source_diff': 2.2721999999999326e-05}, {'time': 0.019975944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:56.775" endtime="20201112 12:42:56.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.792" level="INFO">${ACCURACY} = {'time': [0.019950278, 0.019975944, 0.020002167, 0.020030264, 0.020056042, 0.02008525, 0.020110917, 0.020143278, 0.020174111, 0.020206917, 0.020237028, 0.020264931, 0.020296333, 0.020324056, 0.0203509...</msg>
<status status="PASS" starttime="20201112 12:42:56.780" endtime="20201112 12:42:56.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.797" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.796" endtime="20201112 12:42:56.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.800" level="INFO">VALUE: [2.2721999999999326e-05, 2.2721999999999326e-05, 2.27090000000027e-05, 2.269499999999966e-05, 2.2333999999998855e-05, 2.263899999999791e-05, 2.269499999999966e-05, 2.312499999999884e-05, 2.312500000000231e-05, 2.311100000000274e-05, 2.30969999999997e-05, 2.27229999999988e-05, 2.2735999999998896e-05, 2.312499999999884e-05, 2.2277999999997106e-05, 2.2707999999999756e-05, 2.3068999999997092e-05, 2.3458000000000506e-05, 2.2708000000003226e-05, 2.3512999999999312e-05, 2.263900000000138e-05, 2.229100000000067e-05, 2.311099999999927e-05, 2.2305999999999715e-05, 2.2680000000000616e-05, 2.233299999999938e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.30969999999997e-05, 2.2304999999996772e-05, 2.2249999999997966e-05, 2.311099999999927e-05, 2.2722000000002796e-05, 2.30969999999997e-05, 2.268100000000009e-05, 2.2319999999999285e-05, 2.311100000000274e-05, 2.2750000000001935e-05, 2.237500000000156e-05, 2.316700000000102e-05, 2.2292000000000145e-05, 2.30969999999997e-05, 2.234699999999895e-05, 2.312499999999884e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.27090000000027e-05, 2.313900000000188e-05, 2.311099999999927e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.798" endtime="20201112 12:42:56.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.793" endtime="20201112 12:42:56.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.803" endtime="20201112 12:42:56.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.807" endtime="20201112 12:42:56.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.805" endtime="20201112 12:42:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.802" endtime="20201112 12:42:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.436" endtime="20201112 12:42:56.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.436" endtime="20201112 12:42:56.828"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.837" endtime="20201112 12:42:56.853"></status>
</kw>
<msg timestamp="20201112 12:42:56.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.835" endtime="20201112 12:42:56.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.854" endtime="20201112 12:42:56.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.857" endtime="20201112 12:42:56.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.832" endtime="20201112 12:42:56.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.830" endtime="20201112 12:42:56.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.867" endtime="20201112 12:42:57.152"></status>
</kw>
<msg timestamp="20201112 12:42:57.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.865" endtime="20201112 12:42:57.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.156" endtime="20201112 12:42:57.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.164" endtime="20201112 12:42:57.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.863" endtime="20201112 12:42:57.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.861" endtime="20201112 12:42:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.171" level="INFO">${RESULT} = [{'time': 0.020066931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.39169999999983e-05, 'source_diff': 2.39169999999983e-05}, {'time': 0.020099056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:57.168" endtime="20201112 12:42:57.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.186" level="INFO">${ACCURACY} = {'time': [0.020066931, 0.020099056, 0.020125778, 0.020151847, 0.020183819, 0.020214875, 0.020247014, 0.020278889, 0.020305944, 0.020332028, 0.020365819, 0.020395944, 0.020426958, 0.020457972, 0.020486...</msg>
<status status="PASS" starttime="20201112 12:42:57.172" endtime="20201112 12:42:57.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.190" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.189" endtime="20201112 12:42:57.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.193" level="INFO">VALUE: [2.39169999999983e-05, 2.39030000000022e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.3915999999998827e-05, 2.3513999999998786e-05, 2.391700000000177e-05, 2.391700000000177e-05, 2.4318999999998342e-05, 2.3513999999998786e-05, 2.3915999999998827e-05, 2.4318999999998342e-05, 2.388899999999916e-05, 2.3930000000001866e-05, 2.39169999999983e-05, 2.4320000000001285e-05, 2.391700000000177e-05, 2.3929999999998397e-05, 2.3513999999998786e-05, 2.390299999999873e-05, 2.3916000000002297e-05, 2.3514000000002255e-05, 2.3514000000002255e-05, 2.4277999999999106e-05, 2.3514000000002255e-05, 2.4319999999997816e-05, 2.393099999999787e-05, 2.352700000000235e-05, 2.3513999999998786e-05, 2.3512999999999312e-05, 2.433300000000138e-05, 2.4319999999997816e-05, 2.344500000000041e-05, 2.387499999999959e-05, 2.3527999999998356e-05, 2.4333999999997385e-05, 2.3499999999999216e-05, 2.3915999999998827e-05, 2.3528000000001825e-05, 2.4319999999997816e-05, 2.393100000000134e-05, 2.3499999999999216e-05, 2.4318999999998342e-05, 2.3513999999998786e-05, 2.39169999999983e-05, 2.3958000000001006e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.3500000000002685e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.191" endtime="20201112 12:42:57.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.187" endtime="20201112 12:42:57.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.197" endtime="20201112 12:42:57.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.200" endtime="20201112 12:42:57.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.199" endtime="20201112 12:42:57.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.195" endtime="20201112 12:42:57.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.829" endtime="20201112 12:42:57.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.828" endtime="20201112 12:42:57.221"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.230" endtime="20201112 12:42:57.246"></status>
</kw>
<msg timestamp="20201112 12:42:57.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.228" endtime="20201112 12:42:57.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.247" endtime="20201112 12:42:57.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.250" endtime="20201112 12:42:57.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.226" endtime="20201112 12:42:57.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.223" endtime="20201112 12:42:57.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.260" endtime="20201112 12:42:57.546"></status>
</kw>
<msg timestamp="20201112 12:42:57.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.258" endtime="20201112 12:42:57.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.550" endtime="20201112 12:42:57.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.558" endtime="20201112 12:42:57.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.256" endtime="20201112 12:42:57.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.254" endtime="20201112 12:42:57.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.565" level="INFO">${RESULT} = [{'time': 0.019816847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.019851653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.562" endtime="20201112 12:42:57.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.579" level="INFO">${ACCURACY} = {'time': [0.019816847, 0.019851653, 0.019885597, 0.019915597, 0.019943764, 0.019972569, 0.020005667, 0.020039806, 0.020072486, 0.020099597, 0.020130708, 0.020159597, 0.020189833, 0.020221486, 0.020252...</msg>
<status status="PASS" starttime="20201112 12:42:57.566" endtime="20201112 12:42:57.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.583" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.582" endtime="20201112 12:42:57.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.586" level="INFO">VALUE: [2.515299999999998e-05, 2.512500000000084e-05, 2.4278000000002575e-05, 2.433300000000138e-05, 2.512500000000084e-05, 2.5137999999997468e-05, 2.513900000000041e-05, 2.5084000000001605e-05, 2.4736000000000896e-05, 2.431900000000181e-05, 2.4736000000000896e-05, 2.505500000000299e-05, 2.5068999999999092e-05, 2.431900000000181e-05, 2.512499999999737e-05, 2.4305999999998246e-05, 2.4750000000000466e-05, 2.50970000000017e-05, 2.4749999999996997e-05, 2.4306000000001715e-05, 2.4305999999998246e-05, 2.4305999999998246e-05, 2.4750000000000466e-05, 2.515299999999998e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.5138000000000937e-05, 2.470900000000123e-05, 2.512500000000084e-05, 2.5083999999998136e-05, 2.4736000000000896e-05, 2.4736000000000896e-05, 2.4319999999997816e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.4736000000000896e-05, 2.5068999999999092e-05, 2.431900000000181e-05, 2.4722000000001326e-05, 2.4318999999998342e-05, 2.4736000000000896e-05, 2.468099999999862e-05, 2.513900000000041e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.512499999999737e-05, 2.518099999999912e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4680000000002617e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.584" endtime="20201112 12:42:57.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.580" endtime="20201112 12:42:57.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.590" endtime="20201112 12:42:57.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.593" endtime="20201112 12:42:57.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.592" endtime="20201112 12:42:57.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.588" endtime="20201112 12:42:57.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.222" endtime="20201112 12:42:57.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.221" endtime="20201112 12:42:57.614"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.623" endtime="20201112 12:42:57.638"></status>
</kw>
<msg timestamp="20201112 12:42:57.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.621" endtime="20201112 12:42:57.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.640" endtime="20201112 12:42:57.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.642" endtime="20201112 12:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.619" endtime="20201112 12:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.617" endtime="20201112 12:42:57.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.652" endtime="20201112 12:42:57.938"></status>
</kw>
<msg timestamp="20201112 12:42:57.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.651" endtime="20201112 12:42:57.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.942" endtime="20201112 12:42:57.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.951" endtime="20201112 12:42:57.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.648" endtime="20201112 12:42:57.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.646" endtime="20201112 12:42:57.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.958" level="INFO">${RESULT} = [{'time': 0.019971333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6319000000000342e-05, 'source_diff': 2.6319000000000342e-05}, {'time': 0.019999444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:57.954" endtime="20201112 12:42:57.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.971" level="INFO">${ACCURACY} = {'time': [0.019971333, 0.019999444, 0.020028347, 0.020061194, 0.020093375, 0.020126403, 0.020155375, 0.020190472, 0.0202225, 0.020257111, 0.02029125, 0.020323319, 0.020356347, 0.020385514, 0.0204215, ...</msg>
<status status="PASS" starttime="20201112 12:42:57.959" endtime="20201112 12:42:57.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.976" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.975" endtime="20201112 12:42:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.978" level="INFO">VALUE: [2.6319000000000342e-05, 2.5541000000000452e-05, 2.6360999999999052e-05, 2.5527000000000882e-05, 2.6346999999999482e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.6332999999999912e-05, 2.593099999999987e-05, 2.5943999999999967e-05, 2.593099999999987e-05, 2.5930000000000397e-05, 2.5930000000000397e-05, 2.5957999999999537e-05, 2.6374999999998622e-05, 2.5930000000000397e-05, 2.6333999999999386e-05, 2.515299999999998e-05, 2.593099999999987e-05, 2.5943999999999967e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.5528000000000356e-05, 2.6346999999999482e-05, 2.5540999999996983e-05, 2.6374999999998622e-05, 2.59170000000003e-05, 2.595899999999901e-05, 2.5943999999999967e-05, 2.5541999999999926e-05, 2.5957999999999537e-05, 2.6374999999998622e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.6332999999999912e-05, 2.595899999999901e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.594499999999944e-05, 2.5943999999999967e-05, 2.6360999999999052e-05, 2.6346999999999482e-05, 2.5957999999999537e-05, 2.5929999999996928e-05, 2.5541999999999926e-05, 2.5513999999997317e-05, 2.594499999999944e-05, 2.636100000000252e-05, 2.594499999999944e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.977" endtime="20201112 12:42:57.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.972" endtime="20201112 12:42:57.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.982" endtime="20201112 12:42:57.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.985" endtime="20201112 12:42:58.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.984" endtime="20201112 12:42:58.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.980" endtime="20201112 12:42:58.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.615" endtime="20201112 12:42:58.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.614" endtime="20201112 12:42:58.007"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.015" endtime="20201112 12:42:58.031"></status>
</kw>
<msg timestamp="20201112 12:42:58.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.014" endtime="20201112 12:42:58.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.033" endtime="20201112 12:42:58.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.036" endtime="20201112 12:42:58.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.011" endtime="20201112 12:42:58.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.009" endtime="20201112 12:42:58.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.046" endtime="20201112 12:42:58.331"></status>
</kw>
<msg timestamp="20201112 12:42:58.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.044" endtime="20201112 12:42:58.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.336" endtime="20201112 12:42:58.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.345" endtime="20201112 12:42:58.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.042" endtime="20201112 12:42:58.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.040" endtime="20201112 12:42:58.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.351" level="INFO">${RESULT} = [{'time': 0.020546222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6346999999999482e-05, 'source_diff': 2.6346999999999482e-05}, {'time': 0.020578083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.348" endtime="20201112 12:42:58.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.365" level="INFO">${ACCURACY} = {'time': [0.020546222, 0.020578083, 0.020614472, 0.020649431, 0.020686486, 0.020722306, 0.020754375, 0.020783278, 0.020819181, 0.020854306, 0.020888125, 0.020925236, 0.020959458, 0.020992514, 0.021023...</msg>
<status status="PASS" starttime="20201112 12:42:58.352" endtime="20201112 12:42:58.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.370" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.369" endtime="20201112 12:42:58.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.372" level="INFO">VALUE: [2.6346999999999482e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.716700000000155e-05, 2.638899999999819e-05, 2.716699999999808e-05, 2.6333999999999386e-05, 2.715299999999851e-05, 2.6347999999998956e-05, 2.6332999999999912e-05, 2.716700000000155e-05, 2.6749999999998997e-05, 2.7138999999998942e-05, 2.6763999999998567e-05, 2.6346999999999482e-05, 2.6735999999999427e-05, 2.672299999999933e-05, 2.715300000000198e-05, 2.6306000000000246e-05, 2.636100000000252e-05, 2.6763999999998567e-05, 2.6777999999998137e-05, 2.6762999999999093e-05, 2.7222000000000357e-05, 2.6348000000002425e-05, 2.6749999999998997e-05, 2.715299999999851e-05, 2.6334000000002855e-05, 2.6708000000000287e-05, 2.6332999999999912e-05, 2.6764000000002036e-05, 2.6387999999998718e-05, 2.7152000000002507e-05, 2.6749999999998997e-05, 2.715300000000198e-05, 2.7138999999998942e-05, 2.6360999999999052e-05, 2.6362000000001995e-05, 2.6360999999999052e-05, 2.7151999999999038e-05, 2.6346999999999482e-05, 2.6360999999999052e-05, 2.7180000000001647e-05, 2.6346999999999482e-05, 2.6332999999999912e-05, 2.6736000000002896e-05, 2.6763999999998567e-05, 2.6360999999999052e-05, 2.7151999999999038e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.371" endtime="20201112 12:42:58.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.366" endtime="20201112 12:42:58.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.376" endtime="20201112 12:42:58.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.379" endtime="20201112 12:42:58.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.378" endtime="20201112 12:42:58.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.374" endtime="20201112 12:42:58.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.008" endtime="20201112 12:42:58.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.007" endtime="20201112 12:42:58.400"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.409" endtime="20201112 12:42:58.425"></status>
</kw>
<msg timestamp="20201112 12:42:58.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.407" endtime="20201112 12:42:58.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.427" endtime="20201112 12:42:58.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.429" endtime="20201112 12:42:58.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.405" endtime="20201112 12:42:58.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.403" endtime="20201112 12:42:58.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.440" endtime="20201112 12:42:58.726"></status>
</kw>
<msg timestamp="20201112 12:42:58.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.438" endtime="20201112 12:42:58.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.730" endtime="20201112 12:42:58.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.739" endtime="20201112 12:42:58.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.435" endtime="20201112 12:42:58.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.434" endtime="20201112 12:42:58.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.747" level="INFO">${RESULT} = [{'time': 0.020649306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.798700000000015e-05, 'source_diff': 2.798700000000015e-05}, {'time': 0.020685375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.743" endtime="20201112 12:42:58.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.761" level="INFO">${ACCURACY} = {'time': [0.020649306, 0.020685375, 0.020722333, 0.02075625, 0.020788542, 0.020822486, 0.020857597, 0.020895278, 0.020929375, 0.020965625, 0.021000361, 0.021035639, 0.021072597, 0.021106625, 0.0211375...</msg>
<status status="PASS" starttime="20201112 12:42:58.748" endtime="20201112 12:42:58.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.766" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.765" endtime="20201112 12:42:58.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.768" level="INFO">VALUE: [2.798700000000015e-05, 2.7513999999999317e-05, 2.7971999999997638e-05, 2.7556000000001496e-05, 2.8361000000001052e-05, 2.7569000000001592e-05, 2.7513999999999317e-05, 2.7972000000001107e-05, 2.7569000000001592e-05, 2.7972000000001107e-05, 2.7957999999998068e-05, 2.7499999999999747e-05, 2.7943999999998498e-05, 2.8347000000001482e-05, 2.8389000000000192e-05, 2.7569000000001592e-05, 2.8361000000001052e-05, 2.7568999999998123e-05, 2.7569999999997596e-05, 2.7985999999997208e-05, 2.7624999999999872e-05, 2.7542000000001926e-05, 2.790300000000273e-05, 2.7957999999998068e-05, 2.797299999999711e-05, 2.797300000000058e-05, 2.7570000000001066e-05, 2.7597000000000732e-05, 2.7555000000002022e-05, 2.7944000000001967e-05, 2.7972000000001107e-05, 2.8000000000000247e-05, 2.7972000000001107e-05, 2.7556000000001496e-05, 2.7554999999998553e-05, 2.7583000000001162e-05, 2.7570000000001066e-05, 2.7556000000001496e-05, 2.8457999999998568e-05, 2.7972000000001107e-05, 2.7568999999998123e-05, 2.7972000000001107e-05, 2.794499999999797e-05, 2.7652999999999012e-05, 2.8375000000000622e-05, 2.7957999999998068e-05, 2.7986000000000677e-05, 2.7611000000000302e-05, 2.7540999999998983e-05, 2.7971999999997638e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.767" endtime="20201112 12:42:58.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.762" endtime="20201112 12:42:58.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.783" endtime="20201112 12:42:58.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.786" endtime="20201112 12:42:58.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.785" endtime="20201112 12:42:58.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.781" endtime="20201112 12:42:58.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.401" endtime="20201112 12:42:58.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.401" endtime="20201112 12:42:58.807"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.816" endtime="20201112 12:42:58.831"></status>
</kw>
<msg timestamp="20201112 12:42:58.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.815" endtime="20201112 12:42:58.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.833" endtime="20201112 12:42:58.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.836" endtime="20201112 12:42:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.812" endtime="20201112 12:42:58.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.810" endtime="20201112 12:42:58.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.846" endtime="20201112 12:42:59.131"></status>
</kw>
<msg timestamp="20201112 12:42:59.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.844" endtime="20201112 12:42:59.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.135" endtime="20201112 12:42:59.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.144" endtime="20201112 12:42:59.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.842" endtime="20201112 12:42:59.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.840" endtime="20201112 12:42:59.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.151" level="INFO">${RESULT} = [{'time': 0.019925292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8389000000000192e-05, 'source_diff': 2.8389000000000192e-05}, {'time': 0.019956389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.147" endtime="20201112 12:42:59.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.164" level="INFO">${ACCURACY} = {'time': [0.019925292, 0.019956389, 0.019995431, 0.020031292, 0.020063278, 0.020097389, 0.020135486, 0.020168264, 0.020200306, 0.0202385, 0.020277431, 0.020313389, 0.020349278, 0.020381417, 0.02041236...</msg>
<status status="PASS" starttime="20201112 12:42:59.152" endtime="20201112 12:42:59.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.169" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.168" endtime="20201112 12:42:59.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.171" level="INFO">VALUE: [2.8389000000000192e-05, 2.8389000000000192e-05, 2.918099999999965e-05, 2.8778000000000137e-05, 2.8736000000001427e-05, 2.918099999999965e-05, 2.9180000000000178e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8791999999999707e-05, 2.923699999999793e-05, 2.9250000000001497e-05, 2.918099999999965e-05, 2.918099999999965e-05, 2.8361000000001052e-05, 2.8764000000000567e-05, 2.8777999999996667e-05, 2.9193999999999748e-05, 2.918099999999965e-05, 2.8777000000000663e-05, 2.8778000000000137e-05, 2.9193999999999748e-05, 2.9180000000000178e-05, 2.8778000000000137e-05, 2.8360999999997583e-05, 2.918099999999965e-05, 2.9166000000000608e-05, 2.9167000000000082e-05, 2.8360999999997583e-05, 2.8778000000000137e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.8389000000000192e-05, 2.8778000000000137e-05, 2.8375000000000622e-05, 2.918099999999965e-05, 2.8736000000001427e-05, 2.9193999999999748e-05, 2.8375000000000622e-05, 2.8846999999998513e-05, 2.840300000000323e-05, 2.8791999999999707e-05, 2.84170000000028e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.918099999999965e-05, 2.8763999999997097e-05, 2.8361000000001052e-05, 2.8778000000000137e-05, 2.919499999999922e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.170" endtime="20201112 12:42:59.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.165" endtime="20201112 12:42:59.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.175" endtime="20201112 12:42:59.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.179" endtime="20201112 12:42:59.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.177" endtime="20201112 12:42:59.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.173" endtime="20201112 12:42:59.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.808" endtime="20201112 12:42:59.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.808" endtime="20201112 12:42:59.199"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.208" endtime="20201112 12:42:59.224"></status>
</kw>
<msg timestamp="20201112 12:42:59.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.207" endtime="20201112 12:42:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.226" endtime="20201112 12:42:59.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.228" endtime="20201112 12:42:59.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.204" endtime="20201112 12:42:59.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.202" endtime="20201112 12:42:59.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.238" endtime="20201112 12:42:59.525"></status>
</kw>
<msg timestamp="20201112 12:42:59.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.237" endtime="20201112 12:42:59.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.529" endtime="20201112 12:42:59.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.538" endtime="20201112 12:42:59.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.234" endtime="20201112 12:42:59.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.233" endtime="20201112 12:42:59.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.545" level="INFO">${RESULT} = [{'time': 0.019852167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9999999999998778e-05, 'source_diff': 2.9999999999998778e-05}, {'time': 0.019885194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.541" endtime="20201112 12:42:59.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.558" level="INFO">${ACCURACY} = {'time': [0.019852167, 0.019885194, 0.019921153, 0.019959514, 0.019999389, 0.020036208, 0.020072347, 0.020106306, 0.020142361, 0.020176278, 0.020210319, 0.020244542, 0.020277181, 0.020315194, 0.020347...</msg>
<status status="PASS" starttime="20201112 12:42:59.546" endtime="20201112 12:42:59.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.563" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.562" endtime="20201112 12:42:59.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.565" level="INFO">VALUE: [2.9999999999998778e-05, 2.9999999999998778e-05, 2.9596999999999263e-05, 3.0389000000002192e-05, 3.0013999999998348e-05, 2.9985999999999208e-05, 2.9596999999999263e-05, 2.998700000000215e-05, 2.9930000000000928e-05, 2.9999999999998778e-05, 2.9582999999999693e-05, 2.9583999999999167e-05, 2.918099999999965e-05, 2.9583000000003162e-05, 2.9124999999997903e-05, 2.998699999999868e-05, 2.9610999999998833e-05, 2.9971999999999638e-05, 3.0388999999998723e-05, 2.9624999999998403e-05, 2.9583000000003162e-05, 2.9999999999998778e-05, 2.9986000000002677e-05, 2.9958000000000068e-05, 2.9584000000002636e-05, 2.9584000000002636e-05, 2.9569999999999597e-05, 2.9999999999998778e-05, 2.9624999999998403e-05, 2.997300000000258e-05, 2.9985999999999208e-05, 2.9972000000003107e-05, 2.9610999999998833e-05, 2.9582999999999693e-05, 2.9584000000002636e-05, 2.9582999999999693e-05, 2.9999999999998778e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9931000000000402e-05, 3.0013999999998348e-05, 2.9999999999998778e-05, 2.9527000000001413e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9625000000001872e-05, 2.9958000000000068e-05, 2.9596999999999263e-05, 2.9166000000000608e-05, 2.9610999999998833e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.564" endtime="20201112 12:42:59.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.559" endtime="20201112 12:42:59.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.569" endtime="20201112 12:42:59.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.573" endtime="20201112 12:42:59.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.571" endtime="20201112 12:42:59.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.567" endtime="20201112 12:42:59.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.200" endtime="20201112 12:42:59.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.200" endtime="20201112 12:42:59.594"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.602" endtime="20201112 12:42:59.618"></status>
</kw>
<msg timestamp="20201112 12:42:59.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.601" endtime="20201112 12:42:59.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.619" endtime="20201112 12:42:59.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.622" endtime="20201112 12:42:59.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.598" endtime="20201112 12:42:59.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.596" endtime="20201112 12:42:59.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.632" endtime="20201112 12:42:59.918"></status>
</kw>
<msg timestamp="20201112 12:42:59.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.631" endtime="20201112 12:42:59.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.922" endtime="20201112 12:42:59.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.930" endtime="20201112 12:42:59.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.628" endtime="20201112 12:42:59.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.626" endtime="20201112 12:42:59.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.937" level="INFO">${RESULT} = [{'time': 0.019952792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0388999999998723e-05, 'source_diff': 3.0388999999998723e-05}, {'time': 0.019987806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.934" endtime="20201112 12:42:59.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.951" level="INFO">${ACCURACY} = {'time': [0.019952792, 0.019987806, 0.020023972, 0.020060125, 0.020096028, 0.020129931, 0.020167111, 0.020203861, 0.020240889, 0.020277931, 0.020315806, 0.020354097, 0.020388056, 0.020422917, 0.020460...</msg>
<status status="PASS" starttime="20201112 12:42:59.938" endtime="20201112 12:42:59.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.955" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.954" endtime="20201112 12:42:59.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.958" level="INFO">VALUE: [3.0388999999998723e-05, 3.0374999999999153e-05, 3.08050000000018e-05, 3.081900000000137e-05, 3.081999999999738e-05, 3.0403000000001762e-05, 3.081900000000137e-05, 3.0403000000001762e-05, 3.080600000000128e-05, 3.122300000000036e-05, 3.080599999999781e-05, 3.08050000000018e-05, 3.123699999999993e-05, 3.120899999999732e-05, 3.120799999999785e-05, 3.0403000000001762e-05, 3.0832999999997474e-05, 3.119500000000122e-05, 3.122200000000089e-05, 3.0444000000000998e-05, 3.0388999999998723e-05, 3.120900000000079e-05, 3.119399999999828e-05, 3.0790999999998764e-05, 3.119400000000175e-05, 3.084700000000051e-05, 3.113899999999947e-05, 3.080600000000128e-05, 3.1138e-05, 3.079200000000171e-05, 3.0389000000002192e-05, 3.0333000000000443e-05, 3.0403000000001762e-05, 3.074999999999953e-05, 3.080600000000128e-05, 3.07639999999991e-05, 3.0388999999998723e-05, 3.122300000000036e-05, 3.123699999999993e-05, 3.119399999999828e-05, 3.082000000000085e-05, 3.040199999999882e-05, 3.077799999999867e-05, 3.0375000000002622e-05, 3.120900000000079e-05, 3.120800000000132e-05, 3.0374999999999153e-05, 3.077799999999867e-05, 3.081900000000137e-05, 3.08050000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.957" endtime="20201112 12:42:59.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.952" endtime="20201112 12:42:59.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.962" endtime="20201112 12:42:59.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.965" endtime="20201112 12:42:59.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.964" endtime="20201112 12:42:59.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.960" endtime="20201112 12:42:59.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.594" endtime="20201112 12:42:59.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.594" endtime="20201112 12:42:59.986"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.995" endtime="20201112 12:43:00.011"></status>
</kw>
<msg timestamp="20201112 12:43:00.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.993" endtime="20201112 12:43:00.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.013" endtime="20201112 12:43:00.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.015" endtime="20201112 12:43:00.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.991" endtime="20201112 12:43:00.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.989" endtime="20201112 12:43:00.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.025" endtime="20201112 12:43:00.310"></status>
</kw>
<msg timestamp="20201112 12:43:00.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.024" endtime="20201112 12:43:00.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.315" endtime="20201112 12:43:00.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.323" endtime="20201112 12:43:00.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.021" endtime="20201112 12:43:00.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.020" endtime="20201112 12:43:00.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.330" level="INFO">${RESULT} = [{'time': 0.020147722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.473600000000049e-05, 'source_diff': 3.473600000000049e-05}, {'time': 0.020189708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.326" endtime="20201112 12:43:00.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.344" level="INFO">${ACCURACY} = {'time': [0.020147722, 0.020189708, 0.020234722, 0.020278722, 0.020320736, 0.020367736, 0.020413736, 0.020455736, 0.020496736, 0.02054175, 0.02058875, 0.020634764, 0.020680764, 0.020726778, 0.02077381...</msg>
<status status="PASS" starttime="20201112 12:43:00.331" endtime="20201112 12:43:00.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.349" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.348" endtime="20201112 12:43:00.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.351" level="INFO">VALUE: [3.473600000000049e-05, 3.517999999999924e-05, 3.4624999999999934e-05, 3.466599999999917e-05, 3.498599999999727e-05, 3.4805000000002334e-05, 3.442999999999849e-05, 3.4652999999999073e-05, 3.444400000000153e-05, 3.479200000000224e-05, 3.4652999999999073e-05, 3.5361000000001114e-05, 3.466700000000211e-05, 3.476399999999963e-05, 3.5013000000000405e-05, 3.475000000000006e-05, 3.533399999999798e-05, 3.449999999999981e-05, 3.502799999999945e-05, 3.4847000000001044e-05, 3.472300000000039e-05, 3.497200000000117e-05, 3.4555000000002084e-05, 3.525000000000056e-05, 3.4776999999999725e-05, 3.4790999999999295e-05, 3.4804999999998865e-05, 3.52779999999997e-05, 3.448600000000024e-05, 3.5152999999999573e-05, 3.467999999999874e-05, 3.5139000000000004e-05, 3.497200000000117e-05, 3.520799999999838e-05, 3.547200000000167e-05, 3.448600000000024e-05, 3.5445000000002e-05, 3.5152999999999573e-05, 3.519400000000228e-05, 3.500000000000031e-05, 3.454199999999852e-05, 3.455600000000156e-05, 3.484800000000052e-05, 3.458399999999723e-05, 3.445900000000057e-05, 3.466600000000264e-05, 3.5375000000000684e-05, 3.4776999999999725e-05, 3.5360999999997644e-05, 3.540200000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.350" endtime="20201112 12:43:00.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.345" endtime="20201112 12:43:00.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.355" endtime="20201112 12:43:00.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.358" endtime="20201112 12:43:00.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.357" endtime="20201112 12:43:00.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.353" endtime="20201112 12:43:00.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.987" endtime="20201112 12:43:00.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.987" endtime="20201112 12:43:00.379"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.388" endtime="20201112 12:43:00.404"></status>
</kw>
<msg timestamp="20201112 12:43:00.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.387" endtime="20201112 12:43:00.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.406" endtime="20201112 12:43:00.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.408" endtime="20201112 12:43:00.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.384" endtime="20201112 12:43:00.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.382" endtime="20201112 12:43:00.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.419" endtime="20201112 12:43:00.705"></status>
</kw>
<msg timestamp="20201112 12:43:00.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.417" endtime="20201112 12:43:00.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.709" endtime="20201112 12:43:00.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.718" endtime="20201112 12:43:00.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.414" endtime="20201112 12:43:00.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.413" endtime="20201112 12:43:00.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.725" level="INFO">${RESULT} = [{'time': 0.019871139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.644499999999953e-05, 'source_diff': 3.644499999999953e-05}, {'time': 0.019915167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.721" endtime="20201112 12:43:00.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.738" level="INFO">${ACCURACY} = {'time': [0.019871139, 0.019915167, 0.019963139, 0.020011139, 0.020057167, 0.020099153, 0.020144181, 0.020191208, 0.020238167, 0.020286181, 0.020328181, 0.020375208, 0.020422264, 0.020471236, 0.020516...</msg>
<status status="PASS" starttime="20201112 12:43:00.726" endtime="20201112 12:43:00.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.743" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.742" endtime="20201112 12:43:00.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.745" level="INFO">VALUE: [3.644499999999953e-05, 3.554199999999952e-05, 3.54580000000021e-05, 3.579199999999977e-05, 3.629200000000027e-05, 3.60840000000022e-05, 3.584800000000152e-05, 3.626399999999766e-05, 3.5903000000000324e-05, 3.619499999999928e-05, 3.5445000000002e-05, 3.5639000000000504e-05, 3.581999999999891e-05, 3.6125000000001434e-05, 3.551400000000038e-05, 3.626400000000113e-05, 3.555599999999909e-05, 3.643000000000049e-05, 3.602800000000045e-05, 3.557000000000213e-05, 3.6389000000001254e-05, 3.595799999999913e-05, 3.59719999999987e-05, 3.5610999999997894e-05, 3.572199999999845e-05, 3.6139000000001004e-05, 3.5666999999999643e-05, 3.5610999999997894e-05, 3.5902999999996854e-05, 3.569499999999878e-05, 3.611199999999787e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.622199999999895e-05, 3.626400000000113e-05, 3.638800000000178e-05, 3.625000000000156e-05, 3.620799999999938e-05, 3.640200000000135e-05, 3.575000000000106e-05, 3.6347000000002544e-05, 3.550000000000081e-05, 3.567999999999974e-05, 3.6068999999999685e-05, 3.575000000000106e-05, 3.579199999999977e-05, 3.5596999999998324e-05, 3.6361000000002114e-05, 3.6318999999999935e-05, 3.554199999999952e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.744" endtime="20201112 12:43:00.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.739" endtime="20201112 12:43:00.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.749" endtime="20201112 12:43:00.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.753" endtime="20201112 12:43:00.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.751" endtime="20201112 12:43:00.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.747" endtime="20201112 12:43:00.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.380" endtime="20201112 12:43:00.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.380" endtime="20201112 12:43:00.774"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.783" endtime="20201112 12:43:00.798"></status>
</kw>
<msg timestamp="20201112 12:43:00.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.781" endtime="20201112 12:43:00.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.800" endtime="20201112 12:43:00.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.802" endtime="20201112 12:43:00.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.778" endtime="20201112 12:43:00.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.776" endtime="20201112 12:43:00.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.812" endtime="20201112 12:43:01.098"></status>
</kw>
<msg timestamp="20201112 12:43:01.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.811" endtime="20201112 12:43:01.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.102" endtime="20201112 12:43:01.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.111" endtime="20201112 12:43:01.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.808" endtime="20201112 12:43:01.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.806" endtime="20201112 12:43:01.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.118" level="INFO">${RESULT} = [{'time': 0.020122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681999999999991e-05, 'source_diff': 3.681999999999991e-05}, {'time': 0.020170181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.114" endtime="20201112 12:43:01.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.131" level="INFO">${ACCURACY} = {'time': [0.020122167, 0.020170181, 0.020218181, 0.020264181, 0.020313194, 0.020357181, 0.020406194, 0.020452194, 0.020500208, 0.020544208, 0.020593222, 0.020637222, 0.020686222, 0.020731222, 0.020778...</msg>
<status status="PASS" starttime="20201112 12:43:01.119" endtime="20201112 12:43:01.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.136" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.135" endtime="20201112 12:43:01.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.139" level="INFO">VALUE: [3.681999999999991e-05, 3.669499999999978e-05, 3.720900000000332e-05, 3.7138999999998534e-05, 3.7276999999998756e-05, 3.720899999999985e-05, 3.672199999999945e-05, 3.6819000000000435e-05, 3.644400000000006e-05, 3.6639000000001504e-05, 3.666600000000117e-05, 3.673599999999902e-05, 3.7360999999999644e-05, 3.645799999999963e-05, 3.64719999999992e-05, 3.7388999999998784e-05, 3.719399999999734e-05, 3.7445000000000533e-05, 3.701399999999841e-05, 3.673599999999902e-05, 3.6610999999998894e-05, 3.698600000000274e-05, 3.6596999999999325e-05, 3.7374999999999214e-05, 3.6681000000000213e-05, 3.720800000000038e-05, 3.656999999999966e-05, 3.701399999999841e-05, 3.651399999999791e-05, 3.674999999999859e-05, 3.7096999999999825e-05, 3.644400000000006e-05, 3.652800000000095e-05, 3.6791000000001295e-05, 3.6846999999999575e-05, 3.705600000000059e-05, 3.676399999999816e-05, 3.724999999999909e-05, 3.654199999999705e-05, 3.698599999999927e-05, 3.730599999999737e-05, 3.645799999999963e-05, 3.6833000000000005e-05, 3.722199999999995e-05, 3.722199999999995e-05, 3.7374999999999214e-05, 3.681999999999991e-05, 3.656999999999966e-05, 3.7417000000001394e-05, 3.700000000000231e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.137" endtime="20201112 12:43:01.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.132" endtime="20201112 12:43:01.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.142" endtime="20201112 12:43:01.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.146" endtime="20201112 12:43:01.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.144" endtime="20201112 12:43:01.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.140" endtime="20201112 12:43:01.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.775" endtime="20201112 12:43:01.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.774" endtime="20201112 12:43:01.167"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.176" endtime="20201112 12:43:01.191"></status>
</kw>
<msg timestamp="20201112 12:43:01.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.174" endtime="20201112 12:43:01.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.193" endtime="20201112 12:43:01.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.196" endtime="20201112 12:43:01.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.171" endtime="20201112 12:43:01.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.169" endtime="20201112 12:43:01.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.206" endtime="20201112 12:43:01.491"></status>
</kw>
<msg timestamp="20201112 12:43:01.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.204" endtime="20201112 12:43:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.496" endtime="20201112 12:43:01.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.504" endtime="20201112 12:43:01.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.202" endtime="20201112 12:43:01.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.200" endtime="20201112 12:43:01.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.511" level="INFO">${RESULT} = [{'time': 0.019914639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832000000000141e-05, 'source_diff': 3.832000000000141e-05}, {'time': 0.019959639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.508" endtime="20201112 12:43:01.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.525" level="INFO">${ACCURACY} = {'time': [0.019914639, 0.019959639, 0.020006625, 0.020054653, 0.020098639, 0.020142639, 0.020190653, 0.020238653, 0.020289722, 0.020334722, 0.020382681, 0.020430681, 0.020480722, 0.020531736, 0.020579...</msg>
<status status="PASS" starttime="20201112 12:43:01.512" endtime="20201112 12:43:01.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.529" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.528" endtime="20201112 12:43:01.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.532" level="INFO">VALUE: [3.832000000000141e-05, 3.79720000000007e-05, 3.8124999999999964e-05, 3.831999999999794e-05, 3.750000000000281e-05, 3.7917000000001894e-05, 3.7945000000001033e-05, 3.804199999999855e-05, 3.8388999999999784e-05, 3.8332999999998035e-05, 3.7624999999999464e-05, 3.747299999999967e-05, 3.776399999999916e-05, 3.7818999999997965e-05, 3.844400000000206e-05, 3.795800000000113e-05, 3.7888999999999284e-05, 3.742999999999802e-05, 3.7540999999998576e-05, 3.81659999999992e-05, 3.8082999999997785e-05, 3.820800000000138e-05, 3.804199999999855e-05, 3.819400000000181e-05, 3.74720000000002e-05, 3.8332999999998035e-05, 3.7847000000000575e-05, 3.808400000000073e-05, 3.7945000000001033e-05, 3.7945000000001033e-05, 3.7625000000002934e-05, 3.77780000000022e-05, 3.7695000000000783e-05, 3.806999999999769e-05, 3.816600000000267e-05, 3.8318999999998465e-05, 3.772200000000045e-05, 3.826399999999966e-05, 3.8083000000001255e-05, 3.794400000000156e-05, 3.794400000000156e-05, 3.772200000000045e-05, 3.748599999999977e-05, 3.8375000000000214e-05, 3.8195000000001283e-05, 3.770800000000088e-05, 3.8124999999999964e-05, 3.8139000000003004e-05, 3.748599999999977e-05, 3.8318999999998465e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.530" endtime="20201112 12:43:01.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.526" endtime="20201112 12:43:01.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.536" endtime="20201112 12:43:01.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.539" endtime="20201112 12:43:01.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.538" endtime="20201112 12:43:01.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.534" endtime="20201112 12:43:01.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.168" endtime="20201112 12:43:01.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.167" endtime="20201112 12:43:01.561"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.572" endtime="20201112 12:43:01.589"></status>
</kw>
<msg timestamp="20201112 12:43:01.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.570" endtime="20201112 12:43:01.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.592" endtime="20201112 12:43:01.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.596" endtime="20201112 12:43:01.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.567" endtime="20201112 12:43:01.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.564" endtime="20201112 12:43:01.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.610" endtime="20201112 12:43:01.896"></status>
</kw>
<msg timestamp="20201112 12:43:01.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.608" endtime="20201112 12:43:01.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.900" endtime="20201112 12:43:01.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.908" endtime="20201112 12:43:01.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.604" endtime="20201112 12:43:01.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.602" endtime="20201112 12:43:01.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.915" level="INFO">${RESULT} = [{'time': 0.023657208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000059e-05, 'source_diff': 3.875000000000059e-05}, {'time': 0.023702153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.912" endtime="20201112 12:43:01.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.930" level="INFO">${ACCURACY} = {'time': [0.023657208, 0.023702153, 0.023749167, 0.023800167, 0.023851194, 0.023899181, 0.023947181, 0.023992208, 0.024040236, 0.024086208, 0.024132208, 0.024182208, 0.024233236, 0.024284222, 0.024329...</msg>
<status status="PASS" starttime="20201112 12:43:01.916" endtime="20201112 12:43:01.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.934" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.933" endtime="20201112 12:43:01.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.937" level="INFO">VALUE: [3.875000000000059e-05, 3.9097000000001825e-05, 3.9416999999999924e-05, 3.880599999999887e-05, 3.848600000000077e-05, 3.8652999999999604e-05, 3.875000000000059e-05, 3.890200000000038e-05, 3.9332999999999035e-05, 3.8847000000001575e-05, 3.9026999999997036e-05, 3.9139000000000534e-05, 3.9138999999997065e-05, 3.927800000000023e-05, 3.892999999999952e-05, 3.848600000000077e-05, 3.87919999999993e-05, 3.9195000000002284e-05, 3.852799999999948e-05, 3.877799999999973e-05, 3.922200000000195e-05, 3.875000000000059e-05, 3.873600000000102e-05, 3.8667000000002644e-05, 3.904199999999955e-05, 3.875000000000059e-05, 3.9139000000000534e-05, 3.932000000000241e-05, 3.9403000000000354e-05, 3.898700000000074e-05, 3.9347000000002075e-05, 3.8777000000000256e-05, 3.8777000000000256e-05, 3.9347000000002075e-05, 3.9082999999998785e-05, 3.870799999999841e-05, 3.8681000000002214e-05, 3.8639000000000034e-05, 3.9153000000000104e-05, 3.9332999999999035e-05, 3.876400000000016e-05, 3.920799999999891e-05, 3.8833000000002005e-05, 3.9194999999998814e-05, 3.875000000000059e-05, 3.9209000000001853e-05, 3.9111000000001395e-05, 3.870799999999841e-05, 3.8958999999998134e-05, 3.8875000000000715e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.935" endtime="20201112 12:43:01.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.931" endtime="20201112 12:43:01.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.940" endtime="20201112 12:43:01.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.944" endtime="20201112 12:43:01.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.942" endtime="20201112 12:43:01.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.939" endtime="20201112 12:43:01.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.562" endtime="20201112 12:43:01.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.561" endtime="20201112 12:43:01.965"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.974" endtime="20201112 12:43:01.990"></status>
</kw>
<msg timestamp="20201112 12:43:01.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.972" endtime="20201112 12:43:01.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.992" endtime="20201112 12:43:01.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.994" endtime="20201112 12:43:01.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.970" endtime="20201112 12:43:01.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.968" endtime="20201112 12:43:01.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.004" endtime="20201112 12:43:02.290"></status>
</kw>
<msg timestamp="20201112 12:43:02.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.003" endtime="20201112 12:43:02.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.294" endtime="20201112 12:43:02.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.303" endtime="20201112 12:43:02.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.000" endtime="20201112 12:43:02.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.999" endtime="20201112 12:43:02.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.310" level="INFO">${RESULT} = [{'time': 0.019975861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.001400000000141e-05, 'source_diff': 4.001400000000141e-05}, {'time': 0.020026889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.306" endtime="20201112 12:43:02.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.323" level="INFO">${ACCURACY} = {'time': [0.019975861, 0.020026889, 0.020073861, 0.020123875, 0.020175875, 0.020223917, 0.020274889, 0.020323917, 0.020376903, 0.020428903, 0.020479903, 0.020526944, 0.020577917, 0.020629931, 0.020681...</msg>
<status status="PASS" starttime="20201112 12:43:02.311" endtime="20201112 12:43:02.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.328" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.327" endtime="20201112 12:43:02.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.330" level="INFO">VALUE: [4.001400000000141e-05, 3.9638999999997565e-05, 3.94859999999983e-05, 4.0360999999999175e-05, 3.997199999999923e-05, 4.0111000000002395e-05, 3.9667000000000174e-05, 4.008399999999926e-05, 4.002799999999751e-05, 3.9889000000001285e-05, 3.975000000000159e-05, 3.9596999999998855e-05, 3.950000000000134e-05, 4.0375000000002215e-05, 4.0208999999999384e-05, 3.9791000000000826e-05, 3.9541000000000576e-05, 3.9832999999999535e-05, 3.994400000000009e-05, 3.9638999999997565e-05, 4.0125000000001965e-05, 3.970799999999941e-05, 3.991600000000095e-05, 4.0333000000000035e-05, 4.020799999999991e-05, 4.024999999999862e-05, 3.955599999999962e-05, 3.945800000000263e-05, 4.002800000000098e-05, 4.0124999999998495e-05, 3.975000000000159e-05, 3.955599999999962e-05, 3.975000000000159e-05, 3.9445000000002534e-05, 4.0375000000002215e-05, 4.0208999999999384e-05, 4.02920000000008e-05, 3.979199999999683e-05, 4.0194999999999814e-05, 4.0346999999999605e-05, 4.0305000000000896e-05, 3.944399999999959e-05, 3.993000000000052e-05, 3.958399999999876e-05, 3.952800000000048e-05, 3.943000000000002e-05, 3.944399999999959e-05, 4.018000000000077e-05, 4.007000000000316e-05, 4.0082999999999785e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.329" endtime="20201112 12:43:02.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.324" endtime="20201112 12:43:02.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.334" endtime="20201112 12:43:02.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.337" endtime="20201112 12:43:02.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.336" endtime="20201112 12:43:02.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.332" endtime="20201112 12:43:02.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.966" endtime="20201112 12:43:02.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.965" endtime="20201112 12:43:02.358"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.367" endtime="20201112 12:43:02.383"></status>
</kw>
<msg timestamp="20201112 12:43:02.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.365" endtime="20201112 12:43:02.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.385" endtime="20201112 12:43:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.388" endtime="20201112 12:43:02.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.363" endtime="20201112 12:43:02.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.361" endtime="20201112 12:43:02.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.398" endtime="20201112 12:43:02.684"></status>
</kw>
<msg timestamp="20201112 12:43:02.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.396" endtime="20201112 12:43:02.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.688" endtime="20201112 12:43:02.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.697" endtime="20201112 12:43:02.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.393" endtime="20201112 12:43:02.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.392" endtime="20201112 12:43:02.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.704" level="INFO">${RESULT} = [{'time': 0.020008139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1445000000001064e-05, 'source_diff': 4.1445000000001064e-05}, {'time': 0.020058139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:02.700" endtime="20201112 12:43:02.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.717" level="INFO">${ACCURACY} = {'time': [0.020008139, 0.020058139, 0.020109139, 0.020156153, 0.020203167, 0.020253153, 0.020306167, 0.020359181, 0.020410208, 0.020457181, 0.020505181, 0.020553236, 0.020605208, 0.020653208, 0.020700...</msg>
<status status="PASS" starttime="20201112 12:43:02.705" endtime="20201112 12:43:02.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.722" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.721" endtime="20201112 12:43:02.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.724" level="INFO">VALUE: [4.1445000000001064e-05, 4.105599999999765e-05, 4.0596999999999855e-05, 4.052799999999801e-05, 4.0931000000000994e-05, 4.082000000000044e-05, 4.0445000000000064e-05, 4.0986999999999274e-05, 4.1361000000000175e-05, 4.0972999999999704e-05, 4.0487000000002243e-05, 4.0610999999999425e-05, 4.0526999999998536e-05, 4.049999999999887e-05, 4.052800000000148e-05, 4.0527000000002006e-05, 4.073599999999955e-05, 4.09859999999998e-05, 4.0847000000000105e-05, 4.1097000000000355e-05, 4.107000000000069e-05, 4.095800000000066e-05, 4.051399999999844e-05, 4.0445000000000064e-05, 4.104200000000155e-05, 4.097200000000023e-05, 4.055600000000062e-05, 4.0487000000002243e-05, 4.051399999999844e-05, 4.097200000000023e-05, 4.0487000000002243e-05, 4.119400000000134e-05, 4.0790999999998356e-05, 4.095800000000066e-05, 4.0791000000001826e-05, 4.141599999999898e-05, 4.068000000000127e-05, 4.069400000000084e-05, 4.077799999999826e-05, 4.1054999999998176e-05, 4.0847000000000105e-05, 4.1388999999999315e-05, 4.0888999999998815e-05, 4.073599999999955e-05, 4.07920000000013e-05, 4.108400000000026e-05, 4.057000000000019e-05, 4.109799999999983e-05, 4.072199999999998e-05, 4.072199999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.723" endtime="20201112 12:43:02.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.718" endtime="20201112 12:43:02.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.728" endtime="20201112 12:43:02.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.731" endtime="20201112 12:43:02.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.730" endtime="20201112 12:43:02.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.726" endtime="20201112 12:43:02.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.359" endtime="20201112 12:43:02.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.359" endtime="20201112 12:43:02.752"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.765" endtime="20201112 12:43:02.781"></status>
</kw>
<msg timestamp="20201112 12:43:02.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.763" endtime="20201112 12:43:02.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.782" endtime="20201112 12:43:02.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.785" endtime="20201112 12:43:02.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.757" endtime="20201112 12:43:02.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.755" endtime="20201112 12:43:02.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.796" endtime="20201112 12:43:03.084"></status>
</kw>
<msg timestamp="20201112 12:43:03.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02388775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023929625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:02.794" endtime="20201112 12:43:03.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02388775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023929625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.089" endtime="20201112 12:43:03.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.097" endtime="20201112 12:43:03.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.791" endtime="20201112 12:43:03.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.790" endtime="20201112 12:43:03.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.104" level="INFO">${RESULT} = [{'time': 0.023929625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1875000000000245e-05, 'source_diff': 4.1875000000000245e-05}, {'time': 0.023978625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:03.101" endtime="20201112 12:43:03.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.118" level="INFO">${ACCURACY} = {'time': [0.023929625, 0.023978625, 0.024027639, 0.024075625, 0.024128694, 0.024182653, 0.024234639, 0.024286667, 0.024337681, 0.024392667, 0.024445667, 0.024499667, 0.024549681, 0.024602681, 0.024651...</msg>
<status status="PASS" starttime="20201112 12:43:03.105" endtime="20201112 12:43:03.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.122" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.121" endtime="20201112 12:43:03.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.125" level="INFO">VALUE: [4.1875000000000245e-05, 4.197200000000123e-05, 4.177799999999926e-05, 4.149999999999987e-05, 4.1512999999999967e-05, 4.222199999999801e-05, 4.1402999999998885e-05, 4.2111000000000925e-05, 4.206999999999822e-05, 4.226400000000019e-05, 4.1417000000001924e-05, 4.2360999999997706e-05, 4.1473000000000204e-05, 4.1973000000000704e-05, 4.149999999999987e-05, 4.2277000000000287e-05, 4.2333000000002036e-05, 4.2375000000000745e-05, 4.1582999999997816e-05, 4.144400000000159e-05, 4.1973000000000704e-05, 4.144400000000159e-05, 4.2097000000001356e-05, 4.1680999999998275e-05, 4.173600000000055e-05, 4.1916999999998955e-05, 4.159800000000033e-05, 4.157000000000119e-05, 4.1652999999999135e-05, 4.1694999999997845e-05, 4.1611000000000425e-05, 4.2040999999999606e-05, 4.1681000000001744e-05, 4.177799999999926e-05, 4.2208999999997915e-05, 4.2041000000003076e-05, 4.200000000000037e-05, 4.2318999999998996e-05, 4.216599999999973e-05, 4.19860000000008e-05, 4.201399999999994e-05, 4.177800000000273e-05, 4.1805000000002396e-05, 4.2166999999999205e-05, 4.200000000000037e-05, 4.180600000000187e-05, 4.1902999999999385e-05, 4.152799999999901e-05, 4.197199999999776e-05, 4.174999999999665e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.123" endtime="20201112 12:43:03.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.119" endtime="20201112 12:43:03.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.128" endtime="20201112 12:43:03.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.132" endtime="20201112 12:43:03.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.130" endtime="20201112 12:43:03.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.127" endtime="20201112 12:43:03.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.753" endtime="20201112 12:43:03.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.753" endtime="20201112 12:43:03.153"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.162" endtime="20201112 12:43:03.177"></status>
</kw>
<msg timestamp="20201112 12:43:03.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.160" endtime="20201112 12:43:03.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.179" endtime="20201112 12:43:03.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.182" endtime="20201112 12:43:03.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.158" endtime="20201112 12:43:03.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.155" endtime="20201112 12:43:03.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.192" endtime="20201112 12:43:03.477"></status>
</kw>
<msg timestamp="20201112 12:43:03.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.190" endtime="20201112 12:43:03.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.482" endtime="20201112 12:43:03.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.490" endtime="20201112 12:43:03.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.188" endtime="20201112 12:43:03.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.186" endtime="20201112 12:43:03.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.497" level="INFO">${RESULT} = [{'time': 0.020002792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3194999999999345e-05, 'source_diff': 4.3194999999999345e-05}, {'time': 0.02005475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:03.493" endtime="20201112 12:43:03.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.511" level="INFO">${ACCURACY} = {'time': [0.020002792, 0.02005475, 0.02010775, 0.020162778, 0.020213792, 0.020269833, 0.020322778, 0.020377792, 0.020427792, 0.020483792, 0.020533806, 0.020587819, 0.020638833, 0.020694819, 0.02074383...</msg>
<status status="PASS" starttime="20201112 12:43:03.498" endtime="20201112 12:43:03.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.516" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.515" endtime="20201112 12:43:03.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.519" level="INFO">VALUE: [4.3194999999999345e-05, 4.323599999999858e-05, 4.254199999999958e-05, 4.281999999999897e-05, 4.2959000000002134e-05, 4.323600000000205e-05, 4.247199999999826e-05, 4.2972999999998235e-05, 4.3208999999998915e-05, 4.275000000000112e-05, 4.3209000000002384e-05, 4.2527000000000537e-05, 4.248599999999783e-05, 4.323599999999858e-05, 4.2527000000000537e-05, 4.3346999999999136e-05, 4.2791000000000357e-05, 4.3318999999999996e-05, 4.2554999999999676e-05, 4.3096999999998886e-05, 4.26799999999998e-05, 4.2930999999999525e-05, 4.27920000000033e-05, 4.327800000000076e-05, 4.323599999999858e-05, 4.275000000000112e-05, 4.301400000000094e-05, 4.3110999999998456e-05, 4.250000000000087e-05, 4.327800000000076e-05, 4.322199999999901e-05, 4.254199999999958e-05, 4.327700000000129e-05, 4.25129999999975e-05, 4.326400000000119e-05, 4.276400000000069e-05, 4.251400000000044e-05, 4.294399999999962e-05, 4.305599999999965e-05, 4.272199999999851e-05, 4.31800000000003e-05, 4.277800000000026e-05, 4.3139000000001065e-05, 4.332000000000294e-05, 4.3208999999998915e-05, 4.2861000000001676e-05, 4.3082999999999316e-05, 4.322199999999901e-05, 4.325000000000162e-05, 4.277800000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.517" endtime="20201112 12:43:03.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.512" endtime="20201112 12:43:03.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.522" endtime="20201112 12:43:03.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.526" endtime="20201112 12:43:03.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.524" endtime="20201112 12:43:03.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.521" endtime="20201112 12:43:03.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.154" endtime="20201112 12:43:03.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.153" endtime="20201112 12:43:03.547"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.556" endtime="20201112 12:43:03.571"></status>
</kw>
<msg timestamp="20201112 12:43:03.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.554" endtime="20201112 12:43:03.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.573" endtime="20201112 12:43:03.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.575" endtime="20201112 12:43:03.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.551" endtime="20201112 12:43:03.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.549" endtime="20201112 12:43:03.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.585" endtime="20201112 12:43:03.872"></status>
</kw>
<msg timestamp="20201112 12:43:03.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02007425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.584" endtime="20201112 12:43:03.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02007425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.877" endtime="20201112 12:43:03.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.885" endtime="20201112 12:43:03.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.581" endtime="20201112 12:43:03.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.579" endtime="20201112 12:43:03.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.892" level="INFO">${RESULT} = [{'time': 0.020118444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.419400000000087e-05, 'source_diff': 4.419400000000087e-05}, {'time': 0.020171444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.888" endtime="20201112 12:43:03.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.905" level="INFO">${ACCURACY} = {'time': [0.020118444, 0.020171444, 0.020222458, 0.020275514, 0.020330486, 0.020383472, 0.020440472, 0.020497486, 0.020551514, 0.0206035, 0.020655514, 0.020708514, 0.020761542, 0.020816528, 0.02086752...</msg>
<status status="PASS" starttime="20201112 12:43:03.893" endtime="20201112 12:43:03.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.910" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.909" endtime="20201112 12:43:03.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.913" level="INFO">VALUE: [4.419400000000087e-05, 4.376299999999875e-05, 4.402699999999857e-05, 4.3931000000000525e-05, 4.4416999999997986e-05, 4.4374999999999276e-05, 4.369400000000037e-05, 4.431899999999753e-05, 4.3888999999998346e-05, 4.369400000000037e-05, 4.4333000000000566e-05, 4.3860999999999206e-05, 4.3681000000000275e-05, 4.408399999999979e-05, 4.3653000000001135e-05, 4.3972999999999235e-05, 4.4111000000002926e-05, 4.3805000000000927e-05, 4.3625000000001996e-05, 4.384799999999911e-05, 4.4096999999999886e-05, 4.438800000000284e-05, 4.398599999999933e-05, 4.347200000000273e-05, 4.402799999999804e-05, 4.423599999999958e-05, 4.4096999999999886e-05, 4.369400000000037e-05, 4.427799999999829e-05, 4.38060000000004e-05, 4.4152999999998166e-05, 4.3638999999998096e-05, 4.4083000000000316e-05, 4.3945000000000095e-05, 4.3846999999999636e-05, 4.4195000000000345e-05, 4.426400000000219e-05, 4.4236999999999055e-05, 4.416600000000173e-05, 4.424999999999915e-05, 4.365200000000166e-05, 4.393000000000105e-05, 4.41800000000013e-05, 4.3805000000000927e-05, 4.365200000000166e-05, 4.3875000000002246e-05, 4.351400000000144e-05, 4.3917000000000955e-05, 4.3916999999997486e-05, 4.43329999999971e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.911" endtime="20201112 12:43:03.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.906" endtime="20201112 12:43:03.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.922" endtime="20201112 12:43:03.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.926" endtime="20201112 12:43:03.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.924" endtime="20201112 12:43:03.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.921" endtime="20201112 12:43:03.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.548" endtime="20201112 12:43:03.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.547" endtime="20201112 12:43:03.947"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.956" endtime="20201112 12:43:03.973"></status>
</kw>
<msg timestamp="20201112 12:43:03.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.954" endtime="20201112 12:43:03.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.974" endtime="20201112 12:43:03.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.977" endtime="20201112 12:43:03.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.952" endtime="20201112 12:43:03.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.950" endtime="20201112 12:43:03.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.987" endtime="20201112 12:43:04.274"></status>
</kw>
<msg timestamp="20201112 12:43:04.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02011925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.985" endtime="20201112 12:43:04.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02011925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:04.278" endtime="20201112 12:43:04.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.286" endtime="20201112 12:43:04.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.983" endtime="20201112 12:43:04.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.981" endtime="20201112 12:43:04.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.293" level="INFO">${RESULT} = [{'time': 0.020164625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.537499999999681e-05, 'source_diff': 4.537499999999681e-05}, {'time': 0.020219653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.290" endtime="20201112 12:43:04.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.307" level="INFO">${ACCURACY} = {'time': [0.020164625, 0.020219653, 0.020272639, 0.020324639, 0.020380639, 0.020434639, 0.020492653, 0.020544681, 0.020596667, 0.020649694, 0.020702681, 0.020753681, 0.020811681, 0.020868694, 0.020921...</msg>
<status status="PASS" starttime="20201112 12:43:04.294" endtime="20201112 12:43:04.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.311" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.310" endtime="20201112 12:43:04.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.314" level="INFO">VALUE: [4.537499999999681e-05, 4.482000000000097e-05, 4.5152999999999166e-05, 4.447199999999679e-05, 4.4445000000000595e-05, 4.451400000000244e-05, 4.5402999999999416e-05, 4.504199999999861e-05, 4.504199999999861e-05, 4.4624999999999526e-05, 4.526399999999972e-05, 4.451399999999897e-05, 4.477799999999879e-05, 4.472200000000051e-05, 4.542999999999908e-05, 4.5361000000000706e-05, 4.5375000000000276e-05, 4.526399999999972e-05, 4.531899999999853e-05, 4.5083000000001316e-05, 4.4874999999999776e-05, 4.456899999999778e-05, 4.5402999999999416e-05, 4.4874999999999776e-05, 4.5347000000001136e-05, 4.505600000000165e-05, 4.501400000000294e-05, 4.447200000000026e-05, 4.4555000000001677e-05, 4.526300000000025e-05, 4.4430999999997556e-05, 4.4874999999999776e-05, 4.472200000000051e-05, 4.45129999999995e-05, 4.492999999999858e-05, 4.509699999999742e-05, 4.4903000000002385e-05, 4.4653000000002135e-05, 4.5375000000000276e-05, 4.5138999999999596e-05, 4.472200000000051e-05, 4.44999999999994e-05, 4.495800000000119e-05, 4.4709000000000415e-05, 4.479200000000183e-05, 4.455600000000115e-05, 4.4694999999997376e-05, 4.4889000000002816e-05, 4.4445000000000595e-05, 4.5111000000000456e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.312" endtime="20201112 12:43:04.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.308" endtime="20201112 12:43:04.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.317" endtime="20201112 12:43:04.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.321" endtime="20201112 12:43:04.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.319" endtime="20201112 12:43:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.316" endtime="20201112 12:43:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.948" endtime="20201112 12:43:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.947" endtime="20201112 12:43:04.342"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.351" endtime="20201112 12:43:04.369"></status>
</kw>
<msg timestamp="20201112 12:43:04.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.349" endtime="20201112 12:43:04.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.370" endtime="20201112 12:43:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.373" endtime="20201112 12:43:04.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.347" endtime="20201112 12:43:04.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.344" endtime="20201112 12:43:04.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.383" endtime="20201112 12:43:04.669"></status>
</kw>
<msg timestamp="20201112 12:43:04.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.381" endtime="20201112 12:43:04.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.673" endtime="20201112 12:43:04.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.682" endtime="20201112 12:43:04.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.379" endtime="20201112 12:43:04.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.377" endtime="20201112 12:43:04.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.688" level="INFO">${RESULT} = [{'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.622199999999854e-05, 'source_diff': 4.622199999999854e-05}, {'time': 0.020169597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.685" endtime="20201112 12:43:04.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.702" level="INFO">${ACCURACY} = {'time': [0.020111569, 0.020169597, 0.020224583, 0.020276583, 0.020333625, 0.020392597, 0.020446597, 0.020499611, 0.020558611, 0.020617625, 0.020671653, 0.020730653, 0.020782653, 0.020837639, 0.020892...</msg>
<status status="PASS" starttime="20201112 12:43:04.689" endtime="20201112 12:43:04.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.707" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.705" endtime="20201112 12:43:04.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.709" level="INFO">VALUE: [4.622199999999854e-05, 4.575000000000065e-05, 4.5583000000001817e-05, 4.5597000000001386e-05, 4.569400000000237e-05, 4.626399999999725e-05, 4.605499999999971e-05, 4.6375000000001276e-05, 4.60000000000009e-05, 4.577799999999979e-05, 4.6111000000001456e-05, 4.6209000000001915e-05, 4.625000000000115e-05, 4.582000000000197e-05, 4.6375000000001276e-05, 4.58329999999986e-05, 4.5902999999999916e-05, 4.632000000000247e-05, 4.580500000000293e-05, 4.5402999999999416e-05, 4.569400000000237e-05, 4.641599999999704e-05, 4.63329999999991e-05, 4.601400000000047e-05, 4.5639000000000096e-05, 4.556899999999878e-05, 4.551399999999997e-05, 4.547200000000126e-05, 4.60000000000009e-05, 4.5902999999999916e-05, 4.6333000000002567e-05, 4.5916999999999486e-05, 4.5445000000001595e-05, 4.5625000000000526e-05, 4.607000000000222e-05, 4.6153000000000166e-05, 4.5694999999998376e-05, 4.6139000000000596e-05, 4.60000000000009e-05, 4.6167000000003205e-05, 4.617999999999983e-05, 4.572200000000151e-05, 4.6153000000000166e-05, 4.576400000000022e-05, 4.594399999999915e-05, 4.554099999999964e-05, 4.579199999999936e-05, 4.5611000000000956e-05, 4.605599999999918e-05, 4.5944999999998626e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.708" endtime="20201112 12:43:04.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.703" endtime="20201112 12:43:04.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.713" endtime="20201112 12:43:04.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.716" endtime="20201112 12:43:04.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.715" endtime="20201112 12:43:04.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.711" endtime="20201112 12:43:04.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.343" endtime="20201112 12:43:04.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.342" endtime="20201112 12:43:04.737"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.746" endtime="20201112 12:43:04.763"></status>
</kw>
<msg timestamp="20201112 12:43:04.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.745" endtime="20201112 12:43:04.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.765" endtime="20201112 12:43:04.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.767" endtime="20201112 12:43:04.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.742" endtime="20201112 12:43:04.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.740" endtime="20201112 12:43:04.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.777" endtime="20201112 12:43:05.065"></status>
</kw>
<msg timestamp="20201112 12:43:05.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.776" endtime="20201112 12:43:05.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.069" endtime="20201112 12:43:05.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.078" endtime="20201112 12:43:05.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.773" endtime="20201112 12:43:05.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.772" endtime="20201112 12:43:05.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.084" level="INFO">${RESULT} = [{'time': 0.020396014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.655599999999968e-05, 'source_diff': 4.655599999999968e-05}, {'time': 0.020455028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.081" endtime="20201112 12:43:05.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.099" level="INFO">${ACCURACY} = {'time': [0.020396014, 0.020455028, 0.020510097, 0.020563042, 0.020620042, 0.020679042, 0.020733056, 0.020792056, 0.020852083, 0.020908083, 0.020966083, 0.021022083, 0.021080111, 0.021138097, 0.021193...</msg>
<status status="PASS" starttime="20201112 12:43:05.085" endtime="20201112 12:43:05.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.104" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.102" endtime="20201112 12:43:05.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.106" level="INFO">VALUE: [4.655599999999968e-05, 4.6958999999999196e-05, 4.706900000000028e-05, 4.6931000000000056e-05, 4.7403000000001416e-05, 4.6889000000001346e-05, 4.7208999999999446e-05, 4.727800000000129e-05, 4.6875000000001776e-05, 4.6597000000002387e-05, 4.73330000000001e-05, 4.727700000000182e-05, 4.740299999999795e-05, 4.666600000000076e-05, 4.679200000000036e-05, 4.708300000000332e-05, 4.734699999999967e-05, 4.6625000000001526e-05, 4.699999999999843e-05, 4.6694999999999376e-05, 4.729200000000086e-05, 4.706999999999975e-05, 4.683399999999907e-05, 4.7208999999999446e-05, 4.7208999999999446e-05, 4.73330000000001e-05, 4.679200000000036e-05, 4.666600000000076e-05, 4.680500000000046e-05, 4.716599999999779e-05, 4.648599999999836e-05, 4.680500000000046e-05, 4.684699999999917e-05, 4.706900000000028e-05, 4.722199999999954e-05, 4.704200000000061e-05, 4.644399999999965e-05, 4.727800000000129e-05, 4.673599999999861e-05, 4.708299999999985e-05, 4.7208999999999446e-05, 4.7375000000002276e-05, 4.680599999999993e-05, 4.673599999999861e-05, 4.655599999999968e-05, 4.6931000000000056e-05, 4.7181000000000306e-05, 4.662499999999806e-05, 4.731900000000053e-05, 4.71529999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.105" endtime="20201112 12:43:05.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.100" endtime="20201112 12:43:05.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.110" endtime="20201112 12:43:05.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.113" endtime="20201112 12:43:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.112" endtime="20201112 12:43:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.108" endtime="20201112 12:43:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.738" endtime="20201112 12:43:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.738" endtime="20201112 12:43:05.134"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.143" endtime="20201112 12:43:05.160"></status>
</kw>
<msg timestamp="20201112 12:43:05.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.141" endtime="20201112 12:43:05.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.161" endtime="20201112 12:43:05.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.164" endtime="20201112 12:43:05.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.139" endtime="20201112 12:43:05.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.137" endtime="20201112 12:43:05.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.174" endtime="20201112 12:43:05.460"></status>
</kw>
<msg timestamp="20201112 12:43:05.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.173" endtime="20201112 12:43:05.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.464" endtime="20201112 12:43:05.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.473" endtime="20201112 12:43:05.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.170" endtime="20201112 12:43:05.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.168" endtime="20201112 12:43:05.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.480" level="INFO">${RESULT} = [{'time': 0.019911833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.823600000000011e-05, 'source_diff': 4.823600000000011e-05}, {'time': 0.019965833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.476" endtime="20201112 12:43:05.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.493" level="INFO">${ACCURACY} = {'time': [0.019911833, 0.019965833, 0.020021833, 0.020076847, 0.020134847, 0.020191917, 0.020249875, 0.020310889, 0.020365875, 0.020425889, 0.020480903, 0.020536889, 0.020592917, 0.020647917, 0.020701...</msg>
<status status="PASS" starttime="20201112 12:43:05.481" endtime="20201112 12:43:05.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.498" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.496" endtime="20201112 12:43:05.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.500" level="INFO">VALUE: [4.823600000000011e-05, 4.741599999999804e-05, 4.823600000000011e-05, 4.756899999999731e-05, 4.787499999999931e-05, 4.805600000000118e-05, 4.787499999999931e-05, 4.795799999999725e-05, 4.837499999999981e-05, 4.772200000000004e-05, 4.758400000000329e-05, 4.752799999999807e-05, 4.802799999999857e-05, 4.7972999999999766e-05, 4.783299999999713e-05, 4.75139999999985e-05, 4.833400000000057e-05, 4.78330000000006e-05, 4.754199999999764e-05, 4.777699999999885e-05, 4.833299999999763e-05, 4.748599999999936e-05, 4.836100000000024e-05, 4.8167000000001736e-05, 4.808300000000085e-05, 4.763899999999863e-05, 4.827800000000229e-05, 4.799999999999943e-05, 4.822200000000054e-05, 4.801400000000247e-05, 4.7708999999999946e-05, 4.761099999999949e-05, 4.7694999999996907e-05, 4.78200000000005e-05, 4.829200000000186e-05, 4.748599999999936e-05, 4.806900000000128e-05, 4.804100000000214e-05, 4.805499999999824e-05, 4.752800000000154e-05, 4.749999999999893e-05, 4.791599999999854e-05, 4.805499999999824e-05, 4.751400000000197e-05, 4.752800000000154e-05, 4.744399999999718e-05, 4.784700000000017e-05, 4.827799999999882e-05, 4.7944999999997157e-05, 4.7653000000001666e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.499" endtime="20201112 12:43:05.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.494" endtime="20201112 12:43:05.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.504" endtime="20201112 12:43:05.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.507" endtime="20201112 12:43:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.506" endtime="20201112 12:43:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.502" endtime="20201112 12:43:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.135" endtime="20201112 12:43:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.134" endtime="20201112 12:43:05.528"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.537" endtime="20201112 12:43:05.554"></status>
</kw>
<msg timestamp="20201112 12:43:05.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.536" endtime="20201112 12:43:05.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.555" endtime="20201112 12:43:05.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.558" endtime="20201112 12:43:05.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.533" endtime="20201112 12:43:05.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.531" endtime="20201112 12:43:05.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.568" endtime="20201112 12:43:05.855"></status>
</kw>
<msg timestamp="20201112 12:43:05.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.567" endtime="20201112 12:43:05.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.859" endtime="20201112 12:43:05.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.868" endtime="20201112 12:43:05.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.564" endtime="20201112 12:43:05.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.562" endtime="20201112 12:43:05.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.875" level="INFO">${RESULT} = [{'time': 0.019914403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.911100000000099e-05, 'source_diff': 4.911100000000099e-05}, {'time': 0.019971403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.871" endtime="20201112 12:43:05.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.888" level="INFO">${ACCURACY} = {'time': [0.019914403, 0.019971403, 0.020029458, 0.020085431, 0.020144444, 0.020202431, 0.020262444, 0.020321458, 0.020379458, 0.020439472, 0.020498472, 0.020560472, 0.020615486, 0.020677486, 0.020733...</msg>
<status status="PASS" starttime="20201112 12:43:05.876" endtime="20201112 12:43:05.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.893" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.892" endtime="20201112 12:43:05.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.895" level="INFO">VALUE: [4.911100000000099e-05, 4.931999999999853e-05, 4.870800000000147e-05, 4.9223000000001016e-05, 4.88880000000004e-05, 4.875000000000018e-05, 4.849999999999993e-05, 4.936100000000124e-05, 4.930499999999949e-05, 4.91529999999997e-05, 4.931899999999906e-05, 4.925000000000068e-05, 4.916699999999927e-05, 4.940299999999995e-05, 4.875000000000018e-05, 4.938900000000038e-05, 4.906999999999828e-05, 4.848600000000036e-05, 4.936100000000124e-05, 4.908399999999785e-05, 4.919499999999841e-05, 4.933400000000157e-05, 4.9195000000001876e-05, 4.879099999999942e-05, 4.936099999999777e-05, 4.923600000000111e-05, 4.880499999999899e-05, 4.862500000000006e-05, 4.893000000000258e-05, 4.9014e-05, 4.848600000000036e-05, 4.891699999999902e-05, 4.913900000000013e-05, 4.941699999999952e-05, 4.875000000000018e-05, 4.931999999999853e-05, 4.926400000000025e-05, 4.873600000000061e-05, 4.916699999999927e-05, 4.9209000000001446e-05, 4.879200000000236e-05, 4.943099999999909e-05, 4.900000000000043e-05, 4.892999999999911e-05, 4.931899999999906e-05, 4.906900000000228e-05, 4.8707999999998e-05, 4.905499999999924e-05, 4.845799999999775e-05, 4.924999999999721e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.894" endtime="20201112 12:43:05.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.889" endtime="20201112 12:43:05.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.899" endtime="20201112 12:43:05.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.902" endtime="20201112 12:43:05.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.901" endtime="20201112 12:43:05.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.897" endtime="20201112 12:43:05.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.529" endtime="20201112 12:43:05.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.529" endtime="20201112 12:43:05.923"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.932" endtime="20201112 12:43:05.950"></status>
</kw>
<msg timestamp="20201112 12:43:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.930" endtime="20201112 12:43:05.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.951" endtime="20201112 12:43:05.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.954" endtime="20201112 12:43:05.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.928" endtime="20201112 12:43:05.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.926" endtime="20201112 12:43:05.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.964" endtime="20201112 12:43:06.249"></status>
</kw>
<msg timestamp="20201112 12:43:06.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.963" endtime="20201112 12:43:06.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.254" endtime="20201112 12:43:06.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.262" endtime="20201112 12:43:06.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.960" endtime="20201112 12:43:06.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.958" endtime="20201112 12:43:06.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.269" level="INFO">${RESULT} = [{'time': 0.019951444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.948599999999789e-05, 'source_diff': 4.948599999999789e-05}, {'time': 0.020008458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.266" endtime="20201112 12:43:06.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.282" level="INFO">${ACCURACY} = {'time': [0.019951444, 0.020008458, 0.020071472, 0.020127458, 0.020186486, 0.020248542, 0.020305486, 0.0203655, 0.0204245, 0.020487528, 0.020544514, 0.020607514, 0.020668528, 0.020729556, 0.020792542,...</msg>
<status status="PASS" starttime="20201112 12:43:06.270" endtime="20201112 12:43:06.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.287" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.286" endtime="20201112 12:43:06.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.290" level="INFO">VALUE: [4.948599999999789e-05, 5.005500000000024e-05, 4.986099999999827e-05, 4.944399999999918e-05, 5.006899999999981e-05, 5.026400000000125e-05, 4.979199999999989e-05, 4.955600000000268e-05, 5.037500000000181e-05, 4.980600000000293e-05, 5.004200000000014e-05, 4.977800000000032e-05, 4.993099999999959e-05, 4.954199999999964e-05, 4.9709000000001946e-05, 4.9473000000001266e-05, 4.997199999999882e-05, 4.975000000000118e-05, 4.977700000000085e-05, 5.009699999999895e-05, 4.961100000000149e-05, 4.975000000000118e-05, 5.040300000000095e-05, 4.96530000000002e-05, 4.95140000000005e-05, 4.958299999999888e-05, 4.9723000000001516e-05, 5.009700000000242e-05, 5.038900000000138e-05, 4.95140000000005e-05, 5.019499999999941e-05, 5.0222999999998547e-05, 4.975000000000118e-05, 4.9431000000002556e-05, 4.988899999999741e-05, 5.030599999999996e-05, 5.018000000000036e-05, 4.977700000000085e-05, 4.948599999999789e-05, 5.016600000000079e-05, 4.991600000000054e-05, 4.945799999999875e-05, 4.997199999999882e-05, 4.963899999999716e-05, 4.944399999999918e-05, 5.000000000000143e-05, 5.025000000000168e-05, 5.026400000000125e-05, 5.008400000000232e-05, 4.9945000000002626e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.288" endtime="20201112 12:43:06.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.283" endtime="20201112 12:43:06.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.293" endtime="20201112 12:43:06.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.297" endtime="20201112 12:43:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.295" endtime="20201112 12:43:06.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.292" endtime="20201112 12:43:06.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.924" endtime="20201112 12:43:06.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.924" endtime="20201112 12:43:06.318"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.327" endtime="20201112 12:43:06.343"></status>
</kw>
<msg timestamp="20201112 12:43:06.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.325" endtime="20201112 12:43:06.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.344" endtime="20201112 12:43:06.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.347" endtime="20201112 12:43:06.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.322" endtime="20201112 12:43:06.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.320" endtime="20201112 12:43:06.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.357" endtime="20201112 12:43:06.643"></status>
</kw>
<msg timestamp="20201112 12:43:06.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:06.356" endtime="20201112 12:43:06.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:06.648" endtime="20201112 12:43:06.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.656" endtime="20201112 12:43:06.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.353" endtime="20201112 12:43:06.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.351" endtime="20201112 12:43:06.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.663" level="INFO">${RESULT} = [{'time': 0.02008875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.143099999999762e-05, 'source_diff': 5.143099999999762e-05}, {'time': 0.020147819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:06.659" endtime="20201112 12:43:06.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.677" level="INFO">${ACCURACY} = {'time': [0.02008875, 0.020147819, 0.020207819, 0.020267778, 0.020327847, 0.020385778, 0.020448778, 0.020508792, 0.020566792, 0.020628806, 0.020689806, 0.020747819, 0.020804819, 0.020867903, 0.0209318...</msg>
<status status="PASS" starttime="20201112 12:43:06.664" endtime="20201112 12:43:06.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.682" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.681" endtime="20201112 12:43:06.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.684" level="INFO">VALUE: [5.143099999999762e-05, 5.100000000000243e-05, 5.056899999999684e-05, 5.08339999999996e-05, 5.086099999999927e-05, 5.119500000000041e-05, 5.095899999999973e-05, 5.112500000000256e-05, 5.054200000000064e-05, 5.140299999999848e-05, 5.132000000000053e-05, 5.069400000000043e-05, 5.0387999999998434e-05, 5.073599999999914e-05, 5.102800000000157e-05, 5.13470000000002e-05, 5.072199999999957e-05, 5.095800000000025e-05, 5.126400000000225e-05, 5.095800000000025e-05, 5.144400000000118e-05, 5.074999999999871e-05, 5.065299999999773e-05, 5.082000000000003e-05, 5.044499999999966e-05, 5.116700000000127e-05, 5.056999999999978e-05, 5.099999999999896e-05, 5.118099999999737e-05, 5.099999999999896e-05, 5.0708e-05, 5.127799999999835e-05, 5.055600000000021e-05, 5.1429999999998144e-05, 5.055500000000074e-05, 5.136099999999977e-05, 5.0708e-05, 5.113900000000213e-05, 5.112499999999909e-05, 5.095899999999973e-05, 5.108399999999985e-05, 5.124999999999921e-05, 5.05140000000015e-05, 5.086199999999874e-05, 5.077800000000132e-05, 5.100000000000243e-05, 5.129100000000192e-05, 5.093000000000111e-05, 5.097199999999982e-05, 5.056900000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.683" endtime="20201112 12:43:06.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.678" endtime="20201112 12:43:06.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.688" endtime="20201112 12:43:06.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.692" endtime="20201112 12:43:06.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.690" endtime="20201112 12:43:06.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.686" endtime="20201112 12:43:06.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.319" endtime="20201112 12:43:06.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.318" endtime="20201112 12:43:06.712"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.721" endtime="20201112 12:43:06.738"></status>
</kw>
<msg timestamp="20201112 12:43:06.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.720" endtime="20201112 12:43:06.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.739" endtime="20201112 12:43:06.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.742" endtime="20201112 12:43:06.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.717" endtime="20201112 12:43:06.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.715" endtime="20201112 12:43:06.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.752" endtime="20201112 12:43:07.039"></status>
</kw>
<msg timestamp="20201112 12:43:07.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.751" endtime="20201112 12:43:07.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.044" endtime="20201112 12:43:07.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.052" endtime="20201112 12:43:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.748" endtime="20201112 12:43:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.746" endtime="20201112 12:43:07.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.059" level="INFO">${RESULT} = [{'time': 0.019900389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.176399999999928e-05, 'source_diff': 5.176399999999928e-05}, {'time': 0.019962417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.056" endtime="20201112 12:43:07.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.073" level="INFO">${ACCURACY} = {'time': [0.019900389, 0.019962417, 0.020020458, 0.020080417, 0.020139417, 0.020203431, 0.020261431, 0.020326458, 0.020385444, 0.020447458, 0.020511472, 0.020570486, 0.020628472, 0.0206895, 0.0207515,...</msg>
<status status="PASS" starttime="20201112 12:43:07.060" endtime="20201112 12:43:07.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.077" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.076" endtime="20201112 12:43:07.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.080" level="INFO">VALUE: [5.176399999999928e-05, 5.236100000000077e-05, 5.227699999999988e-05, 5.219500000000141e-05, 5.148599999999989e-05, 5.202800000000257e-05, 5.168100000000134e-05, 5.1985999999996924e-05, 5.1957999999997784e-05, 5.147200000000032e-05, 5.198600000000039e-05, 5.181899999999809e-05, 5.1665999999998824e-05, 5.161100000000002e-05, 5.205599999999824e-05, 5.227799999999935e-05, 5.1708000000001e-05, 5.212500000000009e-05, 5.199999999999996e-05, 5.181999999999756e-05, 5.206999999999781e-05, 5.191700000000202e-05, 5.144499999999719e-05, 5.230500000000249e-05, 5.144499999999719e-05, 5.202699999999963e-05, 5.2235999999997174e-05, 5.199999999999996e-05, 5.184699999999723e-05, 5.226399999999978e-05, 5.18470000000007e-05, 5.198600000000039e-05, 5.205499999999877e-05, 5.155600000000121e-05, 5.148599999999989e-05, 5.15279999999986e-05, 5.184800000000017e-05, 5.156899999999784e-05, 5.211099999999705e-05, 5.193100000000159e-05, 5.220899999999751e-05, 5.155499999999827e-05, 5.241700000000252e-05, 5.174999999999971e-05, 5.173600000000014e-05, 5.2221999999997604e-05, 5.15409999999987e-05, 5.201399999999953e-05, 5.183300000000113e-05, 5.147200000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.078" endtime="20201112 12:43:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.073" endtime="20201112 12:43:07.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.083" endtime="20201112 12:43:07.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.087" endtime="20201112 12:43:07.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.085" endtime="20201112 12:43:07.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.082" endtime="20201112 12:43:07.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.713" endtime="20201112 12:43:07.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.713" endtime="20201112 12:43:07.108"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.117" endtime="20201112 12:43:07.133"></status>
</kw>
<msg timestamp="20201112 12:43:07.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.115" endtime="20201112 12:43:07.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.135" endtime="20201112 12:43:07.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.137" endtime="20201112 12:43:07.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.112" endtime="20201112 12:43:07.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.110" endtime="20201112 12:43:07.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.147" endtime="20201112 12:43:07.431"></status>
</kw>
<msg timestamp="20201112 12:43:07.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019968736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.146" endtime="20201112 12:43:07.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019968736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.436" endtime="20201112 12:43:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.444" endtime="20201112 12:43:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.143" endtime="20201112 12:43:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.141" endtime="20201112 12:43:07.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.451" level="INFO">${RESULT} = [{'time': 0.020021347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.261099999999755e-05, 'source_diff': 5.261099999999755e-05}, {'time': 0.020086361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.448" endtime="20201112 12:43:07.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.465" level="INFO">${ACCURACY} = {'time': [0.020021347, 0.020086361, 0.020151347, 0.020214375, 0.020275375, 0.020340375, 0.020404389, 0.020464403, 0.020526389, 0.020587403, 0.020651403, 0.020716431, 0.020781431, 0.020840444, 0.020903...</msg>
<status status="PASS" starttime="20201112 12:43:07.452" endtime="20201112 12:43:07.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.469" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.468" endtime="20201112 12:43:07.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.472" level="INFO">VALUE: [5.261099999999755e-05, 5.322200000000207e-05, 5.313900000000066e-05, 5.337500000000134e-05, 5.308300000000238e-05, 5.308300000000238e-05, 5.2763999999996813e-05, 5.3221999999998604e-05, 5.287499999999737e-05, 5.33340000000021e-05, 5.2749999999997244e-05, 5.298700000000087e-05, 5.327800000000035e-05, 5.2443999999998714e-05, 5.288900000000041e-05, 5.251400000000003e-05, 5.2735999999997674e-05, 5.28470000000017e-05, 5.2999999999997494e-05, 5.261100000000102e-05, 5.333299999999916e-05, 5.304199999999967e-05, 5.269499999999844e-05, 5.2943999999999214e-05, 5.262500000000059e-05, 5.247200000000132e-05, 5.3235999999998174e-05, 5.338900000000091e-05, 5.293099999999912e-05, 5.26669999999993e-05, 5.277799999999985e-05, 5.2749999999997244e-05, 5.301400000000053e-05, 5.258300000000188e-05, 5.308299999999891e-05, 5.341700000000005e-05, 5.263900000000016e-05, 5.306899999999934e-05, 5.298600000000139e-05, 5.311100000000152e-05, 5.255599999999874e-05, 5.255599999999874e-05, 5.251400000000003e-05, 5.329199999999992e-05, 5.268100000000234e-05, 5.305599999999924e-05, 5.31669999999998e-05, 5.337500000000134e-05, 5.2693999999998964e-05, 5.302699999999716e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.470" endtime="20201112 12:43:07.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.466" endtime="20201112 12:43:07.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.475" endtime="20201112 12:43:07.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.479" endtime="20201112 12:43:07.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.477" endtime="20201112 12:43:07.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.474" endtime="20201112 12:43:07.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.109" endtime="20201112 12:43:07.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.108" endtime="20201112 12:43:07.500"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.509" endtime="20201112 12:43:07.526"></status>
</kw>
<msg timestamp="20201112 12:43:07.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.507" endtime="20201112 12:43:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.528" endtime="20201112 12:43:07.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.530" endtime="20201112 12:43:07.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.505" endtime="20201112 12:43:07.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.502" endtime="20201112 12:43:07.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.540" endtime="20201112 12:43:07.825"></status>
</kw>
<msg timestamp="20201112 12:43:07.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.539" endtime="20201112 12:43:07.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.830" endtime="20201112 12:43:07.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.838" endtime="20201112 12:43:07.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.536" endtime="20201112 12:43:07.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.534" endtime="20201112 12:43:07.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.845" level="INFO">${RESULT} = [{'time': 0.020149417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.379200000000042e-05, 'source_diff': 5.379200000000042e-05}, {'time': 0.020214403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.842" endtime="20201112 12:43:07.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.859" level="INFO">${ACCURACY} = {'time': [0.020149417, 0.020214403, 0.020274444, 0.020337486, 0.020402431, 0.020466486, 0.020530444, 0.020593444, 0.020654472, 0.020718472, 0.020778472, 0.020839486, 0.0209065, 0.0209695, 0.021031514,...</msg>
<status status="PASS" starttime="20201112 12:43:07.846" endtime="20201112 12:43:07.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.863" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.862" endtime="20201112 12:43:07.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.866" level="INFO">VALUE: [5.379200000000042e-05, 5.437499999999887e-05, 5.3915999999997605e-05, 5.3721999999999104e-05, 5.415299999999776e-05, 5.440299999999801e-05, 5.387499999999837e-05, 5.355500000000027e-05, 5.3680000000000394e-05, 5.387500000000184e-05, 5.358299999999941e-05, 5.348600000000189e-05, 5.401400000000153e-05, 5.3513999999997564e-05, 5.348600000000189e-05, 5.368099999999987e-05, 5.365300000000073e-05, 5.41670000000008e-05, 5.427800000000135e-05, 5.39730000000023e-05, 5.377800000000085e-05, 5.377700000000138e-05, 5.4263999999998314e-05, 5.4249999999998744e-05, 5.430500000000102e-05, 5.401400000000153e-05, 5.406900000000034e-05, 5.3957999999999784e-05, 5.426400000000178e-05, 5.372200000000257e-05, 5.406899999999687e-05, 5.358299999999941e-05, 5.426400000000178e-05, 5.429200000000092e-05, 5.427800000000135e-05, 5.4444000000000714e-05, 5.3763999999997814e-05, 5.430600000000049e-05, 5.437499999999887e-05, 5.425000000000221e-05, 5.376300000000181e-05, 5.3471999999998854e-05, 5.38470000000027e-05, 5.402699999999816e-05, 5.383299999999966e-05, 5.431900000000059e-05, 5.358299999999941e-05, 5.368099999999987e-05, 5.40280000000011e-05, 5.4208000000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.864" endtime="20201112 12:43:07.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.860" endtime="20201112 12:43:07.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.870" endtime="20201112 12:43:07.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.874" endtime="20201112 12:43:07.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.872" endtime="20201112 12:43:07.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.868" endtime="20201112 12:43:07.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.501" endtime="20201112 12:43:07.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.500" endtime="20201112 12:43:07.895"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.904" endtime="20201112 12:43:07.921"></status>
</kw>
<msg timestamp="20201112 12:43:07.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.902" endtime="20201112 12:43:07.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.922" endtime="20201112 12:43:07.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.925" endtime="20201112 12:43:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.900" endtime="20201112 12:43:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.898" endtime="20201112 12:43:07.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.935" endtime="20201112 12:43:08.221"></status>
</kw>
<msg timestamp="20201112 12:43:08.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02062125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020676417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:07.934" endtime="20201112 12:43:08.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02062125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020676417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:08.225" endtime="20201112 12:43:08.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.234" endtime="20201112 12:43:08.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.931" endtime="20201112 12:43:08.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.929" endtime="20201112 12:43:08.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.241" level="INFO">${RESULT} = [{'time': 0.020676417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.516699999999833e-05, 'source_diff': 5.516699999999833e-05}, {'time': 0.020744431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.237" endtime="20201112 12:43:08.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.255" level="INFO">${ACCURACY} = {'time': [0.020676417, 0.020744431, 0.020809417, 0.020871417, 0.020935486, 0.020999431, 0.021062444, 0.021124444, 0.021190472, 0.021251458, 0.021313472, 0.021381472, 0.021447486, 0.0215145, 0.0215795,...</msg>
<status status="PASS" starttime="20201112 12:43:08.242" endtime="20201112 12:43:08.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.260" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.259" endtime="20201112 12:43:08.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.263" level="INFO">VALUE: [5.516699999999833e-05, 5.544500000000119e-05, 5.511100000000005e-05, 5.5277999999998884e-05, 5.488899999999894e-05, 5.505599999999777e-05, 5.461099999999955e-05, 5.5207999999997565e-05, 5.4527999999998134e-05, 5.4444000000000714e-05, 5.4665999999998355e-05, 5.5179999999998425e-05, 5.5194000000001464e-05, 5.4722000000000104e-05, 5.527800000000235e-05, 5.470900000000001e-05, 5.540300000000248e-05, 5.487499999999937e-05, 5.495900000000026e-05, 5.511199999999952e-05, 5.509799999999995e-05, 5.5263999999999314e-05, 5.463900000000216e-05, 5.458300000000041e-05, 5.475000000000271e-05, 5.459699999999998e-05, 5.45549999999978e-05, 5.494500000000069e-05, 5.488900000000241e-05, 5.465300000000173e-05, 5.509700000000048e-05, 5.480600000000099e-05, 5.50280000000021e-05, 5.447200000000332e-05, 5.494500000000069e-05, 5.494500000000069e-05, 5.505599999999777e-05, 5.465300000000173e-05, 5.454200000000117e-05, 5.516699999999833e-05, 5.4499999999998994e-05, 5.477699999999891e-05, 5.4944000000001214e-05, 5.4915999999998605e-05, 5.534699999999726e-05, 5.534700000000073e-05, 5.527800000000235e-05, 5.4985999999999924e-05, 5.4541999999997703e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.261" endtime="20201112 12:43:08.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.256" endtime="20201112 12:43:08.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.266" endtime="20201112 12:43:08.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.270" endtime="20201112 12:43:08.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.268" endtime="20201112 12:43:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.265" endtime="20201112 12:43:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.896" endtime="20201112 12:43:08.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.896" endtime="20201112 12:43:08.291"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.299" endtime="20201112 12:43:08.317"></status>
</kw>
<msg timestamp="20201112 12:43:08.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.298" endtime="20201112 12:43:08.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.318" endtime="20201112 12:43:08.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.321" endtime="20201112 12:43:08.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.295" endtime="20201112 12:43:08.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.293" endtime="20201112 12:43:08.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.331" endtime="20201112 12:43:08.617"></status>
</kw>
<msg timestamp="20201112 12:43:08.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.330" endtime="20201112 12:43:08.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.621" endtime="20201112 12:43:08.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.630" endtime="20201112 12:43:08.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.327" endtime="20201112 12:43:08.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.325" endtime="20201112 12:43:08.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.636" level="INFO">${RESULT} = [{'time': 0.019902583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638900000000044e-05, 'source_diff': 5.638900000000044e-05}, {'time': 0.019971528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.633" endtime="20201112 12:43:08.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.650" level="INFO">${ACCURACY} = {'time': [0.019902583, 0.019971528, 0.020037528, 0.020104542, 0.020172556, 0.020236569, 0.020305583, 0.020369583, 0.020437597, 0.020503583, 0.020569611, 0.020632597, 0.020696611, 0.020759625, 0.020828...</msg>
<status status="PASS" starttime="20201112 12:43:08.637" endtime="20201112 12:43:08.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.654" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.653" endtime="20201112 12:43:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.657" level="INFO">VALUE: [5.638900000000044e-05, 5.6264000000000314e-05, 5.587500000000037e-05, 5.640300000000001e-05, 5.580600000000199e-05, 5.55549999999988e-05, 5.634699999999826e-05, 5.602700000000016e-05, 5.615299999999976e-05, 5.6179999999999425e-05, 5.6208000000002034e-05, 5.6277999999999884e-05, 5.5541999999998704e-05, 5.6208000000002034e-05, 5.609700000000148e-05, 5.572300000000058e-05, 5.5763999999999814e-05, 5.6014000000000064e-05, 5.565299999999926e-05, 5.612500000000062e-05, 5.597300000000083e-05, 5.6250000000000744e-05, 5.6387999999997496e-05, 5.60549999999993e-05, 5.6250000000000744e-05, 5.5499999999999994e-05, 5.5972000000001354e-05, 5.6165999999999855e-05, 5.609699999999801e-05, 5.5750000000000244e-05, 5.5943999999998745e-05, 5.569499999999797e-05, 5.613899999999672e-05, 5.5707999999998065e-05, 5.5499999999999994e-05, 5.591699999999908e-05, 5.58610000000008e-05, 5.591699999999908e-05, 5.5972000000001354e-05, 5.572299999999711e-05, 5.5916000000003074e-05, 5.601300000000059e-05, 5.609700000000148e-05, 5.612500000000062e-05, 5.6000000000000494e-05, 5.63610000000013e-05, 5.556900000000184e-05, 5.636099999999783e-05, 5.6152000000000285e-05, 5.5763999999999814e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.656" endtime="20201112 12:43:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.651" endtime="20201112 12:43:08.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.661" endtime="20201112 12:43:08.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.664" endtime="20201112 12:43:08.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.663" endtime="20201112 12:43:08.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.659" endtime="20201112 12:43:08.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.292" endtime="20201112 12:43:08.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.291" endtime="20201112 12:43:08.685"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.694" endtime="20201112 12:43:08.711"></status>
</kw>
<msg timestamp="20201112 12:43:08.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.692" endtime="20201112 12:43:08.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.713" endtime="20201112 12:43:08.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.715" endtime="20201112 12:43:08.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.690" endtime="20201112 12:43:08.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.688" endtime="20201112 12:43:08.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.726" endtime="20201112 12:43:09.010"></status>
</kw>
<msg timestamp="20201112 12:43:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.724" endtime="20201112 12:43:09.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.014" endtime="20201112 12:43:09.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.023" endtime="20201112 12:43:09.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.722" endtime="20201112 12:43:09.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.720" endtime="20201112 12:43:09.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.030" level="INFO">${RESULT} = [{'time': 0.020685333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6443999999999245e-05, 'source_diff': 5.6443999999999245e-05}, {'time': 0.020755375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.026" endtime="20201112 12:43:09.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.043" level="INFO">${ACCURACY} = {'time': [0.020685333, 0.020755375, 0.020821375, 0.020890361, 0.020953375, 0.021021389, 0.021087389, 0.021152389, 0.021221403, 0.021291403, 0.021358417, 0.021426444, 0.021490431, 0.021560444, 0.021625...</msg>
<status status="PASS" starttime="20201112 12:43:09.031" endtime="20201112 12:43:09.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.048" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.047" endtime="20201112 12:43:09.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.051" level="INFO">VALUE: [5.6443999999999245e-05, 5.6957999999999315e-05, 5.6764000000000814e-05, 5.6471999999998385e-05, 5.6514000000000564e-05, 5.68610000000018e-05, 5.707000000000281e-05, 5.7069999999999343e-05, 5.666699999999983e-05, 5.670900000000201e-05, 5.740300000000101e-05, 5.7249999999998274e-05, 5.647300000000133e-05, 5.679100000000048e-05, 5.6722000000002104e-05, 5.68749999999979e-05, 5.708299999999944e-05, 5.6791999999999954e-05, 5.736099999999883e-05, 5.684700000000223e-05, 5.684699999999876e-05, 5.66809999999994e-05, 5.711100000000205e-05, 5.640300000000001e-05, 5.659800000000145e-05, 5.670899999999854e-05, 5.7292000000000454e-05, 5.738900000000144e-05, 5.644499999999872e-05, 5.684699999999876e-05, 5.73749999999984e-05, 5.731900000000012e-05, 5.6986000000001924e-05, 5.6471999999998385e-05, 5.6444000000002714e-05, 5.7014000000001064e-05, 5.656899999999937e-05, 5.713900000000119e-05, 5.7000000000001494e-05, 5.7152000000001285e-05, 5.73749999999984e-05, 5.7055999999999774e-05, 5.6666000000000355e-05, 5.644499999999872e-05, 5.693099999999965e-05, 5.684799999999823e-05, 5.6985999999998455e-05, 5.658300000000241e-05, 5.7193999999999995e-05, 5.727700000000141e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.049" endtime="20201112 12:43:09.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.044" endtime="20201112 12:43:09.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.054" endtime="20201112 12:43:09.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.058" endtime="20201112 12:43:09.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.056" endtime="20201112 12:43:09.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.053" endtime="20201112 12:43:09.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.686" endtime="20201112 12:43:09.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.686" endtime="20201112 12:43:09.079"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.088" endtime="20201112 12:43:09.105"></status>
</kw>
<msg timestamp="20201112 12:43:09.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.086" endtime="20201112 12:43:09.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.106" endtime="20201112 12:43:09.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.109" endtime="20201112 12:43:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.083" endtime="20201112 12:43:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.081" endtime="20201112 12:43:09.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.119" endtime="20201112 12:43:09.405"></status>
</kw>
<msg timestamp="20201112 12:43:09.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.118" endtime="20201112 12:43:09.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.409" endtime="20201112 12:43:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.418" endtime="20201112 12:43:09.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.115" endtime="20201112 12:43:09.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.113" endtime="20201112 12:43:09.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.424" level="INFO">${RESULT} = [{'time': 0.019932097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8429999999998206e-05, 'source_diff': 5.8429999999998206e-05}, {'time': 0.019997111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.421" endtime="20201112 12:43:09.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.438" level="INFO">${ACCURACY} = {'time': [0.019932097, 0.019997111, 0.020066097, 0.020135125, 0.020205139, 0.020274125, 0.020340125, 0.020409181, 0.020473153, 0.020539153, 0.020607208, 0.020673167, 0.020741194, 0.020811181, 0.020876...</msg>
<status status="PASS" starttime="20201112 12:43:09.425" endtime="20201112 12:43:09.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.443" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.441" endtime="20201112 12:43:09.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.445" level="INFO">VALUE: [5.8429999999998206e-05, 5.8292000000001454e-05, 5.8166000000001855e-05, 5.841700000000158e-05, 5.7999999999999025e-05, 5.793100000000065e-05, 5.784699999999976e-05, 5.844499999999725e-05, 5.8222000000000135e-05, 5.794500000000022e-05, 5.761099999999908e-05, 5.8320000000000594e-05, 5.7471999999999385e-05, 5.7806000000000524e-05, 5.8263999999998844e-05, 5.8193999999997525e-05, 5.7430000000000675e-05, 5.790299999999804e-05, 5.7971999999999885e-05, 5.763900000000169e-05, 5.7708000000000065e-05, 5.8193999999997525e-05, 5.743100000000015e-05, 5.8264000000002314e-05, 5.8056000000000774e-05, 5.8263999999998844e-05, 5.7806000000000524e-05, 5.7569999999999844e-05, 5.7542000000000704e-05, 5.7457999999999815e-05, 5.8264000000002314e-05, 5.7958000000000315e-05, 5.7986000000002924e-05, 5.7514000000001564e-05, 5.836099999999983e-05, 5.762500000000212e-05, 5.786099999999933e-05, 5.7792000000000954e-05, 5.813899999999872e-05, 5.7764000000001814e-05, 5.8249999999999275e-05, 5.763899999999822e-05, 5.813900000000219e-05, 5.8000000000002494e-05, 5.78749999999989e-05, 5.8042000000001204e-05, 5.7651999999998316e-05, 5.755499999999733e-05, 5.784699999999976e-05, 5.7985999999999455e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.444" endtime="20201112 12:43:09.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.439" endtime="20201112 12:43:09.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.449" endtime="20201112 12:43:09.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.452" endtime="20201112 12:43:09.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.451" endtime="20201112 12:43:09.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.447" endtime="20201112 12:43:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.080" endtime="20201112 12:43:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.079" endtime="20201112 12:43:09.473"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.482" endtime="20201112 12:43:09.499"></status>
</kw>
<msg timestamp="20201112 12:43:09.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.480" endtime="20201112 12:43:09.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.500" endtime="20201112 12:43:09.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.503" endtime="20201112 12:43:09.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.478" endtime="20201112 12:43:09.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.476" endtime="20201112 12:43:09.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.513" endtime="20201112 12:43:09.799"></status>
</kw>
<msg timestamp="20201112 12:43:09.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.511" endtime="20201112 12:43:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.803" endtime="20201112 12:43:09.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.811" endtime="20201112 12:43:09.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.509" endtime="20201112 12:43:09.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.507" endtime="20201112 12:43:09.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.818" level="INFO">${RESULT} = [{'time': 0.019933944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9151999999999816e-05, 'source_diff': 5.9151999999999816e-05}, {'time': 0.020003958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.815" endtime="20201112 12:43:09.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.833" level="INFO">${ACCURACY} = {'time': [0.019933944, 0.020003958, 0.020075958, 0.020146972, 0.020211986, 0.020280986, 0.020353, 0.020421069, 0.020487014, 0.020557014, 0.020628028, 0.020699042, 0.020765042, 0.020834056, 0.020900056...</msg>
<status status="PASS" starttime="20201112 12:43:09.819" endtime="20201112 12:43:09.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.838" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.836" endtime="20201112 12:43:09.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.840" level="INFO">VALUE: [5.9151999999999816e-05, 5.938899999999997e-05, 5.884700000000076e-05, 5.8458000000000815e-05, 5.8930000000002175e-05, 5.934700000000126e-05, 5.9263999999999845e-05, 5.9208000000001565e-05, 5.9042000000002204e-05, 5.938899999999997e-05, 5.8791999999998484e-05, 5.872300000000011e-05, 5.897300000000036e-05, 5.918099999999843e-05, 5.920900000000104e-05, 5.908300000000144e-05, 5.9166000000002855e-05, 5.929099999999951e-05, 5.884699999999729e-05, 5.9236000000000705e-05, 5.862499999999965e-05, 5.8929999999998706e-05, 5.8542000000001704e-05, 5.862499999999965e-05, 5.865299999999879e-05, 5.9041999999998734e-05, 5.9055999999998304e-05, 5.869500000000097e-05, 5.8805999999998054e-05, 5.9207999999998095e-05, 5.85689999999979e-05, 5.9179999999998956e-05, 5.8749999999999775e-05, 5.9402000000000066e-05, 5.9277999999999414e-05, 5.856900000000137e-05, 5.916700000000233e-05, 5.9236000000000705e-05, 5.9207999999998095e-05, 5.884700000000076e-05, 5.9277999999999414e-05, 5.869500000000097e-05, 5.9000000000000025e-05, 5.8528000000002134e-05, 5.895900000000079e-05, 5.9179999999998956e-05, 5.8763999999999345e-05, 5.8457999999997345e-05, 5.8680000000001925e-05, 5.863899999999922e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.839" endtime="20201112 12:43:09.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.834" endtime="20201112 12:43:09.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.844" endtime="20201112 12:43:09.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.847" endtime="20201112 12:43:09.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.846" endtime="20201112 12:43:09.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.842" endtime="20201112 12:43:09.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.474" endtime="20201112 12:43:09.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.473" endtime="20201112 12:43:09.868"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.877" endtime="20201112 12:43:09.895"></status>
</kw>
<msg timestamp="20201112 12:43:09.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.875" endtime="20201112 12:43:09.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.896" endtime="20201112 12:43:09.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.899" endtime="20201112 12:43:09.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.873" endtime="20201112 12:43:09.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.871" endtime="20201112 12:43:09.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.911" endtime="20201112 12:43:10.197"></status>
</kw>
<msg timestamp="20201112 12:43:10.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019937333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.909" endtime="20201112 12:43:10.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019937333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.201" endtime="20201112 12:43:10.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.209" endtime="20201112 12:43:10.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.906" endtime="20201112 12:43:10.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.904" endtime="20201112 12:43:10.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.216" level="INFO">${RESULT} = [{'time': 0.019937333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.954100000000323e-05, 'source_diff': 5.954100000000323e-05}, {'time': 0.020008361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.213" endtime="20201112 12:43:10.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.230" level="INFO">${ACCURACY} = {'time': [0.019937333, 0.020008361, 0.020077403, 0.020145361, 0.020212403, 0.020285444, 0.020353431, 0.020423417, 0.020495417, 0.020565417, 0.020636431, 0.020703444, 0.020772431, 0.020838458, 0.020905...</msg>
<status status="PASS" starttime="20201112 12:43:10.217" endtime="20201112 12:43:10.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.234" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.233" endtime="20201112 12:43:10.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.237" level="INFO">VALUE: [5.954100000000323e-05, 5.9943999999999276e-05, 6.038900000000097e-05, 6.041700000000011e-05, 6.0236000000001705e-05, 6.0138000000001246e-05, 5.9500000000000525e-05, 6.016699999999986e-05, 6.022299999999814e-05, 6.041700000000011e-05, 5.968099999999893e-05, 6.026300000000137e-05, 5.988900000000047e-05, 6.0250000000001275e-05, 6.0151999999997346e-05, 6.005499999999983e-05, 6.033299999999922e-05, 6.030500000000008e-05, 5.955499999999933e-05, 5.9541999999999234e-05, 5.9806000000002524e-05, 6.0193999999999526e-05, 6.0319999999999124e-05, 6.0083999999998444e-05, 6.019500000000247e-05, 5.9848000000001234e-05, 5.9555999999998804e-05, 6.005499999999983e-05, 5.993099999999918e-05, 5.984699999999829e-05, 6.0278000000000415e-05, 5.9916000000000136e-05, 5.9764000000000345e-05, 6.015300000000029e-05, 5.9972000000001885e-05, 5.980499999999958e-05, 5.9485999999997485e-05, 5.941699999999911e-05, 5.944499999999825e-05, 6.011100000000158e-05, 5.9486000000000955e-05, 5.990300000000004e-05, 5.990300000000004e-05, 6.0278000000000415e-05, 6.0305999999999554e-05, 6.015300000000029e-05, 5.9722000000001635e-05, 5.9735999999997735e-05, 6.03750000000014e-05, 6.0278000000000415e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.236" endtime="20201112 12:43:10.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.231" endtime="20201112 12:43:10.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.241" endtime="20201112 12:43:10.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.244" endtime="20201112 12:43:10.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.243" endtime="20201112 12:43:10.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.239" endtime="20201112 12:43:10.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.869" endtime="20201112 12:43:10.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.869" endtime="20201112 12:43:10.265"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.274" endtime="20201112 12:43:10.292"></status>
</kw>
<msg timestamp="20201112 12:43:10.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.272" endtime="20201112 12:43:10.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.293" endtime="20201112 12:43:10.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.296" endtime="20201112 12:43:10.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.270" endtime="20201112 12:43:10.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.268" endtime="20201112 12:43:10.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.306" endtime="20201112 12:43:10.592"></status>
</kw>
<msg timestamp="20201112 12:43:10.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.304" endtime="20201112 12:43:10.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.596" endtime="20201112 12:43:10.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.604" endtime="20201112 12:43:10.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.302" endtime="20201112 12:43:10.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.300" endtime="20201112 12:43:10.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.611" level="INFO">${RESULT} = [{'time': 0.019896917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.132000000000012e-05, 'source_diff': 6.132000000000012e-05}, {'time': 0.019967917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.608" endtime="20201112 12:43:10.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.625" level="INFO">${ACCURACY} = {'time': [0.019896917, 0.019967917, 0.020039917, 0.020111917, 0.020178931, 0.020248931, 0.02032, 0.020387958, 0.020458958, 0.020529958, 0.020602972, 0.020671042, 0.020743986, 0.020817028, 0.020884014,...</msg>
<status status="PASS" starttime="20201112 12:43:10.612" endtime="20201112 12:43:10.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.630" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.629" endtime="20201112 12:43:10.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.632" level="INFO">VALUE: [6.132000000000012e-05, 6.08750000000019e-05, 6.090300000000104e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.13620000000023e-05, 6.134699999999979e-05, 6.05689999999999e-05, 6.142999999999774e-05, 6.134699999999979e-05, 6.0721999999999166e-05, 6.072300000000211e-05, 6.119400000000053e-05, 6.0764000000001345e-05, 6.108299999999997e-05, 6.061099999999861e-05, 6.1027999999997695e-05, 6.140300000000154e-05, 6.094499999999975e-05, 6.0847999999998764e-05, 6.06949999999995e-05, 6.081900000000015e-05, 6.102700000000169e-05, 6.142999999999774e-05, 6.102700000000169e-05, 6.104200000000073e-05, 6.133299999999675e-05, 6.05689999999999e-05, 6.115299999999782e-05, 6.108299999999997e-05, 6.1013999999998125e-05, 6.1014000000001595e-05, 6.062499999999818e-05, 6.0778000000000915e-05, 6.12499999999988e-05, 6.1014000000001595e-05, 6.0499999999998055e-05, 6.113899999999825e-05, 6.084699999999929e-05, 6.12080000000001e-05, 6.0750000000001775e-05, 6.105500000000083e-05, 6.12360000000027e-05, 6.088900000000147e-05, 6.123599999999924e-05, 6.090299999999757e-05, 6.043099999999968e-05, 6.0749999999998305e-05, 6.090299999999757e-05, 6.140300000000154e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.631" endtime="20201112 12:43:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.626" endtime="20201112 12:43:10.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.636" endtime="20201112 12:43:10.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.639" endtime="20201112 12:43:10.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.638" endtime="20201112 12:43:10.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.634" endtime="20201112 12:43:10.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.266" endtime="20201112 12:43:10.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.265" endtime="20201112 12:43:10.660"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.669" endtime="20201112 12:43:10.686"></status>
</kw>
<msg timestamp="20201112 12:43:10.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.668" endtime="20201112 12:43:10.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.688" endtime="20201112 12:43:10.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.690" endtime="20201112 12:43:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.665" endtime="20201112 12:43:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.663" endtime="20201112 12:43:10.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.700" endtime="20201112 12:43:10.987"></status>
</kw>
<msg timestamp="20201112 12:43:10.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.699" endtime="20201112 12:43:10.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020109458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.992" endtime="20201112 12:43:10.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.000" endtime="20201112 12:43:11.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.696" endtime="20201112 12:43:11.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.694" endtime="20201112 12:43:11.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.007" level="INFO">${RESULT} = [{'time': 0.020171333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.187499999999943e-05, 'source_diff': 6.187499999999943e-05}, {'time': 0.020246347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.004" endtime="20201112 12:43:11.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.020" level="INFO">${ACCURACY} = {'time': [0.020171333, 0.020246347, 0.020316347, 0.020386347, 0.020460403, 0.020533375, 0.020602389, 0.020677389, 0.020752389, 0.020820417, 0.020889417, 0.020963458, 0.021034431, 0.021104431, 0.021176...</msg>
<status status="PASS" starttime="20201112 12:43:11.008" endtime="20201112 12:43:11.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.025" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.024" endtime="20201112 12:43:11.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.028" level="INFO">VALUE: [6.187499999999943e-05, 6.179100000000201e-05, 6.209699999999707e-05, 6.240299999999907e-05, 6.229199999999852e-05, 6.191699999999814e-05, 6.1582999999997e-05, 6.179200000000148e-05, 6.180600000000105e-05, 6.16950000000005e-05, 6.157000000000037e-05, 6.154100000000176e-05, 6.180599999999759e-05, 6.222300000000014e-05, 6.186099999999986e-05, 6.205500000000183e-05, 6.187499999999943e-05, 6.158300000000047e-05, 6.144400000000078e-05, 6.1888999999999e-05, 6.190299999999857e-05, 6.20560000000013e-05, 6.157000000000037e-05, 6.17499999999993e-05, 6.220900000000057e-05, 6.199999999999956e-05, 6.24439999999983e-05, 6.201399999999913e-05, 6.218100000000143e-05, 6.145800000000035e-05, 6.179099999999854e-05, 6.152800000000166e-05, 6.184700000000029e-05, 6.180500000000158e-05, 6.17219999999967e-05, 6.159700000000004e-05, 6.230600000000155e-05, 6.216699999999839e-05, 6.209699999999707e-05, 6.232000000000112e-05, 6.223600000000024e-05, 6.177800000000191e-05, 6.227799999999895e-05, 6.15140000000021e-05, 6.223600000000024e-05, 6.227699999999947e-05, 6.187499999999943e-05, 6.20140000000026e-05, 6.202800000000216e-05, 6.198599999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.026" endtime="20201112 12:43:11.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.021" endtime="20201112 12:43:11.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.031" endtime="20201112 12:43:11.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.035" endtime="20201112 12:43:11.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.033" endtime="20201112 12:43:11.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.030" endtime="20201112 12:43:11.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.661" endtime="20201112 12:43:11.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.661" endtime="20201112 12:43:11.056"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.065" endtime="20201112 12:43:11.083"></status>
</kw>
<msg timestamp="20201112 12:43:11.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.063" endtime="20201112 12:43:11.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.084" endtime="20201112 12:43:11.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.087" endtime="20201112 12:43:11.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.060" endtime="20201112 12:43:11.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.058" endtime="20201112 12:43:11.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.097" endtime="20201112 12:43:11.383"></status>
</kw>
<msg timestamp="20201112 12:43:11.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021223222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.096" endtime="20201112 12:43:11.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021223222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.388" endtime="20201112 12:43:11.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.396" endtime="20201112 12:43:11.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.093" endtime="20201112 12:43:11.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.091" endtime="20201112 12:43:11.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.403" level="INFO">${RESULT} = [{'time': 0.021223222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.279099999999954e-05, 'source_diff': 6.279099999999954e-05}, {'time': 0.021297292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.399" endtime="20201112 12:43:11.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.417" level="INFO">${ACCURACY} = {'time': [0.021223222, 0.021297292, 0.021366264, 0.02143925, 0.021511264, 0.021584278, 0.021658292, 0.021727292, 0.021796292, 0.021872361, 0.021944319, 0.022014319, 0.022088361, 0.022164333, 0.0222373...</msg>
<status status="PASS" starttime="20201112 12:43:11.404" endtime="20201112 12:43:11.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.422" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.421" endtime="20201112 12:43:11.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.424" level="INFO">VALUE: [6.279099999999954e-05, 6.255599999999834e-05, 6.270799999999813e-05, 6.29439999999988e-05, 6.27500000000003e-05, 6.27219999999977e-05, 6.318099999999896e-05, 6.309799999999754e-05, 6.244499999999778e-05, 6.347199999999845e-05, 6.338800000000103e-05, 6.295800000000185e-05, 6.255500000000233e-05, 6.27080000000016e-05, 6.336100000000136e-05, 6.333299999999875e-05, 6.245799999999788e-05, 6.294400000000228e-05, 6.327799999999995e-05, 6.251399999999963e-05, 6.291699999999914e-05, 6.343099999999921e-05, 6.257000000000137e-05, 6.312500000000068e-05, 6.305599999999884e-05, 6.323700000000071e-05, 6.344400000000278e-05, 6.29439999999988e-05, 6.2889e-05, 6.265299999999932e-05, 6.265300000000279e-05, 6.295799999999838e-05, 6.291699999999914e-05, 6.336099999999789e-05, 6.345899999999835e-05, 6.27219999999977e-05, 6.297300000000089e-05, 6.32219999999982e-05, 6.266699999999889e-05, 6.265199999999985e-05, 6.273700000000021e-05, 6.258300000000147e-05, 6.29020000000001e-05, 6.269400000000203e-05, 6.342999999999974e-05, 6.27500000000003e-05, 6.251399999999963e-05, 6.313900000000025e-05, 6.279200000000248e-05, 6.336100000000136e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.423" endtime="20201112 12:43:11.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.418" endtime="20201112 12:43:11.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.428" endtime="20201112 12:43:11.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.432" endtime="20201112 12:43:11.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.430" endtime="20201112 12:43:11.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.426" endtime="20201112 12:43:11.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.057" endtime="20201112 12:43:11.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.056" endtime="20201112 12:43:11.452"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.461" endtime="20201112 12:43:11.479"></status>
</kw>
<msg timestamp="20201112 12:43:11.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.460" endtime="20201112 12:43:11.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.481" endtime="20201112 12:43:11.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.483" endtime="20201112 12:43:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.457" endtime="20201112 12:43:11.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.455" endtime="20201112 12:43:11.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.493" endtime="20201112 12:43:11.780"></status>
</kw>
<msg timestamp="20201112 12:43:11.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.492" endtime="20201112 12:43:11.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.784" endtime="20201112 12:43:11.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.793" endtime="20201112 12:43:11.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.489" endtime="20201112 12:43:11.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.488" endtime="20201112 12:43:11.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.800" level="INFO">${RESULT} = [{'time': 0.019879556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.37500000000013e-05, 'source_diff': 6.37500000000013e-05}, {'time': 0.019951556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:11.796" endtime="20201112 12:43:11.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.813" level="INFO">${ACCURACY} = {'time': [0.019879556, 0.019951556, 0.020027556, 0.020101597, 0.020177653, 0.020251583, 0.020321583, 0.020391597, 0.020465639, 0.020535611, 0.020612625, 0.020682639, 0.020755639, 0.020832667, 0.020905...</msg>
<status status="PASS" starttime="20201112 12:43:11.801" endtime="20201112 12:43:11.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.818" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.817" endtime="20201112 12:43:11.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.820" level="INFO">VALUE: [6.37500000000013e-05, 6.379200000000002e-05, 6.42089999999991e-05, 6.348599999999802e-05, 6.3889000000001e-05, 6.426400000000138e-05, 6.416600000000092e-05, 6.366600000000042e-05, 6.445799999999988e-05, 6.351399999999716e-05, 6.44029999999976e-05, 6.399999999999809e-05, 6.405599999999984e-05, 6.387499999999796e-05, 6.366699999999989e-05, 6.43890000000015e-05, 6.429200000000052e-05, 6.37769999999975e-05, 6.345800000000235e-05, 6.420799999999963e-05, 6.416600000000092e-05, 6.344500000000225e-05, 6.381899999999968e-05, 6.390300000000057e-05, 6.427800000000095e-05, 6.391700000000014e-05, 6.3889000000001e-05, 6.427799999999748e-05, 6.374999999999784e-05, 6.37500000000013e-05, 6.412500000000168e-05, 6.408399999999898e-05, 6.412499999999821e-05, 6.39439999999998e-05, 6.3582999999999e-05, 6.419400000000006e-05, 6.372200000000217e-05, 6.42639999999979e-05, 6.377799999999698e-05, 6.391700000000014e-05, 6.418099999999996e-05, 6.418099999999996e-05, 6.35280000000002e-05, 6.409699999999907e-05, 6.433399999999923e-05, 6.40419999999968e-05, 6.35280000000002e-05, 6.411200000000158e-05, 6.413900000000125e-05, 6.374999999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.819" endtime="20201112 12:43:11.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.814" endtime="20201112 12:43:11.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.824" endtime="20201112 12:43:11.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.828" endtime="20201112 12:43:11.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.826" endtime="20201112 12:43:11.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.822" endtime="20201112 12:43:11.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.453" endtime="20201112 12:43:11.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.453" endtime="20201112 12:43:11.849"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.857" endtime="20201112 12:43:11.874"></status>
</kw>
<msg timestamp="20201112 12:43:11.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.856" endtime="20201112 12:43:11.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.876" endtime="20201112 12:43:11.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.878" endtime="20201112 12:43:11.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.853" endtime="20201112 12:43:11.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.851" endtime="20201112 12:43:11.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.888" endtime="20201112 12:43:12.175"></status>
</kw>
<msg timestamp="20201112 12:43:12.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.887" endtime="20201112 12:43:12.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.179" endtime="20201112 12:43:12.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.187" endtime="20201112 12:43:12.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.884" endtime="20201112 12:43:12.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.882" endtime="20201112 12:43:12.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.194" level="INFO">${RESULT} = [{'time': 0.019865639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47500000000023e-05, 'source_diff': 6.47500000000023e-05}, {'time': 0.019937639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:12.191" endtime="20201112 12:43:12.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.208" level="INFO">${ACCURACY} = {'time': [0.019865639, 0.019937639, 0.020015653, 0.020087653, 0.020164667, 0.020236681, 0.020313681, 0.020390694, 0.020461722, 0.020533708, 0.020610708, 0.020681736, 0.020753764, 0.020827736, 0.020902...</msg>
<status status="PASS" starttime="20201112 12:43:12.195" endtime="20201112 12:43:12.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.212" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.211" endtime="20201112 12:43:12.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.215" level="INFO">VALUE: [6.47500000000023e-05, 6.466700000000089e-05, 6.518100000000096e-05, 6.450000000000206e-05, 6.495899999999985e-05, 6.498699999999899e-05, 6.473699999999874e-05, 6.520800000000063e-05, 6.52500000000028e-05, 6.537500000000293e-05, 6.537499999999946e-05, 6.517999999999802e-05, 6.469500000000003e-05, 6.516699999999792e-05, 6.504200000000127e-05, 6.455600000000034e-05, 6.529200000000152e-05, 6.479200000000102e-05, 6.491700000000114e-05, 6.497299999999942e-05, 6.449999999999859e-05, 6.516599999999845e-05, 6.449999999999859e-05, 6.537499999999946e-05, 6.495800000000038e-05, 6.537499999999946e-05, 6.491699999999767e-05, 6.455499999999739e-05, 6.519400000000106e-05, 6.443100000000021e-05, 6.494500000000028e-05, 6.477800000000145e-05, 6.479200000000102e-05, 6.484699999999982e-05, 6.516700000000139e-05, 6.52090000000001e-05, 6.497199999999995e-05, 6.537499999999946e-05, 6.470800000000013e-05, 6.520800000000063e-05, 6.465299999999785e-05, 6.4583e-05, 6.501400000000213e-05, 6.494399999999734e-05, 6.511099999999964e-05, 6.519500000000053e-05, 6.451399999999816e-05, 6.524999999999934e-05, 6.463899999999828e-05, 6.451400000000163e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.213" endtime="20201112 12:43:12.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.209" endtime="20201112 12:43:12.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.218" endtime="20201112 12:43:12.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.222" endtime="20201112 12:43:12.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.220" endtime="20201112 12:43:12.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.217" endtime="20201112 12:43:12.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.850" endtime="20201112 12:43:12.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.849" endtime="20201112 12:43:12.243"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.252" endtime="20201112 12:43:12.270"></status>
</kw>
<msg timestamp="20201112 12:43:12.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.250" endtime="20201112 12:43:12.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.271" endtime="20201112 12:43:12.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.274" endtime="20201112 12:43:12.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.248" endtime="20201112 12:43:12.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.245" endtime="20201112 12:43:12.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.284" endtime="20201112 12:43:12.570"></status>
</kw>
<msg timestamp="20201112 12:43:12.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:12.283" endtime="20201112 12:43:12.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:12.574" endtime="20201112 12:43:12.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.583" endtime="20201112 12:43:12.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.280" endtime="20201112 12:43:12.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.278" endtime="20201112 12:43:12.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.590" level="INFO">${RESULT} = [{'time': 0.0199495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.633299999999828e-05, 'source_diff': 6.633299999999828e-05}, {'time': 0.0200215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:43:12.586" endtime="20201112 12:43:12.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.603" level="INFO">${ACCURACY} = {'time': [0.0199495, 0.0200215, 0.020096514, 0.020172514, 0.020251542, 0.020323528, 0.020398583, 0.020473556, 0.020552556, 0.020625583, 0.020703597, 0.020781583, 0.020856597, 0.020934611, 0.021013639,...</msg>
<status status="PASS" starttime="20201112 12:43:12.591" endtime="20201112 12:43:12.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.608" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.607" endtime="20201112 12:43:12.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.610" level="INFO">VALUE: [6.633299999999828e-05, 6.54440000000013e-05, 6.598600000000052e-05, 6.636099999999742e-05, 6.633400000000123e-05, 6.566700000000189e-05, 6.611100000000064e-05, 6.629199999999905e-05, 6.569500000000103e-05, 6.5583000000001e-05, 6.630499999999914e-05, 6.592999999999877e-05, 6.588899999999953e-05, 6.573600000000027e-05, 6.573600000000027e-05, 6.594500000000128e-05, 6.638900000000003e-05, 6.583300000000125e-05, 6.580600000000159e-05, 6.577799999999898e-05, 6.630599999999862e-05, 6.601300000000018e-05, 6.577800000000245e-05, 6.57769999999995e-05, 6.556899999999796e-05, 6.57639999999994e-05, 6.580499999999864e-05, 6.629099999999957e-05, 6.563899999999928e-05, 6.57220000000007e-05, 6.556899999999796e-05, 6.552799999999873e-05, 6.625000000000034e-05, 6.572300000000017e-05, 6.619500000000153e-05, 6.615299999999935e-05, 6.561199999999962e-05, 6.541700000000164e-05, 6.574999999999984e-05, 6.587499999999996e-05, 6.587499999999996e-05, 6.630499999999914e-05, 6.569400000000156e-05, 6.62090000000011e-05, 6.627799999999948e-05, 6.581999999999769e-05, 6.601399999999966e-05, 6.60969999999976e-05, 6.619499999999806e-05, 6.580599999999812e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.609" endtime="20201112 12:43:12.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.604" endtime="20201112 12:43:12.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.614" endtime="20201112 12:43:12.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.617" endtime="20201112 12:43:12.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.616" endtime="20201112 12:43:12.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.612" endtime="20201112 12:43:12.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.244" endtime="20201112 12:43:12.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.243" endtime="20201112 12:43:12.638"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.647" endtime="20201112 12:43:12.665"></status>
</kw>
<msg timestamp="20201112 12:43:12.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.646" endtime="20201112 12:43:12.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.666" endtime="20201112 12:43:12.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.669" endtime="20201112 12:43:12.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.643" endtime="20201112 12:43:12.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.641" endtime="20201112 12:43:12.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.679" endtime="20201112 12:43:12.966"></status>
</kw>
<msg timestamp="20201112 12:43:12.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.677" endtime="20201112 12:43:12.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.971" endtime="20201112 12:43:12.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.979" endtime="20201112 12:43:12.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.675" endtime="20201112 12:43:12.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.673" endtime="20201112 12:43:12.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.986" level="INFO">${RESULT} = [{'time': 0.019876083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.656899999999896e-05, 'source_diff': 6.656899999999896e-05}, {'time': 0.019950139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.983" endtime="20201112 12:43:12.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.001" level="INFO">${ACCURACY} = {'time': [0.019876083, 0.019950139, 0.020028111, 0.020107125, 0.020185139, 0.020263153, 0.020343167, 0.020419167, 0.020497194, 0.020571167, 0.020646181, 0.020719194, 0.020798208, 0.020877222, 0.020952...</msg>
<status status="PASS" starttime="20201112 12:43:12.987" endtime="20201112 12:43:13.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.005" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.004" endtime="20201112 12:43:13.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.008" level="INFO">VALUE: [6.656899999999896e-05, 6.716699999999992e-05, 6.675000000000084e-05, 6.698600000000152e-05, 6.725000000000134e-05, 6.669499999999856e-05, 6.709799999999808e-05, 6.72359999999983e-05, 6.672199999999823e-05, 6.67090000000016e-05, 6.695899999999838e-05, 6.716600000000045e-05, 6.687499999999749e-05, 6.650000000000059e-05, 6.647200000000145e-05, 6.713900000000078e-05, 6.713899999999731e-05, 6.650000000000059e-05, 6.70419999999998e-05, 6.719499999999906e-05, 6.67640000000004e-05, 6.669499999999856e-05, 6.713899999999731e-05, 6.668099999999899e-05, 6.677799999999998e-05, 6.706999999999894e-05, 6.648600000000102e-05, 6.650000000000059e-05, 6.695800000000238e-05, 6.730500000000014e-05, 6.681900000000268e-05, 6.730500000000014e-05, 6.713900000000078e-05, 6.729200000000005e-05, 6.644499999999831e-05, 6.662500000000071e-05, 6.734700000000232e-05, 6.679100000000007e-05, 6.730599999999962e-05, 6.662500000000071e-05, 6.650000000000059e-05, 6.67770000000005e-05, 6.67359999999978e-05, 6.67220000000017e-05, 6.667999999999952e-05, 6.669400000000256e-05, 6.733299999999928e-05, 6.734699999999885e-05, 6.698599999999805e-05, 6.677799999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.006" endtime="20201112 12:43:13.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.002" endtime="20201112 12:43:13.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.012" endtime="20201112 12:43:13.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.015" endtime="20201112 12:43:13.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.013" endtime="20201112 12:43:13.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.010" endtime="20201112 12:43:13.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.639" endtime="20201112 12:43:13.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.639" endtime="20201112 12:43:13.036"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.045" endtime="20201112 12:43:13.062"></status>
</kw>
<msg timestamp="20201112 12:43:13.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.043" endtime="20201112 12:43:13.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.063" endtime="20201112 12:43:13.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.066" endtime="20201112 12:43:13.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.041" endtime="20201112 12:43:13.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.039" endtime="20201112 12:43:13.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.076" endtime="20201112 12:43:13.363"></status>
</kw>
<msg timestamp="20201112 12:43:13.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01999025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:13.074" endtime="20201112 12:43:13.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01999025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:13.367" endtime="20201112 12:43:13.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.376" endtime="20201112 12:43:13.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.072" endtime="20201112 12:43:13.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.070" endtime="20201112 12:43:13.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.383" level="INFO">${RESULT} = [{'time': 0.01999025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.747200000000245e-05, 'source_diff': 6.747200000000245e-05}, {'time': 0.020064264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:13.379" endtime="20201112 12:43:13.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.396" level="INFO">${ACCURACY} = {'time': [0.01999025, 0.020064264, 0.020139264, 0.020220278, 0.020294292, 0.020371306, 0.020450319, 0.020529319, 0.020605319, 0.020684389, 0.020763333, 0.020844347, 0.020920361, 0.020994361, 0.0210733...</msg>
<status status="PASS" starttime="20201112 12:43:13.384" endtime="20201112 12:43:13.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.401" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.400" endtime="20201112 12:43:13.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.403" level="INFO">VALUE: [6.747200000000245e-05, 6.776399999999794e-05, 6.755599999999987e-05, 6.786100000000239e-05, 6.768099999999999e-05, 6.759799999999858e-05, 6.834699999999985e-05, 6.769400000000009e-05, 6.750000000000159e-05, 6.798600000000252e-05, 6.798599999999905e-05, 6.799999999999862e-05, 6.84299999999978e-05, 6.791700000000067e-05, 6.744399999999984e-05, 6.776399999999794e-05, 6.777699999999803e-05, 6.77359999999988e-05, 6.791700000000067e-05, 6.805600000000037e-05, 6.747199999999898e-05, 6.738900000000103e-05, 6.813900000000178e-05, 6.84299999999978e-05, 6.790200000000163e-05, 6.799999999999862e-05, 6.801399999999819e-05, 6.791700000000067e-05, 6.816699999999745e-05, 6.829199999999758e-05, 6.772199999999923e-05, 6.793100000000024e-05, 6.801399999999819e-05, 6.744499999999931e-05, 6.761199999999815e-05, 6.812499999999874e-05, 6.747199999999898e-05, 6.797199999999948e-05, 6.794400000000034e-05, 6.769399999999662e-05, 6.795799999999991e-05, 6.755599999999987e-05, 6.799999999999862e-05, 6.763900000000128e-05, 6.793100000000024e-05, 6.7583999999999e-05, 6.766700000000042e-05, 6.815299999999788e-05, 6.813799999999884e-05, 6.781900000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.402" endtime="20201112 12:43:13.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.397" endtime="20201112 12:43:13.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.407" endtime="20201112 12:43:13.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.410" endtime="20201112 12:43:13.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.409" endtime="20201112 12:43:13.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.405" endtime="20201112 12:43:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.037" endtime="20201112 12:43:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.036" endtime="20201112 12:43:13.431"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.440" endtime="20201112 12:43:13.458"></status>
</kw>
<msg timestamp="20201112 12:43:13.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.438" endtime="20201112 12:43:13.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.459" endtime="20201112 12:43:13.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.462" endtime="20201112 12:43:13.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.436" endtime="20201112 12:43:13.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.434" endtime="20201112 12:43:13.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.472" endtime="20201112 12:43:13.759"></status>
</kw>
<msg timestamp="20201112 12:43:13.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019832069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.471" endtime="20201112 12:43:13.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019832069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.764" endtime="20201112 12:43:13.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.773" endtime="20201112 12:43:13.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.468" endtime="20201112 12:43:13.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.466" endtime="20201112 12:43:13.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.780" level="INFO">${RESULT} = [{'time': 0.019901111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.904199999999833e-05, 'source_diff': 6.904199999999833e-05}, {'time': 0.019977111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.776" endtime="20201112 12:43:13.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.793" level="INFO">${ACCURACY} = {'time': [0.019901111, 0.019977111, 0.020057125, 0.020138139, 0.020216139, 0.020292167, 0.020367167, 0.020443167, 0.020522181, 0.020601181, 0.020677194, 0.020759222, 0.020836222, 0.020917222, 0.020994...</msg>
<status status="PASS" starttime="20201112 12:43:13.781" endtime="20201112 12:43:13.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.798" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.797" endtime="20201112 12:43:13.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.800" level="INFO">VALUE: [6.904199999999833e-05, 6.894399999999787e-05, 6.908299999999756e-05, 6.888899999999906e-05, 6.888900000000253e-05, 6.85420000000013e-05, 6.886099999999992e-05, 6.857000000000044e-05, 6.845899999999988e-05, 6.94169999999987e-05, 6.880499999999817e-05, 6.879100000000207e-05, 6.856900000000096e-05, 6.897200000000048e-05, 6.881999999999722e-05, 6.845800000000041e-05, 6.90970000000006e-05, 6.855600000000087e-05, 6.909699999999713e-05, 6.8584e-05, 6.887499999999949e-05, 6.872200000000023e-05, 6.913899999999931e-05, 6.913800000000331e-05, 6.936100000000042e-05, 6.865199999999891e-05, 6.901399999999919e-05, 6.895799999999744e-05, 6.883300000000078e-05, 6.874999999999937e-05, 6.874999999999937e-05, 6.916700000000192e-05, 6.913899999999931e-05, 6.837500000000246e-05, 6.876399999999894e-05, 6.886200000000287e-05, 6.859799999999958e-05, 6.902699999999928e-05, 6.92909999999991e-05, 6.894400000000134e-05, 6.872200000000023e-05, 6.919399999999812e-05, 6.869400000000109e-05, 6.884700000000035e-05, 6.904199999999833e-05, 6.913899999999931e-05, 6.880600000000112e-05, 6.938899999999956e-05, 6.848599999999955e-05, 6.927799999999901e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.799" endtime="20201112 12:43:13.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.794" endtime="20201112 12:43:13.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.804" endtime="20201112 12:43:13.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.808" endtime="20201112 12:43:13.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.806" endtime="20201112 12:43:13.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.802" endtime="20201112 12:43:13.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.432" endtime="20201112 12:43:13.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.432" endtime="20201112 12:43:13.829"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.837" endtime="20201112 12:43:13.855"></status>
</kw>
<msg timestamp="20201112 12:43:13.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.836" endtime="20201112 12:43:13.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.857" endtime="20201112 12:43:13.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.859" endtime="20201112 12:43:13.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.833" endtime="20201112 12:43:13.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.831" endtime="20201112 12:43:13.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.870" endtime="20201112 12:43:14.157"></status>
</kw>
<msg timestamp="20201112 12:43:14.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.868" endtime="20201112 12:43:14.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.161" endtime="20201112 12:43:14.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.169" endtime="20201112 12:43:14.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.865" endtime="20201112 12:43:14.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.864" endtime="20201112 12:43:14.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.176" level="INFO">${RESULT} = [{'time': 0.020115944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.995800000000191e-05, 'source_diff': 6.995800000000191e-05}, {'time': 0.020195972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.173" endtime="20201112 12:43:14.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.190" level="INFO">${ACCURACY} = {'time': [0.020115944, 0.020195972, 0.020271986, 0.020350972, 0.020432, 0.02051, 0.02059, 0.020673028, 0.020751028, 0.020828042, 0.020906042, 0.020983056, 0.021061097, 0.021140083, 0.021219111, 0.0213...</msg>
<status status="PASS" starttime="20201112 12:43:14.177" endtime="20201112 12:43:14.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.194" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.193" endtime="20201112 12:43:14.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.197" level="INFO">VALUE: [6.995800000000191e-05, 7.017999999999955e-05, 6.94299999999988e-05, 7.022199999999826e-05, 6.970799999999819e-05, 6.986100000000092e-05, 6.987500000000049e-05, 7.026400000000044e-05, 7.002799999999976e-05, 7.032000000000219e-05, 7.043099999999927e-05, 7.00559999999989e-05, 6.983300000000178e-05, 7.038900000000056e-05, 6.955499999999892e-05, 7.017999999999955e-05, 6.962500000000024e-05, 6.991599999999973e-05, 7.002799999999976e-05, 7.00559999999989e-05, 6.997199999999801e-05, 7.002799999999976e-05, 7.030599999999915e-05, 6.998600000000105e-05, 6.99169999999992e-05, 6.944399999999837e-05, 6.948700000000002e-05, 6.977700000000003e-05, 6.945799999999794e-05, 6.991599999999973e-05, 7.04299999999998e-05, 6.991599999999973e-05, 6.948600000000055e-05, 6.993099999999877e-05, 7.008300000000203e-05, 6.984699999999788e-05, 6.980600000000212e-05, 7.001400000000019e-05, 7.029199999999958e-05, 7.038900000000056e-05, 7.008300000000203e-05, 6.950000000000012e-05, 7.02360000000013e-05, 6.95970000000011e-05, 7.012500000000074e-05, 6.979199999999908e-05, 6.987500000000049e-05, 7.012500000000074e-05, 6.977799999999951e-05, 6.980599999999865e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.196" endtime="20201112 12:43:14.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.191" endtime="20201112 12:43:14.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.205" endtime="20201112 12:43:14.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.208" endtime="20201112 12:43:14.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.207" endtime="20201112 12:43:14.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.203" endtime="20201112 12:43:14.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.829" endtime="20201112 12:43:14.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.829" endtime="20201112 12:43:14.229"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.238" endtime="20201112 12:43:14.256"></status>
</kw>
<msg timestamp="20201112 12:43:14.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.237" endtime="20201112 12:43:14.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.257" endtime="20201112 12:43:14.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.260" endtime="20201112 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.234" endtime="20201112 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.232" endtime="20201112 12:43:14.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.270" endtime="20201112 12:43:14.556"></status>
</kw>
<msg timestamp="20201112 12:43:14.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.269" endtime="20201112 12:43:14.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.561" endtime="20201112 12:43:14.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.569" endtime="20201112 12:43:14.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.266" endtime="20201112 12:43:14.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.264" endtime="20201112 12:43:14.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.576" level="INFO">${RESULT} = [{'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.09170000000002e-05, 'source_diff': 7.09170000000002e-05}, {'time': 0.020172778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:14.573" endtime="20201112 12:43:14.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.591" level="INFO">${ACCURACY} = {'time': [0.020094778, 0.020172778, 0.020256806, 0.020336792, 0.020414806, 0.020496819, 0.020580819, 0.020659847, 0.020739847, 0.020819847, 0.020899861, 0.020977875, 0.021058875, 0.021139889, 0.021218...</msg>
<status status="PASS" starttime="20201112 12:43:14.577" endtime="20201112 12:43:14.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.595" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.594" endtime="20201112 12:43:14.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.598" level="INFO">VALUE: [7.09170000000002e-05, 7.080599999999965e-05, 7.104200000000033e-05, 7.129200000000058e-05, 7.066699999999995e-05, 7.108299999999956e-05, 7.077700000000103e-05, 7.07499999999979e-05, 7.112499999999827e-05, 7.130500000000067e-05, 7.048599999999808e-05, 7.050000000000112e-05, 7.062500000000124e-05, 7.134699999999938e-05, 7.054199999999983e-05, 7.052800000000026e-05, 7.087499999999802e-05, 7.118000000000055e-05, 7.106999999999947e-05, 7.07910000000006e-05, 7.113800000000184e-05, 7.052800000000026e-05, 7.063900000000081e-05, 7.131900000000024e-05, 7.119399999999665e-05, 7.069500000000256e-05, 7.122199999999926e-05, 7.109699999999913e-05, 7.056999999999897e-05, 7.115299999999741e-05, 7.066699999999995e-05, 7.143100000000027e-05, 7.108299999999956e-05, 7.083300000000278e-05, 7.069399999999962e-05, 7.097199999999901e-05, 7.083300000000278e-05, 7.123599999999883e-05, 7.10559999999999e-05, 7.094399999999987e-05, 7.088900000000106e-05, 7.044499999999884e-05, 7.097199999999901e-05, 7.062500000000124e-05, 7.061100000000167e-05, 7.090300000000063e-05, 7.076300000000146e-05, 7.12499999999984e-05, 7.101400000000119e-05, 7.069399999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.597" endtime="20201112 12:43:14.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.592" endtime="20201112 12:43:14.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.602" endtime="20201112 12:43:14.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.605" endtime="20201112 12:43:14.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.604" endtime="20201112 12:43:14.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.600" endtime="20201112 12:43:14.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.230" endtime="20201112 12:43:14.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.230" endtime="20201112 12:43:14.626"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.635" endtime="20201112 12:43:14.653"></status>
</kw>
<msg timestamp="20201112 12:43:14.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.633" endtime="20201112 12:43:14.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.654" endtime="20201112 12:43:14.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.657" endtime="20201112 12:43:14.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.631" endtime="20201112 12:43:14.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.629" endtime="20201112 12:43:14.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.667" endtime="20201112 12:43:14.953"></status>
</kw>
<msg timestamp="20201112 12:43:14.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.666" endtime="20201112 12:43:14.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.958" endtime="20201112 12:43:14.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.966" endtime="20201112 12:43:14.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.663" endtime="20201112 12:43:14.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.661" endtime="20201112 12:43:14.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.973" level="INFO">${RESULT} = [{'time': 0.020020264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.215299999999841e-05, 'source_diff': 7.215299999999841e-05}, {'time': 0.020105264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.970" endtime="20201112 12:43:14.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.987" level="INFO">${ACCURACY} = {'time': [0.020020264, 0.020105264, 0.020186278, 0.020268292, 0.020351278, 0.020433319, 0.020517319, 0.020596319, 0.020678375, 0.020761347, 0.020839375, 0.020919361, 0.020999361, 0.021081361, 0.021165...</msg>
<status status="PASS" starttime="20201112 12:43:14.974" endtime="20201112 12:43:14.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.992" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.991" endtime="20201112 12:43:14.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.995" level="INFO">VALUE: [7.215299999999841e-05, 7.226400000000244e-05, 7.181999999999675e-05, 7.147299999999898e-05, 7.17499999999989e-05, 7.173599999999933e-05, 7.227699999999906e-05, 7.197200000000001e-05, 7.169399999999715e-05, 7.154099999999788e-05, 7.212499999999927e-05, 7.226400000000244e-05, 7.22499999999994e-05, 7.19300000000013e-05, 7.197200000000001e-05, 7.220900000000016e-05, 7.222200000000026e-05, 7.193100000000077e-05, 7.190300000000163e-05, 7.204199999999786e-05, 7.218000000000155e-05, 7.238899999999909e-05, 7.152700000000178e-05, 7.184700000000335e-05, 7.152800000000126e-05, 7.15690000000005e-05, 7.223599999999983e-05, 7.209700000000013e-05, 7.223599999999983e-05, 7.144499999999984e-05, 7.186099999999945e-05, 7.1762999999999e-05, 7.188900000000206e-05, 7.212500000000274e-05, 7.205500000000142e-05, 7.145799999999994e-05, 7.212499999999927e-05, 7.172199999999976e-05, 7.204200000000133e-05, 7.183300000000031e-05, 7.199999999999915e-05, 7.243100000000127e-05, 7.238900000000256e-05, 7.17499999999989e-05, 7.19170000000012e-05, 7.205599999999743e-05, 7.187499999999902e-05, 7.151399999999822e-05, 7.1762999999999e-05, 7.169400000000062e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.993" endtime="20201112 12:43:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.988" endtime="20201112 12:43:14.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.998" endtime="20201112 12:43:15.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.002" endtime="20201112 12:43:15.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.000" endtime="20201112 12:43:15.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.997" endtime="20201112 12:43:15.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.627" endtime="20201112 12:43:15.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.627" endtime="20201112 12:43:15.023"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.032" endtime="20201112 12:43:15.049"></status>
</kw>
<msg timestamp="20201112 12:43:15.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.030" endtime="20201112 12:43:15.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.051" endtime="20201112 12:43:15.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.053" endtime="20201112 12:43:15.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.028" endtime="20201112 12:43:15.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.025" endtime="20201112 12:43:15.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.063" endtime="20201112 12:43:15.350"></status>
</kw>
<msg timestamp="20201112 12:43:15.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.062" endtime="20201112 12:43:15.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.354" endtime="20201112 12:43:15.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.363" endtime="20201112 12:43:15.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.059" endtime="20201112 12:43:15.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.058" endtime="20201112 12:43:15.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.370" level="INFO">${RESULT} = [{'time': 0.020084361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.255499999999845e-05, 'source_diff': 7.255499999999845e-05}, {'time': 0.020169375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.366" endtime="20201112 12:43:15.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.383" level="INFO">${ACCURACY} = {'time': [0.020084361, 0.020169375, 0.020248375, 0.020328389, 0.020408403, 0.020491403, 0.020573431, 0.020654431, 0.020733458, 0.020815444, 0.020894458, 0.020974458, 0.021056472, 0.021140472, 0.021225...</msg>
<status status="PASS" starttime="20201112 12:43:15.371" endtime="20201112 12:43:15.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.388" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.387" endtime="20201112 12:43:15.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.390" level="INFO">VALUE: [7.255499999999845e-05, 7.27499999999999e-05, 7.268099999999805e-05, 7.25699999999975e-05, 7.305599999999843e-05, 7.311099999999723e-05, 7.291699999999873e-05, 7.309800000000061e-05, 7.312500000000027e-05, 7.306899999999852e-05, 7.24300000000018e-05, 7.297200000000101e-05, 7.313899999999984e-05, 7.244400000000137e-05, 7.295799999999797e-05, 7.272200000000076e-05, 7.341699999999923e-05, 7.294500000000134e-05, 7.340300000000313e-05, 7.30560000000019e-05, 7.269500000000109e-05, 7.295799999999797e-05, 7.32370000000003e-05, 7.300000000000015e-05, 7.256899999999802e-05, 7.342999999999933e-05, 7.263899999999934e-05, 7.270800000000119e-05, 7.262499999999977e-05, 7.272200000000076e-05, 7.259700000000063e-05, 7.311099999999723e-05, 7.291699999999873e-05, 7.327700000000006e-05, 7.26110000000002e-05, 7.247200000000051e-05, 7.305499999999895e-05, 7.3069000000002e-05, 7.263899999999934e-05, 7.27499999999999e-05, 7.323600000000083e-05, 7.316699999999898e-05, 7.336100000000095e-05, 7.309700000000113e-05, 7.330599999999868e-05, 7.308400000000104e-05, 7.293100000000177e-05, 7.27499999999999e-05, 7.292999999999883e-05, 7.256899999999802e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.389" endtime="20201112 12:43:15.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.384" endtime="20201112 12:43:15.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.394" endtime="20201112 12:43:15.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.398" endtime="20201112 12:43:15.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.396" endtime="20201112 12:43:15.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.392" endtime="20201112 12:43:15.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.024" endtime="20201112 12:43:15.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.023" endtime="20201112 12:43:15.419"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.428" endtime="20201112 12:43:15.445"></status>
</kw>
<msg timestamp="20201112 12:43:15.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.426" endtime="20201112 12:43:15.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.446" endtime="20201112 12:43:15.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.449" endtime="20201112 12:43:15.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.423" endtime="20201112 12:43:15.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.421" endtime="20201112 12:43:15.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.459" endtime="20201112 12:43:15.745"></status>
</kw>
<msg timestamp="20201112 12:43:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.458" endtime="20201112 12:43:15.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.750" endtime="20201112 12:43:15.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.758" endtime="20201112 12:43:15.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.455" endtime="20201112 12:43:15.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.453" endtime="20201112 12:43:15.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.765" level="INFO">${RESULT} = [{'time': 0.020487458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.366600000000001e-05, 'source_diff': 7.366600000000001e-05}, {'time': 0.020572486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.762" endtime="20201112 12:43:15.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.779" level="INFO">${ACCURACY} = {'time': [0.020487458, 0.020572486, 0.020655472, 0.020737486, 0.020821514, 0.0209085, 0.020990514, 0.021072528, 0.021159528, 0.021241583, 0.021322556, 0.021409569, 0.021495597, 0.021578597, 0.02165859...</msg>
<status status="PASS" starttime="20201112 12:43:15.766" endtime="20201112 12:43:15.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.783" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.782" endtime="20201112 12:43:15.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.786" level="INFO">VALUE: [7.366600000000001e-05, 7.415300000000041e-05, 7.350000000000065e-05, 7.377800000000004e-05, 7.390300000000016e-05, 7.416699999999998e-05, 7.354199999999936e-05, 7.355599999999893e-05, 7.400000000000115e-05, 7.427700000000106e-05, 7.350000000000065e-05, 7.431899999999977e-05, 7.376400000000047e-05, 7.383300000000231e-05, 7.345800000000194e-05, 7.373599999999786e-05, 7.402800000000029e-05, 7.388900000000059e-05, 7.409699999999866e-05, 7.35829999999986e-05, 7.351400000000022e-05, 7.384700000000188e-05, 7.349999999999718e-05, 7.409799999999814e-05, 7.391699999999973e-05, 7.411099999999823e-05, 7.422200000000226e-05, 7.440199999999772e-05, 7.369399999999915e-05, 7.409700000000213e-05, 7.373600000000133e-05, 7.429200000000011e-05, 7.348600000000108e-05, 7.37500000000009e-05, 7.427800000000054e-05, 7.379199999999961e-05, 7.388900000000059e-05, 7.351400000000022e-05, 7.418000000000008e-05, 7.369399999999915e-05, 7.351400000000022e-05, 7.398600000000158e-05, 7.426400000000097e-05, 7.405499999999995e-05, 7.434699999999891e-05, 7.422200000000226e-05, 7.427800000000054e-05, 7.4069999999999e-05, 7.420899999999869e-05, 7.351400000000022e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.785" endtime="20201112 12:43:15.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.780" endtime="20201112 12:43:15.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.790" endtime="20201112 12:43:15.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.793" endtime="20201112 12:43:15.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.792" endtime="20201112 12:43:15.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.788" endtime="20201112 12:43:15.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.420" endtime="20201112 12:43:15.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.419" endtime="20201112 12:43:15.814"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.823" endtime="20201112 12:43:15.841"></status>
</kw>
<msg timestamp="20201112 12:43:15.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.821" endtime="20201112 12:43:15.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.843" endtime="20201112 12:43:15.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.845" endtime="20201112 12:43:15.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.819" endtime="20201112 12:43:15.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.817" endtime="20201112 12:43:15.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.855" endtime="20201112 12:43:16.140"></status>
</kw>
<msg timestamp="20201112 12:43:16.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.854" endtime="20201112 12:43:16.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.145" endtime="20201112 12:43:16.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.153" endtime="20201112 12:43:16.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.851" endtime="20201112 12:43:16.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.849" endtime="20201112 12:43:16.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.160" level="INFO">${RESULT} = [{'time': 0.020367764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.532000000000025e-05, 'source_diff': 7.532000000000025e-05}, {'time': 0.02045175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:16.156" endtime="20201112 12:43:16.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.174" level="INFO">${ACCURACY} = {'time': [0.020367764, 0.02045175, 0.020537764, 0.020619792, 0.020704792, 0.020785792, 0.020868806, 0.020952806, 0.021034833, 0.021120889, 0.021201861, 0.021283875, 0.021365861, 0.021453889, 0.0215388...</msg>
<status status="PASS" starttime="20201112 12:43:16.161" endtime="20201112 12:43:16.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.179" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.178" endtime="20201112 12:43:16.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.182" level="INFO">VALUE: [7.532000000000025e-05, 7.451400000000122e-05, 7.49310000000003e-05, 7.458400000000254e-05, 7.536099999999948e-05, 7.500000000000215e-05, 7.52639999999985e-05, 7.458400000000254e-05, 7.466600000000101e-05, 7.490300000000116e-05, 7.451399999999775e-05, 7.476400000000147e-05, 7.51249999999988e-05, 7.487500000000202e-05, 7.506900000000052e-05, 7.474999999999843e-05, 7.536099999999948e-05, 7.499999999999868e-05, 7.468100000000005e-05, 7.523699999999883e-05, 7.480600000000018e-05, 7.505500000000095e-05, 7.461099999999873e-05, 7.529099999999816e-05, 7.517999999999761e-05, 7.518100000000055e-05, 7.529200000000111e-05, 7.486099999999898e-05, 7.504200000000086e-05, 7.498600000000258e-05, 7.508400000000304e-05, 7.474999999999843e-05, 7.519500000000012e-05, 7.516599999999804e-05, 7.498599999999911e-05, 7.470799999999972e-05, 7.513900000000184e-05, 7.527799999999807e-05, 7.473599999999886e-05, 7.456900000000002e-05, 7.531999999999678e-05, 7.52639999999985e-05, 7.511099999999923e-05, 7.480600000000018e-05, 7.441700000000023e-05, 7.49310000000003e-05, 7.474999999999843e-05, 7.495799999999997e-05, 7.543000000000133e-05, 7.479099999999766e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.180" endtime="20201112 12:43:16.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.175" endtime="20201112 12:43:16.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.185" endtime="20201112 12:43:16.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.189" endtime="20201112 12:43:16.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.187" endtime="20201112 12:43:16.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.184" endtime="20201112 12:43:16.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.815" endtime="20201112 12:43:16.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.814" endtime="20201112 12:43:16.210"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.219" endtime="20201112 12:43:16.236"></status>
</kw>
<msg timestamp="20201112 12:43:16.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.217" endtime="20201112 12:43:16.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.238" endtime="20201112 12:43:16.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.240" endtime="20201112 12:43:16.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.214" endtime="20201112 12:43:16.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.212" endtime="20201112 12:43:16.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.250" endtime="20201112 12:43:16.536"></status>
</kw>
<msg timestamp="20201112 12:43:16.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.249" endtime="20201112 12:43:16.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.540" endtime="20201112 12:43:16.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.549" endtime="20201112 12:43:16.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.246" endtime="20201112 12:43:16.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.244" endtime="20201112 12:43:16.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.556" level="INFO">${RESULT} = [{'time': 0.020443903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554199999999789e-05, 'source_diff': 7.554199999999789e-05}, {'time': 0.020527917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.552" endtime="20201112 12:43:16.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.569" level="INFO">${ACCURACY} = {'time': [0.020443903, 0.020527917, 0.020615931, 0.020702958, 0.020784986, 0.020866958, 0.020950014, 0.021037972, 0.021120986, 0.021209, 0.021291, 0.021378028, 0.021465042, 0.021553028, 0.021640042, 0...</msg>
<status status="PASS" starttime="20201112 12:43:16.557" endtime="20201112 12:43:16.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.574" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.573" endtime="20201112 12:43:16.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.577" level="INFO">VALUE: [7.554199999999789e-05, 7.5763999999999e-05, 7.580600000000118e-05, 7.545800000000047e-05, 7.565299999999844e-05, 7.600000000000315e-05, 7.633299999999787e-05, 7.624999999999993e-05, 7.573599999999986e-05, 7.637500000000005e-05, 7.54310000000008e-05, 7.587499999999955e-05, 7.594500000000087e-05, 7.597199999999707e-05, 7.576400000000247e-05, 7.551300000000274e-05, 7.577799999999857e-05, 7.58050000000017e-05, 7.572200000000029e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.595800000000097e-05, 7.634700000000091e-05, 7.597200000000054e-05, 7.580599999999771e-05, 7.573599999999986e-05, 7.620899999999722e-05, 7.583400000000032e-05, 7.551299999999928e-05, 7.640300000000266e-05, 7.606899999999805e-05, 7.598600000000011e-05, 7.545800000000047e-05, 7.590300000000216e-05, 7.6070000000001e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.629200000000211e-05, 7.623600000000036e-05, 7.588899999999912e-05, 7.579199999999814e-05, 7.586099999999998e-05, 7.597200000000054e-05, 7.599999999999968e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.545800000000047e-05, 7.62639999999995e-05, 7.549999999999918e-05, 7.624999999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.575" endtime="20201112 12:43:16.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.570" endtime="20201112 12:43:16.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.580" endtime="20201112 12:43:16.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.584" endtime="20201112 12:43:16.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.582" endtime="20201112 12:43:16.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.579" endtime="20201112 12:43:16.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.211" endtime="20201112 12:43:16.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.210" endtime="20201112 12:43:16.605"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.613" endtime="20201112 12:43:16.632"></status>
</kw>
<msg timestamp="20201112 12:43:16.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.612" endtime="20201112 12:43:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.633" endtime="20201112 12:43:16.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.636" endtime="20201112 12:43:16.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.609" endtime="20201112 12:43:16.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.607" endtime="20201112 12:43:16.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.646" endtime="20201112 12:43:16.932"></status>
</kw>
<msg timestamp="20201112 12:43:16.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:16.644" endtime="20201112 12:43:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:16.936" endtime="20201112 12:43:16.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.944" endtime="20201112 12:43:16.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.642" endtime="20201112 12:43:16.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.640" endtime="20201112 12:43:16.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.951" level="INFO">${RESULT} = [{'time': 0.019883847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.659700000000116e-05, 'source_diff': 7.659700000000116e-05}, {'time': 0.019972875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.948" endtime="20201112 12:43:16.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.965" level="INFO">${ACCURACY} = {'time': [0.019883847, 0.019972875, 0.020059875, 0.020147875, 0.020234889, 0.020321917, 0.020408903, 0.020496944, 0.020581931, 0.020664944, 0.020749986, 0.020833972, 0.020920972, 0.021008986, 0.021092...</msg>
<status status="PASS" starttime="20201112 12:43:16.952" endtime="20201112 12:43:16.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.970" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.968" endtime="20201112 12:43:16.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.972" level="INFO">VALUE: [7.659700000000116e-05, 7.720800000000222e-05, 7.695800000000197e-05, 7.643099999999833e-05, 7.704199999999939e-05, 7.670899999999772e-05, 7.669499999999815e-05, 7.676300000000053e-05, 7.732000000000225e-05, 7.645800000000147e-05, 7.681900000000227e-05, 7.675000000000043e-05, 7.688900000000012e-05, 7.691699999999926e-05, 7.641700000000223e-05, 7.70969999999982e-05, 7.647200000000104e-05, 7.674999999999696e-05, 7.733399999999835e-05, 7.708400000000157e-05, 7.643099999999833e-05, 7.673600000000086e-05, 7.74440000000029e-05, 7.737500000000105e-05, 7.665199999999997e-05, 7.66250000000003e-05, 7.649999999999671e-05, 7.691700000000273e-05, 7.679199999999914e-05, 7.712499999999733e-05, 7.686099999999751e-05, 7.680599999999871e-05, 7.720899999999822e-05, 7.704199999999939e-05, 7.643099999999833e-05, 7.675000000000043e-05, 7.711100000000123e-05, 7.67770000000001e-05, 7.684699999999794e-05, 7.727800000000007e-05, 7.729199999999964e-05, 7.673600000000086e-05, 7.647200000000104e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.743099999999933e-05, 7.652699999999985e-05, 7.742999999999986e-05, 7.648599999999714e-05, 7.655499999999898e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.971" endtime="20201112 12:43:16.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.966" endtime="20201112 12:43:16.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.976" endtime="20201112 12:43:16.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.979" endtime="20201112 12:43:16.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.978" endtime="20201112 12:43:17.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.974" endtime="20201112 12:43:17.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.606" endtime="20201112 12:43:17.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.605" endtime="20201112 12:43:17.001"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.010" endtime="20201112 12:43:17.029"></status>
</kw>
<msg timestamp="20201112 12:43:17.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.008" endtime="20201112 12:43:17.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.030" endtime="20201112 12:43:17.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.033" endtime="20201112 12:43:17.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.005" endtime="20201112 12:43:17.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.003" endtime="20201112 12:43:17.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.043" endtime="20201112 12:43:17.328"></status>
</kw>
<msg timestamp="20201112 12:43:17.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020998417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021076111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.042" endtime="20201112 12:43:17.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020998417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021076111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.333" endtime="20201112 12:43:17.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.341" endtime="20201112 12:43:17.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.039" endtime="20201112 12:43:17.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.037" endtime="20201112 12:43:17.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.348" level="INFO">${RESULT} = [{'time': 0.021076111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.769400000000315e-05, 'source_diff': 7.769400000000315e-05}, {'time': 0.021162111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.344" endtime="20201112 12:43:17.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.361" level="INFO">${ACCURACY} = {'time': [0.021076111, 0.021162111, 0.021248111, 0.021333139, 0.021422139, 0.021513153, 0.021600153, 0.021688167, 0.021778194, 0.021865194, 0.021950208, 0.022039208, 0.022127222, 0.02221425, 0.0223033...</msg>
<status status="PASS" starttime="20201112 12:43:17.349" endtime="20201112 12:43:17.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.366" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.365" endtime="20201112 12:43:17.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.369" level="INFO">VALUE: [7.769400000000315e-05, 7.78189999999998e-05, 7.801400000000125e-05, 7.773600000000186e-05, 7.838899999999815e-05, 7.833399999999935e-05, 7.813900000000137e-05, 7.833400000000282e-05, 7.775000000000143e-05, 7.759700000000216e-05, 7.772199999999882e-05, 7.793000000000036e-05, 7.79579999999995e-05, 7.759700000000216e-05, 7.790299999999722e-05, 7.805599999999996e-05, 7.752800000000032e-05, 7.830600000000021e-05, 7.788899999999765e-05, 7.799999999999821e-05, 7.751399999999728e-05, 7.802800000000082e-05, 7.773600000000186e-05, 7.818000000000061e-05, 7.820799999999975e-05, 7.786100000000198e-05, 7.782000000000275e-05, 7.811099999999876e-05, 7.827800000000107e-05, 7.761100000000173e-05, 7.833400000000282e-05, 7.84169999999973e-05, 7.745899999999847e-05, 7.799999999999821e-05, 7.797299999999854e-05, 7.769399999999968e-05, 7.843000000000086e-05, 7.840299999999772e-05, 7.82229999999988e-05, 7.840299999999772e-05, 7.750000000000118e-05, 7.788900000000112e-05, 7.804200000000039e-05, 7.820900000000269e-05, 7.802800000000082e-05, 7.763900000000087e-05, 7.743099999999933e-05, 7.822199999999932e-05, 7.799999999999821e-05, 7.811099999999876e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.367" endtime="20201112 12:43:17.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.362" endtime="20201112 12:43:17.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.372" endtime="20201112 12:43:17.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.376" endtime="20201112 12:43:17.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.374" endtime="20201112 12:43:17.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.370" endtime="20201112 12:43:17.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.001" endtime="20201112 12:43:17.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.001" endtime="20201112 12:43:17.397"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.405" endtime="20201112 12:43:17.424"></status>
</kw>
<msg timestamp="20201112 12:43:17.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.404" endtime="20201112 12:43:17.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.425" endtime="20201112 12:43:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.428" endtime="20201112 12:43:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.401" endtime="20201112 12:43:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.399" endtime="20201112 12:43:17.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.438" endtime="20201112 12:43:17.722"></status>
</kw>
<msg timestamp="20201112 12:43:17.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020646444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.437" endtime="20201112 12:43:17.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020646444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.727" endtime="20201112 12:43:17.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.735" endtime="20201112 12:43:17.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.434" endtime="20201112 12:43:17.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.432" endtime="20201112 12:43:17.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.742" level="INFO">${RESULT} = [{'time': 0.020646444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90129999999993e-05, 'source_diff': 7.90129999999993e-05}, {'time': 0.020738431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:17.739" endtime="20201112 12:43:17.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.757" level="INFO">${ACCURACY} = {'time': [0.020646444, 0.020738431, 0.020824444, 0.020914444, 0.021000458, 0.021085458, 0.021177472, 0.021266486, 0.021357486, 0.0214425, 0.021533514, 0.021623514, 0.021711542, 0.021796542, 0.02188156...</msg>
<status status="PASS" starttime="20201112 12:43:17.743" endtime="20201112 12:43:17.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.762" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.761" endtime="20201112 12:43:17.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.764" level="INFO">VALUE: [7.90129999999993e-05, 7.886200000000246e-05, 7.905500000000149e-05, 7.876299999999906e-05, 7.858300000000012e-05, 7.900000000000268e-05, 7.902799999999835e-05, 7.85969999999997e-05, 7.856899999999709e-05, 7.922200000000032e-05, 7.866700000000101e-05, 7.934700000000044e-05, 7.90840000000001e-05, 7.840299999999772e-05, 7.863799999999893e-05, 7.895799999999703e-05, 7.90970000000002e-05, 7.929199999999817e-05, 7.855500000000099e-05, 7.880499999999777e-05, 7.916700000000151e-05, 7.922200000000032e-05, 7.884699999999994e-05, 7.84449999999999e-05, 7.875000000000243e-05, 7.91389999999989e-05, 7.92779999999986e-05, 7.847299999999904e-05, 7.888800000000265e-05, 7.888799999999918e-05, 7.851399999999828e-05, 7.86389999999984e-05, 7.908300000000063e-05, 7.875000000000243e-05, 7.847200000000304e-05, 7.919499999999718e-05, 7.933400000000035e-05, 7.911099999999976e-05, 7.880600000000071e-05, 7.891599999999832e-05, 7.879200000000114e-05, 7.898599999999964e-05, 7.938899999999915e-05, 7.855499999999752e-05, 7.848600000000261e-05, 7.902800000000182e-05, 7.858300000000012e-05, 7.930599999999774e-05, 7.859799999999917e-05, 7.927800000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.763" endtime="20201112 12:43:17.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.758" endtime="20201112 12:43:17.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.768" endtime="20201112 12:43:17.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.772" endtime="20201112 12:43:17.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.770" endtime="20201112 12:43:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.766" endtime="20201112 12:43:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.398" endtime="20201112 12:43:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.397" endtime="20201112 12:43:17.793"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.801" endtime="20201112 12:43:17.820"></status>
</kw>
<msg timestamp="20201112 12:43:17.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.800" endtime="20201112 12:43:17.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.821" endtime="20201112 12:43:17.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.824" endtime="20201112 12:43:17.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.797" endtime="20201112 12:43:17.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.795" endtime="20201112 12:43:17.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.834" endtime="20201112 12:43:18.120"></status>
</kw>
<msg timestamp="20201112 12:43:18.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.833" endtime="20201112 12:43:18.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.124" endtime="20201112 12:43:18.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.133" endtime="20201112 12:43:18.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.830" endtime="20201112 12:43:18.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.828" endtime="20201112 12:43:18.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.140" level="INFO">${RESULT} = [{'time': 0.020134431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.952800000000232e-05, 'source_diff': 7.952800000000232e-05}, {'time': 0.020222431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.136" endtime="20201112 12:43:18.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.153" level="INFO">${ACCURACY} = {'time': [0.020134431, 0.020222431, 0.020312444, 0.020400458, 0.020489458, 0.020575458, 0.020667486, 0.020753528, 0.0208455, 0.0209355, 0.021024528, 0.021114569, 0.021201583, 0.021289556, 0.021380556,...</msg>
<status status="PASS" starttime="20201112 12:43:18.141" endtime="20201112 12:43:18.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.158" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.156" endtime="20201112 12:43:18.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.160" level="INFO">VALUE: [7.952800000000232e-05, 8.018099999999861e-05, 8.041599999999982e-05, 8.034700000000145e-05, 8.0152e-05, 7.961100000000026e-05, 7.981899999999834e-05, 7.990299999999922e-05, 8.029199999999917e-05, 7.987500000000008e-05, 7.974999999999996e-05, 7.949999999999971e-05, 8.004099999999945e-05, 7.977800000000257e-05, 8.02369999999969e-05, 7.948600000000014e-05, 7.97909999999992e-05, 7.954099999999895e-05, 8.012500000000033e-05, 7.984700000000094e-05, 8.001399999999978e-05, 7.998600000000064e-05, 8.011100000000076e-05, 8.00970000000012e-05, 7.99589999999975e-05, 7.974999999999996e-05, 8.019500000000165e-05, 7.991599999999932e-05, 7.973600000000039e-05, 7.983300000000138e-05, 8.020799999999828e-05, 8.023599999999742e-05, 8.034699999999798e-05, 8.037500000000058e-05, 7.948600000000014e-05, 8.025000000000046e-05, 7.954199999999842e-05, 8.036099999999755e-05, 7.997300000000054e-05, 8.022200000000132e-05, 8.040200000000025e-05, 7.974999999999996e-05, 8.017999999999914e-05, 8.03190000000023e-05, 7.96389999999994e-05, 8.02779999999996e-05, 7.994399999999846e-05, 7.976399999999953e-05, 7.94169999999983e-05, 7.97779999999991e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.159" endtime="20201112 12:43:18.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.154" endtime="20201112 12:43:18.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.164" endtime="20201112 12:43:18.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.167" endtime="20201112 12:43:18.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.166" endtime="20201112 12:43:18.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.162" endtime="20201112 12:43:18.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.793" endtime="20201112 12:43:18.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.793" endtime="20201112 12:43:18.188"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.197" endtime="20201112 12:43:18.217"></status>
</kw>
<msg timestamp="20201112 12:43:18.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.195" endtime="20201112 12:43:18.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.219" endtime="20201112 12:43:18.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.221" endtime="20201112 12:43:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.193" endtime="20201112 12:43:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.191" endtime="20201112 12:43:18.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.232" endtime="20201112 12:43:18.517"></status>
</kw>
<msg timestamp="20201112 12:43:18.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.230" endtime="20201112 12:43:18.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.521" endtime="20201112 12:43:18.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.530" endtime="20201112 12:43:18.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.227" endtime="20201112 12:43:18.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.225" endtime="20201112 12:43:18.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.537" level="INFO">${RESULT} = [{'time': 0.020778083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999999799e-05, 'source_diff': 8.124999999999799e-05}, {'time': 0.020867083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.533" endtime="20201112 12:43:18.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.550" level="INFO">${ACCURACY} = {'time': [0.020778083, 0.020867083, 0.020958111, 0.021051097, 0.021144111, 0.021234139, 0.021322153, 0.021412153, 0.021505153, 0.021599194, 0.021687181, 0.021775194, 0.021866194, 0.021956208, 0.022048...</msg>
<status status="PASS" starttime="20201112 12:43:18.538" endtime="20201112 12:43:18.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.555" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.554" endtime="20201112 12:43:18.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.557" level="INFO">VALUE: [8.124999999999799e-05, 8.126400000000103e-05, 8.097200000000207e-05, 8.058300000000213e-05, 8.066699999999954e-05, 8.108299999999916e-05, 8.081999999999881e-05, 8.131999999999931e-05, 8.065299999999997e-05, 8.120799999999928e-05, 8.048700000000061e-05, 8.073600000000139e-05, 8.087499999999762e-05, 8.130500000000027e-05, 8.075000000000096e-05, 8.136100000000202e-05, 8.048600000000114e-05, 8.123600000000189e-05, 8.094499999999893e-05, 8.116700000000004e-05, 8.074999999999749e-05, 8.058399999999813e-05, 8.04450000000019e-05, 8.090300000000022e-05, 8.131899999999984e-05, 8.106899999999959e-05, 8.111100000000177e-05, 8.126400000000103e-05, 8.105599999999949e-05, 8.133300000000288e-05, 8.086100000000151e-05, 8.094499999999893e-05, 8.090300000000022e-05, 8.04719999999981e-05, 8.127700000000113e-05, 8.087499999999762e-05, 8.0458000000002e-05, 8.076400000000053e-05, 8.116600000000057e-05, 8.068100000000258e-05, 8.09169999999998e-05, 8.075000000000096e-05, 8.10970000000022e-05, 8.13329999999994e-05, 8.066699999999954e-05, 8.070899999999825e-05, 8.116700000000004e-05, 8.072199999999835e-05, 8.123599999999842e-05, 8.055500000000299e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.556" endtime="20201112 12:43:18.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.551" endtime="20201112 12:43:18.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.561" endtime="20201112 12:43:18.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.564" endtime="20201112 12:43:18.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.563" endtime="20201112 12:43:18.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.559" endtime="20201112 12:43:18.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.189" endtime="20201112 12:43:18.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.189" endtime="20201112 12:43:18.586"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.594" endtime="20201112 12:43:18.612"></status>
</kw>
<msg timestamp="20201112 12:43:18.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.593" endtime="20201112 12:43:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.614" endtime="20201112 12:43:18.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.616" endtime="20201112 12:43:18.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.590" endtime="20201112 12:43:18.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.588" endtime="20201112 12:43:18.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.626" endtime="20201112 12:43:18.912"></status>
</kw>
<msg timestamp="20201112 12:43:18.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.625" endtime="20201112 12:43:18.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.916" endtime="20201112 12:43:18.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.925" endtime="20201112 12:43:18.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.622" endtime="20201112 12:43:18.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.620" endtime="20201112 12:43:18.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.932" level="INFO">${RESULT} = [{'time': 0.019985819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.14719999999991e-05, 'source_diff': 8.14719999999991e-05}, {'time': 0.020076806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:18.928" endtime="20201112 12:43:18.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.945" level="INFO">${ACCURACY} = {'time': [0.019985819, 0.020076806, 0.020166819, 0.020256833, 0.020345903, 0.020438861, 0.020532861, 0.020624875, 0.020718944, 0.020813889, 0.020907903, 0.020999917, 0.021092958, 0.021182931, 0.021277...</msg>
<status status="PASS" starttime="20201112 12:43:18.933" endtime="20201112 12:43:18.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.950" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.949" endtime="20201112 12:43:18.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.952" level="INFO">VALUE: [8.14719999999991e-05, 8.158399999999913e-05, 8.226299999999909e-05, 8.233299999999694e-05, 8.234699999999998e-05, 8.199999999999874e-05, 8.226399999999856e-05, 8.16390000000014e-05, 8.155500000000052e-05, 8.224999999999899e-05, 8.219500000000018e-05, 8.170899999999925e-05, 8.148599999999867e-05, 8.147299999999857e-05, 8.201299999999884e-05, 8.18329999999999e-05, 8.231900000000084e-05, 8.186099999999905e-05, 8.168100000000011e-05, 8.179200000000067e-05, 8.195800000000003e-05, 8.184699999999948e-05, 8.187499999999862e-05, 8.20269999999984e-05, 8.19170000000008e-05, 8.2152999999998e-05, 8.19719999999996e-05, 8.231899999999737e-05, 8.194400000000046e-05, 8.19719999999996e-05, 8.156899999999662e-05, 8.200000000000221e-05, 8.144499999999943e-05, 8.187500000000208e-05, 8.24170000000013e-05, 8.154200000000042e-05, 8.220899999999975e-05, 8.186100000000252e-05, 8.190200000000175e-05, 8.236099999999955e-05, 8.198600000000264e-05, 8.148600000000214e-05, 8.226399999999856e-05, 8.188900000000165e-05, 8.194499999999993e-05, 8.21390000000019e-05, 8.169500000000315e-05, 8.152800000000085e-05, 8.149999999999824e-05, 8.168100000000011e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.951" endtime="20201112 12:43:18.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.946" endtime="20201112 12:43:18.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.956" endtime="20201112 12:43:18.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.959" endtime="20201112 12:43:18.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.958" endtime="20201112 12:43:18.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.954" endtime="20201112 12:43:18.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.586" endtime="20201112 12:43:18.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.586" endtime="20201112 12:43:18.981"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.989" endtime="20201112 12:43:19.008"></status>
</kw>
<msg timestamp="20201112 12:43:19.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.988" endtime="20201112 12:43:19.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.010" endtime="20201112 12:43:19.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.012" endtime="20201112 12:43:19.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.985" endtime="20201112 12:43:19.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.983" endtime="20201112 12:43:19.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.022" endtime="20201112 12:43:19.309"></status>
</kw>
<msg timestamp="20201112 12:43:19.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:19.021" endtime="20201112 12:43:19.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:19.313" endtime="20201112 12:43:19.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.321" endtime="20201112 12:43:19.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.018" endtime="20201112 12:43:19.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.016" endtime="20201112 12:43:19.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.328" level="INFO">${RESULT} = [{'time': 0.020131458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.295800000000103e-05, 'source_diff': 8.295800000000103e-05}, {'time': 0.020225486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.325" endtime="20201112 12:43:19.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.343" level="INFO">${ACCURACY} = {'time': [0.020131458, 0.020225486, 0.020315556, 0.0204115, 0.0205045, 0.020599514, 0.020693583, 0.020789528, 0.020883542, 0.020977556, 0.021070569, 0.021165569, 0.021258625, 0.021351639, 0.021443611,...</msg>
<status status="PASS" starttime="20201112 12:43:19.329" endtime="20201112 12:43:19.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.348" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.346" endtime="20201112 12:43:19.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.350" level="INFO">VALUE: [8.295800000000103e-05, 8.324999999999999e-05, 8.280599999999777e-05, 8.324999999999999e-05, 8.319399999999824e-05, 8.280599999999777e-05, 8.244400000000096e-05, 8.270900000000025e-05, 8.316700000000204e-05, 8.243100000000086e-05, 8.288799999999971e-05, 8.248599999999967e-05, 8.313899999999944e-05, 8.323599999999695e-05, 8.259700000000023e-05, 8.313899999999944e-05, 8.270799999999731e-05, 8.308299999999769e-05, 8.276399999999906e-05, 8.326399999999956e-05, 8.32780000000026e-05, 8.291699999999833e-05, 8.26109999999998e-05, 8.274999999999949e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.299999999999974e-05, 8.286100000000005e-05, 8.304199999999845e-05, 8.307000000000106e-05, 8.272299999999982e-05, 8.298600000000017e-05, 8.251400000000228e-05, 8.268000000000164e-05, 8.326300000000009e-05, 8.279099999999873e-05, 8.3152999999999e-05, 8.294399999999799e-05, 8.26109999999998e-05, 8.276400000000253e-05, 8.318099999999815e-05, 8.332000000000131e-05, 8.326399999999956e-05, 8.297300000000007e-05, 8.286100000000005e-05, 8.268100000000111e-05, 8.322200000000085e-05, 8.344399999999849e-05, 8.280500000000177e-05, 8.276399999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.349" endtime="20201112 12:43:19.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.344" endtime="20201112 12:43:19.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.358" endtime="20201112 12:43:19.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.362" endtime="20201112 12:43:19.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.360" endtime="20201112 12:43:19.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.357" endtime="20201112 12:43:19.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.981" endtime="20201112 12:43:19.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.981" endtime="20201112 12:43:19.383"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.392" endtime="20201112 12:43:19.409"></status>
</kw>
<msg timestamp="20201112 12:43:19.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.390" endtime="20201112 12:43:19.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.411" endtime="20201112 12:43:19.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.413" endtime="20201112 12:43:19.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.388" endtime="20201112 12:43:19.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.385" endtime="20201112 12:43:19.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.423" endtime="20201112 12:43:19.709"></status>
</kw>
<msg timestamp="20201112 12:43:19.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.422" endtime="20201112 12:43:19.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.714" endtime="20201112 12:43:19.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.722" endtime="20201112 12:43:19.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.419" endtime="20201112 12:43:19.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.418" endtime="20201112 12:43:19.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.729" level="INFO">${RESULT} = [{'time': 0.019948889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.394500000000193e-05, 'source_diff': 8.394500000000193e-05}, {'time': 0.020040889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.726" endtime="20201112 12:43:19.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.743" level="INFO">${ACCURACY} = {'time': [0.019948889, 0.020040889, 0.020132931, 0.020226944, 0.020323917, 0.020413931, 0.020504944, 0.020597958, 0.020692972, 0.020783986, 0.020877042, 0.020969, 0.021061, 0.021152014, 0.021244069, 0...</msg>
<status status="PASS" starttime="20201112 12:43:19.730" endtime="20201112 12:43:19.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.747" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.746" endtime="20201112 12:43:19.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.750" level="INFO">VALUE: [8.394500000000193e-05, 8.408299999999869e-05, 8.375000000000049e-05, 8.39720000000016e-05, 8.423600000000142e-05, 8.34309999999984e-05, 8.413800000000096e-05, 8.408299999999869e-05, 8.441600000000035e-05, 8.375000000000049e-05, 8.358399999999766e-05, 8.443100000000286e-05, 8.406899999999912e-05, 8.348600000000067e-05, 8.388800000000071e-05, 8.363899999999994e-05, 8.425000000000099e-05, 8.440300000000026e-05, 8.354099999999948e-05, 8.426399999999709e-05, 8.3846999999998e-05, 8.43049999999998e-05, 8.380600000000224e-05, 8.39170000000028e-05, 8.383399999999791e-05, 8.406999999999859e-05, 8.409699999999826e-05, 8.363899999999994e-05, 8.398600000000117e-05, 8.433400000000188e-05, 8.383299999999844e-05, 8.429100000000023e-05, 8.405500000000302e-05, 8.352799999999938e-05, 8.352799999999938e-05, 8.38330000000019e-05, 8.375000000000049e-05, 8.413900000000044e-05, 8.400000000000074e-05, 8.390299999999976e-05, 8.376400000000006e-05, 8.37370000000004e-05, 8.359700000000123e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.365300000000297e-05, 8.392999999999942e-05, 8.416699999999958e-05, 8.370799999999831e-05, 8.413900000000044e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.748" endtime="20201112 12:43:19.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.743" endtime="20201112 12:43:19.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.753" endtime="20201112 12:43:19.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.757" endtime="20201112 12:43:19.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.755" endtime="20201112 12:43:19.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.752" endtime="20201112 12:43:19.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.384" endtime="20201112 12:43:19.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.383" endtime="20201112 12:43:19.778"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.787" endtime="20201112 12:43:19.806"></status>
</kw>
<msg timestamp="20201112 12:43:19.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.785" endtime="20201112 12:43:19.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.807" endtime="20201112 12:43:19.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.810" endtime="20201112 12:43:19.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.783" endtime="20201112 12:43:19.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.780" endtime="20201112 12:43:19.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.820" endtime="20201112 12:43:20.108"></status>
</kw>
<msg timestamp="20201112 12:43:20.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:19.818" endtime="20201112 12:43:20.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:20.112" endtime="20201112 12:43:20.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.120" endtime="20201112 12:43:20.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.816" endtime="20201112 12:43:20.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.814" endtime="20201112 12:43:20.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.127" level="INFO">${RESULT} = [{'time': 0.0202395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.46110000000018e-05, 'source_diff': 8.46110000000018e-05}, {'time': 0.020335486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201112 12:43:20.124" endtime="20201112 12:43:20.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.141" level="INFO">${ACCURACY} = {'time': [0.0202395, 0.020335486, 0.0204275, 0.020519514, 0.020611528, 0.020708597, 0.020801542, 0.020896569, 0.020987569, 0.021079569, 0.021173583, 0.021265611, 0.021361611, 0.021457611, 0.021553625,...</msg>
<status status="PASS" starttime="20201112 12:43:20.128" endtime="20201112 12:43:20.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.145" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.144" endtime="20201112 12:43:20.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.148" level="INFO">VALUE: [8.46110000000018e-05, 8.491700000000033e-05, 8.49720000000026e-05, 8.473599999999845e-05, 8.522199999999938e-05, 8.502799999999741e-05, 8.533399999999941e-05, 8.473600000000192e-05, 8.500000000000174e-05, 8.44859999999982e-05, 8.46660000000006e-05, 8.463900000000094e-05, 8.493000000000042e-05, 8.500000000000174e-05, 8.499999999999827e-05, 8.486099999999858e-05, 8.495899999999904e-05, 8.522299999999886e-05, 8.483399999999891e-05, 8.49309999999999e-05, 8.48050000000003e-05, 8.454099999999701e-05, 8.531900000000037e-05, 8.444399999999949e-05, 8.476400000000106e-05, 8.523600000000242e-05, 8.538899999999822e-05, 8.537500000000212e-05, 8.477799999999716e-05, 8.483399999999891e-05, 8.456999999999909e-05, 8.493000000000042e-05, 8.477699999999769e-05, 8.53050000000008e-05, 8.452800000000038e-05, 8.440300000000026e-05, 8.501400000000131e-05, 8.47920000000002e-05, 8.49729999999986e-05, 8.468099999999965e-05, 8.541700000000083e-05, 8.483400000000238e-05, 8.51249999999984e-05, 8.522199999999938e-05, 8.53050000000008e-05, 8.463900000000094e-05, 8.46249999999979e-05, 8.455500000000005e-05, 8.500000000000174e-05, 8.487499999999815e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.147" endtime="20201112 12:43:20.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.142" endtime="20201112 12:43:20.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.152" endtime="20201112 12:43:20.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.155" endtime="20201112 12:43:20.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.154" endtime="20201112 12:43:20.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.150" endtime="20201112 12:43:20.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.779" endtime="20201112 12:43:20.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.778" endtime="20201112 12:43:20.176"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.185" endtime="20201112 12:43:20.204"></status>
</kw>
<msg timestamp="20201112 12:43:20.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.184" endtime="20201112 12:43:20.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.206" endtime="20201112 12:43:20.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.208" endtime="20201112 12:43:20.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.181" endtime="20201112 12:43:20.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.179" endtime="20201112 12:43:20.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.219" endtime="20201112 12:43:20.504"></status>
</kw>
<msg timestamp="20201112 12:43:20.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.217" endtime="20201112 12:43:20.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.508" endtime="20201112 12:43:20.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.517" endtime="20201112 12:43:20.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.214" endtime="20201112 12:43:20.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.213" endtime="20201112 12:43:20.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.524" level="INFO">${RESULT} = [{'time': 0.020221583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.575000000000249e-05, 'source_diff': 8.575000000000249e-05}, {'time': 0.020316667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.520" endtime="20201112 12:43:20.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.537" level="INFO">${ACCURACY} = {'time': [0.020221583, 0.020316667, 0.020409611, 0.020506639, 0.020598639, 0.020691639, 0.020785667, 0.020883681, 0.020980708, 0.021075694, 0.021173708, 0.021268708, 0.021362736, 0.021461778, 0.021559...</msg>
<status status="PASS" starttime="20201112 12:43:20.525" endtime="20201112 12:43:20.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.542" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.541" endtime="20201112 12:43:20.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.544" level="INFO">VALUE: [8.575000000000249e-05, 8.569500000000022e-05, 8.601400000000231e-05, 8.59310000000009e-05, 8.601399999999884e-05, 8.580600000000077e-05, 8.59729999999996e-05, 8.640300000000226e-05, 8.636100000000008e-05, 8.637499999999965e-05, 8.56799999999977e-05, 8.606900000000112e-05, 8.63470000000005e-05, 8.588900000000219e-05, 8.626399999999909e-05, 8.611099999999983e-05, 8.626399999999909e-05, 8.587499999999915e-05, 8.569500000000022e-05, 8.563900000000194e-05, 8.551299999999887e-05, 8.570800000000031e-05, 8.56799999999977e-05, 8.56530000000015e-05, 8.577799999999816e-05, 8.619399999999777e-05, 8.63059999999978e-05, 8.601399999999884e-05, 8.591700000000133e-05, 8.544499999999997e-05, 8.576400000000206e-05, 8.574999999999902e-05, 8.56660000000016e-05, 8.547199999999963e-05, 8.556899999999715e-05, 8.569400000000074e-05, 8.577799999999816e-05, 8.624999999999952e-05, 8.572199999999988e-05, 8.566700000000108e-05, 8.550000000000224e-05, 8.62920000000017e-05, 8.609700000000026e-05, 8.605600000000102e-05, 8.549999999999877e-05, 8.59859999999997e-05, 8.561099999999933e-05, 8.623599999999995e-05, 8.620799999999734e-05, 8.555600000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.543" endtime="20201112 12:43:20.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.538" endtime="20201112 12:43:20.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.548" endtime="20201112 12:43:20.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.551" endtime="20201112 12:43:20.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.550" endtime="20201112 12:43:20.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.546" endtime="20201112 12:43:20.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.177" endtime="20201112 12:43:20.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.177" endtime="20201112 12:43:20.572"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.581" endtime="20201112 12:43:20.599"></status>
</kw>
<msg timestamp="20201112 12:43:20.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.580" endtime="20201112 12:43:20.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.601" endtime="20201112 12:43:20.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.603" endtime="20201112 12:43:20.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.577" endtime="20201112 12:43:20.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.575" endtime="20201112 12:43:20.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.614" endtime="20201112 12:43:20.900"></status>
</kw>
<msg timestamp="20201112 12:43:20.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.612" endtime="20201112 12:43:20.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.904" endtime="20201112 12:43:20.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.913" endtime="20201112 12:43:20.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.609" endtime="20201112 12:43:20.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.608" endtime="20201112 12:43:20.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.919" level="INFO">${RESULT} = [{'time': 0.020015542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.718100000000215e-05, 'source_diff': 8.718100000000215e-05}, {'time': 0.020113569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.916" endtime="20201112 12:43:20.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.934" level="INFO">${ACCURACY} = {'time': [0.020015542, 0.020113569, 0.020209569, 0.020302583, 0.020398597, 0.020492597, 0.020590611, 0.020690625, 0.020788639, 0.020885639, 0.020982653, 0.021080667, 0.021179694, 0.021279708, 0.021372...</msg>
<status status="PASS" starttime="20201112 12:43:20.920" endtime="20201112 12:43:20.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.939" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.938" endtime="20201112 12:43:20.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.941" level="INFO">VALUE: [8.718100000000215e-05, 8.651299999999987e-05, 8.683300000000144e-05, 8.69860000000007e-05, 8.737500000000065e-05, 8.720800000000181e-05, 8.676400000000306e-05, 8.701399999999984e-05, 8.740299999999979e-05, 8.713899999999997e-05, 8.73470000000015e-05, 8.69310000000019e-05, 8.647200000000063e-05, 8.686100000000058e-05, 8.668000000000217e-05, 8.66799999999987e-05, 8.738900000000022e-05, 8.737500000000065e-05, 8.691699999999886e-05, 8.697200000000113e-05, 8.654200000000195e-05, 8.694500000000147e-05, 8.700000000000027e-05, 8.657000000000109e-05, 8.700000000000027e-05, 8.73470000000015e-05, 8.711100000000083e-05, 8.733299999999847e-05, 8.705499999999908e-05, 8.668099999999818e-05, 8.736100000000108e-05, 8.722199999999791e-05, 8.718100000000215e-05, 8.6847000000001e-05, 8.738900000000022e-05, 8.71120000000003e-05, 8.683300000000144e-05, 8.680499999999883e-05, 8.6847000000001e-05, 8.691599999999938e-05, 8.704199999999898e-05, 8.654100000000248e-05, 8.720900000000129e-05, 8.695800000000156e-05, 8.726400000000009e-05, 8.722300000000086e-05, 8.694399999999852e-05, 8.742999999999945e-05, 8.66799999999987e-05, 8.688899999999972e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.940" endtime="20201112 12:43:20.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.935" endtime="20201112 12:43:20.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.945" endtime="20201112 12:43:20.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.948" endtime="20201112 12:43:20.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.947" endtime="20201112 12:43:20.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.943" endtime="20201112 12:43:20.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.573" endtime="20201112 12:43:20.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.573" endtime="20201112 12:43:20.969"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.978" endtime="20201112 12:43:20.996"></status>
</kw>
<msg timestamp="20201112 12:43:20.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.976" endtime="20201112 12:43:20.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.998" endtime="20201112 12:43:21.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.000" endtime="20201112 12:43:21.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.974" endtime="20201112 12:43:21.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.972" endtime="20201112 12:43:21.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.011" endtime="20201112 12:43:21.297"></status>
</kw>
<msg timestamp="20201112 12:43:21.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.009" endtime="20201112 12:43:21.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.301" endtime="20201112 12:43:21.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.310" endtime="20201112 12:43:21.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.007" endtime="20201112 12:43:21.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.005" endtime="20201112 12:43:21.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.316" level="INFO">${RESULT} = [{'time': 0.019903417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.83059999999998e-05, 'source_diff': 8.83059999999998e-05}, {'time': 0.020001444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:21.313" endtime="20201112 12:43:21.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.330" level="INFO">${ACCURACY} = {'time': [0.019903417, 0.020001444, 0.020098444, 0.020196444, 0.020297486, 0.020398472, 0.020499486, 0.020595486, 0.020689514, 0.020784528, 0.020880542, 0.020977542, 0.021074542, 0.021168569, 0.021267...</msg>
<status status="PASS" starttime="20201112 12:43:21.318" endtime="20201112 12:43:21.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.335" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.333" endtime="20201112 12:43:21.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.337" level="INFO">VALUE: [8.83059999999998e-05, 8.813800000000149e-05, 8.837500000000165e-05, 8.802700000000094e-05, 8.836099999999861e-05, 8.786100000000158e-05, 8.833299999999947e-05, 8.801400000000084e-05, 8.808299999999922e-05, 8.786100000000158e-05, 8.774999999999755e-05, 8.837499999999818e-05, 8.800000000000127e-05, 8.81800000000002e-05, 8.812499999999793e-05, 8.833300000000294e-05, 8.787499999999768e-05, 8.826399999999762e-05, 8.831900000000337e-05, 8.844500000000297e-05, 8.773599999999798e-05, 8.823600000000195e-05, 8.757000000000209e-05, 8.779199999999973e-05, 8.815200000000106e-05, 8.790200000000081e-05, 8.795800000000256e-05, 8.833299999999947e-05, 8.797200000000213e-05, 8.844400000000002e-05, 8.820799999999934e-05, 8.802799999999694e-05, 8.788900000000072e-05, 8.758400000000166e-05, 8.79869999999977e-05, 8.772299999999789e-05, 8.79860000000017e-05, 8.773599999999798e-05, 8.792999999999995e-05, 8.759699999999829e-05, 8.784699999999854e-05, 8.76250000000009e-05, 8.776399999999712e-05, 8.773600000000145e-05, 8.802800000000041e-05, 8.838900000000122e-05, 8.823599999999848e-05, 8.822300000000186e-05, 8.795799999999909e-05, 8.843000000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.336" endtime="20201112 12:43:21.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.331" endtime="20201112 12:43:21.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.341" endtime="20201112 12:43:21.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.344" endtime="20201112 12:43:21.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.343" endtime="20201112 12:43:21.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.339" endtime="20201112 12:43:21.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.970" endtime="20201112 12:43:21.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.970" endtime="20201112 12:43:21.365"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.374" endtime="20201112 12:43:21.393"></status>
</kw>
<msg timestamp="20201112 12:43:21.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.373" endtime="20201112 12:43:21.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.394" endtime="20201112 12:43:21.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.397" endtime="20201112 12:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.370" endtime="20201112 12:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.368" endtime="20201112 12:43:21.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.407" endtime="20201112 12:43:21.692"></status>
</kw>
<msg timestamp="20201112 12:43:21.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.406" endtime="20201112 12:43:21.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.697" endtime="20201112 12:43:21.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.705" endtime="20201112 12:43:21.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.403" endtime="20201112 12:43:21.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.401" endtime="20201112 12:43:21.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.712" level="INFO">${RESULT} = [{'time': 0.019972542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.898599999999923e-05, 'source_diff': 8.898599999999923e-05}, {'time': 0.020073486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.708" endtime="20201112 12:43:21.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.725" level="INFO">${ACCURACY} = {'time': [0.019972542, 0.020073486, 0.020175514, 0.0202735, 0.020372514, 0.020473528, 0.020569556, 0.020671556, 0.020767583, 0.020868569, 0.020965597, 0.021065597, 0.021163611, 0.021262625, 0.02136162...</msg>
<status status="PASS" starttime="20201112 12:43:21.713" endtime="20201112 12:43:21.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.730" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.729" endtime="20201112 12:43:21.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.732" level="INFO">VALUE: [8.898599999999923e-05, 8.850000000000177e-05, 8.904199999999751e-05, 8.851400000000134e-05, 8.904200000000098e-05, 8.904200000000098e-05, 8.879200000000073e-05, 8.902800000000141e-05, 8.872199999999941e-05, 8.937499999999918e-05, 8.872199999999941e-05, 8.844400000000002e-05, 8.906899999999718e-05, 8.911099999999936e-05, 8.8638999999998e-05, 8.901399999999837e-05, 8.854200000000048e-05, 8.916699999999764e-05, 8.894400000000052e-05, 8.89999999999988e-05, 8.877700000000169e-05, 8.851400000000134e-05, 8.847199999999916e-05, 8.876400000000159e-05, 8.852800000000091e-05, 8.856900000000015e-05, 8.919500000000025e-05, 8.869499999999975e-05, 8.950000000000277e-05, 8.858400000000266e-05, 8.887499999999868e-05, 8.942999999999798e-05, 8.861099999999886e-05, 8.923599999999948e-05, 8.869499999999975e-05, 8.908300000000022e-05, 8.920800000000034e-05, 8.909699999999979e-05, 8.884799999999901e-05, 8.943000000000145e-05, 8.868100000000018e-05, 8.926399999999862e-05, 8.86800000000007e-05, 8.873599999999898e-05, 8.901399999999837e-05, 8.901399999999837e-05, 8.873599999999898e-05, 8.86670000000006e-05, 8.886099999999911e-05, 8.866699999999714e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.731" endtime="20201112 12:43:21.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.726" endtime="20201112 12:43:21.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.736" endtime="20201112 12:43:21.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.740" endtime="20201112 12:43:21.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.738" endtime="20201112 12:43:21.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.734" endtime="20201112 12:43:21.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.366" endtime="20201112 12:43:21.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.366" endtime="20201112 12:43:21.761"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.770" endtime="20201112 12:43:21.789"></status>
</kw>
<msg timestamp="20201112 12:43:21.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.768" endtime="20201112 12:43:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.791" endtime="20201112 12:43:21.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.793" endtime="20201112 12:43:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.765" endtime="20201112 12:43:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.763" endtime="20201112 12:43:21.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.803" endtime="20201112 12:43:22.090"></status>
</kw>
<msg timestamp="20201112 12:43:22.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.802" endtime="20201112 12:43:22.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.094" endtime="20201112 12:43:22.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.103" endtime="20201112 12:43:22.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.799" endtime="20201112 12:43:22.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.797" endtime="20201112 12:43:22.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.110" level="INFO">${RESULT} = [{'time': 0.020013236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.037500000000018e-05, 'source_diff': 9.037500000000018e-05}, {'time': 0.020115236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.106" endtime="20201112 12:43:22.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.123" level="INFO">${ACCURACY} = {'time': [0.020013236, 0.020115236, 0.02021625, 0.020313319, 0.020412278, 0.020512292, 0.020612306, 0.020713306, 0.020816319, 0.020918347, 0.021014389, 0.021114361, 0.021213389, 0.021315375, 0.0214163...</msg>
<status status="PASS" starttime="20201112 12:43:22.111" endtime="20201112 12:43:22.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.128" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.127" endtime="20201112 12:43:22.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.130" level="INFO">VALUE: [9.037500000000018e-05, 8.972200000000041e-05, 9.012499999999993e-05, 8.972200000000041e-05, 9.006999999999765e-05, 9.012499999999993e-05, 9.012499999999993e-05, 9.01389999999995e-05, 9.040199999999984e-05, 9.029099999999929e-05, 8.979200000000173e-05, 8.994400000000152e-05, 9.008299999999775e-05, 8.94999999999993e-05, 8.99999999999998e-05, 9.03199999999979e-05, 8.984699999999707e-05, 9.007000000000112e-05, 9.020900000000082e-05, 8.94999999999993e-05, 9.01519999999996e-05, 9.025000000000005e-05, 8.975000000000302e-05, 8.969400000000127e-05, 8.991700000000186e-05, 8.976399999999912e-05, 9.041700000000236e-05, 9.009800000000026e-05, 9.009800000000026e-05, 8.951400000000234e-05, 8.956900000000115e-05, 8.977699999999922e-05, 9.037500000000018e-05, 8.986100000000011e-05, 8.974999999999955e-05, 8.970799999999737e-05, 8.96670000000016e-05, 9.038899999999975e-05, 8.957000000000062e-05, 8.96800000000017e-05, 8.944400000000102e-05, 8.986100000000011e-05, 8.951399999999887e-05, 9.022200000000091e-05, 9.027799999999919e-05, 8.975000000000302e-05, 9.002800000000241e-05, 9.004200000000198e-05, 9.012499999999993e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.129" endtime="20201112 12:43:22.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.124" endtime="20201112 12:43:22.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.134" endtime="20201112 12:43:22.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.138" endtime="20201112 12:43:22.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.136" endtime="20201112 12:43:22.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.132" endtime="20201112 12:43:22.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.762" endtime="20201112 12:43:22.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.761" endtime="20201112 12:43:22.159"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.167" endtime="20201112 12:43:22.187"></status>
</kw>
<msg timestamp="20201112 12:43:22.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.166" endtime="20201112 12:43:22.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.188" endtime="20201112 12:43:22.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.191" endtime="20201112 12:43:22.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.163" endtime="20201112 12:43:22.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.161" endtime="20201112 12:43:22.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.201" endtime="20201112 12:43:22.488"></status>
</kw>
<msg timestamp="20201112 12:43:22.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.200" endtime="20201112 12:43:22.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.492" endtime="20201112 12:43:22.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.500" endtime="20201112 12:43:22.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.197" endtime="20201112 12:43:22.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.195" endtime="20201112 12:43:22.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.507" level="INFO">${RESULT} = [{'time': 0.020021222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.133300000000247e-05, 'source_diff': 9.133300000000247e-05}, {'time': 0.020122222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.504" endtime="20201112 12:43:22.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.521" level="INFO">${ACCURACY} = {'time': [0.020021222, 0.020122222, 0.020221236, 0.02031925, 0.02042025, 0.020517264, 0.020617292, 0.020716306, 0.020813319, 0.020916347, 0.021019333, 0.021122347, 0.021223347, 0.021325361, 0.02142337...</msg>
<status status="PASS" starttime="20201112 12:43:22.508" endtime="20201112 12:43:22.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.526" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.525" endtime="20201112 12:43:22.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.529" level="INFO">VALUE: [9.133300000000247e-05, 9.070799999999837e-05, 9.077799999999969e-05, 9.098600000000123e-05, 9.047200000000116e-05, 9.038899999999975e-05, 9.106999999999865e-05, 9.126400000000062e-05, 9.120799999999887e-05, 9.052799999999944e-05, 9.051399999999987e-05, 9.105499999999961e-05, 9.0639e-05, 9.045800000000159e-05, 9.115300000000007e-05, 9.070800000000184e-05, 9.134699999999857e-05, 9.05000000000003e-05, 9.112500000000093e-05, 9.136200000000108e-05, 9.081899999999893e-05, 9.081899999999893e-05, 9.067999999999923e-05, 9.092999999999948e-05, 9.075000000000055e-05, 9.134700000000204e-05, 9.127799999999672e-05, 9.06670000000026e-05, 9.043100000000193e-05, 9.049999999999683e-05, 9.136099999999814e-05, 9.081899999999893e-05, 9.048600000000073e-05, 9.067999999999923e-05, 9.125000000000105e-05, 9.118099999999921e-05, 9.061200000000033e-05, 9.122200000000191e-05, 9.10000000000008e-05, 9.080499999999936e-05, 9.047300000000064e-05, 9.072199999999794e-05, 9.098600000000123e-05, 9.045800000000159e-05, 9.095799999999862e-05, 9.099999999999733e-05, 9.097200000000166e-05, 9.115300000000007e-05, 9.08199999999984e-05, 9.111099999999789e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.527" endtime="20201112 12:43:22.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.522" endtime="20201112 12:43:22.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.532" endtime="20201112 12:43:22.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.536" endtime="20201112 12:43:22.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.534" endtime="20201112 12:43:22.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.531" endtime="20201112 12:43:22.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.160" endtime="20201112 12:43:22.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.159" endtime="20201112 12:43:22.557"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.565" endtime="20201112 12:43:22.584"></status>
</kw>
<msg timestamp="20201112 12:43:22.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.564" endtime="20201112 12:43:22.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.586" endtime="20201112 12:43:22.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.589" endtime="20201112 12:43:22.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.561" endtime="20201112 12:43:22.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.559" endtime="20201112 12:43:22.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.599" endtime="20201112 12:43:22.886"></status>
</kw>
<msg timestamp="20201112 12:43:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.597" endtime="20201112 12:43:22.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.890" endtime="20201112 12:43:22.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.899" endtime="20201112 12:43:22.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.595" endtime="20201112 12:43:22.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.593" endtime="20201112 12:43:22.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.906" level="INFO">${RESULT} = [{'time': 0.020005569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.223600000000248e-05, 'source_diff': 9.223600000000248e-05}, {'time': 0.020104583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.902" endtime="20201112 12:43:22.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.919" level="INFO">${ACCURACY} = {'time': [0.020005569, 0.020104583, 0.020204583, 0.020307597, 0.020412611, 0.020516611, 0.020617639, 0.020718653, 0.020820653, 0.020919653, 0.021021667, 0.021124681, 0.021226694, 0.021324722, 0.021423...</msg>
<status status="PASS" starttime="20201112 12:43:22.907" endtime="20201112 12:43:22.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.924" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.923" endtime="20201112 12:43:22.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.926" level="INFO">VALUE: [9.223600000000248e-05, 9.149999999999783e-05, 9.186100000000211e-05, 9.16939999999998e-05, 9.226400000000162e-05, 9.148600000000173e-05, 9.188900000000125e-05, 9.212499999999846e-05, 9.212500000000193e-05, 9.156999999999915e-05, 9.170900000000232e-05, 9.240299999999785e-05, 9.236099999999914e-05, 9.170799999999937e-05, 9.211099999999889e-05, 9.177799999999722e-05, 9.234699999999957e-05, 9.151400000000087e-05, 9.23199999999999e-05, 9.204200000000051e-05, 9.149999999999783e-05, 9.198599999999876e-05, 9.176400000000112e-05, 9.159700000000229e-05, 9.227800000000119e-05, 9.202800000000094e-05, 9.208299999999975e-05, 9.195799999999962e-05, 9.184699999999907e-05, 9.237500000000218e-05, 9.180500000000036e-05, 9.197299999999867e-05, 9.156999999999915e-05, 9.172299999999842e-05, 9.180499999999689e-05, 9.227700000000172e-05, 9.237500000000218e-05, 9.16939999999998e-05, 9.198599999999876e-05, 9.144399999999955e-05, 9.184699999999907e-05, 9.211099999999889e-05, 9.190299999999735e-05, 9.216700000000064e-05, 9.191599999999744e-05, 9.168000000000023e-05, 9.170799999999937e-05, 9.226400000000162e-05, 9.229200000000076e-05, 9.148600000000173e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.925" endtime="20201112 12:43:22.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.920" endtime="20201112 12:43:22.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.930" endtime="20201112 12:43:22.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.933" endtime="20201112 12:43:22.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.932" endtime="20201112 12:43:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.928" endtime="20201112 12:43:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.558" endtime="20201112 12:43:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.557" endtime="20201112 12:43:22.954"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.963" endtime="20201112 12:43:22.982"></status>
</kw>
<msg timestamp="20201112 12:43:22.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.962" endtime="20201112 12:43:22.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.983" endtime="20201112 12:43:22.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.986" endtime="20201112 12:43:22.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.959" endtime="20201112 12:43:22.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.957" endtime="20201112 12:43:22.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.996" endtime="20201112 12:43:23.283"></status>
</kw>
<msg timestamp="20201112 12:43:23.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.995" endtime="20201112 12:43:23.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.287" endtime="20201112 12:43:23.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.296" endtime="20201112 12:43:23.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.992" endtime="20201112 12:43:23.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.990" endtime="20201112 12:43:23.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.302" level="INFO">${RESULT} = [{'time': 0.019991528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.304200000000151e-05, 'source_diff': 9.304200000000151e-05}, {'time': 0.020090556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.299" endtime="20201112 12:43:23.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.316" level="INFO">${ACCURACY} = {'time': [0.019991528, 0.020090556, 0.020191569, 0.020294569, 0.020398597, 0.020503611, 0.020606625, 0.020711667, 0.020810625, 0.020909653, 0.021008667, 0.021114667, 0.021219667, 0.021324694, 0.021423...</msg>
<status status="PASS" starttime="20201112 12:43:23.303" endtime="20201112 12:43:23.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.320" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.319" endtime="20201112 12:43:23.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.323" level="INFO">VALUE: [9.304200000000151e-05, 9.269500000000028e-05, 9.304099999999857e-05, 9.33469999999971e-05, 9.293000000000148e-05, 9.323600000000001e-05, 9.337499999999971e-05, 9.286099999999964e-05, 9.268100000000071e-05, 9.270899999999985e-05, 9.247300000000264e-05, 9.343100000000146e-05, 9.304200000000151e-05, 9.304100000000204e-05, 9.295800000000062e-05, 9.30139999999989e-05, 9.295800000000062e-05, 9.317999999999826e-05, 9.29720000000002e-05, 9.244400000000055e-05, 9.308399999999675e-05, 9.254199999999754e-05, 9.297299999999967e-05, 9.305599999999761e-05, 9.279200000000126e-05, 9.276400000000212e-05, 9.29720000000002e-05, 9.29720000000002e-05, 9.333400000000047e-05, 9.313899999999903e-05, 9.295800000000062e-05, 9.316700000000164e-05, 9.29720000000002e-05, 9.247300000000264e-05, 9.322299999999992e-05, 9.266699999999767e-05, 9.266600000000166e-05, 9.30139999999989e-05, 9.244400000000055e-05, 9.334700000000057e-05, 9.284700000000007e-05, 9.269500000000028e-05, 9.276400000000212e-05, 9.265300000000157e-05, 9.268100000000071e-05, 9.313799999999955e-05, 9.286100000000311e-05, 9.304099999999857e-05, 9.31659999999987e-05, 9.322200000000044e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.322" endtime="20201112 12:43:23.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.317" endtime="20201112 12:43:23.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.327" endtime="20201112 12:43:23.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.330" endtime="20201112 12:43:23.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.329" endtime="20201112 12:43:23.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.325" endtime="20201112 12:43:23.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.955" endtime="20201112 12:43:23.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.955" endtime="20201112 12:43:23.351"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.360" endtime="20201112 12:43:23.378"></status>
</kw>
<msg timestamp="20201112 12:43:23.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.358" endtime="20201112 12:43:23.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.380" endtime="20201112 12:43:23.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.382" endtime="20201112 12:43:23.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.356" endtime="20201112 12:43:23.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.354" endtime="20201112 12:43:23.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.393" endtime="20201112 12:43:23.679"></status>
</kw>
<msg timestamp="20201112 12:43:23.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.391" endtime="20201112 12:43:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.683" endtime="20201112 12:43:23.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.692" endtime="20201112 12:43:23.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.389" endtime="20201112 12:43:23.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.387" endtime="20201112 12:43:23.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.698" level="INFO">${RESULT} = [{'time': 0.019962097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416600000000316e-05, 'source_diff': 9.416600000000316e-05}, {'time': 0.020064097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.695" endtime="20201112 12:43:23.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.712" level="INFO">${ACCURACY} = {'time': [0.019962097, 0.020064097, 0.020169125, 0.020269125, 0.020376153, 0.020476167, 0.020581167, 0.020681167, 0.020783194, 0.020885194, 0.020988208, 0.021092278, 0.021192222, 0.02129625, 0.0214022...</msg>
<status status="PASS" starttime="20201112 12:43:23.699" endtime="20201112 12:43:23.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.716" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.715" endtime="20201112 12:43:23.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.719" level="INFO">VALUE: [9.416600000000316e-05, 9.345800000000112e-05, 9.390299999999935e-05, 9.386100000000064e-05, 9.434700000000157e-05, 9.369500000000128e-05, 9.40139999999999e-05, 9.376399999999965e-05, 9.386100000000064e-05, 9.429099999999982e-05, 9.38330000000015e-05, 9.416699999999917e-05, 9.375000000000008e-05, 9.444399999999908e-05, 9.358300000000125e-05, 9.343100000000146e-05, 9.380600000000183e-05, 9.429199999999929e-05, 9.408400000000122e-05, 9.41529999999996e-05, 9.437500000000071e-05, 9.437500000000071e-05, 9.423599999999754e-05, 9.404199999999904e-05, 9.39720000000012e-05, 9.390299999999935e-05, 9.407000000000165e-05, 9.430599999999886e-05, 9.344500000000103e-05, 9.412500000000046e-05, 9.423600000000101e-05, 9.41529999999996e-05, 9.345800000000112e-05, 9.381899999999846e-05, 9.355500000000211e-05, 9.390299999999935e-05, 9.387500000000021e-05, 9.347300000000017e-05, 9.436099999999767e-05, 9.402799999999947e-05, 9.380599999999836e-05, 9.361100000000039e-05, 9.377799999999922e-05, 9.358300000000125e-05, 9.367999999999876e-05, 9.393100000000196e-05, 9.395799999999815e-05, 9.379199999999879e-05, 9.370900000000085e-05, 9.416700000000264e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.718" endtime="20201112 12:43:23.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.713" endtime="20201112 12:43:23.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.723" endtime="20201112 12:43:23.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.726" endtime="20201112 12:43:23.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.725" endtime="20201112 12:43:23.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.721" endtime="20201112 12:43:23.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.352" endtime="20201112 12:43:23.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.351" endtime="20201112 12:43:23.747"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.756" endtime="20201112 12:43:23.776"></status>
</kw>
<msg timestamp="20201112 12:43:23.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.754" endtime="20201112 12:43:23.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.777" endtime="20201112 12:43:23.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.780" endtime="20201112 12:43:23.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.752" endtime="20201112 12:43:23.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.750" endtime="20201112 12:43:23.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.790" endtime="20201112 12:43:24.076"></status>
</kw>
<msg timestamp="20201112 12:43:24.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.788" endtime="20201112 12:43:24.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.080" endtime="20201112 12:43:24.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.089" endtime="20201112 12:43:24.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.786" endtime="20201112 12:43:24.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.784" endtime="20201112 12:43:24.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.096" level="INFO">${RESULT} = [{'time': 0.020504208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.45270000000005e-05, 'source_diff': 9.45270000000005e-05}, {'time': 0.020608222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:24.092" endtime="20201112 12:43:24.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.110" level="INFO">${ACCURACY} = {'time': [0.020504208, 0.020608222, 0.020710222, 0.02081325, 0.020921278, 0.021022264, 0.021125264, 0.021227292, 0.021332292, 0.021436319, 0.021542319, 0.021649333, 0.021754375, 0.021862347, 0.0219633...</msg>
<status status="PASS" starttime="20201112 12:43:24.097" endtime="20201112 12:43:24.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.115" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.114" endtime="20201112 12:43:24.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.118" level="INFO">VALUE: [9.45270000000005e-05, 9.458299999999878e-05, 9.518000000000026e-05, 9.504200000000004e-05, 9.518100000000321e-05, 9.469499999999881e-05, 9.454199999999954e-05, 9.522299999999845e-05, 9.494499999999906e-05, 9.48469999999986e-05, 9.465200000000062e-05, 9.456899999999921e-05, 9.468099999999924e-05, 9.476400000000065e-05, 9.444399999999908e-05, 9.455600000000258e-05, 9.475000000000108e-05, 9.522199999999897e-05, 9.473700000000099e-05, 9.512499999999799e-05, 9.466699999999967e-05, 9.473600000000151e-05, 9.479199999999979e-05, 9.486099999999817e-05, 9.538900000000128e-05, 9.516700000000017e-05, 9.480599999999936e-05, 9.509700000000232e-05, 9.519499999999931e-05, 9.459799999999782e-05, 9.467999999999976e-05, 9.523600000000201e-05, 9.486100000000164e-05, 9.472199999999847e-05, 9.491699999999992e-05, 9.504200000000004e-05, 9.538899999999781e-05, 9.459800000000129e-05, 9.48469999999986e-05, 9.475000000000108e-05, 9.466699999999967e-05, 9.529099999999735e-05, 9.476400000000065e-05, 9.513900000000103e-05, 9.48469999999986e-05, 9.486099999999817e-05, 9.462500000000096e-05, 9.536099999999867e-05, 9.523599999999854e-05, 9.49720000000022e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.116" endtime="20201112 12:43:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.111" endtime="20201112 12:43:24.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.122" endtime="20201112 12:43:24.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.126" endtime="20201112 12:43:24.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.124" endtime="20201112 12:43:24.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.120" endtime="20201112 12:43:24.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.748" endtime="20201112 12:43:24.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.748" endtime="20201112 12:43:24.147"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.156" endtime="20201112 12:43:24.174"></status>
</kw>
<msg timestamp="20201112 12:43:24.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.154" endtime="20201112 12:43:24.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.176" endtime="20201112 12:43:24.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.178" endtime="20201112 12:43:24.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.152" endtime="20201112 12:43:24.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.150" endtime="20201112 12:43:24.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.188" endtime="20201112 12:43:24.474"></status>
</kw>
<msg timestamp="20201112 12:43:24.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.187" endtime="20201112 12:43:24.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.478" endtime="20201112 12:43:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.487" endtime="20201112 12:43:24.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.184" endtime="20201112 12:43:24.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.182" endtime="20201112 12:43:24.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.494" level="INFO">${RESULT} = [{'time': 0.020447611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.559699999999935e-05, 'source_diff': 9.559699999999935e-05}, {'time': 0.020552625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.490" endtime="20201112 12:43:24.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.507" level="INFO">${ACCURACY} = {'time': [0.020447611, 0.020552625, 0.020654625, 0.020757625, 0.020861639, 0.020967653, 0.021072681, 0.021180722, 0.021286708, 0.021394708, 0.021501722, 0.021605722, 0.021707736, 0.021816778, 0.021921...</msg>
<status status="PASS" starttime="20201112 12:43:24.495" endtime="20201112 12:43:24.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.512" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.511" endtime="20201112 12:43:24.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.514" level="INFO">VALUE: [9.559699999999935e-05, 9.61530000000016e-05, 9.59859999999993e-05, 9.540299999999738e-05, 9.608300000000028e-05, 9.626399999999868e-05, 9.591700000000092e-05, 9.559699999999935e-05, 9.573600000000251e-05, 9.591599999999798e-05, 9.593000000000101e-05, 9.58469999999996e-05, 9.599999999999886e-05, 9.629199999999782e-05, 9.561099999999892e-05, 9.618099999999727e-05, 9.554199999999707e-05, 9.547199999999922e-05, 9.622199999999997e-05, 9.576299999999871e-05, 9.549999999999836e-05, 9.544400000000008e-05, 9.555500000000064e-05, 9.62920000000013e-05, 9.544499999999956e-05, 9.624999999999911e-05, 9.540299999999738e-05, 9.544499999999956e-05, 9.58339999999995e-05, 9.573599999999904e-05, 9.563899999999806e-05, 9.577800000000122e-05, 9.62080000000004e-05, 9.573600000000251e-05, 9.576400000000165e-05, 9.558299999999978e-05, 9.593100000000049e-05, 9.573600000000251e-05, 9.626399999999868e-05, 9.592999999999755e-05, 9.626399999999868e-05, 9.57079999999999e-05, 9.61660000000017e-05, 9.644400000000108e-05, 9.584799999999907e-05, 9.6027999999998e-05, 9.609699999999985e-05, 9.590299999999788e-05, 9.624999999999911e-05, 9.605500000000114e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.513" endtime="20201112 12:43:24.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.508" endtime="20201112 12:43:24.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.522" endtime="20201112 12:43:24.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.525" endtime="20201112 12:43:24.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.524" endtime="20201112 12:43:24.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.520" endtime="20201112 12:43:24.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.148" endtime="20201112 12:43:24.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.147" endtime="20201112 12:43:24.547"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.555" endtime="20201112 12:43:24.575"></status>
</kw>
<msg timestamp="20201112 12:43:24.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.554" endtime="20201112 12:43:24.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.577" endtime="20201112 12:43:24.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.579" endtime="20201112 12:43:24.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.551" endtime="20201112 12:43:24.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.549" endtime="20201112 12:43:24.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.589" endtime="20201112 12:43:24.875"></status>
</kw>
<msg timestamp="20201112 12:43:24.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.588" endtime="20201112 12:43:24.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.879" endtime="20201112 12:43:24.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.888" endtime="20201112 12:43:24.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.585" endtime="20201112 12:43:24.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.583" endtime="20201112 12:43:24.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.895" level="INFO">${RESULT} = [{'time': 0.020045056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.65279999999985e-05, 'source_diff': 9.65279999999985e-05}, {'time': 0.020152069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:24.891" endtime="20201112 12:43:24.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.908" level="INFO">${ACCURACY} = {'time': [0.020045056, 0.020152069, 0.020260125, 0.020367083, 0.020476111, 0.020584125, 0.020692111, 0.020795125, 0.020901139, 0.021006153, 0.021111194, 0.021220194, 0.021325208, 0.021434208, 0.021540...</msg>
<status status="PASS" starttime="20201112 12:43:24.896" endtime="20201112 12:43:24.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.913" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.912" endtime="20201112 12:43:24.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.915" level="INFO">VALUE: [9.65279999999985e-05, 9.676300000000318e-05, 9.666700000000167e-05, 9.731900000000196e-05, 9.683300000000103e-05, 9.686100000000017e-05, 9.649999999999936e-05, 9.716700000000217e-05, 9.69860000000003e-05, 9.7027999999999e-05, 9.745799999999818e-05, 9.674999999999961e-05, 9.647199999999675e-05, 9.727699999999978e-05, 9.659700000000035e-05, 9.677799999999875e-05, 9.658300000000078e-05, 9.695800000000115e-05, 9.709700000000085e-05, 9.658400000000025e-05, 9.736100000000067e-05, 9.663799999999959e-05, 9.648700000000274e-05, 9.704100000000257e-05, 9.741600000000294e-05, 9.68470000000006e-05, 9.645799999999718e-05, 9.688900000000278e-05, 9.699999999999986e-05, 9.682000000000093e-05, 9.66669999999982e-05, 9.676400000000265e-05, 9.694399999999812e-05, 9.72080000000014e-05, 9.659700000000035e-05, 9.744400000000208e-05, 9.655500000000164e-05, 9.73470000000011e-05, 9.684699999999713e-05, 9.719500000000131e-05, 9.701399999999943e-05, 9.711199999999989e-05, 9.712499999999999e-05, 9.66660000000022e-05, 9.715199999999966e-05, 9.676399999999918e-05, 9.691599999999898e-05, 9.677799999999875e-05, 9.727799999999925e-05, 9.65279999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.914" endtime="20201112 12:43:24.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.909" endtime="20201112 12:43:24.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.919" endtime="20201112 12:43:24.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.922" endtime="20201112 12:43:24.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.921" endtime="20201112 12:43:24.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.917" endtime="20201112 12:43:24.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.547" endtime="20201112 12:43:24.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.547" endtime="20201112 12:43:24.944"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.952" endtime="20201112 12:43:24.972"></status>
</kw>
<msg timestamp="20201112 12:43:24.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.951" endtime="20201112 12:43:24.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.974" endtime="20201112 12:43:24.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.976" endtime="20201112 12:43:24.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.948" endtime="20201112 12:43:24.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.946" endtime="20201112 12:43:24.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.986" endtime="20201112 12:43:25.273"></status>
</kw>
<msg timestamp="20201112 12:43:25.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.985" endtime="20201112 12:43:25.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.277" endtime="20201112 12:43:25.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.285" endtime="20201112 12:43:25.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.982" endtime="20201112 12:43:25.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.980" endtime="20201112 12:43:25.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.292" level="INFO">${RESULT} = [{'time': 0.020009958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.823600000000154e-05, 'source_diff': 9.823600000000154e-05}, {'time': 0.020119972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:25.289" endtime="20201112 12:43:25.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.306" level="INFO">${ACCURACY} = {'time': [0.020009958, 0.020119972, 0.020227, 0.020332986, 0.020437986, 0.020542, 0.020651028, 0.020756042, 0.020864042, 0.020972056, 0.021077069, 0.021187069, 0.021291097, 0.021401097, 0.021510111, 0...</msg>
<status status="PASS" starttime="20201112 12:43:25.293" endtime="20201112 12:43:25.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.310" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.309" endtime="20201112 12:43:25.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.313" level="INFO">VALUE: [9.823600000000154e-05, 9.773600000000104e-05, 9.784699999999813e-05, 9.759700000000135e-05, 9.813899999999709e-05, 9.744400000000208e-05, 9.745899999999766e-05, 9.838899999999734e-05, 9.763900000000006e-05, 9.788900000000031e-05, 9.820799999999894e-05, 9.80410000000001e-05, 9.745799999999818e-05, 9.766599999999973e-05, 9.833299999999906e-05, 9.754199999999907e-05, 9.769499999999834e-05, 9.754200000000254e-05, 9.78059999999989e-05, 9.81669999999997e-05, 9.841699999999995e-05, 9.790199999999694e-05, 9.82219999999985e-05, 9.8028e-05, 9.791699999999945e-05, 9.808299999999881e-05, 9.840300000000038e-05, 9.831999999999896e-05, 9.8334000000002e-05, 9.811100000000142e-05, 9.82219999999985e-05, 9.772200000000147e-05, 9.840300000000038e-05, 9.780499999999942e-05, 9.823600000000154e-05, 9.79860000000013e-05, 9.825000000000111e-05, 9.790299999999988e-05, 9.8028e-05, 9.780600000000236e-05, 9.78609999999977e-05, 9.745800000000165e-05, 9.743000000000251e-05, 9.761100000000092e-05, 9.770799999999843e-05, 9.820799999999894e-05, 9.837499999999777e-05, 9.808299999999881e-05, 9.761100000000092e-05, 9.819500000000231e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.312" endtime="20201112 12:43:25.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.307" endtime="20201112 12:43:25.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.317" endtime="20201112 12:43:25.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.320" endtime="20201112 12:43:25.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.319" endtime="20201112 12:43:25.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.315" endtime="20201112 12:43:25.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.944" endtime="20201112 12:43:25.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.944" endtime="20201112 12:43:25.341"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.350" endtime="20201112 12:43:25.369"></status>
</kw>
<msg timestamp="20201112 12:43:25.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.349" endtime="20201112 12:43:25.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.371" endtime="20201112 12:43:25.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.373" endtime="20201112 12:43:25.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.346" endtime="20201112 12:43:25.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.344" endtime="20201112 12:43:25.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.384" endtime="20201112 12:43:25.669"></status>
</kw>
<msg timestamp="20201112 12:43:25.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.382" endtime="20201112 12:43:25.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.674" endtime="20201112 12:43:25.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.682" endtime="20201112 12:43:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.379" endtime="20201112 12:43:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.378" endtime="20201112 12:43:25.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.689" level="INFO">${RESULT} = [{'time': 0.020184167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.933399999999953e-05, 'source_diff': 9.933399999999953e-05}, {'time': 0.020292181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:25.686" endtime="20201112 12:43:25.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.704" level="INFO">${ACCURACY} = {'time': [0.020184167, 0.020292181, 0.020404181, 0.020512208, 0.020621208, 0.020733222, 0.020838236, 0.02094325, 0.021054278, 0.021165306, 0.021272278, 0.021383306, 0.021493306, 0.021599319, 0.0217053...</msg>
<status status="PASS" starttime="20201112 12:43:25.690" endtime="20201112 12:43:25.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.708" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.707" endtime="20201112 12:43:25.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.711" level="INFO">VALUE: [9.933399999999953e-05, 9.929200000000082e-05, 9.884800000000207e-05, 9.879100000000085e-05, 9.845799999999919e-05, 9.92219999999995e-05, 9.91670000000007e-05, 9.845799999999919e-05, 9.89999999999984e-05, 9.931999999999996e-05, 9.897199999999926e-05, 9.868099999999977e-05, 9.91670000000007e-05, 9.937499999999877e-05, 9.877799999999728e-05, 9.844399999999962e-05, 9.923599999999907e-05, 9.897199999999926e-05, 9.897199999999926e-05, 9.93060000000004e-05, 9.868099999999977e-05, 9.91809999999968e-05, 9.862500000000149e-05, 9.88609999999987e-05, 9.923599999999907e-05, 9.870799999999944e-05, 9.926399999999821e-05, 9.877799999999728e-05, 9.854200000000007e-05, 9.909699999999938e-05, 9.868099999999977e-05, 9.926399999999821e-05, 9.906999999999971e-05, 9.88609999999987e-05, 9.856899999999974e-05, 9.92219999999995e-05, 9.874999999999814e-05, 9.923699999999855e-05, 9.927800000000125e-05, 9.927800000000125e-05, 9.879100000000085e-05, 9.933399999999953e-05, 9.886199999999817e-05, 9.887499999999827e-05, 9.901400000000143e-05, 9.847200000000222e-05, 9.931900000000049e-05, 9.869399999999987e-05, 9.918100000000027e-05, 9.873599999999857e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.709" endtime="20201112 12:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.705" endtime="20201112 12:43:25.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.714" endtime="20201112 12:43:25.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.718" endtime="20201112 12:43:25.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.716" endtime="20201112 12:43:25.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.713" endtime="20201112 12:43:25.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.342" endtime="20201112 12:43:25.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.341" endtime="20201112 12:43:25.739"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.748" endtime="20201112 12:43:25.767"></status>
</kw>
<msg timestamp="20201112 12:43:25.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.746" endtime="20201112 12:43:25.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.768" endtime="20201112 12:43:25.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.771" endtime="20201112 12:43:25.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.744" endtime="20201112 12:43:25.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.741" endtime="20201112 12:43:25.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.781" endtime="20201112 12:43:26.068"></status>
</kw>
<msg timestamp="20201112 12:43:26.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.779" endtime="20201112 12:43:26.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.072" endtime="20201112 12:43:26.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.080" endtime="20201112 12:43:26.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.777" endtime="20201112 12:43:26.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.775" endtime="20201112 12:43:26.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.087" level="INFO">${RESULT} = [{'time': 0.020102111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010009700000000038, 'source_diff': 0.00010009700000000038}, {'time': 0.020213139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.084" endtime="20201112 12:43:26.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.101" level="INFO">${ACCURACY} = {'time': [0.020102111, 0.020213139, 0.020324139, 0.020430139, 0.020539153, 0.020646167, 0.020753181, 0.020864181, 0.020975194, 0.021082208, 0.021188236, 0.021296236, 0.02140625, 0.021513278, 0.0216192...</msg>
<status status="PASS" starttime="20201112 12:43:26.088" endtime="20201112 12:43:26.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.105" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.104" endtime="20201112 12:43:26.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.108" level="INFO">VALUE: [0.00010009700000000038, 9.988900000000231e-05, 0.00010040300000000238, 0.0001002220000000005, 9.959699999999988e-05, 0.00010013899999999909, 9.980599999999742e-05, 0.00010038899999999934, 9.99159999999985e-05, 0.00010026400000000268, 0.00010017999999999833, 0.00010002799999999853, 9.98060000000009e-05, 0.0001002220000000005, 9.945899999999966e-05, 0.00010022299999999998, 0.00010026299999999974, 9.990299999999841e-05, 0.0001001939999999979, 9.959699999999988e-05, 9.961099999999945e-05, 9.970800000000044e-05, 9.976400000000218e-05, 0.00010041700000000195, 0.00010023600000000008, 0.00010011200000000289, 0.00010012499999999952, 0.00010041699999999848, 0.00010037499999999977, 0.00010024999999999964, 9.990300000000188e-05, 9.977800000000175e-05, 9.955600000000064e-05, 0.0001002220000000005, 9.945899999999966e-05, 0.00010001400000000243, 9.994400000000112e-05, 9.94999999999989e-05, 0.00010002699999999906, 0.000100028000000002, 9.958300000000031e-05, 0.00010020800000000094, 9.969400000000087e-05, 0.00010009700000000038, 9.995899999999669e-05, 0.00010001399999999896, 0.00010033400000000053, 0.00010027800000000225, 9.997200000000026e-05, 9.958300000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.107" endtime="20201112 12:43:26.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.102" endtime="20201112 12:43:26.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.112" endtime="20201112 12:43:26.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.115" endtime="20201112 12:43:26.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.114" endtime="20201112 12:43:26.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.110" endtime="20201112 12:43:26.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.740" endtime="20201112 12:43:26.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.739" endtime="20201112 12:43:26.136"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.145" endtime="20201112 12:43:26.165"></status>
</kw>
<msg timestamp="20201112 12:43:26.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.144" endtime="20201112 12:43:26.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.167" endtime="20201112 12:43:26.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.169" endtime="20201112 12:43:26.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.141" endtime="20201112 12:43:26.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.139" endtime="20201112 12:43:26.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.180" endtime="20201112 12:43:26.465"></status>
</kw>
<msg timestamp="20201112 12:43:26.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.178" endtime="20201112 12:43:26.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.470" endtime="20201112 12:43:26.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.478" endtime="20201112 12:43:26.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.175" endtime="20201112 12:43:26.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.174" endtime="20201112 12:43:26.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.485" level="INFO">${RESULT} = [{'time': 0.020819528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010069500000000134, 'source_diff': 0.00010069500000000134}, {'time': 0.0209265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:26.481" endtime="20201112 12:43:26.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.498" level="INFO">${ACCURACY} = {'time': [0.020819528, 0.0209265, 0.0210385, 0.021151514, 0.021262556, 0.021370542, 0.021480556, 0.021587556, 0.021695583, 0.021806597, 0.021916611, 0.022027611, 0.022141639, 0.022252639, 0.022366653,...</msg>
<status status="PASS" starttime="20201112 12:43:26.486" endtime="20201112 12:43:26.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.503" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.502" endtime="20201112 12:43:26.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.505" level="INFO">VALUE: [0.00010069500000000134, 0.00010116699999999923, 0.00010061100000000045, 0.00010047200000000076, 0.00010043099999999805, 0.00010056999999999774, 0.00010082000000000146, 0.00010115299999999966, 0.00010075000000000014, 0.00010111100000000095, 0.00010131899999999902, 0.00010080499999999895, 0.00010104200000000257, 0.00010134700000000163, 0.0001013199999999985, 0.00010087500000000027, 0.00010125000000000065, 0.00010098600000000083, 0.0001008610000000007, 0.0001006800000000023, 0.00010129199999999935, 0.00010097200000000126, 0.00010143099999999905, 0.00010057000000000121, 0.00010141699999999948, 0.00010097300000000073, 0.00010129200000000282, 0.00010047200000000076, 0.00010126400000000021, 0.00010115200000000019, 0.00010120799999999847, 0.0001004999999999999, 0.0001006809999999983, 0.00010102799999999953, 0.00010087500000000027, 0.0001006670000000022, 0.00010130599999999892, 0.00010073600000000058, 0.00010129199999999935, 0.0001009159999999995, 0.00010052799999999903, 0.00010051399999999946, 0.00010059700000000088, 0.00010065300000000263, 0.00010059800000000035, 0.00010061199999999992, 0.00010111200000000042, 0.00010115200000000019, 0.00010070799999999797, 0.00010134699999999816]</msg>
<status status="PASS" starttime="20201112 12:43:26.504" endtime="20201112 12:43:26.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.499" endtime="20201112 12:43:26.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.509" endtime="20201112 12:43:26.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.512" endtime="20201112 12:43:26.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.511" endtime="20201112 12:43:26.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.507" endtime="20201112 12:43:26.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.137" endtime="20201112 12:43:26.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.137" endtime="20201112 12:43:26.533"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.542" endtime="20201112 12:43:26.562"></status>
</kw>
<msg timestamp="20201112 12:43:26.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.541" endtime="20201112 12:43:26.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.563" endtime="20201112 12:43:26.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.566" endtime="20201112 12:43:26.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.538" endtime="20201112 12:43:26.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.536" endtime="20201112 12:43:26.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.576" endtime="20201112 12:43:26.862"></status>
</kw>
<msg timestamp="20201112 12:43:26.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.574" endtime="20201112 12:43:26.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.866" endtime="20201112 12:43:26.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.874" endtime="20201112 12:43:26.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.572" endtime="20201112 12:43:26.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.570" endtime="20201112 12:43:26.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.881" level="INFO">${RESULT} = [{'time': 0.019993194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010172199999999854, 'source_diff': 0.00010172199999999854}, {'time': 0.020106194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.878" endtime="20201112 12:43:26.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.894" level="INFO">${ACCURACY} = {'time': [0.019993194, 0.020106194, 0.020217194, 0.020327222, 0.020437222, 0.020545278, 0.020657236, 0.02076725, 0.020875264, 0.020987278, 0.021097292, 0.021208319, 0.021319319, 0.021429333, 0.0215383...</msg>
<status status="PASS" starttime="20201112 12:43:26.882" endtime="20201112 12:43:26.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.899" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.898" endtime="20201112 12:43:26.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.901" level="INFO">VALUE: [0.00010172199999999854, 0.00010154100000000013, 0.0001020000000000014, 0.0001018749999999978, 0.00010226400000000122, 0.0001020420000000001, 0.00010194399999999965, 0.00010147200000000176, 0.00010175000000000115, 0.00010183400000000203, 0.0001015419999999996, 0.00010227700000000131, 0.00010159699999999841, 0.00010147199999999829, 0.00010199999999999793, 0.00010219499999999937, 0.0001015000000000009, 0.00010147199999999829, 0.0001021809999999998, 0.00010183400000000203, 0.00010183400000000203, 0.0001015000000000009, 0.00010229100000000088, 0.00010209699999999891, 0.00010169500000000234, 0.00010220800000000294, 0.00010245900000000266, 0.00010180599999999942, 0.00010158400000000178, 0.00010220899999999894, 0.00010226399999999775, 0.00010149999999999743, 0.00010197199999999879, 0.00010218000000000033, 0.0001021939999999999, 0.00010234699999999916, 0.00010176400000000071, 0.00010157000000000221, 0.00010224999999999818, 0.00010179199999999985, 0.00010159799999999788, 0.00010202700000000106, 0.00010227700000000131, 0.00010159700000000188, 0.00010211099999999848, 0.0001022220000000025, 0.00010211099999999848, 0.00010172199999999854, 0.00010241700000000048, 0.0001019870000000013]</msg>
<status status="PASS" starttime="20201112 12:43:26.900" endtime="20201112 12:43:26.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.895" endtime="20201112 12:43:26.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.905" endtime="20201112 12:43:26.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.909" endtime="20201112 12:43:26.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.907" endtime="20201112 12:43:26.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.903" endtime="20201112 12:43:26.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.534" endtime="20201112 12:43:26.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.534" endtime="20201112 12:43:26.929"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.938" endtime="20201112 12:43:26.959"></status>
</kw>
<msg timestamp="20201112 12:43:26.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.937" endtime="20201112 12:43:26.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.960" endtime="20201112 12:43:26.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.963" endtime="20201112 12:43:26.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.934" endtime="20201112 12:43:26.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.932" endtime="20201112 12:43:26.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.973" endtime="20201112 12:43:27.259"></status>
</kw>
<msg timestamp="20201112 12:43:27.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.971" endtime="20201112 12:43:27.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.263" endtime="20201112 12:43:27.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.271" endtime="20201112 12:43:27.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.969" endtime="20201112 12:43:27.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.967" endtime="20201112 12:43:27.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.278" level="INFO">${RESULT} = [{'time': 0.019924569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010276299999999877, 'source_diff': 0.00010276299999999877}, {'time': 0.020039583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.274" endtime="20201112 12:43:27.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.292" level="INFO">${ACCURACY} = {'time': [0.019924569, 0.020039583, 0.020153611, 0.020263597, 0.020372611, 0.020488694, 0.020602653, 0.020715681, 0.020827667, 0.020941694, 0.021054694, 0.021170708, 0.021285722, 0.02139875, 0.0215147...</msg>
<status status="PASS" starttime="20201112 12:43:27.279" endtime="20201112 12:43:27.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.297" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.295" endtime="20201112 12:43:27.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.299" level="INFO">VALUE: [0.00010276299999999877, 0.0001027359999999991, 0.00010317999999999786, 0.0001028610000000027, 0.00010286099999999923, 0.00010316599999999829, 0.00010243100000000005, 0.00010338899999999887, 0.00010305600000000067, 0.00010316600000000176, 0.00010304099999999816, 0.00010286099999999923, 0.00010297199999999979, 0.00010247200000000276, 0.00010286099999999923, 0.00010247199999999929, 0.00010326300000000274, 0.00010258399999999931, 0.00010322200000000004, 0.00010249999999999843, 0.00010334700000000016, 0.00010266600000000126, 0.00010280500000000095, 0.00010270799999999997, 0.00010259699999999941, 0.0001031810000000008, 0.00010255600000000017, 0.00010244499999999962, 0.00010277800000000128, 0.00010293000000000108, 0.00010299999999999893, 0.0001032359999999996, 0.00010293100000000055, 0.00010319399999999743, 0.00010329200000000135, 0.0001028749999999988, 0.0001029160000000015, 0.00010341700000000148, 0.00010338900000000234, 0.00010322200000000004, 0.00010270799999999997, 0.00010298599999999936, 0.0001030139999999985, 0.00010254199999999714, 0.00010333300000000059, 0.00010298699999999883, 0.00010307000000000024, 0.00010247199999999929, 0.00010309799999999938, 0.0001025000000000019]</msg>
<status status="PASS" starttime="20201112 12:43:27.298" endtime="20201112 12:43:27.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.293" endtime="20201112 12:43:27.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.303" endtime="20201112 12:43:27.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.306" endtime="20201112 12:43:27.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.305" endtime="20201112 12:43:27.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.301" endtime="20201112 12:43:27.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.930" endtime="20201112 12:43:27.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.930" endtime="20201112 12:43:27.327"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.336" endtime="20201112 12:43:27.356"></status>
</kw>
<msg timestamp="20201112 12:43:27.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.334" endtime="20201112 12:43:27.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.358" endtime="20201112 12:43:27.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.360" endtime="20201112 12:43:27.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.332" endtime="20201112 12:43:27.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.330" endtime="20201112 12:43:27.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.370" endtime="20201112 12:43:27.656"></status>
</kw>
<msg timestamp="20201112 12:43:27.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.369" endtime="20201112 12:43:27.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.660" endtime="20201112 12:43:27.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.668" endtime="20201112 12:43:27.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.366" endtime="20201112 12:43:27.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.364" endtime="20201112 12:43:27.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.675" level="INFO">${RESULT} = [{'time': 0.019979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010411100000000048, 'source_diff': 0.00010411100000000048}, {'time': 0.020093986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.672" endtime="20201112 12:43:27.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.688" level="INFO">${ACCURACY} = {'time': [0.019979028, 0.020093986, 0.020208014, 0.020319028, 0.020435014, 0.020548028, 0.020662042, 0.020777056, 0.020894069, 0.021011083, 0.021123097, 0.021238111, 0.021352125, 0.021462139, 0.021574...</msg>
<status status="PASS" starttime="20201112 12:43:27.676" endtime="20201112 12:43:27.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.693" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.692" endtime="20201112 12:43:27.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.695" level="INFO">VALUE: [0.00010411100000000048, 0.00010344400000000115, 0.00010413899999999962, 0.00010430599999999846, 0.00010377800000000229, 0.0001040559999999982, 0.00010441699999999901, 0.000103513999999999, 0.00010416600000000276, 0.0001040689999999983, 0.00010441599999999954, 0.00010345800000000072, 0.00010386100000000023, 0.00010362500000000302, 0.00010386100000000023, 0.00010429199999999889, 0.00010429100000000288, 0.00010408300000000134, 0.00010422200000000104, 0.00010416599999999929, 0.00010361099999999998, 0.00010429199999999889, 0.00010352800000000204, 0.00010391699999999851, 0.00010369500000000087, 0.00010345900000000019, 0.0001036810000000013, 0.00010441599999999954, 0.0001040689999999983, 0.0001038749999999998, 0.00010436099999999726, 0.00010383300000000109, 0.00010352799999999857, 0.00010419500000000137, 0.00010397200000000079, 0.00010384800000000013, 0.00010354100000000213, 0.00010416599999999929, 0.00010420800000000147, 0.000103513999999999, 0.00010352800000000204, 0.00010427800000000279, 0.00010412500000000005, 0.00010408400000000081, 0.00010399999999999993, 0.00010372300000000001, 0.00010408300000000134, 0.00010375000000000315, 0.00010402799999999907, 0.0001037079999999975]</msg>
<status status="PASS" starttime="20201112 12:43:27.694" endtime="20201112 12:43:27.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.689" endtime="20201112 12:43:27.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.699" endtime="20201112 12:43:27.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.702" endtime="20201112 12:43:27.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.701" endtime="20201112 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.697" endtime="20201112 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.328" endtime="20201112 12:43:27.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.328" endtime="20201112 12:43:27.723"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.732" endtime="20201112 12:43:27.753"></status>
</kw>
<msg timestamp="20201112 12:43:27.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.731" endtime="20201112 12:43:27.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.755" endtime="20201112 12:43:27.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.757" endtime="20201112 12:43:27.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.728" endtime="20201112 12:43:27.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.726" endtime="20201112 12:43:27.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.767" endtime="20201112 12:43:28.053"></status>
</kw>
<msg timestamp="20201112 12:43:28.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:43:27.766" endtime="20201112 12:43:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:43:28.057" endtime="20201112 12:43:28.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.066" endtime="20201112 12:43:28.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.763" endtime="20201112 12:43:28.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.762" endtime="20201112 12:43:28.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.072" level="INFO">${RESULT} = [{'time': 0.020073, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010475000000000068, 'source_diff': 0.00010475000000000068}, {'time': 0.020190972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:28.069" endtime="20201112 12:43:28.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.085" level="INFO">${ACCURACY} = {'time': [0.020073, 0.020190972, 0.020305986, 0.020418, 0.020530014, 0.020641042, 0.020759042, 0.020871056, 0.020987069, 0.021102083, 0.021217111, 0.021328111, 0.021441125, 0.021553194, 0.021664167, 0...</msg>
<status status="PASS" starttime="20201112 12:43:28.073" endtime="20201112 12:43:28.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.090" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.089" endtime="20201112 12:43:28.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.093" level="INFO">VALUE: [0.00010475000000000068, 0.00010484700000000166, 0.00010531900000000302, 0.00010449999999999696, 0.00010497199999999832, 0.00010449999999999696, 0.0001051949999999989, 0.00010529199999999989, 0.00010500000000000093, 0.00010462500000000055, 0.00010544399999999968, 0.0001052360000000016, 0.00010518099999999933, 0.00010502700000000059, 0.0001051810000000028, 0.00010534699999999869, 0.00010443099999999858, 0.00010494399999999918, 0.00010466599999999979, 0.00010486100000000123, 0.0001052360000000016, 0.00010479199999999939, 0.00010477799999999982, 0.0001045559999999987, 0.00010447200000000129, 0.00010490299999999994, 0.00010499999999999746, 0.00010516699999999976, 0.00010537499999999783, 0.00010499999999999746, 0.00010479099999999991, 0.00010484699999999819, 0.0001045420000000026, 0.00010505499999999973, 0.0001045559999999987, 0.00010486099999999776, 0.00010513900000000062, 0.00010462500000000055, 0.00010465299999999969, 0.00010445800000000172, 0.00010445800000000172, 0.000104514, 0.0001045559999999987, 0.00010513900000000062, 0.00010484799999999767, 0.0001052499999999977, 0.00010506999999999878, 0.00010450000000000043, 0.000104514, 0.00010491699999999951]</msg>
<status status="PASS" starttime="20201112 12:43:28.091" endtime="20201112 12:43:28.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.086" endtime="20201112 12:43:28.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.096" endtime="20201112 12:43:28.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.100" endtime="20201112 12:43:28.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.098" endtime="20201112 12:43:28.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.095" endtime="20201112 12:43:28.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.724" endtime="20201112 12:43:28.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.724" endtime="20201112 12:43:28.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.542" endtime="20201112 12:43:28.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.126" endtime="20201112 12:43:28.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.124" endtime="20201112 12:43:28.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.122" endtime="20201112 12:43:28.146"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:45.420" endtime="20201112 12:43:28.147" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.154" endtime="20201112 12:43:28.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.153" endtime="20201112 12:43:28.177"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.192" endtime="20201112 12:43:31.214"></status>
</kw>
<msg timestamp="20201112 12:43:31.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.191" endtime="20201112 12:43:31.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.217" endtime="20201112 12:43:31.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:31.222" endtime="20201112 12:43:31.227"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:28.188" endtime="20201112 12:43:31.229"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:28.185" endtime="20201112 12:43:31.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.184" endtime="20201112 12:43:31.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:31.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:31.237" endtime="20201112 12:43:31.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.232" endtime="20201112 12:43:31.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.183" endtime="20201112 12:43:31.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.181" endtime="20201112 12:43:31.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.242" endtime="20201112 12:43:31.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.179" endtime="20201112 12:43:31.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.177" endtime="20201112 12:43:31.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.151" endtime="20201112 12:43:31.248"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.263" endtime="20201112 12:43:31.278"></status>
</kw>
<msg timestamp="20201112 12:43:31.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.261" endtime="20201112 12:43:31.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.279" endtime="20201112 12:43:31.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.282" endtime="20201112 12:43:31.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.258" endtime="20201112 12:43:31.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.255" endtime="20201112 12:43:31.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.292" endtime="20201112 12:43:31.587"></status>
</kw>
<msg timestamp="20201112 12:43:31.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099887819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.289" endtime="20201112 12:43:31.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099887819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.591" endtime="20201112 12:43:31.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.599" endtime="20201112 12:43:31.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.287" endtime="20201112 12:43:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.285" endtime="20201112 12:43:31.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.606" level="INFO">${RESULT} = [{'time': 3.099887819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999971416e-06, 'source_diff': 5.221999999971416e-06}, {'time': 3.099900097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:31.603" endtime="20201112 12:43:31.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.620" level="INFO">${ACCURACY} = {'time': [3.099887819, 3.099900097, 3.099913931, 3.099923014, 3.099938014, 3.099952056, 3.099962778, 3.099974056, 3.099982778, 3.099992792, 3.100002778, 3.100016944, 3.100029861, 3.100041931, 3.100052...</msg>
<status status="PASS" starttime="20201112 12:43:31.607" endtime="20201112 12:43:31.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.624" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.623" endtime="20201112 12:43:31.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.627" level="INFO">VALUE: [5.221999999971416e-06, 5.596999999912811e-06, 5.209000000228059e-06, 5.152999999591401e-06, 5.570000000343356e-06, 5.569999999899267e-06, 5.15300000003549e-06, 5.167000000305677e-06, 5.570000000343356e-06, 5.584000000169453e-06, 5.569999999899267e-06, 5.999999999950489e-06, 5.180000000049034e-06, 5.569999999899267e-06, 5.999999999950489e-06, 5.999999999950489e-06, 5.166999999861588e-06, 5.556000000073169e-06, 5.568999999816526e-06, 5.167000000305677e-06, 5.15199999995275e-06, 5.570000000343356e-06, 5.583000000086713e-06, 5.569999999899267e-06, 5.959000000110848e-06, 5.999999999950489e-06, 5.971999999854205e-06, 5.167000000305677e-06, 5.570000000343356e-06, 5.9580000000281075e-06, 5.194000000319221e-06, 5.569999999899267e-06, 5.583999999725364e-06, 5.111000000113108e-06, 5.971999999854205e-06, 5.959000000110848e-06, 5.568999999816526e-06, 5.541999999802982e-06, 5.167000000305677e-06, 5.902999999918279e-06, 5.2500000000677005e-06, 5.611000000182997e-06, 5.568999999816526e-06, 5.569999999899267e-06, 5.15300000003549e-06, 5.15300000003549e-06, 5.15300000003549e-06, 5.166999999861588e-06, 5.9580000000281075e-06, 5.583000000086713e-06]</msg>
<status status="PASS" starttime="20201112 12:43:31.625" endtime="20201112 12:43:31.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.620" endtime="20201112 12:43:31.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.630" endtime="20201112 12:43:31.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.633" endtime="20201112 12:43:31.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.632" endtime="20201112 12:43:31.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.628" endtime="20201112 12:43:31.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.251" endtime="20201112 12:43:31.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.250" endtime="20201112 12:43:31.654"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.664" endtime="20201112 12:43:31.678"></status>
</kw>
<msg timestamp="20201112 12:43:31.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.662" endtime="20201112 12:43:31.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.679" endtime="20201112 12:43:31.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.682" endtime="20201112 12:43:31.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.660" endtime="20201112 12:43:31.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.657" endtime="20201112 12:43:31.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.691" endtime="20201112 12:43:31.979"></status>
</kw>
<msg timestamp="20201112 12:43:31.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020534778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:31.689" endtime="20201112 12:43:31.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020534778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:31.984" endtime="20201112 12:43:31.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.992" endtime="20201112 12:43:31.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.687" endtime="20201112 12:43:31.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.685" endtime="20201112 12:43:31.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.999" level="INFO">${RESULT} = [{'time': 0.020534778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.020547667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:31.996" endtime="20201112 12:43:31.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.058" level="INFO">${ACCURACY} = {'time': [0.020534778, 0.020547667, 0.020562764, 0.020571903, 0.020586625, 0.020595528, 0.02060675, 0.020615653, 0.020625583, 0.020634653, 0.020643556, 0.020652458, 0.020665486, 0.020676694, 0.0206865...</msg>
<status status="PASS" starttime="20201112 12:43:32.000" endtime="20201112 12:43:32.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.063" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.062" endtime="20201112 12:43:32.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.065" level="INFO">VALUE: [6.7779999999989515e-06, 6.749999999999812e-06, 6.388999999999007e-06, 6.459000000000326e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 5.985999999999492e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 5.971999999999922e-06, 6.374999999999437e-06, 6.819999999997661e-06, 7.193999999998563e-06, 5.985999999999492e-06, 6.4029999999985765e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.375000000002906e-06, 7.179999999998993e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.764000000002851e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.459000000000326e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.736000000000242e-06, 6.7779999999989515e-06, 6.000000000002531e-06, 5.985999999999492e-06, 6.764000000002851e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.7919999999985214e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 5.971999999999922e-06, 6.804999999998618e-06, 6.4029999999985765e-06, 5.971999999999922e-06, 6.388999999999007e-06, 6.320000000000631e-06, 6.792000000001991e-06, 6.360999999999867e-06]</msg>
<status status="PASS" starttime="20201112 12:43:32.064" endtime="20201112 12:43:32.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.059" endtime="20201112 12:43:32.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.068" endtime="20201112 12:43:32.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.072" endtime="20201112 12:43:32.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.071" endtime="20201112 12:43:32.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.067" endtime="20201112 12:43:32.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.656" endtime="20201112 12:43:32.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.655" endtime="20201112 12:43:32.093"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.103" endtime="20201112 12:43:32.117"></status>
</kw>
<msg timestamp="20201112 12:43:32.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.101" endtime="20201112 12:43:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.118" endtime="20201112 12:43:32.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.121" endtime="20201112 12:43:32.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.098" endtime="20201112 12:43:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.096" endtime="20201112 12:43:32.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.130" endtime="20201112 12:43:32.415"></status>
</kw>
<msg timestamp="20201112 12:43:32.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.128" endtime="20201112 12:43:32.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020975903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.419" endtime="20201112 12:43:32.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.428" endtime="20201112 12:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.126" endtime="20201112 12:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.124" endtime="20201112 12:43:32.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.435" level="INFO">${RESULT} = [{'time': 0.020983931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.020995972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:32.431" endtime="20201112 12:43:32.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.448" level="INFO">${ACCURACY} = {'time': [0.020983931, 0.020995972, 0.021010903, 0.021023958, 0.021040819, 0.021055944, 0.021072722, 0.021087681, 0.021099694, 0.021116972, 0.021130986, 0.021146819, 0.021163681, 0.021173875, 0.021190...</msg>
<status status="PASS" starttime="20201112 12:43:32.436" endtime="20201112 12:43:32.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.453" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.452" endtime="20201112 12:43:32.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.455" level="INFO">VALUE: [8.028000000000202e-06, 7.222000000001172e-06, 8.000000000001062e-06, 7.179999999998993e-06, 7.193999999998563e-06, 7.568999999998938e-06, 7.193999999998563e-06, 7.181000000001936e-06, 7.165999999999423e-06, 7.555000000002837e-06, 7.180000000002462e-06, 7.194000000002032e-06, 7.209000000001076e-06, 8.000000000001062e-06, 7.194000000002032e-06, 7.181000000001936e-06, 8.013000000001158e-06, 7.236000000000742e-06, 7.5969999999980775e-06, 7.194999999998036e-06, 7.597999999997551e-06, 7.194000000002032e-06, 7.181000000001936e-06, 7.125000000000187e-06, 7.583000000001977e-06, 7.597000000001547e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.6109999999976474e-06, 8.082999999999008e-06, 7.1529999999993266e-06, 7.611000000001117e-06, 7.554999999999368e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.236000000000742e-06, 7.999999999997592e-06, 7.2079999999981326e-06, 8.000000000001062e-06, 7.582999999998508e-06, 7.167000000002366e-06, 7.582999999998508e-06, 7.986000000001492e-06, 7.583000000001977e-06, 7.5969999999980775e-06, 8.000000000001062e-06, 7.5969999999980775e-06, 8.000000000001062e-06, 7.194999999998036e-06, 7.179999999998993e-06]</msg>
<status status="PASS" starttime="20201112 12:43:32.454" endtime="20201112 12:43:32.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.449" endtime="20201112 12:43:32.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.459" endtime="20201112 12:43:32.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.462" endtime="20201112 12:43:32.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.461" endtime="20201112 12:43:32.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.457" endtime="20201112 12:43:32.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.094" endtime="20201112 12:43:32.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.094" endtime="20201112 12:43:32.483"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.493" endtime="20201112 12:43:32.509"></status>
</kw>
<msg timestamp="20201112 12:43:32.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.491" endtime="20201112 12:43:32.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.510" endtime="20201112 12:43:32.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.513" endtime="20201112 12:43:32.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.488" endtime="20201112 12:43:32.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.486" endtime="20201112 12:43:32.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.522" endtime="20201112 12:43:32.806"></status>
</kw>
<msg timestamp="20201112 12:43:32.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.520" endtime="20201112 12:43:32.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.810" endtime="20201112 12:43:32.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.819" endtime="20201112 12:43:32.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.518" endtime="20201112 12:43:32.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.516" endtime="20201112 12:43:32.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.826" level="INFO">${RESULT} = [{'time': 0.021573583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.021585625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:32.822" endtime="20201112 12:43:32.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.839" level="INFO">${ACCURACY} = {'time': [0.021573583, 0.021585625, 0.021600778, 0.0216125, 0.021623792, 0.021637486, 0.021650472, 0.021664431, 0.021675764, 0.021686694, 0.021702722, 0.021714528, 0.021728736, 0.021743542, 0.02175843...</msg>
<status status="PASS" starttime="20201112 12:43:32.827" endtime="20201112 12:43:32.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.844" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.843" endtime="20201112 12:43:32.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.846" level="INFO">VALUE: [8.402000000001103e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.000000000001062e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.403000000000577e-06, 8.806000000000092e-06, 8.402000000001103e-06, 8.819000000000188e-06, 8.319999999999161e-06, 8.429999999996773e-06, 8.486000000001992e-06, 8.389000000001007e-06, 8.000000000001062e-06, 8.806000000000092e-06, 7.986000000001492e-06, 7.985999999998022e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.430999999999716e-06, 8.014000000000632e-06, 8.417000000000147e-06, 8.401999999997634e-06, 8.014000000000632e-06, 7.999999999997592e-06, 8.819999999999661e-06, 8.430000000000243e-06, 8.013999999997162e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.403000000000577e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.388999999997537e-06, 8.014000000000632e-06, 7.957999999998883e-06, 9.221999999999703e-06, 8.403000000000577e-06, 8.806000000000092e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.792000000000522e-06, 8.416000000000673e-06, 7.985999999998022e-06, 8.402999999997107e-06, 8.028000000000202e-06, 8.459000000002326e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201112 12:43:32.845" endtime="20201112 12:43:32.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.840" endtime="20201112 12:43:32.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.850" endtime="20201112 12:43:32.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.853" endtime="20201112 12:43:32.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.852" endtime="20201112 12:43:32.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.848" endtime="20201112 12:43:32.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.484" endtime="20201112 12:43:32.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.484" endtime="20201112 12:43:32.874"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.883" endtime="20201112 12:43:32.899"></status>
</kw>
<msg timestamp="20201112 12:43:32.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.881" endtime="20201112 12:43:32.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.900" endtime="20201112 12:43:32.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.903" endtime="20201112 12:43:32.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.879" endtime="20201112 12:43:32.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.877" endtime="20201112 12:43:32.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.912" endtime="20201112 12:43:33.197"></status>
</kw>
<msg timestamp="20201112 12:43:33.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020813236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.911" endtime="20201112 12:43:33.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020813236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.201" endtime="20201112 12:43:33.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.210" endtime="20201112 12:43:33.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.908" endtime="20201112 12:43:33.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.906" endtime="20201112 12:43:33.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.217" level="INFO">${RESULT} = [{'time': 0.020813236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.020826181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:33.213" endtime="20201112 12:43:33.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.230" level="INFO">${ACCURACY} = {'time': [0.020813236, 0.020826181, 0.020839194, 0.020857306, 0.020870153, 0.020882056, 0.020899194, 0.020916278, 0.020930972, 0.020948208, 0.020964319, 0.02097825, 0.020993306, 0.021007208, 0.0210210...</msg>
<status status="PASS" starttime="20201112 12:43:33.218" endtime="20201112 12:43:33.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.235" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.234" endtime="20201112 12:43:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.237" level="INFO">VALUE: [9.624999999999218e-06, 9.195000000000036e-06, 9.624999999999218e-06, 1.0111999999999621e-05, 9.221999999999703e-06, 9.624999999999218e-06, 9.208000000000133e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.999999999999593e-06, 9.597000000000078e-06, 9.999999999999593e-06, 9.222999999999176e-06, 1.0026999999999259e-05, 9.638999999998787e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.624999999999218e-06, 1.0027000000002728e-05, 9.221999999999703e-06, 9.637999999999314e-06, 9.610999999999648e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.624999999999218e-06, 9.667000000001397e-06, 9.153000000001327e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.597000000000078e-06, 9.208000000000133e-06, 1.0027999999998732e-05, 9.610999999999648e-06, 9.208000000000133e-06, 9.624999999999218e-06, 9.610999999999648e-06, 9.208999999999606e-06, 9.583000000000508e-06, 1.0026999999999259e-05, 1.0069000000001438e-05, 9.610999999999648e-06, 9.610999999999648e-06, 1.0013999999999162e-05, 9.610999999999648e-06, 1.0027999999998732e-05, 9.207999999996663e-06, 9.639000000002257e-06, 9.61200000000259e-06, 9.611000000003117e-06, 9.624999999999218e-06]</msg>
<status status="PASS" starttime="20201112 12:43:33.236" endtime="20201112 12:43:33.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.231" endtime="20201112 12:43:33.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.241" endtime="20201112 12:43:33.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.245" endtime="20201112 12:43:33.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.243" endtime="20201112 12:43:33.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.239" endtime="20201112 12:43:33.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.875" endtime="20201112 12:43:33.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.875" endtime="20201112 12:43:33.266"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.274" endtime="20201112 12:43:33.288"></status>
</kw>
<msg timestamp="20201112 12:43:33.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.273" endtime="20201112 12:43:33.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.289" endtime="20201112 12:43:33.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.292" endtime="20201112 12:43:33.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.270" endtime="20201112 12:43:33.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.268" endtime="20201112 12:43:33.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.303" endtime="20201112 12:43:33.588"></status>
</kw>
<msg timestamp="20201112 12:43:33.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.301" endtime="20201112 12:43:33.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.592" endtime="20201112 12:43:33.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.601" endtime="20201112 12:43:33.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.298" endtime="20201112 12:43:33.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.296" endtime="20201112 12:43:33.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.607" level="INFO">${RESULT} = [{'time': 0.020092417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.020107278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:33.604" endtime="20201112 12:43:33.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.623" level="INFO">${ACCURACY} = {'time': [0.020092417, 0.020107278, 0.020126431, 0.020143375, 0.020156236, 0.020171431, 0.020188208, 0.020203125, 0.020217097, 0.020230056, 0.020246264, 0.020261264, 0.020276181, 0.020294319, 0.020311...</msg>
<status status="PASS" starttime="20201112 12:43:33.608" endtime="20201112 12:43:33.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.628" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.627" endtime="20201112 12:43:33.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.632" level="INFO">VALUE: [1.0431000000001717e-05, 1.0430999999998247e-05, 1.0416999999998677e-05, 1.0861000000000898e-05, 1.0361000000000398e-05, 1.0834000000001232e-05, 1.0429999999998774e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0889000000000038e-05, 1.0875000000000468e-05, 1.0834000000001232e-05, 1.0833000000001758e-05, 1.0431000000001717e-05, 1.0416000000002673e-05, 1.0431000000001717e-05, 1.0833000000001758e-05, 1.0027999999998732e-05, 1.0847999999997332e-05, 1.0834000000001232e-05, 1.0430000000002243e-05, 1.0026999999999259e-05, 1.0846999999997858e-05, 1.0013999999999162e-05, 1.0471999999997483e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0847999999997332e-05, 1.0861000000000898e-05, 1.0416999999998677e-05, 1.0416000000002673e-05, 1.0402999999999107e-05, 1.0832999999998288e-05, 1.0388999999999537e-05, 1.0832999999998288e-05, 1.0028000000002202e-05, 1.0430999999998247e-05, 1.0431000000001717e-05, 1.0431000000001717e-05, 1.0833999999997762e-05, 1.0014000000002632e-05, 1.0429999999998774e-05, 1.0431000000001717e-05, 1.0818999999998719e-05, 1.0429999999998774e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201112 12:43:33.630" endtime="20201112 12:43:33.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.624" endtime="20201112 12:43:33.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.637" endtime="20201112 12:43:33.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.640" endtime="20201112 12:43:33.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.639" endtime="20201112 12:43:33.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.635" endtime="20201112 12:43:33.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.266" endtime="20201112 12:43:33.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.266" endtime="20201112 12:43:33.661"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.670" endtime="20201112 12:43:33.685"></status>
</kw>
<msg timestamp="20201112 12:43:33.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.669" endtime="20201112 12:43:33.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.687" endtime="20201112 12:43:33.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.689" endtime="20201112 12:43:33.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.666" endtime="20201112 12:43:33.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.664" endtime="20201112 12:43:33.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.699" endtime="20201112 12:43:33.986"></status>
</kw>
<msg timestamp="20201112 12:43:33.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.698" endtime="20201112 12:43:33.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.990" endtime="20201112 12:43:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.999" endtime="20201112 12:43:34.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.695" endtime="20201112 12:43:34.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.693" endtime="20201112 12:43:34.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.006" level="INFO">${RESULT} = [{'time': 0.019968583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1611000000001648e-05, 'source_diff': 1.1611000000001648e-05}, {'time': 0.019986806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.002" endtime="20201112 12:43:34.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.019" level="INFO">${ACCURACY} = {'time': [0.019968583, 0.019986806, 0.020001847, 0.020020778, 0.020034722, 0.020050778, 0.020071694, 0.020089597, 0.020103542, 0.020123833, 0.020141722, 0.020162556, 0.020182514, 0.020201611, 0.020217...</msg>
<status status="PASS" starttime="20201112 12:43:34.007" endtime="20201112 12:43:34.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.024" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.023" endtime="20201112 12:43:34.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.027" level="INFO">VALUE: [1.1611000000001648e-05, 1.1208999999998137e-05, 1.2041000000000829e-05, 1.1221999999998233e-05, 1.1653000000000358e-05, 1.1624999999997748e-05, 1.1222000000001703e-05, 1.1639000000000788e-05, 1.1652999999996888e-05, 1.2068999999999969e-05, 1.1639000000000788e-05, 1.1237000000000746e-05, 1.1221999999998233e-05, 1.1639000000000788e-05, 1.2014000000001163e-05, 1.1237000000000746e-05, 1.1250000000000843e-05, 1.1638999999997318e-05, 1.1264000000000413e-05, 1.1638999999997318e-05, 1.1236000000001273e-05, 1.1638000000001314e-05, 1.2042000000000302e-05, 1.1653000000000358e-05, 1.1638999999997318e-05, 1.1236000000001273e-05, 1.1639000000000788e-05, 1.1570000000002412e-05, 1.1236000000001273e-05, 1.1625000000001218e-05, 1.1666999999999927e-05, 1.1195000000002037e-05, 1.1235999999997803e-05, 1.1625000000001218e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.1597000000002078e-05, 1.1624999999997748e-05, 1.1666999999999927e-05, 1.1291999999999552e-05, 1.1222000000001703e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1637999999997845e-05, 1.1236000000001273e-05, 1.1639000000000788e-05, 1.2028000000000733e-05, 1.1639000000000788e-05, 1.1207999999998663e-05, 1.1209000000001607e-05]</msg>
<status status="PASS" starttime="20201112 12:43:34.026" endtime="20201112 12:43:34.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.020" endtime="20201112 12:43:34.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.032" endtime="20201112 12:43:34.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.036" endtime="20201112 12:43:34.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.034" endtime="20201112 12:43:34.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.030" endtime="20201112 12:43:34.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.662" endtime="20201112 12:43:34.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.662" endtime="20201112 12:43:34.057"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.066" endtime="20201112 12:43:34.082"></status>
</kw>
<msg timestamp="20201112 12:43:34.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.064" endtime="20201112 12:43:34.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.083" endtime="20201112 12:43:34.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.086" endtime="20201112 12:43:34.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.062" endtime="20201112 12:43:34.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.060" endtime="20201112 12:43:34.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.096" endtime="20201112 12:43:34.383"></status>
</kw>
<msg timestamp="20201112 12:43:34.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.094" endtime="20201112 12:43:34.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.387" endtime="20201112 12:43:34.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.396" endtime="20201112 12:43:34.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.091" endtime="20201112 12:43:34.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.090" endtime="20201112 12:43:34.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.403" level="INFO">${RESULT} = [{'time': 0.020257792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.020277917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.399" endtime="20201112 12:43:34.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.416" level="INFO">${ACCURACY} = {'time': [0.020257792, 0.020277917, 0.020297653, 0.020317889, 0.020333972, 0.020351806, 0.020372806, 0.020390764, 0.020408792, 0.020424736, 0.020440653, 0.020456819, 0.02047775, 0.020499806, 0.0205218...</msg>
<status status="PASS" starttime="20201112 12:43:34.404" endtime="20201112 12:43:34.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.421" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.420" endtime="20201112 12:43:34.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.424" level="INFO">VALUE: [1.2874999999998998e-05, 1.2458999999999387e-05, 1.2444999999999817e-05, 1.2471999999999483e-05, 1.2860999999999428e-05, 1.2458999999999387e-05, 1.2028000000000733e-05, 1.2082999999999539e-05, 1.2444999999999817e-05, 1.2055000000000399e-05, 1.2055999999999872e-05, 1.1972000000002453e-05, 1.2457999999999914e-05, 1.2861999999998902e-05, 1.2444000000000344e-05, 1.2402999999997638e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2042000000000302e-05, 1.2444999999999817e-05, 1.2000000000001593e-05, 1.2861000000002898e-05, 1.2888999999998568e-05, 1.2833000000000289e-05, 1.2860999999999428e-05, 1.2861000000002898e-05, 1.2403000000001108e-05, 1.2860999999999428e-05, 1.2874999999998998e-05, 1.2874999999998998e-05, 1.2431000000000247e-05, 1.2055999999999872e-05, 1.2860999999999428e-05, 1.2444999999999817e-05, 1.2889000000002038e-05, 1.2860999999999428e-05, 1.2055000000000399e-05, 1.2457999999999914e-05, 1.2847999999999332e-05, 1.204099999999736e-05, 1.2068999999999969e-05, 1.2847999999999332e-05, 1.2846999999999859e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2124999999998248e-05, 1.2847999999999332e-05, 1.2068999999999969e-05, 1.2860999999999428e-05]</msg>
<status status="PASS" starttime="20201112 12:43:34.422" endtime="20201112 12:43:34.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.417" endtime="20201112 12:43:34.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.427" endtime="20201112 12:43:34.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.431" endtime="20201112 12:43:34.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.429" endtime="20201112 12:43:34.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.426" endtime="20201112 12:43:34.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.058" endtime="20201112 12:43:34.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.057" endtime="20201112 12:43:34.452"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.461" endtime="20201112 12:43:34.476"></status>
</kw>
<msg timestamp="20201112 12:43:34.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.459" endtime="20201112 12:43:34.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.477" endtime="20201112 12:43:34.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.480" endtime="20201112 12:43:34.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.456" endtime="20201112 12:43:34.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.454" endtime="20201112 12:43:34.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.490" endtime="20201112 12:43:34.776"></status>
</kw>
<msg timestamp="20201112 12:43:34.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.489" endtime="20201112 12:43:34.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.780" endtime="20201112 12:43:34.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.789" endtime="20201112 12:43:34.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.486" endtime="20201112 12:43:34.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.484" endtime="20201112 12:43:34.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.796" level="INFO">${RESULT} = [{'time': 0.020179042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3278000000001983e-05, 'source_diff': 1.3278000000001983e-05}, {'time': 0.020195222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.792" endtime="20201112 12:43:34.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.809" level="INFO">${ACCURACY} = {'time': [0.020179042, 0.020195222, 0.020215222, 0.020234042, 0.020252139, 0.020274139, 0.020294236, 0.020314958, 0.020335292, 0.020352889, 0.020368903, 0.020389014, 0.020406208, 0.020425181, 0.020448...</msg>
<status status="PASS" starttime="20201112 12:43:34.797" endtime="20201112 12:43:34.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.814" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.813" endtime="20201112 12:43:34.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.817" level="INFO">VALUE: [1.3278000000001983e-05, 1.3263999999998943e-05, 1.3264000000002413e-05, 1.3667000000001928e-05, 1.3666999999998458e-05, 1.4070000000001442e-05, 1.40689999999985e-05, 1.3611000000000179e-05, 1.3264000000002413e-05, 1.3638999999999318e-05, 1.3249999999999373e-05, 1.3292000000001553e-05, 1.3263999999998943e-05, 1.4056000000001873e-05, 1.3666999999998458e-05, 1.3680999999998028e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.4098000000000582e-05, 1.3597000000000609e-05, 1.3291999999998083e-05, 1.3208000000000664e-05, 1.3665999999998985e-05, 1.3624999999999748e-05, 1.3653000000002358e-05, 1.3667000000001928e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3667000000001928e-05, 1.3666000000002454e-05, 1.3666999999998458e-05, 1.404099999999936e-05, 1.2862000000002372e-05, 1.3681000000001498e-05, 1.3651999999999415e-05, 1.3305000000001649e-05, 1.3666999999998458e-05, 1.4055999999998403e-05, 1.3264000000002413e-05, 1.3667000000001928e-05, 1.3250000000002843e-05, 1.3680999999998028e-05, 1.3666999999998458e-05, 1.3653000000002358e-05, 1.3264000000002413e-05, 1.3749999999999873e-05, 1.3278000000001983e-05, 1.3680000000002024e-05, 1.3693999999998124e-05, 1.3235999999999803e-05]</msg>
<status status="PASS" starttime="20201112 12:43:34.815" endtime="20201112 12:43:34.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.810" endtime="20201112 12:43:34.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.820" endtime="20201112 12:43:34.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.824" endtime="20201112 12:43:34.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.822" endtime="20201112 12:43:34.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.819" endtime="20201112 12:43:34.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.453" endtime="20201112 12:43:34.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.452" endtime="20201112 12:43:34.845"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.854" endtime="20201112 12:43:34.869"></status>
</kw>
<msg timestamp="20201112 12:43:34.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.852" endtime="20201112 12:43:34.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.870" endtime="20201112 12:43:34.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.873" endtime="20201112 12:43:34.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.850" endtime="20201112 12:43:34.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.847" endtime="20201112 12:43:34.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.883" endtime="20201112 12:43:35.168"></status>
</kw>
<msg timestamp="20201112 12:43:35.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.881" endtime="20201112 12:43:35.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.172" endtime="20201112 12:43:35.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.181" endtime="20201112 12:43:35.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.879" endtime="20201112 12:43:35.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.877" endtime="20201112 12:43:35.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.188" level="INFO">${RESULT} = [{'time': 0.020108069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4457999999998444e-05, 'source_diff': 1.4457999999998444e-05}, {'time': 0.020128903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.184" endtime="20201112 12:43:35.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.202" level="INFO">${ACCURACY} = {'time': [0.020108069, 0.020128903, 0.020152306, 0.020171083, 0.020191958, 0.020214056, 0.020236986, 0.020254236, 0.020272042, 0.020292069, 0.020315111, 0.020338056, 0.020356889, 0.020376028, 0.020394...</msg>
<status status="PASS" starttime="20201112 12:43:35.189" endtime="20201112 12:43:35.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.207" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.206" endtime="20201112 12:43:35.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.209" level="INFO">VALUE: [1.4457999999998444e-05, 1.4500000000000624e-05, 1.4944999999998848e-05, 1.4875000000000999e-05, 1.40689999999985e-05, 1.4098000000000582e-05, 1.40689999999985e-05, 1.4485999999997584e-05, 1.4875000000000999e-05, 1.4888000000001095e-05, 1.4083000000001539e-05, 1.4473000000000957e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4070000000001442e-05, 1.4903000000000138e-05, 1.4874999999997529e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4443999999998874e-05, 1.4471999999998014e-05, 1.4929999999999805e-05, 1.4444999999998348e-05, 1.4889000000000568e-05, 1.4458999999997918e-05, 1.4889000000000568e-05, 1.4083000000001539e-05, 1.4957999999998944e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4930999999999278e-05, 1.4875000000000999e-05, 1.4069000000001969e-05, 1.4083999999997543e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4459000000001387e-05, 1.4097000000001109e-05, 1.4471999999998014e-05, 1.404099999999936e-05, 1.4459000000001387e-05, 1.4486000000001054e-05, 1.4903000000000138e-05, 1.4874999999997529e-05, 1.4874999999997529e-05, 1.4013999999999693e-05, 1.4889000000000568e-05, 1.4457999999998444e-05, 1.4069999999997973e-05, 1.4097000000001109e-05]</msg>
<status status="PASS" starttime="20201112 12:43:35.208" endtime="20201112 12:43:35.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.203" endtime="20201112 12:43:35.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.213" endtime="20201112 12:43:35.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.216" endtime="20201112 12:43:35.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.215" endtime="20201112 12:43:35.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.211" endtime="20201112 12:43:35.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.846" endtime="20201112 12:43:35.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.845" endtime="20201112 12:43:35.237"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.246" endtime="20201112 12:43:35.262"></status>
</kw>
<msg timestamp="20201112 12:43:35.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.245" endtime="20201112 12:43:35.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.263" endtime="20201112 12:43:35.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.266" endtime="20201112 12:43:35.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.242" endtime="20201112 12:43:35.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.240" endtime="20201112 12:43:35.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.276" endtime="20201112 12:43:35.562"></status>
</kw>
<msg timestamp="20201112 12:43:35.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.274" endtime="20201112 12:43:35.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.566" endtime="20201112 12:43:35.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.575" endtime="20201112 12:43:35.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.272" endtime="20201112 12:43:35.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.270" endtime="20201112 12:43:35.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.582" level="INFO">${RESULT} = [{'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694999999999598e-05, 'source_diff': 1.5694999999999598e-05}, {'time': 0.02009575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:35.578" endtime="20201112 12:43:35.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.595" level="INFO">${ACCURACY} = {'time': [0.020076903, 0.02009575, 0.020116833, 0.020140778, 0.020158639, 0.020179014, 0.020198, 0.020222014, 0.020241014, 0.020260653, 0.020284653, 0.020302708, 0.020323, 0.020343903, 0.020363875, 0....</msg>
<status status="PASS" starttime="20201112 12:43:35.583" endtime="20201112 12:43:35.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.600" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.599" endtime="20201112 12:43:35.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.602" level="INFO">VALUE: [1.5694999999999598e-05, 1.5681000000000028e-05, 1.529100000000061e-05, 1.5292000000000083e-05, 1.484699999999839e-05, 1.5277999999997044e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.4861000000001429e-05, 1.4874999999997529e-05, 1.5694000000000125e-05, 1.5278000000000513e-05, 1.53750000000015e-05, 1.5319999999999223e-05, 1.5694000000000125e-05, 1.529100000000061e-05, 1.5707999999999694e-05, 1.5278000000000513e-05, 1.609699999999964e-05, 1.4931000000002748e-05, 1.529100000000061e-05, 1.5680000000000555e-05, 1.6097999999999113e-05, 1.4889000000000568e-05, 1.5694999999999598e-05, 1.5292000000000083e-05, 1.5278000000000513e-05, 1.4889000000000568e-05, 1.5708999999999168e-05, 1.4889000000000568e-05, 1.5735999999998834e-05, 1.5735999999998834e-05, 1.6083999999999543e-05, 1.5292000000000083e-05, 1.527700000000104e-05, 1.608300000000007e-05, 1.4875000000000999e-05, 1.5694000000000125e-05, 1.529099999999714e-05, 1.5694000000000125e-05, 1.609699999999964e-05, 1.5680000000000555e-05, 1.5680000000000555e-05, 1.5292000000000083e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5694000000000125e-05, 1.5707999999999694e-05]</msg>
<status status="PASS" starttime="20201112 12:43:35.601" endtime="20201112 12:43:35.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.596" endtime="20201112 12:43:35.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.606" endtime="20201112 12:43:35.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.610" endtime="20201112 12:43:35.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.608" endtime="20201112 12:43:35.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.604" endtime="20201112 12:43:35.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.238" endtime="20201112 12:43:35.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.238" endtime="20201112 12:43:35.631"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.639" endtime="20201112 12:43:35.655"></status>
</kw>
<msg timestamp="20201112 12:43:35.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.638" endtime="20201112 12:43:35.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.657" endtime="20201112 12:43:35.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.659" endtime="20201112 12:43:35.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.635" endtime="20201112 12:43:35.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.633" endtime="20201112 12:43:35.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.669" endtime="20201112 12:43:35.954"></status>
</kw>
<msg timestamp="20201112 12:43:35.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.668" endtime="20201112 12:43:35.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.959" endtime="20201112 12:43:35.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.967" endtime="20201112 12:43:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.665" endtime="20201112 12:43:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.663" endtime="20201112 12:43:35.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.974" level="INFO">${RESULT} = [{'time': 0.020101847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6485999999999584e-05, 'source_diff': 1.6485999999999584e-05}, {'time': 0.020124847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.971" endtime="20201112 12:43:35.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.988" level="INFO">${ACCURACY} = {'time': [0.020101847, 0.020124847, 0.020149819, 0.020169903, 0.020191889, 0.020214861, 0.020234931, 0.020255861, 0.020274861, 0.02029575, 0.02031875, 0.020337792, 0.020360847, 0.020382917, 0.02040583...</msg>
<status status="PASS" starttime="20201112 12:43:35.975" endtime="20201112 12:43:35.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.992" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.991" endtime="20201112 12:43:35.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.995" level="INFO">VALUE: [1.6485999999999584e-05, 1.6500000000002624e-05, 1.6485999999999584e-05, 1.68889999999991e-05, 1.612500000000225e-05, 1.6499999999999154e-05, 1.690300000000214e-05, 1.609699999999964e-05, 1.6542000000001333e-05, 1.6500000000002624e-05, 1.6499999999999154e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.6513999999998724e-05, 1.688900000000257e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.686099999999996e-05, 1.6485999999999584e-05, 1.611099999999921e-05, 1.6485999999999584e-05, 1.6443999999997405e-05, 1.6500000000002624e-05, 1.6958000000000945e-05, 1.6499999999999154e-05, 1.6929999999998335e-05, 1.6930000000001805e-05, 1.6528000000001764e-05, 1.6958000000000945e-05, 1.68889999999991e-05, 1.6902000000002665e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.690299999999867e-05, 1.688900000000257e-05, 1.611099999999921e-05, 1.611100000000268e-05, 1.686099999999996e-05, 1.6916000000002235e-05, 1.6499999999999154e-05, 1.643100000000078e-05, 1.6528000000001764e-05, 1.60690000000005e-05, 1.6499999999999154e-05, 1.6486999999999058e-05, 1.609699999999964e-05, 1.6972000000000514e-05, 1.6500000000002624e-05, 1.690299999999867e-05, 1.6514000000002194e-05]</msg>
<status status="PASS" starttime="20201112 12:43:35.993" endtime="20201112 12:43:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.988" endtime="20201112 12:43:35.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.998" endtime="20201112 12:43:36.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.002" endtime="20201112 12:43:36.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.000" endtime="20201112 12:43:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.997" endtime="20201112 12:43:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.632" endtime="20201112 12:43:36.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.631" endtime="20201112 12:43:36.023"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.032" endtime="20201112 12:43:36.047"></status>
</kw>
<msg timestamp="20201112 12:43:36.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.030" endtime="20201112 12:43:36.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.048" endtime="20201112 12:43:36.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.051" endtime="20201112 12:43:36.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.028" endtime="20201112 12:43:36.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.025" endtime="20201112 12:43:36.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.061" endtime="20201112 12:43:36.346"></status>
</kw>
<msg timestamp="20201112 12:43:36.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.059" endtime="20201112 12:43:36.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.351" endtime="20201112 12:43:36.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.359" endtime="20201112 12:43:36.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.057" endtime="20201112 12:43:36.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.055" endtime="20201112 12:43:36.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.366" level="INFO">${RESULT} = [{'time': 0.020221472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.731900000000175e-05, 'source_diff': 1.731900000000175e-05}, {'time': 0.020248458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:36.363" endtime="20201112 12:43:36.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.380" level="INFO">${ACCURACY} = {'time': [0.020221472, 0.020248458, 0.020275431, 0.020302333, 0.020323292, 0.020345194, 0.020369181, 0.020395375, 0.020420472, 0.02044625, 0.020467458, 0.020489194, 0.020515458, 0.020538264, 0.0205592...</msg>
<status status="PASS" starttime="20201112 12:43:36.367" endtime="20201112 12:43:36.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.384" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.383" endtime="20201112 12:43:36.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.387" level="INFO">VALUE: [1.731900000000175e-05, 1.730499999999871e-05, 1.7320000000001223e-05, 1.7221999999997295e-05, 1.7320000000001223e-05, 1.7708000000001695e-05, 1.7723000000000738e-05, 1.731900000000175e-05, 1.812499999999731e-05, 1.7305999999998184e-05, 1.731900000000175e-05, 1.730499999999871e-05, 1.731900000000175e-05, 1.6958000000000945e-05, 1.731900000000175e-05, 1.7723000000000738e-05, 1.77089999999977e-05, 1.7305999999998184e-05, 1.731900000000175e-05, 1.7264000000002944e-05, 1.727699999999957e-05, 1.7320000000001223e-05, 1.7263999999999474e-05, 1.7306000000001653e-05, 1.7249999999999904e-05, 1.7263e-05, 1.733300000000132e-05, 1.7722000000001265e-05, 1.737500000000003e-05, 1.731899999999828e-05, 1.769499999999813e-05, 1.812500000000078e-05, 1.7292000000002083e-05, 1.7334000000000793e-05, 1.7306000000001653e-05, 1.7347999999996894e-05, 1.7278000000002514e-05, 1.7320000000001223e-05, 1.693100000000128e-05, 1.7320000000001223e-05, 1.7722000000001265e-05, 1.7319999999997754e-05, 1.6986000000000084e-05, 1.7721999999997795e-05, 1.729100000000261e-05, 1.7723000000000738e-05, 1.690300000000214e-05, 1.7263999999999474e-05, 1.76950000000016e-05, 1.7709000000001168e-05]</msg>
<status status="PASS" starttime="20201112 12:43:36.386" endtime="20201112 12:43:36.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.381" endtime="20201112 12:43:36.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.395" endtime="20201112 12:43:36.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.398" endtime="20201112 12:43:36.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.397" endtime="20201112 12:43:36.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.393" endtime="20201112 12:43:36.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.024" endtime="20201112 12:43:36.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.023" endtime="20201112 12:43:36.419"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.428" endtime="20201112 12:43:36.443"></status>
</kw>
<msg timestamp="20201112 12:43:36.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.426" endtime="20201112 12:43:36.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.444" endtime="20201112 12:43:36.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.447" endtime="20201112 12:43:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.424" endtime="20201112 12:43:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.422" endtime="20201112 12:43:36.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.457" endtime="20201112 12:43:36.742"></status>
</kw>
<msg timestamp="20201112 12:43:36.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.456" endtime="20201112 12:43:36.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.746" endtime="20201112 12:43:36.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.755" endtime="20201112 12:43:36.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.453" endtime="20201112 12:43:36.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.451" endtime="20201112 12:43:36.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.762" level="INFO">${RESULT} = [{'time': 0.020073583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.020098764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:36.758" endtime="20201112 12:43:36.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.776" level="INFO">${ACCURACY} = {'time': [0.020073583, 0.020098764, 0.020122847, 0.020148819, 0.020174556, 0.020196736, 0.020223528, 0.020246792, 0.020272778, 0.020297736, 0.020324486, 0.020349875, 0.020370569, 0.020392819, 0.020417...</msg>
<status status="PASS" starttime="20201112 12:43:36.763" endtime="20201112 12:43:36.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.781" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.780" endtime="20201112 12:43:36.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.784" level="INFO">VALUE: [1.8943999999999905e-05, 1.893100000000328e-05, 1.8930000000000335e-05, 1.8929999999996866e-05, 1.8500000000001154e-05, 1.891700000000024e-05, 1.8555999999999434e-05, 1.891700000000024e-05, 1.8528000000000294e-05, 1.8943999999999905e-05, 1.811099999999774e-05, 1.856899999999953e-05, 1.851300000000125e-05, 1.854100000000039e-05, 1.813899999999688e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.8541999999999864e-05, 1.8486000000001584e-05, 1.894499999999938e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.88890000000011e-05, 1.8916000000000766e-05, 1.854100000000039e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.887500000000153e-05, 1.8930000000000335e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.8528000000000294e-05, 1.812500000000078e-05, 1.8514000000000724e-05, 1.844500000000235e-05, 1.893099999999981e-05, 1.8097999999997644e-05, 1.8083999999998074e-05, 1.812500000000078e-05, 1.8528000000000294e-05, 1.8943999999999905e-05, 1.893100000000328e-05, 1.8499999999997685e-05, 1.893099999999981e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.893099999999981e-05, 1.8528000000000294e-05, 1.812500000000078e-05]</msg>
<status status="PASS" starttime="20201112 12:43:36.782" endtime="20201112 12:43:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.777" endtime="20201112 12:43:36.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.787" endtime="20201112 12:43:36.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.791" endtime="20201112 12:43:36.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.789" endtime="20201112 12:43:36.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.786" endtime="20201112 12:43:36.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.420" endtime="20201112 12:43:36.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.420" endtime="20201112 12:43:36.812"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.821" endtime="20201112 12:43:36.836"></status>
</kw>
<msg timestamp="20201112 12:43:36.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.819" endtime="20201112 12:43:36.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.837" endtime="20201112 12:43:36.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.840" endtime="20201112 12:43:36.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.817" endtime="20201112 12:43:36.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.814" endtime="20201112 12:43:36.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.850" endtime="20201112 12:43:37.135"></status>
</kw>
<msg timestamp="20201112 12:43:37.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.848" endtime="20201112 12:43:37.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.140" endtime="20201112 12:43:37.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.148" endtime="20201112 12:43:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.846" endtime="20201112 12:43:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.844" endtime="20201112 12:43:37.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.155" level="INFO">${RESULT} = [{'time': 0.020243583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.020266264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:37.152" endtime="20201112 12:43:37.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.169" level="INFO">${ACCURACY} = {'time': [0.020243583, 0.020266264, 0.0202925, 0.020315472, 0.020342486, 0.020366444, 0.020390361, 0.020412306, 0.020439333, 0.020468431, 0.020495625, 0.020521653, 0.020550347, 0.020574514, 0.02059929...</msg>
<status status="PASS" starttime="20201112 12:43:37.156" endtime="20201112 12:43:37.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.173" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.172" endtime="20201112 12:43:37.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.176" level="INFO">VALUE: [1.9735999999999365e-05, 1.9708000000000225e-05, 1.9750000000002405e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.97630000000025e-05, 1.930500000000071e-05, 1.972300000000274e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 2.013899999999888e-05, 1.9764000000001974e-05, 1.936099999999899e-05, 1.9763999999998505e-05, 1.894500000000285e-05, 1.9778000000001544e-05, 1.972299999999927e-05, 1.9292000000000614e-05, 1.931900000000028e-05, 1.9291999999997145e-05, 1.933299999999985e-05, 1.9319999999999754e-05, 2.016700000000149e-05, 1.9735999999999365e-05, 1.8943999999999905e-05, 1.8916000000000766e-05, 2.013899999999888e-05, 1.9333999999999324e-05, 1.933299999999985e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.9334000000002793e-05, 1.972299999999927e-05, 2.012499999999931e-05, 1.933299999999985e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.934699999999942e-05, 1.9347999999998894e-05, 1.980499999999774e-05, 1.9721999999999795e-05, 1.934699999999942e-05, 1.933299999999985e-05, 1.933299999999985e-05, 1.9735999999999365e-05, 1.931900000000028e-05, 1.9750000000002405e-05, 1.9735999999999365e-05, 1.893099999999981e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201112 12:43:37.174" endtime="20201112 12:43:37.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.170" endtime="20201112 12:43:37.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.180" endtime="20201112 12:43:37.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.183" endtime="20201112 12:43:37.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.181" endtime="20201112 12:43:37.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.178" endtime="20201112 12:43:37.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.813" endtime="20201112 12:43:37.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.812" endtime="20201112 12:43:37.204"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.213" endtime="20201112 12:43:37.228"></status>
</kw>
<msg timestamp="20201112 12:43:37.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.211" endtime="20201112 12:43:37.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.230" endtime="20201112 12:43:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.232" endtime="20201112 12:43:37.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.209" endtime="20201112 12:43:37.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.206" endtime="20201112 12:43:37.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.243" endtime="20201112 12:43:37.528"></status>
</kw>
<msg timestamp="20201112 12:43:37.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.241" endtime="20201112 12:43:37.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.532" endtime="20201112 12:43:37.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.541" endtime="20201112 12:43:37.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.239" endtime="20201112 12:43:37.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.237" endtime="20201112 12:43:37.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.548" level="INFO">${RESULT} = [{'time': 0.020021153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0541999999998395e-05, 'source_diff': 2.0541999999998395e-05}, {'time': 0.020049958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:37.544" endtime="20201112 12:43:37.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.561" level="INFO">${ACCURACY} = {'time': [0.020021153, 0.020049958, 0.020075014, 0.020099042, 0.020122208, 0.020146167, 0.020170986, 0.020197083, 0.020227028, 0.020252958, 0.020280042, 0.020304139, 0.020328944, 0.020355042, 0.020384...</msg>
<status status="PASS" starttime="20201112 12:43:37.549" endtime="20201112 12:43:37.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.566" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.564" endtime="20201112 12:43:37.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.568" level="INFO">VALUE: [2.0541999999998395e-05, 2.056899999999806e-05, 2.0957999999998006e-05, 2.013900000000235e-05, 2.0943999999998436e-05, 2.0555999999997965e-05, 2.015299999999845e-05, 2.0944000000001906e-05, 2.0986000000000615e-05, 2.0180000000001586e-05, 2.0556000000001434e-05, 2.015299999999845e-05, 2.0138000000002876e-05, 2.094500000000138e-05, 2.0986000000000615e-05, 2.015300000000192e-05, 2.015299999999845e-05, 2.015299999999845e-05, 2.0541999999998395e-05, 2.0527999999998825e-05, 2.013899999999888e-05, 2.0151999999998976e-05, 2.013899999999888e-05, 2.094500000000138e-05, 2.056900000000153e-05, 2.095900000000095e-05, 2.0944000000001906e-05, 2.0542000000001864e-05, 2.0958000000001475e-05, 2.013899999999888e-05, 2.015300000000192e-05, 2.0888000000000156e-05, 2.0901999999999726e-05, 2.015299999999845e-05, 2.0570000000001004e-05, 2.059700000000067e-05, 2.054099999999892e-05, 2.056900000000153e-05, 2.055499999999849e-05, 2.056900000000153e-05, 2.013900000000235e-05, 2.0930000000002336e-05, 2.0556000000001434e-05, 2.055500000000196e-05, 2.0541999999998395e-05, 2.0527999999998825e-05, 2.013899999999888e-05, 2.0541999999998395e-05, 2.094500000000138e-05, 2.015299999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:43:37.567" endtime="20201112 12:43:37.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.562" endtime="20201112 12:43:37.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.572" endtime="20201112 12:43:37.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.575" endtime="20201112 12:43:37.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.574" endtime="20201112 12:43:37.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.570" endtime="20201112 12:43:37.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.205" endtime="20201112 12:43:37.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.204" endtime="20201112 12:43:37.597"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.605" endtime="20201112 12:43:37.620"></status>
</kw>
<msg timestamp="20201112 12:43:37.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.604" endtime="20201112 12:43:37.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.622" endtime="20201112 12:43:37.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.624" endtime="20201112 12:43:37.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.601" endtime="20201112 12:43:37.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.599" endtime="20201112 12:43:37.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.634" endtime="20201112 12:43:37.920"></status>
</kw>
<msg timestamp="20201112 12:43:37.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.633" endtime="20201112 12:43:37.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.924" endtime="20201112 12:43:37.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.932" endtime="20201112 12:43:37.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.630" endtime="20201112 12:43:37.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.629" endtime="20201112 12:43:37.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.939" level="INFO">${RESULT} = [{'time': 0.020138806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.169499999999866e-05, 'source_diff': 2.169499999999866e-05}, {'time': 0.020165792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:37.936" endtime="20201112 12:43:37.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.953" level="INFO">${ACCURACY} = {'time': [0.020138806, 0.020165792, 0.020192694, 0.020216792, 0.020246986, 0.020272778, 0.020300778, 0.020327708, 0.020354056, 0.020381833, 0.020408819, 0.020432694, 0.020462722, 0.020488972, 0.020517...</msg>
<status status="PASS" starttime="20201112 12:43:37.940" endtime="20201112 12:43:37.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.958" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.956" endtime="20201112 12:43:37.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.960" level="INFO">VALUE: [2.169499999999866e-05, 2.136099999999752e-05, 2.134700000000142e-05, 2.14029999999997e-05, 2.1750000000000935e-05, 2.134700000000142e-05, 2.094499999999791e-05, 2.137500000000056e-05, 2.216700000000002e-05, 2.1763999999997036e-05, 2.136100000000099e-05, 2.133300000000185e-05, 2.136099999999752e-05, 2.136100000000099e-05, 2.1762999999997562e-05, 2.1722000000001795e-05, 2.2180000000000116e-05, 2.1764000000000505e-05, 2.170899999999823e-05, 2.1778000000000075e-05, 2.134700000000142e-05, 2.131899999999881e-05, 2.134700000000142e-05, 2.1762999999997562e-05, 2.095899999999748e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.0986000000000615e-05, 2.136100000000099e-05, 2.1791999999999645e-05, 2.176300000000103e-05, 2.1362000000000464e-05, 2.1750000000000935e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.136099999999752e-05, 2.1750000000000935e-05, 2.137500000000056e-05, 2.138900000000013e-05, 2.137500000000056e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.134699999999795e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1764000000000505e-05, 2.1721999999998326e-05, 2.134699999999795e-05, 2.137500000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:43:37.959" endtime="20201112 12:43:37.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.954" endtime="20201112 12:43:37.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.964" endtime="20201112 12:43:37.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.967" endtime="20201112 12:43:37.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.966" endtime="20201112 12:43:37.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.962" endtime="20201112 12:43:37.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.597" endtime="20201112 12:43:37.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.597" endtime="20201112 12:43:37.988"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.997" endtime="20201112 12:43:38.013"></status>
</kw>
<msg timestamp="20201112 12:43:38.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.996" endtime="20201112 12:43:38.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.015" endtime="20201112 12:43:38.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.018" endtime="20201112 12:43:38.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.993" endtime="20201112 12:43:38.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.991" endtime="20201112 12:43:38.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.028" endtime="20201112 12:43:38.314"></status>
</kw>
<msg timestamp="20201112 12:43:38.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020477764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.026" endtime="20201112 12:43:38.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020477764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.319" endtime="20201112 12:43:38.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.327" endtime="20201112 12:43:38.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.024" endtime="20201112 12:43:38.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.022" endtime="20201112 12:43:38.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.334" level="INFO">${RESULT} = [{'time': 0.020500347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.258299999999963e-05, 'source_diff': 2.258299999999963e-05}, {'time': 0.020528056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:38.331" endtime="20201112 12:43:38.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.348" level="INFO">${ACCURACY} = {'time': [0.020500347, 0.020528056, 0.02056025, 0.020586208, 0.020617181, 0.020645306, 0.020676208, 0.020704153, 0.020736361, 0.020765153, 0.020797319, 0.020825042, 0.02085025, 0.020876236, 0.02090816...</msg>
<status status="PASS" starttime="20201112 12:43:38.335" endtime="20201112 12:43:38.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.353" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.352" endtime="20201112 12:43:38.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.356" level="INFO">VALUE: [2.258299999999963e-05, 2.215300000000045e-05, 2.25969999999992e-05, 2.2958000000000006e-05, 2.2569999999999535e-05, 2.29169999999973e-05, 2.2180000000000116e-05, 2.215300000000045e-05, 2.261099999999877e-05, 2.2972000000003046e-05, 2.2972000000003046e-05, 2.2569999999999535e-05, 2.2971999999999576e-05, 2.2999999999998716e-05, 2.2597999999998675e-05, 2.2180000000000116e-05, 2.2568999999996592e-05, 2.215299999999698e-05, 2.215300000000045e-05, 2.2569999999999535e-05, 2.2583999999999105e-05, 2.216700000000002e-05, 2.25830000000031e-05, 2.2569999999999535e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.2569999999999535e-05, 2.218099999999959e-05, 2.294499999999991e-05, 2.2986000000002615e-05, 2.3000000000002185e-05, 2.265300000000095e-05, 2.216700000000002e-05, 2.2584000000002574e-05, 2.2958000000000006e-05, 2.2569999999999535e-05, 2.2583999999999105e-05, 2.2985999999999146e-05, 2.2193999999999686e-05, 2.219499999999916e-05, 2.2985999999999146e-05, 2.256900000000006e-05, 2.2193999999999686e-05, 2.2569999999999535e-05, 2.263899999999791e-05, 2.2971999999999576e-05, 2.262499999999834e-05, 2.256900000000006e-05, 2.2222000000002295e-05, 2.259700000000267e-05]</msg>
<status status="PASS" starttime="20201112 12:43:38.354" endtime="20201112 12:43:38.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.349" endtime="20201112 12:43:38.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.359" endtime="20201112 12:43:38.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.363" endtime="20201112 12:43:38.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.361" endtime="20201112 12:43:38.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.358" endtime="20201112 12:43:38.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.989" endtime="20201112 12:43:38.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.989" endtime="20201112 12:43:38.384"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.393" endtime="20201112 12:43:38.407"></status>
</kw>
<msg timestamp="20201112 12:43:38.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.391" endtime="20201112 12:43:38.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.409" endtime="20201112 12:43:38.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.411" endtime="20201112 12:43:38.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.389" endtime="20201112 12:43:38.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.386" endtime="20201112 12:43:38.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.422" endtime="20201112 12:43:38.707"></status>
</kw>
<msg timestamp="20201112 12:43:38.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.420" endtime="20201112 12:43:38.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.712" endtime="20201112 12:43:38.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.720" endtime="20201112 12:43:38.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.418" endtime="20201112 12:43:38.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.416" endtime="20201112 12:43:38.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.727" level="INFO">${RESULT} = [{'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.338900000000213e-05, 'source_diff': 2.338900000000213e-05}, {'time': 0.020226917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:38.724" endtime="20201112 12:43:38.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.741" level="INFO">${ACCURACY} = {'time': [0.020193972, 0.020226917, 0.020252944, 0.020281875, 0.020312778, 0.020343944, 0.020371903, 0.020405139, 0.020432153, 0.020463847, 0.020495167, 0.020525903, 0.020556208, 0.020589111, 0.020620...</msg>
<status status="PASS" starttime="20201112 12:43:38.728" endtime="20201112 12:43:38.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.745" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.744" endtime="20201112 12:43:38.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.748" level="INFO">VALUE: [2.338900000000213e-05, 2.3834000000000355e-05, 2.3387999999999187e-05, 2.3778000000002075e-05, 2.29030000000012e-05, 2.3387999999999187e-05, 2.3749999999999466e-05, 2.3805999999997746e-05, 2.3792000000001645e-05, 2.2930000000000866e-05, 2.3792000000001645e-05, 2.2986000000002615e-05, 2.3749999999999466e-05, 2.3722000000000326e-05, 2.381900000000131e-05, 2.338900000000213e-05, 2.333300000000038e-05, 2.3790999999998702e-05, 2.2971999999999576e-05, 2.3778000000002075e-05, 2.3778000000002075e-05, 2.2958000000000006e-05, 2.338899999999866e-05, 2.3792000000001645e-05, 2.337499999999909e-05, 2.3791999999998176e-05, 2.383300000000088e-05, 2.337500000000256e-05, 2.420899999999726e-05, 2.3014000000001755e-05, 2.383300000000088e-05, 2.343100000000084e-05, 2.337499999999909e-05, 2.3791999999998176e-05, 2.336099999999952e-05, 2.3792000000001645e-05, 2.337499999999909e-05, 2.337499999999909e-05, 2.297300000000252e-05, 2.3776999999999132e-05, 2.337499999999909e-05, 2.333300000000038e-05, 2.3818999999997842e-05, 2.3806000000001215e-05, 2.2985999999999146e-05, 2.3791999999998176e-05, 2.2971999999999576e-05, 2.337500000000256e-05, 2.338899999999866e-05, 2.3777999999998606e-05]</msg>
<status status="PASS" starttime="20201112 12:43:38.746" endtime="20201112 12:43:38.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.742" endtime="20201112 12:43:38.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.751" endtime="20201112 12:43:38.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.755" endtime="20201112 12:43:38.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.753" endtime="20201112 12:43:38.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.750" endtime="20201112 12:43:38.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.385" endtime="20201112 12:43:38.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.384" endtime="20201112 12:43:38.776"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.785" endtime="20201112 12:43:38.800"></status>
</kw>
<msg timestamp="20201112 12:43:38.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.783" endtime="20201112 12:43:38.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.802" endtime="20201112 12:43:38.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.804" endtime="20201112 12:43:38.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.781" endtime="20201112 12:43:38.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.778" endtime="20201112 12:43:38.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.814" endtime="20201112 12:43:39.100"></status>
</kw>
<msg timestamp="20201112 12:43:39.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.813" endtime="20201112 12:43:39.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.104" endtime="20201112 12:43:39.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.112" endtime="20201112 12:43:39.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.810" endtime="20201112 12:43:39.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.808" endtime="20201112 12:43:39.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.119" level="INFO">${RESULT} = [{'time': 0.020115278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4584000000001105e-05, 'source_diff': 2.4584000000001105e-05}, {'time': 0.020142403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:39.116" endtime="20201112 12:43:39.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.133" level="INFO">${ACCURACY} = {'time': [0.020115278, 0.020142403, 0.020170403, 0.020199264, 0.020228472, 0.020259319, 0.020292347, 0.020319611, 0.020349597, 0.020381653, 0.020413292, 0.020443292, 0.020472306, 0.020504347, 0.020534...</msg>
<status status="PASS" starttime="20201112 12:43:39.120" endtime="20201112 12:43:39.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.138" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.137" endtime="20201112 12:43:39.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.140" level="INFO">VALUE: [2.4584000000001105e-05, 2.4584000000001105e-05, 2.4570000000001535e-05, 2.418100000000159e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4610999999997302e-05, 2.5000000000000716e-05, 2.4194000000001686e-05, 2.45970000000012e-05, 2.419500000000116e-05, 2.4610999999997302e-05, 2.4598000000000675e-05, 2.4596999999997732e-05, 2.45970000000012e-05, 2.4598000000000675e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4597999999997205e-05, 2.419499999999769e-05, 2.4541999999998926e-05, 2.461100000000077e-05, 2.5000000000000716e-05, 2.4596999999997732e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.420900000000073e-05, 2.4596999999997732e-05, 2.4222000000000826e-05, 2.5013000000000812e-05, 2.42230000000003e-05, 2.4193999999998217e-05, 2.4221999999997357e-05, 2.4582999999998162e-05, 2.4999999999997247e-05, 2.4999999999997247e-05, 2.4236000000000396e-05, 2.4583999999997636e-05, 2.4180000000002116e-05, 2.462500000000034e-05, 2.456900000000206e-05, 2.4194000000001686e-05, 2.4596999999997732e-05, 2.463899999999991e-05, 2.419500000000116e-05, 2.4596999999997732e-05, 2.4986000000001146e-05, 2.5013000000000812e-05, 2.419500000000116e-05, 2.4194000000001686e-05]</msg>
<status status="PASS" starttime="20201112 12:43:39.139" endtime="20201112 12:43:39.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.134" endtime="20201112 12:43:39.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.144" endtime="20201112 12:43:39.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.147" endtime="20201112 12:43:39.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.146" endtime="20201112 12:43:39.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.142" endtime="20201112 12:43:39.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.777" endtime="20201112 12:43:39.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.776" endtime="20201112 12:43:39.168"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.177" endtime="20201112 12:43:39.194"></status>
</kw>
<msg timestamp="20201112 12:43:39.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.176" endtime="20201112 12:43:39.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.195" endtime="20201112 12:43:39.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.198" endtime="20201112 12:43:39.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.173" endtime="20201112 12:43:39.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.171" endtime="20201112 12:43:39.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.208" endtime="20201112 12:43:39.495"></status>
</kw>
<msg timestamp="20201112 12:43:39.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.206" endtime="20201112 12:43:39.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.499" endtime="20201112 12:43:39.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.508" endtime="20201112 12:43:39.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.204" endtime="20201112 12:43:39.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.202" endtime="20201112 12:43:39.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.515" level="INFO">${RESULT} = [{'time': 0.021124931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54169999999998e-05, 'source_diff': 2.54169999999998e-05}, {'time': 0.021158083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:39.511" endtime="20201112 12:43:39.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.528" level="INFO">${ACCURACY} = {'time': [0.021124931, 0.021158083, 0.02118725, 0.021219875, 0.021251056, 0.021278986, 0.021308903, 0.021340264, 0.021374958, 0.021405139, 0.021433222, 0.021464889, 0.021494972, 0.021527972, 0.0215559...</msg>
<status status="PASS" starttime="20201112 12:43:39.516" endtime="20201112 12:43:39.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.533" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.532" endtime="20201112 12:43:39.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.536" level="INFO">VALUE: [2.54169999999998e-05, 2.5472000000002076e-05, 2.5818999999999842e-05, 2.5805999999999746e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.494500000000191e-05, 2.5750000000001466e-05, 2.5818999999999842e-05, 2.5832999999999412e-05, 2.5360999999998052e-05, 2.540300000000023e-05, 2.5416000000000327e-05, 2.4985999999997677e-05, 2.538900000000066e-05, 2.4986000000001146e-05, 2.538900000000066e-05, 2.5805999999999746e-05, 2.540300000000023e-05, 2.5819999999999316e-05, 2.5000000000000716e-05, 2.5027999999999856e-05, 2.540300000000023e-05, 2.5805999999999746e-05, 2.5792000000000176e-05, 2.581900000000331e-05, 2.5819999999999316e-05, 2.5819999999999316e-05, 2.5805000000000272e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.5819999999999316e-05, 2.54169999999998e-05, 2.537499999999762e-05, 2.4985999999997677e-05, 2.5861999999998025e-05, 2.5014000000000286e-05, 2.4985999999997677e-05, 2.540300000000023e-05, 2.495899999999801e-05, 2.5805999999999746e-05, 2.6207999999999787e-05, 2.543099999999937e-05, 2.5805999999999746e-05, 2.5014000000000286e-05, 2.540300000000023e-05, 2.538899999999719e-05, 2.5000000000000716e-05, 2.4999999999997247e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201112 12:43:39.534" endtime="20201112 12:43:39.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.529" endtime="20201112 12:43:39.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.539" endtime="20201112 12:43:39.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.543" endtime="20201112 12:43:39.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.541" endtime="20201112 12:43:39.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.538" endtime="20201112 12:43:39.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.169" endtime="20201112 12:43:39.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.169" endtime="20201112 12:43:39.564"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.573" endtime="20201112 12:43:39.588"></status>
</kw>
<msg timestamp="20201112 12:43:39.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.571" endtime="20201112 12:43:39.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.589" endtime="20201112 12:43:39.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.592" endtime="20201112 12:43:39.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.568" endtime="20201112 12:43:39.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.566" endtime="20201112 12:43:39.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.602" endtime="20201112 12:43:39.889"></status>
</kw>
<msg timestamp="20201112 12:43:39.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.600" endtime="20201112 12:43:39.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.893" endtime="20201112 12:43:39.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.901" endtime="20201112 12:43:39.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.598" endtime="20201112 12:43:39.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.596" endtime="20201112 12:43:39.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.908" level="INFO">${RESULT} = [{'time': 0.020409403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.620899999999926e-05, 'source_diff': 2.620899999999926e-05}, {'time': 0.020440458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:39.905" endtime="20201112 12:43:39.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.923" level="INFO">${ACCURACY} = {'time': [0.020409403, 0.020440458, 0.020472319, 0.020504236, 0.020536319, 0.020566417, 0.020602181, 0.020635111, 0.020665139, 0.020701361, 0.020732181, 0.020763222, 0.020794514, 0.020827167, 0.020859...</msg>
<status status="PASS" starttime="20201112 12:43:39.909" endtime="20201112 12:43:39.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.928" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.927" endtime="20201112 12:43:39.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.930" level="INFO">VALUE: [2.620899999999926e-05, 2.662500000000234e-05, 2.6235999999998927e-05, 2.6638999999998442e-05, 2.7027000000002382e-05, 2.6597999999999206e-05, 2.663900000000191e-05, 2.6207999999999787e-05, 2.6570000000000066e-05, 2.7028000000001856e-05, 2.6624999999998872e-05, 2.661100000000277e-05, 2.6624999999998872e-05, 2.6610999999999302e-05, 2.662500000000234e-05, 2.7027000000002382e-05, 2.6624999999998872e-05, 2.6999999999999247e-05, 2.7027999999998387e-05, 2.6638999999998442e-05, 2.622299999999883e-05, 2.6569000000000592e-05, 2.6207999999999787e-05, 2.7041999999997957e-05, 2.6236000000002396e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6624999999998872e-05, 2.661100000000277e-05, 2.7042000000001426e-05, 2.7027999999998387e-05, 2.7042000000001426e-05, 2.7042000000001426e-05, 2.7012999999999343e-05, 2.6624999999998872e-05, 2.6610999999999302e-05, 2.6263999999998067e-05, 2.663900000000191e-05, 2.622299999999883e-05, 2.622299999999883e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.622299999999883e-05, 2.7042000000001426e-05, 2.6207999999999787e-05, 2.7028000000001856e-05, 2.6624999999998872e-05, 2.6221999999999357e-05, 2.661100000000277e-05, 2.6624999999998872e-05]</msg>
<status status="PASS" starttime="20201112 12:43:39.929" endtime="20201112 12:43:39.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.924" endtime="20201112 12:43:39.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.934" endtime="20201112 12:43:39.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.937" endtime="20201112 12:43:39.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.936" endtime="20201112 12:43:39.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.932" endtime="20201112 12:43:39.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.565" endtime="20201112 12:43:39.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.564" endtime="20201112 12:43:39.958"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.967" endtime="20201112 12:43:39.984"></status>
</kw>
<msg timestamp="20201112 12:43:39.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.965" endtime="20201112 12:43:39.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.985" endtime="20201112 12:43:39.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.988" endtime="20201112 12:43:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.963" endtime="20201112 12:43:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.961" endtime="20201112 12:43:39.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.998" endtime="20201112 12:43:40.283"></status>
</kw>
<msg timestamp="20201112 12:43:40.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020723653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.997" endtime="20201112 12:43:40.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020723653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.287" endtime="20201112 12:43:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.296" endtime="20201112 12:43:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.994" endtime="20201112 12:43:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.992" endtime="20201112 12:43:40.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.303" level="INFO">${RESULT} = [{'time': 0.020723653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.743100000000137e-05, 'source_diff': 2.743100000000137e-05}, {'time': 0.020754667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:40.299" endtime="20201112 12:43:40.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.316" level="INFO">${ACCURACY} = {'time': [0.020723653, 0.020754667, 0.020791681, 0.020828472, 0.020859472, 0.020889792, 0.020921569, 0.020956444, 0.020992764, 0.021028514, 0.021059597, 0.021094778, 0.021129444, 0.02116675, 0.0211977...</msg>
<status status="PASS" starttime="20201112 12:43:40.304" endtime="20201112 12:43:40.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.321" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.320" endtime="20201112 12:43:40.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.324" level="INFO">VALUE: [2.743100000000137e-05, 2.7848000000000456e-05, 2.7834000000000886e-05, 2.7430000000001897e-05, 2.7763999999999567e-05, 2.7861000000000552e-05, 2.7430000000001897e-05, 2.7833000000001412e-05, 2.7833000000001412e-05, 2.7014000000002286e-05, 2.7458000000001037e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2.788900000000316e-05, 2.743100000000137e-05, 2.7415999999998858e-05, 2.7847000000000982e-05, 2.7860999999997083e-05, 2.7055000000001522e-05, 2.7819000000001842e-05, 2.74309999999979e-05, 2.7847000000000982e-05, 2.7430000000001897e-05, 2.74309999999979e-05, 2.7444000000001467e-05, 2.7833000000001412e-05, 2.74170000000018e-05, 2.7833000000001412e-05, 2.7834000000000886e-05, 2.7013999999998817e-05, 2.7361000000000052e-05, 2.7028000000001856e-05, 2.74309999999979e-05, 2.7819000000001842e-05, 2.7041999999997957e-05, 2.7458000000001037e-05, 2.74170000000018e-05, 2.7888000000000218e-05, 2.7388999999999192e-05, 2.7833000000001412e-05, 2.74309999999979e-05, 2.74309999999979e-05, 2.7848000000000456e-05, 2.7847000000000982e-05, 2.7875000000000122e-05, 2.740299999999876e-05, 2.7805999999998277e-05, 2.7444000000001467e-05, 2.7429999999998428e-05, 2.743100000000137e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.322" endtime="20201112 12:43:40.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.317" endtime="20201112 12:43:40.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.327" endtime="20201112 12:43:40.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.331" endtime="20201112 12:43:40.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.329" endtime="20201112 12:43:40.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.326" endtime="20201112 12:43:40.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.959" endtime="20201112 12:43:40.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.959" endtime="20201112 12:43:40.352"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.360" endtime="20201112 12:43:40.378"></status>
</kw>
<msg timestamp="20201112 12:43:40.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.359" endtime="20201112 12:43:40.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.379" endtime="20201112 12:43:40.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.382" endtime="20201112 12:43:40.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.356" endtime="20201112 12:43:40.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.354" endtime="20201112 12:43:40.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.392" endtime="20201112 12:43:40.677"></status>
</kw>
<msg timestamp="20201112 12:43:40.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020996319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.390" endtime="20201112 12:43:40.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020996319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.681" endtime="20201112 12:43:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.690" endtime="20201112 12:43:40.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.388" endtime="20201112 12:43:40.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.386" endtime="20201112 12:43:40.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.697" level="INFO">${RESULT} = [{'time': 0.021024958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.021056764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:40.693" endtime="20201112 12:43:40.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.710" level="INFO">${ACCURACY} = {'time': [0.021024958, 0.021056764, 0.021093097, 0.021127847, 0.021161889, 0.021194083, 0.021226944, 0.021262069, 0.021297778, 0.021333056, 0.021369153, 0.021406042, 0.021440903, 0.021472056, 0.021503...</msg>
<status status="PASS" starttime="20201112 12:43:40.698" endtime="20201112 12:43:40.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.715" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.714" endtime="20201112 12:43:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.717" level="INFO">VALUE: [2.8639000000000442e-05, 2.8638999999996972e-05, 2.8625000000000872e-05, 2.8250000000000497e-05, 2.8666999999999582e-05, 2.8985999999998208e-05, 2.8666000000000108e-05, 2.9041000000000483e-05, 2.8222000000001357e-05, 2.82370000000004e-05, 2.8596999999998263e-05, 2.8639000000000442e-05, 2.8277999999999637e-05, 2.868099999999915e-05, 2.8236000000000927e-05, 2.8652000000000538e-05, 2.8235999999997458e-05, 2.8638999999996972e-05, 2.819499999999822e-05, 2.8222000000001357e-05, 2.8249999999997027e-05, 2.8250000000000497e-05, 2.8638000000000968e-05, 2.8639000000000442e-05, 2.8639000000000442e-05, 2.9041999999999957e-05, 2.8639000000000442e-05, 2.9041999999999957e-05, 2.8625000000000872e-05, 2.9055000000000053e-05, 2.8652000000000538e-05, 2.7833000000001412e-05, 2.8653000000000012e-05, 2.8625000000000872e-05, 2.8625000000000872e-05, 2.8625000000000872e-05, 2.8639000000000442e-05, 2.8958000000002537e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8638999999996972e-05, 2.8639000000000442e-05, 2.8165999999999608e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8707999999998818e-05, 2.8652000000000538e-05, 2.8221999999997888e-05, 2.8639000000000442e-05, 2.9070000000002566e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.716" endtime="20201112 12:43:40.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.711" endtime="20201112 12:43:40.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.721" endtime="20201112 12:43:40.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.725" endtime="20201112 12:43:40.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.723" endtime="20201112 12:43:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.719" endtime="20201112 12:43:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.353" endtime="20201112 12:43:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.352" endtime="20201112 12:43:40.746"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.754" endtime="20201112 12:43:40.771"></status>
</kw>
<msg timestamp="20201112 12:43:40.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.753" endtime="20201112 12:43:40.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.773" endtime="20201112 12:43:40.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.775" endtime="20201112 12:43:40.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.750" endtime="20201112 12:43:40.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.748" endtime="20201112 12:43:40.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.785" endtime="20201112 12:43:41.071"></status>
</kw>
<msg timestamp="20201112 12:43:41.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.784" endtime="20201112 12:43:41.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.076" endtime="20201112 12:43:41.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.084" endtime="20201112 12:43:41.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.781" endtime="20201112 12:43:41.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.779" endtime="20201112 12:43:41.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.091" level="INFO">${RESULT} = [{'time': 0.020199486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9471999999999138e-05, 'source_diff': 2.9471999999999138e-05}, {'time': 0.020238597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:41.088" endtime="20201112 12:43:41.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.105" level="INFO">${ACCURACY} = {'time': [0.020199486, 0.020238597, 0.020272333, 0.020305486, 0.020340417, 0.020372514, 0.020409542, 0.020447333, 0.020486556, 0.020518458, 0.020555444, 0.020592583, 0.020626333, 0.020660319, 0.020693...</msg>
<status status="PASS" starttime="20201112 12:43:41.092" endtime="20201112 12:43:41.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.110" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.109" endtime="20201112 12:43:41.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.112" level="INFO">VALUE: [2.9471999999999138e-05, 2.9457999999999568e-05, 2.9055000000000053e-05, 2.9457999999999568e-05, 2.9069999999999097e-05, 2.9903000000001262e-05, 2.9847999999998986e-05, 2.9832999999999943e-05, 2.9833999999999417e-05, 2.9443999999999998e-05, 2.9055000000000053e-05, 2.9430000000000428e-05, 2.9846999999999513e-05, 2.9874999999998653e-05, 2.9471999999999138e-05, 2.9361000000002052e-05, 2.9472000000002607e-05, 2.9861000000002552e-05, 2.9818999999996904e-05, 2.9846999999999513e-05, 2.9055999999999527e-05, 2.9514000000001317e-05, 2.9041999999999957e-05, 2.9055000000000053e-05, 2.9819999999999847e-05, 2.9457999999999568e-05, 2.9860999999999083e-05, 2.9417000000000332e-05, 2.9068999999999623e-05, 2.9041000000000483e-05, 2.9028000000000387e-05, 2.9513999999997848e-05, 2.9055999999999527e-05, 2.9457999999999568e-05, 2.9041999999999957e-05, 2.9860999999999083e-05, 2.9457999999999568e-05, 2.9861999999998556e-05, 2.9402000000001288e-05, 2.9832999999999943e-05, 2.9457999999999568e-05, 2.9860999999999083e-05, 2.9860999999999083e-05, 2.9041999999999957e-05, 2.9457999999999568e-05, 2.9055000000000053e-05, 2.9860999999999083e-05, 2.9041000000000483e-05, 2.9457999999999568e-05, 2.944499999999947e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.111" endtime="20201112 12:43:41.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.106" endtime="20201112 12:43:41.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.116" endtime="20201112 12:43:41.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.119" endtime="20201112 12:43:41.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.118" endtime="20201112 12:43:41.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.114" endtime="20201112 12:43:41.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.747" endtime="20201112 12:43:41.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.746" endtime="20201112 12:43:41.140"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.149" endtime="20201112 12:43:41.165"></status>
</kw>
<msg timestamp="20201112 12:43:41.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.148" endtime="20201112 12:43:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.167" endtime="20201112 12:43:41.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.169" endtime="20201112 12:43:41.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.145" endtime="20201112 12:43:41.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.143" endtime="20201112 12:43:41.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.180" endtime="20201112 12:43:41.467"></status>
</kw>
<msg timestamp="20201112 12:43:41.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.178" endtime="20201112 12:43:41.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.471" endtime="20201112 12:43:41.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.479" endtime="20201112 12:43:41.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.175" endtime="20201112 12:43:41.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.173" endtime="20201112 12:43:41.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.486" level="INFO">${RESULT} = [{'time': 0.020116083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.067999999999821e-05, 'source_diff': 3.067999999999821e-05}, {'time': 0.020155944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:41.483" endtime="20201112 12:43:41.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.501" level="INFO">${ACCURACY} = {'time': [0.020116083, 0.020155944, 0.020195792, 0.020234764, 0.020273931, 0.020306875, 0.020342139, 0.020374931, 0.020408139, 0.020441, 0.020478181, 0.020512792, 0.020547917, 0.020582111, 0.020615, 0...</msg>
<status status="PASS" starttime="20201112 12:43:41.487" endtime="20201112 12:43:41.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.505" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.504" endtime="20201112 12:43:41.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.508" level="INFO">VALUE: [3.067999999999821e-05, 3.069399999999778e-05, 3.068100000000115e-05, 2.9860999999999083e-05, 3.0263999999998598e-05, 3.068099999999768e-05, 3.0582999999997224e-05, 3.023699999999893e-05, 3.069499999999725e-05, 3.066700000000158e-05, 3.065300000000201e-05, 3.0263999999998598e-05, 3.0277999999998167e-05, 3.0208000000000318e-05, 3.066700000000158e-05, 3.066599999999864e-05, 3.1082999999997724e-05, 3.1068999999998154e-05, 3.0278000000001637e-05, 3.066700000000158e-05, 3.065299999999854e-05, 2.9874999999998653e-05, 3.10700000000011e-05, 3.0263999999998598e-05, 3.066699999999811e-05, 3.113900000000294e-05, 3.0278000000001637e-05, 3.105500000000205e-05, 3.0276999999998694e-05, 3.06249999999994e-05, 2.9846999999999513e-05, 3.065300000000201e-05, 3.0278000000001637e-05, 3.0263999999998598e-05, 3.066699999999811e-05, 3.105599999999806e-05, 3.0249999999999028e-05, 3.11249999999999e-05, 3.065299999999854e-05, 3.111100000000033e-05, 3.067999999999821e-05, 3.063899999999897e-05, 3.109700000000076e-05, 3.0263999999998598e-05, 3.065300000000201e-05, 3.066700000000158e-05, 3.108300000000119e-05, 3.0263999999998598e-05, 3.0291999999997737e-05, 3.0277999999998167e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.507" endtime="20201112 12:43:41.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.502" endtime="20201112 12:43:41.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.516" endtime="20201112 12:43:41.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.519" endtime="20201112 12:43:41.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.517" endtime="20201112 12:43:41.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.514" endtime="20201112 12:43:41.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.141" endtime="20201112 12:43:41.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.141" endtime="20201112 12:43:41.540"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.549" endtime="20201112 12:43:41.566"></status>
</kw>
<msg timestamp="20201112 12:43:41.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.547" endtime="20201112 12:43:41.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.567" endtime="20201112 12:43:41.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.570" endtime="20201112 12:43:41.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.544" endtime="20201112 12:43:41.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.542" endtime="20201112 12:43:41.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.580" endtime="20201112 12:43:41.866"></status>
</kw>
<msg timestamp="20201112 12:43:41.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020743153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.578" endtime="20201112 12:43:41.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020743153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.870" endtime="20201112 12:43:41.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.878" endtime="20201112 12:43:41.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.576" endtime="20201112 12:43:41.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.574" endtime="20201112 12:43:41.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.885" level="INFO">${RESULT} = [{'time': 0.020774639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.148600000000071e-05, 'source_diff': 3.148600000000071e-05}, {'time': 0.020813403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:41.882" endtime="20201112 12:43:41.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.899" level="INFO">${ACCURACY} = {'time': [0.020774639, 0.020813403, 0.020850375, 0.020889528, 0.020930556, 0.020966458, 0.021006639, 0.021045403, 0.021083458, 0.021124361, 0.0211645, 0.021203667, 0.0212445, 0.021281542, 0.021318639,...</msg>
<status status="PASS" starttime="20201112 12:43:41.886" endtime="20201112 12:43:41.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.903" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.902" endtime="20201112 12:43:41.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.906" level="INFO">VALUE: [3.148600000000071e-05, 3.148600000000071e-05, 3.190299999999979e-05, 3.186100000000108e-05, 3.187500000000065e-05, 3.150000000000028e-05, 3.148600000000071e-05, 3.10700000000011e-05, 3.101399999999935e-05, 3.147200000000114e-05, 3.148600000000071e-05, 3.145899999999757e-05, 3.188900000000022e-05, 3.148600000000071e-05, 3.147200000000114e-05, 3.148600000000071e-05, 3.148599999999724e-05, 3.108300000000119e-05, 3.147300000000061e-05, 3.1862000000000557e-05, 3.1082999999997724e-05, 3.188800000000075e-05, 3.187499999999718e-05, 3.190299999999979e-05, 3.147300000000061e-05, 3.14579999999981e-05, 3.188900000000022e-05, 3.1860999999997613e-05, 3.187500000000065e-05, 3.148600000000071e-05, 3.187500000000065e-05, 3.150000000000028e-05, 3.188900000000022e-05, 3.188799999999728e-05, 3.109700000000076e-05, 3.148600000000071e-05, 3.105599999999806e-05, 3.187500000000065e-05, 3.187499999999718e-05, 3.188900000000022e-05, 3.148599999999724e-05, 3.148600000000071e-05, 3.187500000000065e-05, 3.1082999999997724e-05, 3.187500000000065e-05, 3.150000000000028e-05, 3.187500000000065e-05, 3.148600000000071e-05, 3.148600000000071e-05, 3.108300000000119e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.904" endtime="20201112 12:43:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.900" endtime="20201112 12:43:41.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.910" endtime="20201112 12:43:41.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.913" endtime="20201112 12:43:41.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.911" endtime="20201112 12:43:41.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.908" endtime="20201112 12:43:41.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.541" endtime="20201112 12:43:41.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.540" endtime="20201112 12:43:41.934"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.943" endtime="20201112 12:43:41.959"></status>
</kw>
<msg timestamp="20201112 12:43:41.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.941" endtime="20201112 12:43:41.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.960" endtime="20201112 12:43:41.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.963" endtime="20201112 12:43:41.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.939" endtime="20201112 12:43:41.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.937" endtime="20201112 12:43:41.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.973" endtime="20201112 12:43:42.259"></status>
</kw>
<msg timestamp="20201112 12:43:42.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.972" endtime="20201112 12:43:42.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.263" endtime="20201112 12:43:42.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.271" endtime="20201112 12:43:42.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.969" endtime="20201112 12:43:42.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.967" endtime="20201112 12:43:42.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.278" level="INFO">${RESULT} = [{'time': 0.020163625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.270799999999935e-05, 'source_diff': 3.270799999999935e-05}, {'time': 0.020202347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:42.275" endtime="20201112 12:43:42.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:42.292" level="INFO">${ACCURACY} = {'time': [0.020163625, 0.020202347, 0.020241653, 0.020280403, 0.0203185, 0.020359653, 0.020400583, 0.020441583, 0.020483653, 0.020518625, 0.020557417, 0.020594625, 0.020630625, 0.0206675, 0.020704403,...</msg>
<status status="PASS" starttime="20201112 12:43:42.279" endtime="20201112 12:43:42.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.297" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:42.295" endtime="20201112 12:43:42.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.299" level="INFO">VALUE: [3.270799999999935e-05, 3.22640000000006e-05, 3.272199999999892e-05, 3.227800000000017e-05, 3.270799999999935e-05, 3.22779999999967e-05, 3.22640000000006e-05, 3.274999999999806e-05, 3.269499999999925e-05, 3.269399999999978e-05, 3.268100000000315e-05, 3.229199999999974e-05, 3.229199999999974e-05, 3.269399999999978e-05, 3.266700000000011e-05, 3.227800000000017e-05, 3.230600000000278e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.234700000000201e-05, 3.229199999999974e-05, 3.269399999999978e-05, 3.3096999999999294e-05, 3.270899999999882e-05, 3.270799999999935e-05, 3.188800000000075e-05, 3.269399999999978e-05, 3.270799999999935e-05, 3.268000000000021e-05, 3.269399999999978e-05, 3.226399999999713e-05, 3.229199999999974e-05, 3.30839999999992e-05, 3.229199999999974e-05, 3.274999999999806e-05, 3.268000000000021e-05, 3.269399999999978e-05, 3.272300000000186e-05, 3.268000000000021e-05, 3.269399999999978e-05, 3.315299999999757e-05, 3.2276999999997225e-05, 3.231999999999888e-05, 3.188800000000075e-05, 3.229199999999974e-05, 3.268000000000021e-05, 3.2277000000000694e-05, 3.268099999999968e-05, 3.265300000000054e-05, 3.227800000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:43:42.298" endtime="20201112 12:43:42.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.293" endtime="20201112 12:43:42.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.303" endtime="20201112 12:43:42.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.306" endtime="20201112 12:43:42.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.305" endtime="20201112 12:43:42.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.301" endtime="20201112 12:43:42.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.935" endtime="20201112 12:43:42.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.934" endtime="20201112 12:43:42.327"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.336" endtime="20201112 12:43:42.352"></status>
</kw>
<msg timestamp="20201112 12:43:42.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.334" endtime="20201112 12:43:42.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.354" endtime="20201112 12:43:42.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.356" endtime="20201112 12:43:42.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.332" endtime="20201112 12:43:42.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.330" endtime="20201112 12:43:42.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.367" endtime="20201112 12:43:42.653"></status>
</kw>
<msg timestamp="20201112 12:43:42.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020220569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.365" endtime="20201112 12:43:42.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020220569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.657" endtime="20201112 12:43:42.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.665" endtime="20201112 12:43:42.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.362" endtime="20201112 12:43:42.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.361" endtime="20201112 12:43:42.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.672" level="INFO">${RESULT} = [{'time': 0.020220569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3138000000002e-05, 'source_diff': 3.3138000000002e-05}, {'time': 0.020257542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201112 12:43:42.669" endtime="20201112 12:43:42.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:42.686" level="INFO">${ACCURACY} = {'time': [0.020220569, 0.020257542, 0.020294319, 0.020332486, 0.020374486, 0.020415542, 0.020452583, 0.020490625, 0.020528611, 0.020569569, 0.020611472, 0.020654333, 0.020690361, 0.020732514, 0.020772...</msg>
<status status="PASS" starttime="20201112 12:43:42.673" endtime="20201112 12:43:42.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.690" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:42.689" endtime="20201112 12:43:42.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.693" level="INFO">VALUE: [3.3138000000002e-05, 3.354200000000099e-05, 3.309700000000276e-05, 3.349999999999881e-05, 3.311100000000233e-05, 3.354199999999752e-05, 3.391599999999842e-05, 3.3124999999998433e-05, 3.391699999999789e-05, 3.391599999999842e-05, 3.34580000000001e-05, 3.34580000000001e-05, 3.350000000000228e-05, 3.348599999999924e-05, 3.3096999999999294e-05, 3.349999999999881e-05, 3.3583000000000224e-05, 3.309800000000224e-05, 3.388900000000222e-05, 3.306999999999963e-05, 3.391700000000136e-05, 3.352800000000142e-05, 3.349999999999881e-05, 3.308300000000319e-05, 3.391599999999842e-05, 3.387500000000265e-05, 3.349999999999881e-05, 3.390300000000179e-05, 3.351399999999838e-05, 3.390199999999885e-05, 3.351399999999838e-05, 3.348599999999924e-05, 3.3847000000000044e-05, 3.3847000000000044e-05, 3.309799999999877e-05, 3.349999999999881e-05, 3.311100000000233e-05, 3.3096999999999294e-05, 3.391600000000189e-05, 3.351400000000185e-05, 3.390199999999885e-05, 3.348599999999924e-05, 3.390199999999885e-05, 3.348599999999924e-05, 3.3124999999998433e-05, 3.309700000000276e-05, 3.349999999999881e-05, 3.309700000000276e-05, 3.351399999999838e-05, 3.350000000000228e-05]</msg>
<status status="PASS" starttime="20201112 12:43:42.692" endtime="20201112 12:43:42.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.687" endtime="20201112 12:43:42.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.697" endtime="20201112 12:43:42.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.700" endtime="20201112 12:43:42.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.699" endtime="20201112 12:43:42.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.695" endtime="20201112 12:43:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.328" endtime="20201112 12:43:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.328" endtime="20201112 12:43:42.721"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.730" endtime="20201112 12:43:42.746"></status>
</kw>
<msg timestamp="20201112 12:43:42.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.728" endtime="20201112 12:43:42.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.748" endtime="20201112 12:43:42.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.750" endtime="20201112 12:43:42.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.726" endtime="20201112 12:43:42.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.724" endtime="20201112 12:43:42.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.760" endtime="20201112 12:43:43.047"></status>
</kw>
<msg timestamp="20201112 12:43:43.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.759" endtime="20201112 12:43:43.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.051" endtime="20201112 12:43:43.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.060" endtime="20201112 12:43:43.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.756" endtime="20201112 12:43:43.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.754" endtime="20201112 12:43:43.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.067" level="INFO">${RESULT} = [{'time': 0.020266347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2554999999999676e-05, 'source_diff': 4.2554999999999676e-05}, {'time': 0.020316347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:43.063" endtime="20201112 12:43:43.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.081" level="INFO">${ACCURACY} = {'time': [0.020266347, 0.020316347, 0.020364403, 0.020415361, 0.020467347, 0.020515417, 0.020567361, 0.020612403, 0.020660389, 0.020710375, 0.020757403, 0.020807403, 0.020852403, 0.020904444, 0.020955...</msg>
<status status="PASS" starttime="20201112 12:43:43.068" endtime="20201112 12:43:43.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.086" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.085" endtime="20201112 12:43:43.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.088" level="INFO">VALUE: [4.2554999999999676e-05, 4.24999999999974e-05, 4.2680999999999275e-05, 4.3332999999999566e-05, 4.3125000000001495e-05, 4.275000000000112e-05, 4.2554999999999676e-05, 4.2695000000002314e-05, 4.270800000000241e-05, 4.269399999999937e-05, 4.2653000000000135e-05, 4.24999999999974e-05, 4.247199999999826e-05, 4.2861000000001676e-05, 4.331999999999947e-05, 4.277799999999679e-05, 4.2722999999997985e-05, 4.2916999999999955e-05, 4.258399999999829e-05, 4.338799999999837e-05, 4.2554999999999676e-05, 4.330499999999696e-05, 4.292999999999658e-05, 4.2597000000001856e-05, 4.247200000000173e-05, 4.2611000000001426e-05, 4.3082999999999316e-05, 4.2639000000000565e-05, 4.257000000000219e-05, 4.304200000000008e-05, 4.2930999999999525e-05, 4.255599999999915e-05, 4.2624999999997526e-05, 4.2653000000000135e-05, 4.2610999999997956e-05, 4.3096999999998886e-05, 4.24860000000013e-05, 4.331999999999947e-05, 4.259800000000133e-05, 4.3180999999999775e-05, 4.2625000000000995e-05, 4.254199999999958e-05, 4.2666999999999705e-05, 4.3374999999998276e-05, 4.3110999999998456e-05, 4.2818999999999496e-05, 4.3068999999999746e-05, 4.2860999999998206e-05, 4.2653000000000135e-05, 4.326400000000119e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.087" endtime="20201112 12:43:43.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.082" endtime="20201112 12:43:43.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.092" endtime="20201112 12:43:43.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.096" endtime="20201112 12:43:43.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.094" endtime="20201112 12:43:43.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.090" endtime="20201112 12:43:43.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.722" endtime="20201112 12:43:43.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.721" endtime="20201112 12:43:43.117"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.125" endtime="20201112 12:43:43.143"></status>
</kw>
<msg timestamp="20201112 12:43:43.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.124" endtime="20201112 12:43:43.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.144" endtime="20201112 12:43:43.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.147" endtime="20201112 12:43:43.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.121" endtime="20201112 12:43:43.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.119" endtime="20201112 12:43:43.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.157" endtime="20201112 12:43:43.443"></status>
</kw>
<msg timestamp="20201112 12:43:43.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020948708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.156" endtime="20201112 12:43:43.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020948708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.447" endtime="20201112 12:43:43.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.456" endtime="20201112 12:43:43.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.153" endtime="20201112 12:43:43.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.151" endtime="20201112 12:43:43.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.463" level="INFO">${RESULT} = [{'time': 0.020992708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.39999999999989e-05, 'source_diff': 4.39999999999989e-05}, {'time': 0.021043667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:43.460" endtime="20201112 12:43:43.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.477" level="INFO">${ACCURACY} = {'time': [0.020992708, 0.021043667, 0.021092681, 0.021141722, 0.021188694, 0.021237708, 0.021287708, 0.021339694, 0.021386708, 0.021438708, 0.021488722, 0.02153675, 0.021585722, 0.021632736, 0.0216807...</msg>
<status status="PASS" starttime="20201112 12:43:43.464" endtime="20201112 12:43:43.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.482" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.481" endtime="20201112 12:43:43.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.484" level="INFO">VALUE: [4.39999999999989e-05, 4.379199999999736e-05, 4.3945000000000095e-05, 4.4153000000001635e-05, 4.3833000000000066e-05, 4.3889000000001815e-05, 4.398599999999933e-05, 4.3833000000000066e-05, 4.3569000000000246e-05, 4.352700000000154e-05, 4.441599999999851e-05, 4.3846999999999636e-05, 4.4403000000001885e-05, 4.423599999999958e-05, 4.4138999999998596e-05, 4.401399999999847e-05, 4.4069000000000746e-05, 4.352800000000101e-05, 4.4361000000003176e-05, 4.3624999999998526e-05, 4.4152999999998166e-05, 4.4430999999997556e-05, 4.424999999999915e-05, 4.4110999999999456e-05, 4.433400000000004e-05, 4.429200000000133e-05, 4.426400000000219e-05, 4.3611000000002426e-05, 4.4374999999999276e-05, 4.347199999999926e-05, 4.4347000000000136e-05, 4.395800000000019e-05, 4.3653000000001135e-05, 4.3860999999999206e-05, 4.4374999999999276e-05, 4.355600000000015e-05, 4.394400000000062e-05, 4.3846999999999636e-05, 4.377800000000126e-05, 4.3639000000001565e-05, 4.381999999999997e-05, 4.3708999999999415e-05, 4.3610999999998956e-05, 4.3931000000000525e-05, 4.388799999999887e-05, 4.4430999999997556e-05, 4.358399999999929e-05, 4.377699999999832e-05, 4.4459000000000165e-05, 4.3722999999998985e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.483" endtime="20201112 12:43:43.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.478" endtime="20201112 12:43:43.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.488" endtime="20201112 12:43:43.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.491" endtime="20201112 12:43:43.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.490" endtime="20201112 12:43:43.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.486" endtime="20201112 12:43:43.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.117" endtime="20201112 12:43:43.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.117" endtime="20201112 12:43:43.512"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.521" endtime="20201112 12:43:43.537"></status>
</kw>
<msg timestamp="20201112 12:43:43.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.520" endtime="20201112 12:43:43.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.539" endtime="20201112 12:43:43.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.541" endtime="20201112 12:43:43.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.517" endtime="20201112 12:43:43.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.515" endtime="20201112 12:43:43.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.551" endtime="20201112 12:43:43.838"></status>
</kw>
<msg timestamp="20201112 12:43:43.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.550" endtime="20201112 12:43:43.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.842" endtime="20201112 12:43:43.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.850" endtime="20201112 12:43:43.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.547" endtime="20201112 12:43:43.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.545" endtime="20201112 12:43:43.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.857" level="INFO">${RESULT} = [{'time': 0.020097111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.469400000000137e-05, 'source_diff': 4.469400000000137e-05}, {'time': 0.020147083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:43.854" endtime="20201112 12:43:43.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.871" level="INFO">${ACCURACY} = {'time': [0.020097111, 0.020147083, 0.020201097, 0.020251097, 0.020298111, 0.020347111, 0.020399111, 0.020452125, 0.020503139, 0.020558153, 0.020609139, 0.020662167, 0.020714153, 0.020766181, 0.020815...</msg>
<status status="PASS" starttime="20201112 12:43:43.858" endtime="20201112 12:43:43.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.875" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.874" endtime="20201112 12:43:43.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.878" level="INFO">VALUE: [4.469400000000137e-05, 4.527699999999982e-05, 4.527800000000276e-05, 4.5375000000000276e-05, 4.444400000000112e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.4597000000000386e-05, 4.547200000000126e-05, 4.5361000000000706e-05, 4.545799999999822e-05, 4.4610999999999956e-05, 4.4959000000000665e-05, 4.4737000000003024e-05, 4.48199999999975e-05, 4.4888999999999346e-05, 4.4624999999999526e-05, 4.458299999999735e-05, 4.470800000000094e-05, 4.545799999999822e-05, 4.455499999999821e-05, 4.470800000000094e-05, 4.466600000000223e-05, 4.484699999999717e-05, 4.5361000000000706e-05, 4.5125000000000026e-05, 4.4610999999999956e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.532000000000147e-05, 4.498600000000033e-05, 4.448599999999983e-05, 4.5153000000002635e-05, 4.53060000000019e-05, 4.5209000000000915e-05, 4.484800000000011e-05, 4.477800000000226e-05, 4.480499999999846e-05, 4.502799999999904e-05, 4.51939999999984e-05, 4.502700000000304e-05, 4.466600000000223e-05, 4.515199999999969e-05, 4.49999999999999e-05, 4.502799999999904e-05, 4.5139000000003066e-05, 4.4833000000001066e-05, 4.4597000000000386e-05, 4.525000000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.876" endtime="20201112 12:43:43.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.872" endtime="20201112 12:43:43.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.882" endtime="20201112 12:43:43.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.885" endtime="20201112 12:43:43.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.884" endtime="20201112 12:43:43.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.880" endtime="20201112 12:43:43.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.513" endtime="20201112 12:43:43.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.513" endtime="20201112 12:43:43.906"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.915" endtime="20201112 12:43:43.932"></status>
</kw>
<msg timestamp="20201112 12:43:43.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.913" endtime="20201112 12:43:43.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.934" endtime="20201112 12:43:43.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.937" endtime="20201112 12:43:43.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.911" endtime="20201112 12:43:43.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.909" endtime="20201112 12:43:43.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.947" endtime="20201112 12:43:44.232"></status>
</kw>
<msg timestamp="20201112 12:43:44.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.945" endtime="20201112 12:43:44.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.236" endtime="20201112 12:43:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.245" endtime="20201112 12:43:44.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.943" endtime="20201112 12:43:44.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.941" endtime="20201112 12:43:44.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.252" level="INFO">${RESULT} = [{'time': 0.020090278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.60000000000009e-05, 'source_diff': 4.60000000000009e-05}, {'time': 0.020138292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:44.248" endtime="20201112 12:43:44.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.265" level="INFO">${ACCURACY} = {'time': [0.020090278, 0.020138292, 0.020188292, 0.020238319, 0.020289306, 0.020338319, 0.020391319, 0.020441347, 0.020489347, 0.020541333, 0.020594347, 0.020649347, 0.020703347, 0.020753375, 0.020806...</msg>
<status status="PASS" starttime="20201112 12:43:44.253" endtime="20201112 12:43:44.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.270" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.269" endtime="20201112 12:43:44.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.272" level="INFO">VALUE: [4.60000000000009e-05, 4.5694999999998376e-05, 4.629199999999986e-05, 4.590200000000044e-05, 4.584800000000111e-05, 4.625000000000115e-05, 4.577700000000032e-05, 4.5902999999999916e-05, 4.55000000000004e-05, 4.612499999999756e-05, 4.644399999999965e-05, 4.580499999999946e-05, 4.579099999999989e-05, 4.630599999999943e-05, 4.555499999999921e-05, 4.595800000000219e-05, 4.5889000000000346e-05, 4.573600000000108e-05, 4.5833000000002067e-05, 4.555599999999868e-05, 4.627799999999682e-05, 4.6319999999999e-05, 4.5902999999999916e-05, 4.556999999999825e-05, 4.551399999999997e-05, 4.559699999999792e-05, 4.6166999999999736e-05, 4.570799999999847e-05, 4.591600000000001e-05, 4.566599999999976e-05, 4.556899999999878e-05, 4.638899999999738e-05, 4.5902999999999916e-05, 4.584699999999817e-05, 4.559699999999792e-05, 4.573600000000108e-05, 4.5902999999999916e-05, 4.606999999999875e-05, 4.5625000000000526e-05, 4.576400000000022e-05, 4.6361000000001706e-05, 4.634699999999867e-05, 4.576399999999675e-05, 4.577799999999979e-05, 4.63060000000029e-05, 4.549999999999693e-05, 4.629199999999986e-05, 4.611099999999799e-05, 4.6139000000000596e-05, 4.56939999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.271" endtime="20201112 12:43:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.266" endtime="20201112 12:43:44.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.276" endtime="20201112 12:43:44.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.280" endtime="20201112 12:43:44.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.278" endtime="20201112 12:43:44.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.274" endtime="20201112 12:43:44.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.907" endtime="20201112 12:43:44.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.907" endtime="20201112 12:43:44.301"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.310" endtime="20201112 12:43:44.327"></status>
</kw>
<msg timestamp="20201112 12:43:44.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.308" endtime="20201112 12:43:44.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.328" endtime="20201112 12:43:44.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.331" endtime="20201112 12:43:44.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.305" endtime="20201112 12:43:44.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.303" endtime="20201112 12:43:44.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.341" endtime="20201112 12:43:44.627"></status>
</kw>
<msg timestamp="20201112 12:43:44.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.339" endtime="20201112 12:43:44.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.632" endtime="20201112 12:43:44.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.640" endtime="20201112 12:43:44.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.337" endtime="20201112 12:43:44.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.335" endtime="20201112 12:43:44.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.647" level="INFO">${RESULT} = [{'time': 0.020078125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736099999999924e-05, 'source_diff': 4.736099999999924e-05}, {'time': 0.020129139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:44.644" endtime="20201112 12:43:44.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.661" level="INFO">${ACCURACY} = {'time': [0.020078125, 0.020129139, 0.020178125, 0.020231139, 0.020282181, 0.020332181, 0.020381153, 0.020436181, 0.020490181, 0.020543167, 0.020596181, 0.020645181, 0.020702194, 0.020751222, 0.020804...</msg>
<status status="PASS" starttime="20201112 12:43:44.648" endtime="20201112 12:43:44.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.666" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.665" endtime="20201112 12:43:44.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.669" level="INFO">VALUE: [4.736099999999924e-05, 4.706999999999975e-05, 4.679200000000036e-05, 4.7445000000000126e-05, 4.7403000000001416e-05, 4.680599999999993e-05, 4.648599999999836e-05, 4.686200000000168e-05, 4.7208999999999446e-05, 4.6667000000000236e-05, 4.7375000000002276e-05, 4.655599999999968e-05, 4.741600000000151e-05, 4.681900000000003e-05, 4.722199999999954e-05, 4.717999999999736e-05, 4.68329999999996e-05, 4.677800000000079e-05, 4.6667000000000236e-05, 4.654200000000011e-05, 4.6694999999999376e-05, 4.680599999999993e-05, 4.661099999999849e-05, 4.680599999999993e-05, 4.65139999999975e-05, 4.723599999999911e-05, 4.715200000000169e-05, 4.676399999999775e-05, 4.7208999999999446e-05, 4.734800000000261e-05, 4.726399999999825e-05, 4.729200000000086e-05, 4.6736999999998086e-05, 4.68879999999984e-05, 4.740200000000194e-05, 4.654099999999717e-05, 4.652700000000107e-05, 4.731900000000053e-05, 4.709699999999942e-05, 4.6639000000001096e-05, 4.659699999999892e-05, 4.705500000000071e-05, 4.6680999999999806e-05, 4.6917000000000486e-05, 4.672200000000251e-05, 4.679200000000036e-05, 4.737499999999881e-05, 4.654200000000011e-05, 4.6653000000000666e-05, 4.727800000000129e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.667" endtime="20201112 12:43:44.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.662" endtime="20201112 12:43:44.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.672" endtime="20201112 12:43:44.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.676" endtime="20201112 12:43:44.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.674" endtime="20201112 12:43:44.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.671" endtime="20201112 12:43:44.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.302" endtime="20201112 12:43:44.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.301" endtime="20201112 12:43:44.697"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.706" endtime="20201112 12:43:44.723"></status>
</kw>
<msg timestamp="20201112 12:43:44.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.704" endtime="20201112 12:43:44.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.725" endtime="20201112 12:43:44.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.727" endtime="20201112 12:43:44.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.701" endtime="20201112 12:43:44.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.699" endtime="20201112 12:43:44.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.738" endtime="20201112 12:43:45.024"></status>
</kw>
<msg timestamp="20201112 12:43:45.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.736" endtime="20201112 12:43:45.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.028" endtime="20201112 12:43:45.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.037" endtime="20201112 12:43:45.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.734" endtime="20201112 12:43:45.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.732" endtime="20201112 12:43:45.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.044" level="INFO">${RESULT} = [{'time': 0.020128597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.795800000000072e-05, 'source_diff': 4.795800000000072e-05}, {'time': 0.020179597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.040" endtime="20201112 12:43:45.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.057" level="INFO">${ACCURACY} = {'time': [0.020128597, 0.020179597, 0.020235611, 0.020290625, 0.020344611, 0.020401625, 0.020453625, 0.020509625, 0.020564667, 0.020620639, 0.020673653, 0.020729681, 0.020781667, 0.020835681, 0.020888...</msg>
<status status="PASS" starttime="20201112 12:43:45.045" endtime="20201112 12:43:45.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.062" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.061" endtime="20201112 12:43:45.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.064" level="INFO">VALUE: [4.795800000000072e-05, 4.761099999999949e-05, 4.784700000000017e-05, 4.805600000000118e-05, 4.813899999999913e-05, 4.805600000000118e-05, 4.787499999999931e-05, 4.830600000000143e-05, 4.793099999999759e-05, 4.823600000000011e-05, 4.833400000000057e-05, 4.802799999999857e-05, 4.754200000000111e-05, 4.751400000000197e-05, 4.762499999999906e-05, 4.836199999999971e-05, 4.797200000000029e-05, 4.805500000000171e-05, 4.786099999999974e-05, 4.762499999999906e-05, 4.844400000000165e-05, 4.75000000000024e-05, 4.788899999999888e-05, 4.781899999999756e-05, 4.754200000000111e-05, 4.7625000000002526e-05, 4.787499999999931e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.838899999999938e-05, 4.749999999999893e-05, 4.80269999999991e-05, 4.766699999999777e-05, 4.809799999999989e-05, 4.777799999999832e-05, 4.78330000000006e-05, 4.811099999999999e-05, 4.770800000000047e-05, 4.827699999999935e-05, 4.759699999999992e-05, 4.808300000000085e-05, 4.806900000000128e-05, 4.745800000000022e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.763899999999863e-05, 4.820800000000097e-05, 4.783400000000007e-05, 4.823600000000011e-05, 4.754200000000111e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.063" endtime="20201112 12:43:45.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.058" endtime="20201112 12:43:45.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.068" endtime="20201112 12:43:45.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.071" endtime="20201112 12:43:45.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.070" endtime="20201112 12:43:45.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.066" endtime="20201112 12:43:45.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.698" endtime="20201112 12:43:45.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.697" endtime="20201112 12:43:45.092"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.101" endtime="20201112 12:43:45.118"></status>
</kw>
<msg timestamp="20201112 12:43:45.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.099" endtime="20201112 12:43:45.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.119" endtime="20201112 12:43:45.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.122" endtime="20201112 12:43:45.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.097" endtime="20201112 12:43:45.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.095" endtime="20201112 12:43:45.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.132" endtime="20201112 12:43:45.418"></status>
</kw>
<msg timestamp="20201112 12:43:45.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.131" endtime="20201112 12:43:45.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.422" endtime="20201112 12:43:45.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.431" endtime="20201112 12:43:45.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.128" endtime="20201112 12:43:45.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.126" endtime="20201112 12:43:45.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.438" level="INFO">${RESULT} = [{'time': 0.020137889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.897199999999782e-05, 'source_diff': 4.897199999999782e-05}, {'time': 0.020195931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.434" endtime="20201112 12:43:45.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.451" level="INFO">${ACCURACY} = {'time': [0.020137889, 0.020195931, 0.020247917, 0.020304917, 0.020361917, 0.020415931, 0.020474931, 0.020529, 0.020584944, 0.020642958, 0.020695958, 0.020753972, 0.020807972, 0.020859, 0.020918, 0.02...</msg>
<status status="PASS" starttime="20201112 12:43:45.439" endtime="20201112 12:43:45.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.456" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.455" endtime="20201112 12:43:45.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.458" level="INFO">VALUE: [4.897199999999782e-05, 4.908400000000132e-05, 4.9223000000001016e-05, 4.9014e-05, 4.931999999999853e-05, 4.934799999999767e-05, 4.940299999999995e-05, 4.898599999999739e-05, 4.848600000000036e-05, 4.888899999999988e-05, 4.927700000000035e-05, 4.936099999999777e-05, 4.916599999999979e-05, 4.848600000000036e-05, 4.93469999999982e-05, 4.86940000000019e-05, 4.922200000000154e-05, 4.9417000000002986e-05, 4.855600000000168e-05, 4.861100000000049e-05, 4.925000000000068e-05, 4.905599999999871e-05, 4.95140000000005e-05, 4.936100000000124e-05, 4.879200000000236e-05, 4.877799999999932e-05, 4.941600000000004e-05, 4.865199999999972e-05, 4.895799999999825e-05, 4.858300000000135e-05, 4.870800000000147e-05, 4.855499999999874e-05, 4.909700000000142e-05, 4.912500000000056e-05, 4.85139999999995e-05, 4.930499999999949e-05, 4.929199999999939e-05, 4.863899999999963e-05, 4.855600000000168e-05, 4.927799999999982e-05, 4.848600000000036e-05, 4.938900000000038e-05, 4.881999999999803e-05, 4.893099999999859e-05, 4.8709000000000946e-05, 4.8417000000001986e-05, 4.9459000000001696e-05, 4.898600000000086e-05, 4.865199999999972e-05, 4.88330000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.457" endtime="20201112 12:43:45.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.452" endtime="20201112 12:43:45.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.462" endtime="20201112 12:43:45.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.466" endtime="20201112 12:43:45.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.464" endtime="20201112 12:43:45.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.460" endtime="20201112 12:43:45.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.093" endtime="20201112 12:43:45.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.092" endtime="20201112 12:43:45.487"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.496" endtime="20201112 12:43:45.513"></status>
</kw>
<msg timestamp="20201112 12:43:45.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.494" endtime="20201112 12:43:45.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.514" endtime="20201112 12:43:45.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.517" endtime="20201112 12:43:45.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.492" endtime="20201112 12:43:45.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.490" endtime="20201112 12:43:45.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.527" endtime="20201112 12:43:45.813"></status>
</kw>
<msg timestamp="20201112 12:43:45.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.526" endtime="20201112 12:43:45.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.818" endtime="20201112 12:43:45.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.826" endtime="20201112 12:43:45.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.523" endtime="20201112 12:43:45.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.521" endtime="20201112 12:43:45.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.833" level="INFO">${RESULT} = [{'time': 0.020862181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.955599999999921e-05, 'source_diff': 4.955599999999921e-05}, {'time': 0.020916208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.829" endtime="20201112 12:43:45.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.846" level="INFO">${ACCURACY} = {'time': [0.020862181, 0.020916208, 0.020970194, 0.021024194, 0.021078222, 0.021132208, 0.021189222, 0.021242222, 0.021297236, 0.021350292, 0.021408236, 0.02146625, 0.02152525, 0.021581264, 0.02163526...</msg>
<status status="PASS" starttime="20201112 12:43:45.834" endtime="20201112 12:43:45.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.851" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.850" endtime="20201112 12:43:45.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.854" level="INFO">VALUE: [4.955599999999921e-05, 4.977699999999738e-05, 4.9888000000001403e-05, 5.009699999999895e-05, 5.006899999999981e-05, 5.036099999999877e-05, 4.948600000000136e-05, 4.952800000000007e-05, 5.016700000000027e-05, 5.005599999999971e-05, 5.023600000000211e-05, 4.958299999999888e-05, 5.012499999999809e-05, 4.950000000000093e-05, 5.036100000000224e-05, 5.026400000000125e-05, 5.011100000000199e-05, 4.975000000000118e-05, 4.950000000000093e-05, 5.037500000000181e-05, 5.016700000000027e-05, 5.019399999999993e-05, 4.9707999999999e-05, 4.976400000000075e-05, 4.987499999999784e-05, 5.041600000000104e-05, 5.008400000000232e-05, 4.991700000000002e-05, 4.990300000000045e-05, 5.030500000000049e-05, 5.027800000000082e-05, 5.025000000000168e-05, 4.956999999999878e-05, 4.98469999999987e-05, 4.948600000000136e-05, 5.041700000000052e-05, 4.980599999999946e-05, 5.033400000000257e-05, 4.973600000000161e-05, 5.008400000000232e-05, 4.956899999999931e-05, 5.030499999999702e-05, 5.0387999999998434e-05, 4.987499999999784e-05, 5.012499999999809e-05, 5.027800000000082e-05, 4.990300000000045e-05, 4.950000000000093e-05, 5.000000000000143e-05, 4.95140000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.852" endtime="20201112 12:43:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.847" endtime="20201112 12:43:45.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.857" endtime="20201112 12:43:45.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.861" endtime="20201112 12:43:45.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.859" endtime="20201112 12:43:45.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.856" endtime="20201112 12:43:45.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.488" endtime="20201112 12:43:45.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.487" endtime="20201112 12:43:45.882"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.891" endtime="20201112 12:43:45.907"></status>
</kw>
<msg timestamp="20201112 12:43:45.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.889" endtime="20201112 12:43:45.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.909" endtime="20201112 12:43:45.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.911" endtime="20201112 12:43:45.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.886" endtime="20201112 12:43:45.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.884" endtime="20201112 12:43:45.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.921" endtime="20201112 12:43:46.207"></status>
</kw>
<msg timestamp="20201112 12:43:46.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020544694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.920" endtime="20201112 12:43:46.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020544694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.211" endtime="20201112 12:43:46.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.219" endtime="20201112 12:43:46.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.917" endtime="20201112 12:43:46.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.915" endtime="20201112 12:43:46.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.226" level="INFO">${RESULT} = [{'time': 0.020544694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0429999999997144e-05, 'source_diff': 5.0429999999997144e-05}, {'time': 0.020597694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:46.223" endtime="20201112 12:43:46.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:46.241" level="INFO">${ACCURACY} = {'time': [0.020544694, 0.020597694, 0.02065475, 0.020711722, 0.020766722, 0.020824722, 0.02088375, 0.020938736, 0.020997764, 0.021052764, 0.021106764, 0.021160764, 0.021218778, 0.021276778, 0.02133179...</msg>
<status status="PASS" starttime="20201112 12:43:46.227" endtime="20201112 12:43:46.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.245" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:46.244" endtime="20201112 12:43:46.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.248" level="INFO">VALUE: [5.0429999999997144e-05, 5.0708e-05, 5.079200000000089e-05, 5.051399999999803e-05, 5.056900000000031e-05, 5.0708e-05, 5.061099999999902e-05, 5.129199999999792e-05, 5.109699999999995e-05, 5.088900000000188e-05, 5.054200000000064e-05, 5.082000000000003e-05, 5.144500000000066e-05, 5.122200000000007e-05, 5.113899999999866e-05, 5.055600000000021e-05, 5.062500000000206e-05, 5.123599999999964e-05, 5.113900000000213e-05, 5.061099999999902e-05, 5.0693999999996964e-05, 5.106899999999734e-05, 5.051399999999803e-05, 5.066700000000077e-05, 5.119400000000093e-05, 5.113899999999866e-05, 5.055499999999727e-05, 5.088899999999841e-05, 5.13340000000001e-05, 5.090300000000145e-05, 5.076400000000175e-05, 5.079199999999742e-05, 5.130600000000096e-05, 5.073600000000261e-05, 5.056999999999978e-05, 5.061099999999902e-05, 5.066700000000077e-05, 5.109799999999942e-05, 5.133300000000063e-05, 5.077700000000185e-05, 5.1416000000002043e-05, 5.048599999999889e-05, 5.122200000000007e-05, 5.081900000000056e-05, 5.094400000000068e-05, 5.0679999999997394e-05, 5.063899999999816e-05, 5.072199999999957e-05, 5.137499999999934e-05, 5.104200000000114e-05]</msg>
<status status="PASS" starttime="20201112 12:43:46.246" endtime="20201112 12:43:46.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.242" endtime="20201112 12:43:46.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.251" endtime="20201112 12:43:46.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.255" endtime="20201112 12:43:46.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.253" endtime="20201112 12:43:46.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.250" endtime="20201112 12:43:46.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.883" endtime="20201112 12:43:46.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.882" endtime="20201112 12:43:46.276"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.285" endtime="20201112 12:43:46.301"></status>
</kw>
<msg timestamp="20201112 12:43:46.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.283" endtime="20201112 12:43:46.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.302" endtime="20201112 12:43:46.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.305" endtime="20201112 12:43:46.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.281" endtime="20201112 12:43:46.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.278" endtime="20201112 12:43:46.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.315" endtime="20201112 12:43:46.601"></status>
</kw>
<msg timestamp="20201112 12:43:46.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.313" endtime="20201112 12:43:46.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.606" endtime="20201112 12:43:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.614" endtime="20201112 12:43:46.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.311" endtime="20201112 12:43:46.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.309" endtime="20201112 12:43:46.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.621" level="INFO">${RESULT} = [{'time': 0.020287542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.165299999999873e-05, 'source_diff': 5.165299999999873e-05}, {'time': 0.020348556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:46.618" endtime="20201112 12:43:46.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:46.635" level="INFO">${ACCURACY} = {'time': [0.020287542, 0.020348556, 0.020406556, 0.020464556, 0.020523625, 0.020577569, 0.020634583, 0.020694597, 0.020753583, 0.020810597, 0.020870639, 0.020925611, 0.020986625, 0.021041625, 0.021097...</msg>
<status status="PASS" starttime="20201112 12:43:46.622" endtime="20201112 12:43:46.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.639" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:46.638" endtime="20201112 12:43:46.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.642" level="INFO">VALUE: [5.165299999999873e-05, 5.230600000000196e-05, 5.168099999999787e-05, 5.151399999999903e-05, 5.208300000000138e-05, 5.15409999999987e-05, 5.1708000000001e-05, 5.20279999999991e-05, 5.2415999999999574e-05, 5.211100000000052e-05, 5.163899999999916e-05, 5.199999999999996e-05, 5.190299999999898e-05, 5.225000000000021e-05, 5.184699999999723e-05, 5.165299999999873e-05, 5.187499999999984e-05, 5.190299999999898e-05, 5.2430000000002613e-05, 5.191699999999855e-05, 5.162499999999959e-05, 5.179199999999842e-05, 5.174999999999971e-05, 5.227799999999935e-05, 5.191699999999855e-05, 5.219400000000193e-05, 5.148599999999989e-05, 5.188900000000288e-05, 5.202800000000257e-05, 5.187499999999984e-05, 5.179200000000189e-05, 5.16530000000022e-05, 5.2457999999998284e-05, 5.16530000000022e-05, 5.174999999999971e-05, 5.205499999999877e-05, 5.184699999999723e-05, 5.163900000000263e-05, 5.144500000000066e-05, 5.23340000000011e-05, 5.157000000000078e-05, 5.194400000000168e-05, 5.205600000000171e-05, 5.2193999999998464e-05, 5.1902000000002974e-05, 5.201399999999953e-05, 5.206900000000181e-05, 5.16530000000022e-05, 5.155500000000174e-05, 5.206900000000181e-05]</msg>
<status status="PASS" starttime="20201112 12:43:46.641" endtime="20201112 12:43:46.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.636" endtime="20201112 12:43:46.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.650" endtime="20201112 12:43:46.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.653" endtime="20201112 12:43:46.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.651" endtime="20201112 12:43:46.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.648" endtime="20201112 12:43:46.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.277" endtime="20201112 12:43:46.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.276" endtime="20201112 12:43:46.674"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.683" endtime="20201112 12:43:46.699"></status>
</kw>
<msg timestamp="20201112 12:43:46.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.681" endtime="20201112 12:43:46.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.701" endtime="20201112 12:43:46.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.703" endtime="20201112 12:43:46.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.679" endtime="20201112 12:43:46.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.676" endtime="20201112 12:43:46.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.714" endtime="20201112 12:43:47.000"></status>
</kw>
<msg timestamp="20201112 12:43:47.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.712" endtime="20201112 12:43:47.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.004" endtime="20201112 12:43:47.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.013" endtime="20201112 12:43:47.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.709" endtime="20201112 12:43:47.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.708" endtime="20201112 12:43:47.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.020" level="INFO">${RESULT} = [{'time': 0.020055431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.255599999999874e-05, 'source_diff': 5.255599999999874e-05}, {'time': 0.020117472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:47.016" endtime="20201112 12:43:47.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.033" level="INFO">${ACCURACY} = {'time': [0.020055431, 0.020117472, 0.020173431, 0.020230444, 0.020287444, 0.020346444, 0.020402458, 0.020461472, 0.020521472, 0.020576472, 0.020632542, 0.0206895, 0.020745514, 0.020801514, 0.02085851...</msg>
<status status="PASS" starttime="20201112 12:43:47.021" endtime="20201112 12:43:47.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.038" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.037" endtime="20201112 12:43:47.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.040" level="INFO">VALUE: [5.255599999999874e-05, 5.286100000000127e-05, 5.276400000000028e-05, 5.312500000000109e-05, 5.312500000000109e-05, 5.2902000000000504e-05, 5.331899999999959e-05, 5.347200000000232e-05, 5.338899999999744e-05, 5.255499999999927e-05, 5.313900000000066e-05, 5.288900000000041e-05, 5.255599999999874e-05, 5.308299999999891e-05, 5.329199999999992e-05, 5.248600000000089e-05, 5.251400000000003e-05, 5.300000000000096e-05, 5.263900000000016e-05, 5.275000000000071e-05, 5.337499999999787e-05, 5.30280000000001e-05, 5.2929999999999644e-05, 5.2888000000000934e-05, 5.248600000000089e-05, 5.300000000000096e-05, 5.3443999999999714e-05, 5.30280000000001e-05, 5.277799999999985e-05, 5.331899999999959e-05, 5.261099999999755e-05, 5.305600000000271e-05, 5.29730000000013e-05, 5.340299999999701e-05, 5.258300000000188e-05, 5.338900000000091e-05, 5.250000000000046e-05, 5.305599999999924e-05, 5.277799999999985e-05, 5.280499999999952e-05, 5.248700000000037e-05, 5.327700000000088e-05, 5.336100000000177e-05, 5.331899999999959e-05, 5.334699999999873e-05, 5.288900000000041e-05, 5.280599999999899e-05, 5.337500000000134e-05, 5.272200000000157e-05, 5.256999999999831e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.039" endtime="20201112 12:43:47.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.034" endtime="20201112 12:43:47.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.044" endtime="20201112 12:43:47.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.048" endtime="20201112 12:43:47.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.046" endtime="20201112 12:43:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.042" endtime="20201112 12:43:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.675" endtime="20201112 12:43:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.674" endtime="20201112 12:43:47.069"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.077" endtime="20201112 12:43:47.095"></status>
</kw>
<msg timestamp="20201112 12:43:47.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.076" endtime="20201112 12:43:47.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.097" endtime="20201112 12:43:47.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.099" endtime="20201112 12:43:47.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.073" endtime="20201112 12:43:47.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.071" endtime="20201112 12:43:47.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.109" endtime="20201112 12:43:47.395"></status>
</kw>
<msg timestamp="20201112 12:43:47.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.108" endtime="20201112 12:43:47.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.399" endtime="20201112 12:43:47.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.408" endtime="20201112 12:43:47.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.105" endtime="20201112 12:43:47.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.103" endtime="20201112 12:43:47.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.414" level="INFO">${RESULT} = [{'time': 0.020054514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.35280000000006e-05, 'source_diff': 5.35280000000006e-05}, {'time': 0.020117528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:47.411" endtime="20201112 12:43:47.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.428" level="INFO">${ACCURACY} = {'time': [0.020054514, 0.020117528, 0.020178514, 0.020238528, 0.020298528, 0.020356583, 0.020420542, 0.020477569, 0.020537556, 0.020596653, 0.020655583, 0.020715597, 0.020778583, 0.020835597, 0.020892...</msg>
<status status="PASS" starttime="20201112 12:43:47.415" endtime="20201112 12:43:47.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.432" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.431" endtime="20201112 12:43:47.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.435" level="INFO">VALUE: [5.35280000000006e-05, 5.405600000000024e-05, 5.394500000000316e-05, 5.4221999999999604e-05, 5.36670000000003e-05, 5.388900000000141e-05, 5.440300000000148e-05, 5.409699999999948e-05, 5.415299999999776e-05, 5.4013999999998064e-05, 5.387500000000184e-05, 5.3929999999997175e-05, 5.411099999999905e-05, 5.401400000000153e-05, 5.426400000000178e-05, 5.38340000000026e-05, 5.416699999999733e-05, 5.3971999999999354e-05, 5.376400000000128e-05, 5.368099999999987e-05, 5.381999999999956e-05, 5.415300000000123e-05, 5.429200000000092e-05, 5.422300000000255e-05, 5.3666000000000824e-05, 5.433300000000016e-05, 5.355599999999974e-05, 5.4471999999999854e-05, 5.379100000000095e-05, 5.3499999999997994e-05, 5.3471999999998854e-05, 5.40549999999973e-05, 5.400000000000196e-05, 5.363900000000116e-05, 5.406900000000034e-05, 5.356899999999984e-05, 5.356899999999984e-05, 5.380599999999999e-05, 5.415300000000123e-05, 5.358399999999888e-05, 5.381999999999956e-05, 5.43479999999992e-05, 5.358399999999888e-05, 5.362500000000159e-05, 5.348700000000137e-05, 5.433300000000016e-05, 5.381900000000009e-05, 5.3749999999998244e-05, 5.359699999999898e-05, 5.3707999999999534e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.434" endtime="20201112 12:43:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.429" endtime="20201112 12:43:47.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.439" endtime="20201112 12:43:47.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.442" endtime="20201112 12:43:47.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.441" endtime="20201112 12:43:47.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.437" endtime="20201112 12:43:47.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.069" endtime="20201112 12:43:47.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.069" endtime="20201112 12:43:47.463"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.472" endtime="20201112 12:43:47.488"></status>
</kw>
<msg timestamp="20201112 12:43:47.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.470" endtime="20201112 12:43:47.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.490" endtime="20201112 12:43:47.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.492" endtime="20201112 12:43:47.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.468" endtime="20201112 12:43:47.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.466" endtime="20201112 12:43:47.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.503" endtime="20201112 12:43:47.789"></status>
</kw>
<msg timestamp="20201112 12:43:47.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:47.501" endtime="20201112 12:43:47.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:47.793" endtime="20201112 12:43:47.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.802" endtime="20201112 12:43:47.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.498" endtime="20201112 12:43:47.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.497" endtime="20201112 12:43:47.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.809" level="INFO">${RESULT} = [{'time': 0.020254319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.481900000000109e-05, 'source_diff': 5.481900000000109e-05}, {'time': 0.020313292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:47.805" endtime="20201112 12:43:47.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.823" level="INFO">${ACCURACY} = {'time': [0.020254319, 0.020313292, 0.020372361, 0.020436306, 0.020496319, 0.020559319, 0.020617319, 0.020675333, 0.020735361, 0.020798361, 0.020860361, 0.020919361, 0.020976361, 0.021040389, 0.021100...</msg>
<status status="PASS" starttime="20201112 12:43:47.810" endtime="20201112 12:43:47.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.828" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.827" endtime="20201112 12:43:47.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.830" level="INFO">VALUE: [5.481900000000109e-05, 5.482000000000056e-05, 5.5193999999997995e-05, 5.505600000000124e-05, 5.4637999999999215e-05, 5.459699999999998e-05, 5.451299999999909e-05, 5.4999999999999494e-05, 5.512499999999962e-05, 5.509700000000048e-05, 5.504200000000167e-05, 5.53610000000003e-05, 5.4708000000000534e-05, 5.483300000000066e-05, 5.540300000000248e-05, 5.458399999999988e-05, 5.5013999999999064e-05, 5.493100000000112e-05, 5.455600000000074e-05, 5.5291999999998453e-05, 5.495900000000026e-05, 5.456900000000084e-05, 5.495900000000026e-05, 5.451400000000203e-05, 5.4777999999998384e-05, 5.5443999999998245e-05, 5.476400000000228e-05, 5.4985999999999924e-05, 5.4763999999998814e-05, 5.459699999999998e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.531899999999812e-05, 5.4485999999999424e-05, 5.4485999999999424e-05, 5.527800000000235e-05, 5.482000000000056e-05, 5.493099999999765e-05, 5.490300000000198e-05, 5.5263999999999314e-05, 5.512499999999962e-05, 5.5027999999998634e-05, 5.50549999999983e-05, 5.459699999999998e-05, 5.537499999999987e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.531899999999812e-05, 5.462499999999912e-05, 5.4513999999998564e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.829" endtime="20201112 12:43:47.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.824" endtime="20201112 12:43:47.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.834" endtime="20201112 12:43:47.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.838" endtime="20201112 12:43:47.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.836" endtime="20201112 12:43:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.832" endtime="20201112 12:43:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.464" endtime="20201112 12:43:47.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.464" endtime="20201112 12:43:47.859"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.867" endtime="20201112 12:43:47.885"></status>
</kw>
<msg timestamp="20201112 12:43:47.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.866" endtime="20201112 12:43:47.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.886" endtime="20201112 12:43:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.889" endtime="20201112 12:43:47.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.863" endtime="20201112 12:43:47.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.861" endtime="20201112 12:43:47.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.899" endtime="20201112 12:43:48.185"></status>
</kw>
<msg timestamp="20201112 12:43:48.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:47.897" endtime="20201112 12:43:48.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:48.190" endtime="20201112 12:43:48.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.198" endtime="20201112 12:43:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.895" endtime="20201112 12:43:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.893" endtime="20201112 12:43:48.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.205" level="INFO">${RESULT} = [{'time': 0.020109, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5707999999998065e-05, 'source_diff': 5.5707999999998065e-05}, {'time': 0.020167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 12:43:48.202" endtime="20201112 12:43:48.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.219" level="INFO">${ACCURACY} = {'time': [0.020109, 0.020167, 0.020230014, 0.020288042, 0.020350028, 0.020413042, 0.020475028, 0.020537056, 0.020599069, 0.020660056, 0.020722069, 0.020783083, 0.020845069, 0.020910083, 0.020975111, 0...</msg>
<status status="PASS" starttime="20201112 12:43:48.206" endtime="20201112 12:43:48.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.223" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.222" endtime="20201112 12:43:48.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.226" level="INFO">VALUE: [5.5707999999998065e-05, 5.5722000000001104e-05, 5.616699999999933e-05, 5.5513999999999564e-05, 5.6235999999997704e-05, 5.645899999999829e-05, 5.5721999999997635e-05, 5.61670000000028e-05, 5.6416000000000105e-05, 5.570900000000101e-05, 5.5750000000000244e-05, 5.6416000000000105e-05, 5.5736000000000674e-05, 5.612500000000062e-05, 5.559700000000098e-05, 5.6444000000002714e-05, 5.63610000000013e-05, 5.612500000000062e-05, 5.556900000000184e-05, 5.581899999999862e-05, 5.6014000000000064e-05, 5.640300000000001e-05, 5.562500000000012e-05, 5.6235999999997704e-05, 5.572300000000058e-05, 5.612500000000062e-05, 5.637500000000087e-05, 5.5665999999999355e-05, 5.6429999999999675e-05, 5.5679999999998925e-05, 5.56809999999984e-05, 5.584700000000123e-05, 5.615299999999976e-05, 5.61809999999989e-05, 5.5472000000000854e-05, 5.5541999999998704e-05, 5.63610000000013e-05, 5.6055999999998773e-05, 5.5541999999998704e-05, 5.61809999999989e-05, 5.587500000000037e-05, 5.6014000000000064e-05, 5.573700000000015e-05, 5.643099999999915e-05, 5.581899999999862e-05, 5.61809999999989e-05, 5.604099999999973e-05, 5.5637999999996746e-05, 5.580499999999905e-05, 5.627700000000041e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.224" endtime="20201112 12:43:48.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.220" endtime="20201112 12:43:48.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.229" endtime="20201112 12:43:48.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.233" endtime="20201112 12:43:48.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.231" endtime="20201112 12:43:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.228" endtime="20201112 12:43:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.860" endtime="20201112 12:43:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.859" endtime="20201112 12:43:48.254"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.263" endtime="20201112 12:43:48.279"></status>
</kw>
<msg timestamp="20201112 12:43:48.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.261" endtime="20201112 12:43:48.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.281" endtime="20201112 12:43:48.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.283" endtime="20201112 12:43:48.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.258" endtime="20201112 12:43:48.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.256" endtime="20201112 12:43:48.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.294" endtime="20201112 12:43:48.581"></status>
</kw>
<msg timestamp="20201112 12:43:48.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.292" endtime="20201112 12:43:48.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.585" endtime="20201112 12:43:48.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.594" endtime="20201112 12:43:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.289" endtime="20201112 12:43:48.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.288" endtime="20201112 12:43:48.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.601" level="INFO">${RESULT} = [{'time': 0.020465569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7221999999999135e-05, 'source_diff': 5.7221999999999135e-05}, {'time': 0.020527583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:48.597" endtime="20201112 12:43:48.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.614" level="INFO">${ACCURACY} = {'time': [0.020465569, 0.020527583, 0.020590583, 0.020654597, 0.020720611, 0.020783611, 0.020845625, 0.020906625, 0.020971694, 0.021034653, 0.021099653, 0.021164681, 0.021229653, 0.021294667, 0.021359...</msg>
<status status="PASS" starttime="20201112 12:43:48.602" endtime="20201112 12:43:48.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.619" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.618" endtime="20201112 12:43:48.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.621" level="INFO">VALUE: [5.7221999999999135e-05, 5.7415999999997636e-05, 5.7151999999997816e-05, 5.6957999999999315e-05, 5.713900000000119e-05, 5.7471999999999385e-05, 5.741700000000058e-05, 5.665300000000026e-05, 5.6916000000000605e-05, 5.669499999999897e-05, 5.659699999999851e-05, 5.711200000000152e-05, 5.6764000000000814e-05, 5.7083999999998913e-05, 5.658399999999841e-05, 5.712500000000162e-05, 5.6693999999999495e-05, 5.7207999999999565e-05, 5.7401999999998066e-05, 5.6916000000000605e-05, 5.708299999999944e-05, 5.715299999999729e-05, 5.688900000000094e-05, 5.7306000000000024e-05, 5.7250000000001744e-05, 5.738900000000144e-05, 5.6750000000001244e-05, 5.734699999999926e-05, 5.665300000000026e-05, 5.693099999999965e-05, 5.663900000000069e-05, 5.6749999999997774e-05, 5.7278000000000884e-05, 5.665300000000026e-05, 5.677699999999744e-05, 5.652700000000066e-05, 5.662500000000112e-05, 5.6986000000001924e-05, 5.684699999999876e-05, 5.730500000000055e-05, 5.711199999999805e-05, 5.712500000000162e-05, 5.6499999999997524e-05, 5.736099999999883e-05, 5.659800000000145e-05, 5.7292000000000454e-05, 5.68610000000018e-05, 5.7069999999999343e-05, 5.713899999999772e-05, 5.6805999999999524e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.620" endtime="20201112 12:43:48.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.615" endtime="20201112 12:43:48.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.625" endtime="20201112 12:43:48.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.628" endtime="20201112 12:43:48.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.627" endtime="20201112 12:43:48.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.623" endtime="20201112 12:43:48.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.255" endtime="20201112 12:43:48.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.254" endtime="20201112 12:43:48.649"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.658" endtime="20201112 12:43:48.675"></status>
</kw>
<msg timestamp="20201112 12:43:48.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.656" endtime="20201112 12:43:48.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.677" endtime="20201112 12:43:48.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.679" endtime="20201112 12:43:48.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.654" endtime="20201112 12:43:48.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.652" endtime="20201112 12:43:48.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.690" endtime="20201112 12:43:48.976"></status>
</kw>
<msg timestamp="20201112 12:43:48.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.688" endtime="20201112 12:43:48.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.980" endtime="20201112 12:43:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.989" endtime="20201112 12:43:48.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.685" endtime="20201112 12:43:48.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.684" endtime="20201112 12:43:48.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.996" level="INFO">${RESULT} = [{'time': 0.020057278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.834700000000026e-05, 'source_diff': 5.834700000000026e-05}, {'time': 0.020123278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:48.992" endtime="20201112 12:43:48.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.009" level="INFO">${ACCURACY} = {'time': [0.020057278, 0.020123278, 0.020186292, 0.020250306, 0.020312306, 0.020375306, 0.020443333, 0.020507333, 0.020572333, 0.020637347, 0.020704347, 0.020770375, 0.020832361, 0.020896375, 0.020961...</msg>
<status status="PASS" starttime="20201112 12:43:48.997" endtime="20201112 12:43:49.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.014" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.013" endtime="20201112 12:43:49.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.016" level="INFO">VALUE: [5.834700000000026e-05, 5.7764000000001814e-05, 5.8292000000001454e-05, 5.78619999999988e-05, 5.765299999999779e-05, 5.769499999999997e-05, 5.8416000000002105e-05, 5.7985999999999455e-05, 5.777700000000191e-05, 5.8028000000001634e-05, 5.80550000000013e-05, 5.8028000000001634e-05, 5.765300000000126e-05, 5.791699999999761e-05, 5.7792000000000954e-05, 5.8235999999999705e-05, 5.812499999999915e-05, 5.7778000000001384e-05, 5.759699999999951e-05, 5.823699999999918e-05, 5.7485999999998955e-05, 5.809700000000001e-05, 5.815299999999829e-05, 5.813899999999872e-05, 5.8137999999999246e-05, 5.812500000000262e-05, 5.7806000000000524e-05, 5.784699999999976e-05, 5.7528000000001134e-05, 5.7721999999999635e-05, 5.7985999999999455e-05, 5.762499999999865e-05, 5.8166000000001855e-05, 5.766700000000083e-05, 5.8305999999997554e-05, 5.8347999999999733e-05, 5.83749999999994e-05, 5.745899999999929e-05, 5.830499999999808e-05, 5.8070000000000344e-05, 5.7985999999999455e-05, 5.75550000000008e-05, 5.811099999999958e-05, 5.841699999999811e-05, 5.8027999999998164e-05, 5.7985999999999455e-05, 5.836099999999983e-05, 5.758300000000341e-05, 5.8292000000001454e-05, 5.7971999999999885e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.015" endtime="20201112 12:43:49.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.010" endtime="20201112 12:43:49.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.020" endtime="20201112 12:43:49.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.024" endtime="20201112 12:43:49.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.022" endtime="20201112 12:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.018" endtime="20201112 12:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.650" endtime="20201112 12:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.650" endtime="20201112 12:43:49.045"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.053" endtime="20201112 12:43:49.070"></status>
</kw>
<msg timestamp="20201112 12:43:49.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.052" endtime="20201112 12:43:49.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.072" endtime="20201112 12:43:49.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.074" endtime="20201112 12:43:49.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.049" endtime="20201112 12:43:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.047" endtime="20201112 12:43:49.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.084" endtime="20201112 12:43:49.371"></status>
</kw>
<msg timestamp="20201112 12:43:49.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020740736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.083" endtime="20201112 12:43:49.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020740736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.375" endtime="20201112 12:43:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.384" endtime="20201112 12:43:49.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.080" endtime="20201112 12:43:49.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.079" endtime="20201112 12:43:49.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.391" level="INFO">${RESULT} = [{'time': 0.020740736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8513999999999095e-05, 'source_diff': 5.8513999999999095e-05}, {'time': 0.020806736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:49.387" endtime="20201112 12:43:49.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.405" level="INFO">${ACCURACY} = {'time': [0.020740736, 0.020806736, 0.02087075, 0.020931833, 0.020992778, 0.021054778, 0.021118847, 0.021185792, 0.021251806, 0.021317806, 0.021382833, 0.021445833, 0.021509819, 0.021577847, 0.0216428...</msg>
<status status="PASS" starttime="20201112 12:43:49.392" endtime="20201112 12:43:49.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.410" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.409" endtime="20201112 12:43:49.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.413" level="INFO">VALUE: [5.8513999999999095e-05, 5.8791999999998484e-05, 5.934700000000126e-05, 5.854099999999876e-05, 5.8736000000000205e-05, 5.8777999999998914e-05, 5.8929999999998706e-05, 5.9000000000000025e-05, 5.9042000000002204e-05, 5.8806000000001524e-05, 5.8708000000001065e-05, 5.863899999999922e-05, 5.933299999999822e-05, 5.890299999999904e-05, 5.8901999999999566e-05, 5.883300000000119e-05, 5.9415999999999636e-05, 5.905499999999883e-05, 5.933299999999822e-05, 5.943100000000215e-05, 5.9000000000000025e-05, 5.888900000000294e-05, 5.9277999999999414e-05, 5.9084000000000914e-05, 5.915299999999929e-05, 5.9027999999999164e-05, 5.8985999999996985e-05, 5.9402000000000066e-05, 5.913899999999972e-05, 5.8957999999997845e-05, 5.9000000000000025e-05, 5.8778000000002384e-05, 5.890299999999904e-05, 5.909700000000101e-05, 5.890299999999904e-05, 5.911100000000058e-05, 5.8500000000002994e-05, 5.8778000000002384e-05, 5.9263999999999845e-05, 5.890299999999904e-05, 5.940300000000301e-05, 5.866699999999836e-05, 5.894500000000122e-05, 5.884699999999729e-05, 5.938899999999997e-05, 5.877700000000291e-05, 5.85550000000018e-05, 5.929100000000298e-05, 5.8736000000000205e-05, 5.8665999999998886e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.411" endtime="20201112 12:43:49.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.406" endtime="20201112 12:43:49.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.416" endtime="20201112 12:43:49.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.420" endtime="20201112 12:43:49.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.418" endtime="20201112 12:43:49.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.414" endtime="20201112 12:43:49.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.046" endtime="20201112 12:43:49.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.045" endtime="20201112 12:43:49.441"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.450" endtime="20201112 12:43:49.467"></status>
</kw>
<msg timestamp="20201112 12:43:49.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.448" endtime="20201112 12:43:49.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.468" endtime="20201112 12:43:49.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.471" endtime="20201112 12:43:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.445" endtime="20201112 12:43:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.443" endtime="20201112 12:43:49.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.481" endtime="20201112 12:43:49.766"></status>
</kw>
<msg timestamp="20201112 12:43:49.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020743056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.480" endtime="20201112 12:43:49.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020743056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.770" endtime="20201112 12:43:49.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.779" endtime="20201112 12:43:49.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.477" endtime="20201112 12:43:49.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.475" endtime="20201112 12:43:49.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.786" level="INFO">${RESULT} = [{'time': 0.020743056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0097999999998014e-05, 'source_diff': 6.0097999999998014e-05}, {'time': 0.020813069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:49.782" endtime="20201112 12:43:49.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.799" level="INFO">${ACCURACY} = {'time': [0.020743056, 0.020813069, 0.020879069, 0.020942125, 0.021010097, 0.021074083, 0.021142097, 0.021206125, 0.021273125, 0.021335125, 0.021399125, 0.021462139, 0.021527153, 0.021592153, 0.021658...</msg>
<status status="PASS" starttime="20201112 12:43:49.787" endtime="20201112 12:43:49.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.804" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.803" endtime="20201112 12:43:49.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.806" level="INFO">VALUE: [6.0097999999998014e-05, 6.0416000000000636e-05, 5.951300000000062e-05, 5.958299999999847e-05, 6.033299999999922e-05, 6.036100000000183e-05, 6.0249999999997805e-05, 5.988900000000047e-05, 5.9708000000002065e-05, 5.9555999999998804e-05, 6.034700000000226e-05, 5.9708000000002065e-05, 5.970900000000154e-05, 6.018099999999943e-05, 6.0249999999997805e-05, 5.9569999999998374e-05, 5.9764000000000345e-05, 5.991699999999961e-05, 5.95689999999989e-05, 5.9971999999998415e-05, 5.963900000000022e-05, 6.033299999999922e-05, 5.980499999999958e-05, 5.990300000000004e-05, 6.0291999999999984e-05, 5.9527999999999665e-05, 6.038900000000097e-05, 5.959699999999804e-05, 5.9527999999999665e-05, 6.047300000000186e-05, 5.9763999999996875e-05, 5.9791999999999484e-05, 5.956900000000237e-05, 5.9527999999999665e-05, 5.9820000000002094e-05, 6.038900000000097e-05, 5.981899999999915e-05, 6.012500000000115e-05, 5.962499999999718e-05, 6.009699999999854e-05, 5.980500000000305e-05, 6.036100000000183e-05, 6.030500000000008e-05, 5.9805999999999054e-05, 5.984700000000176e-05, 6.0014000000000595e-05, 5.9514000000000095e-05, 5.9985999999997985e-05, 5.9528000000003134e-05, 5.9735999999997735e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.805" endtime="20201112 12:43:49.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.800" endtime="20201112 12:43:49.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.810" endtime="20201112 12:43:49.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.813" endtime="20201112 12:43:49.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.812" endtime="20201112 12:43:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.808" endtime="20201112 12:43:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.442" endtime="20201112 12:43:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.441" endtime="20201112 12:43:49.834"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.843" endtime="20201112 12:43:49.861"></status>
</kw>
<msg timestamp="20201112 12:43:49.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.842" endtime="20201112 12:43:49.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.863" endtime="20201112 12:43:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.865" endtime="20201112 12:43:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.839" endtime="20201112 12:43:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.837" endtime="20201112 12:43:49.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.875" endtime="20201112 12:43:50.161"></status>
</kw>
<msg timestamp="20201112 12:43:50.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.874" endtime="20201112 12:43:50.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021132236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.166" endtime="20201112 12:43:50.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.174" endtime="20201112 12:43:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.871" endtime="20201112 12:43:50.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.869" endtime="20201112 12:43:50.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.181" level="INFO">${RESULT} = [{'time': 0.021132236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.115299999999782e-05, 'source_diff': 6.115299999999782e-05}, {'time': 0.021202222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:50.178" endtime="20201112 12:43:50.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.195" level="INFO">${ACCURACY} = {'time': [0.021132236, 0.021202222, 0.02127025, 0.021336236, 0.021399264, 0.021468264, 0.021536264, 0.021604264, 0.021674278, 0.021743292, 0.021811292, 0.021879319, 0.021946347, 0.022009319, 0.0220763...</msg>
<status status="PASS" starttime="20201112 12:43:50.182" endtime="20201112 12:43:50.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.200" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.199" endtime="20201112 12:43:50.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.202" level="INFO">VALUE: [6.115299999999782e-05, 6.058299999999947e-05, 6.0722000000002635e-05, 6.0694000000000026e-05, 6.0555999999999804e-05, 6.0542000000000235e-05, 6.0485999999998485e-05, 6.0472000000002385e-05, 6.0820000000003094e-05, 6.1000000000002025e-05, 6.072299999999864e-05, 6.05689999999999e-05, 6.14300000000012e-05, 6.0430000000000206e-05, 6.0666000000000886e-05, 6.0957999999999846e-05, 6.113899999999825e-05, 6.0721999999999166e-05, 6.118100000000043e-05, 6.1013999999998125e-05, 6.145800000000035e-05, 6.065299999999732e-05, 6.106999999999987e-05, 6.112500000000215e-05, 6.088900000000147e-05, 6.0972000000002885e-05, 6.0820000000003094e-05, 6.0763999999997875e-05, 6.12499999999988e-05, 6.055500000000033e-05, 6.0902000000001566e-05, 6.0651999999997847e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.0471999999998916e-05, 6.0806000000000054e-05, 6.0527999999997195e-05, 6.115300000000129e-05, 6.137499999999893e-05, 6.109699999999954e-05, 6.0888999999998e-05, 6.090300000000104e-05, 6.0847999999998764e-05, 6.0542000000000235e-05, 6.111199999999858e-05, 6.076300000000187e-05, 6.062499999999818e-05, 6.0694000000000026e-05, 6.063899999999775e-05, 6.129099999999804e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.201" endtime="20201112 12:43:50.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.196" endtime="20201112 12:43:50.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.206" endtime="20201112 12:43:50.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.209" endtime="20201112 12:43:50.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.208" endtime="20201112 12:43:50.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.204" endtime="20201112 12:43:50.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.835" endtime="20201112 12:43:50.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.835" endtime="20201112 12:43:50.230"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.239" endtime="20201112 12:43:50.257"></status>
</kw>
<msg timestamp="20201112 12:43:50.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.237" endtime="20201112 12:43:50.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.258" endtime="20201112 12:43:50.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.261" endtime="20201112 12:43:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.235" endtime="20201112 12:43:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.233" endtime="20201112 12:43:50.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.271" endtime="20201112 12:43:50.557"></status>
</kw>
<msg timestamp="20201112 12:43:50.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:50.270" endtime="20201112 12:43:50.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:50.562" endtime="20201112 12:43:50.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.571" endtime="20201112 12:43:50.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.267" endtime="20201112 12:43:50.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.265" endtime="20201112 12:43:50.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.578" level="INFO">${RESULT} = [{'time': 0.02005825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.186099999999986e-05, 'source_diff': 6.186099999999986e-05}, {'time': 0.020127264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:50.574" endtime="20201112 12:43:50.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.591" level="INFO">${ACCURACY} = {'time': [0.02005825, 0.020127264, 0.02019225, 0.020259278, 0.020324264, 0.020390292, 0.020455292, 0.020523292, 0.020589292, 0.020657361, 0.020724306, 0.020788333, 0.020854319, 0.020923333, 0.02099034...</msg>
<status status="PASS" starttime="20201112 12:43:50.579" endtime="20201112 12:43:50.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.596" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.595" endtime="20201112 12:43:50.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.599" level="INFO">VALUE: [6.186099999999986e-05, 6.173599999999974e-05, 6.223599999999677e-05, 6.212499999999968e-05, 6.17360000000032e-05, 6.18340000000002e-05, 6.207000000000087e-05, 6.198599999999999e-05, 6.15699999999969e-05, 6.17080000000006e-05, 6.18620000000028e-05, 6.144400000000078e-05, 6.163799999999928e-05, 6.19439999999978e-05, 6.19439999999978e-05, 6.204199999999827e-05, 6.219399999999806e-05, 6.216700000000186e-05, 6.176399999999888e-05, 6.204200000000173e-05, 6.234700000000079e-05, 6.247199999999745e-05, 6.184700000000029e-05, 6.198699999999946e-05, 6.158399999999994e-05, 6.229199999999852e-05, 6.219499999999753e-05, 6.247200000000092e-05, 6.154100000000176e-05, 6.234699999999732e-05, 6.236100000000036e-05, 6.194400000000128e-05, 6.204199999999827e-05, 6.172200000000017e-05, 6.163900000000222e-05, 6.199999999999956e-05, 6.15279999999982e-05, 6.1888999999999e-05, 6.19300000000017e-05, 6.188900000000247e-05, 6.172300000000311e-05, 6.243100000000168e-05, 6.158399999999994e-05, 6.173599999999974e-05, 6.236100000000036e-05, 6.17499999999993e-05, 6.181900000000115e-05, 6.215299999999882e-05, 6.184700000000029e-05, 6.240300000000254e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.597" endtime="20201112 12:43:50.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.592" endtime="20201112 12:43:50.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.602" endtime="20201112 12:43:50.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.606" endtime="20201112 12:43:50.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.604" endtime="20201112 12:43:50.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.601" endtime="20201112 12:43:50.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.231" endtime="20201112 12:43:50.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.231" endtime="20201112 12:43:50.627"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.636" endtime="20201112 12:43:50.652"></status>
</kw>
<msg timestamp="20201112 12:43:50.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.634" endtime="20201112 12:43:50.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.654" endtime="20201112 12:43:50.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.656" endtime="20201112 12:43:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.631" endtime="20201112 12:43:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.629" endtime="20201112 12:43:50.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.666" endtime="20201112 12:43:50.953"></status>
</kw>
<msg timestamp="20201112 12:43:50.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.665" endtime="20201112 12:43:50.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.957" endtime="20201112 12:43:50.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.966" endtime="20201112 12:43:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.662" endtime="20201112 12:43:50.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.660" endtime="20201112 12:43:50.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.973" level="INFO">${RESULT} = [{'time': 0.020167944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259700000000104e-05, 'source_diff': 6.259700000000104e-05}, {'time': 0.020238958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:50.969" endtime="20201112 12:43:50.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.987" level="INFO">${ACCURACY} = {'time': [0.020167944, 0.020238958, 0.020306972, 0.020372972, 0.020440986, 0.020514014, 0.020579, 0.020645, 0.020714028, 0.020785014, 0.020850028, 0.020922028, 0.020994056, 0.021060056, 0.021132069, 0...</msg>
<status status="PASS" starttime="20201112 12:43:50.973" endtime="20201112 12:43:50.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.992" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.990" endtime="20201112 12:43:50.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.994" level="INFO">VALUE: [6.259700000000104e-05, 6.301400000000013e-05, 6.286100000000086e-05, 6.32219999999982e-05, 6.311100000000111e-05, 6.336100000000136e-05, 6.279199999999902e-05, 6.30829999999985e-05, 6.298599999999752e-05, 6.332000000000212e-05, 6.255599999999834e-05, 6.30699999999984e-05, 6.28340000000012e-05, 6.323700000000071e-05, 6.306899999999893e-05, 6.298600000000099e-05, 6.247200000000092e-05, 6.283300000000172e-05, 6.27080000000016e-05, 6.32500000000008e-05, 6.304199999999927e-05, 6.287500000000043e-05, 6.309699999999807e-05, 6.2889e-05, 6.347199999999845e-05, 6.309699999999807e-05, 6.326400000000038e-05, 6.28479999999973e-05, 6.309800000000101e-05, 6.30560000000023e-05, 6.259800000000051e-05, 6.251300000000015e-05, 6.27080000000016e-05, 6.292999999999924e-05, 6.265299999999932e-05, 6.276399999999988e-05, 6.279199999999902e-05, 6.342999999999974e-05, 6.273600000000074e-05, 6.290299999999957e-05, 6.336099999999789e-05, 6.273600000000074e-05, 6.347300000000139e-05, 6.282000000000162e-05, 6.259800000000051e-05, 6.309800000000101e-05, 6.276299999999693e-05, 6.30829999999985e-05, 6.30279999999997e-05, 6.248599999999702e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.993" endtime="20201112 12:43:50.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.988" endtime="20201112 12:43:50.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.998" endtime="20201112 12:43:50.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.001" endtime="20201112 12:43:51.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.000" endtime="20201112 12:43:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.996" endtime="20201112 12:43:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.628" endtime="20201112 12:43:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.627" endtime="20201112 12:43:51.022"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.031" endtime="20201112 12:43:51.049"></status>
</kw>
<msg timestamp="20201112 12:43:51.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.030" endtime="20201112 12:43:51.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.051" endtime="20201112 12:43:51.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.053" endtime="20201112 12:43:51.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.027" endtime="20201112 12:43:51.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.025" endtime="20201112 12:43:51.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.063" endtime="20201112 12:43:51.349"></status>
</kw>
<msg timestamp="20201112 12:43:51.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.062" endtime="20201112 12:43:51.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.353" endtime="20201112 12:43:51.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.362" endtime="20201112 12:43:51.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.059" endtime="20201112 12:43:51.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.058" endtime="20201112 12:43:51.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.369" level="INFO">${RESULT} = [{'time': 0.021074208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.348600000000149e-05, 'source_diff': 6.348600000000149e-05}, {'time': 0.021144208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:51.365" endtime="20201112 12:43:51.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:51.382" level="INFO">${ACCURACY} = {'time': [0.021074208, 0.021144208, 0.021216222, 0.021284222, 0.02135425, 0.021422264, 0.02149325, 0.021561264, 0.021634278, 0.021705278, 0.021774292, 0.021844292, 0.021911306, 0.021984306, 0.02205233...</msg>
<status status="PASS" starttime="20201112 12:43:51.370" endtime="20201112 12:43:51.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.387" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:51.386" endtime="20201112 12:43:51.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.389" level="INFO">VALUE: [6.348600000000149e-05, 6.445799999999988e-05, 6.424999999999834e-05, 6.429099999999757e-05, 6.376400000000088e-05, 6.390300000000057e-05, 6.39439999999998e-05, 6.381999999999916e-05, 6.430600000000009e-05, 6.379200000000002e-05, 6.441700000000064e-05, 6.422300000000214e-05, 6.377799999999698e-05, 6.358399999999848e-05, 6.366600000000042e-05, 6.358300000000247e-05, 6.372200000000217e-05, 6.370799999999913e-05, 6.355499999999986e-05, 6.361099999999814e-05, 6.391700000000014e-05, 6.391700000000014e-05, 6.35560000000028e-05, 6.436099999999889e-05, 6.366699999999989e-05, 6.384699999999882e-05, 6.366699999999989e-05, 6.413899999999778e-05, 6.438899999999803e-05, 6.42630000000019e-05, 6.348599999999802e-05, 6.434699999999932e-05, 6.37500000000013e-05, 6.381899999999968e-05, 6.423600000000224e-05, 6.3582999999999e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.423600000000224e-05, 6.370900000000207e-05, 6.348599999999802e-05, 6.405599999999984e-05, 6.36950000000025e-05, 6.382000000000262e-05, 6.433299999999975e-05, 6.42500000000018e-05, 6.402699999999775e-05, 6.398599999999852e-05, 6.441600000000117e-05, 6.362499999999771e-05]</msg>
<status status="PASS" starttime="20201112 12:43:51.388" endtime="20201112 12:43:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.383" endtime="20201112 12:43:51.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.393" endtime="20201112 12:43:51.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.397" endtime="20201112 12:43:51.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.395" endtime="20201112 12:43:51.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.391" endtime="20201112 12:43:51.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.023" endtime="20201112 12:43:51.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.023" endtime="20201112 12:43:51.418"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.426" endtime="20201112 12:43:51.445"></status>
</kw>
<msg timestamp="20201112 12:43:51.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.425" endtime="20201112 12:43:51.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.446" endtime="20201112 12:43:51.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.449" endtime="20201112 12:43:51.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.422" endtime="20201112 12:43:51.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.420" endtime="20201112 12:43:51.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.459" endtime="20201112 12:43:51.745"></status>
</kw>
<msg timestamp="20201112 12:43:51.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:51.458" endtime="20201112 12:43:51.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:51.749" endtime="20201112 12:43:51.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.758" endtime="20201112 12:43:51.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.455" endtime="20201112 12:43:51.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.453" endtime="20201112 12:43:51.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.765" level="INFO">${RESULT} = [{'time': 0.020068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.473599999999927e-05, 'source_diff': 6.473599999999927e-05}, {'time': 0.02014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.51...</msg>
<status status="PASS" starttime="20201112 12:43:51.761" endtime="20201112 12:43:51.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:51.778" level="INFO">${ACCURACY} = {'time': [0.020068, 0.02014, 0.020211014, 0.020284014, 0.020353028, 0.020423028, 0.020495056, 0.020563056, 0.020635056, 0.020705069, 0.020779083, 0.020850083, 0.020922097, 0.020989097, 0.021059153, 0....</msg>
<status status="PASS" starttime="20201112 12:43:51.766" endtime="20201112 12:43:51.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.783" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:51.782" endtime="20201112 12:43:51.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.785" level="INFO">VALUE: [6.473599999999927e-05, 6.519400000000106e-05, 6.544500000000078e-05, 6.532000000000066e-05, 6.508399999999998e-05, 6.462499999999871e-05, 6.473700000000221e-05, 6.498699999999899e-05, 6.543099999999774e-05, 6.470800000000013e-05, 6.506900000000093e-05, 6.494399999999734e-05, 6.47219999999997e-05, 6.454100000000129e-05, 6.52090000000001e-05, 6.526400000000238e-05, 6.477800000000145e-05, 6.54029999999986e-05, 6.480600000000059e-05, 6.534700000000032e-05, 6.466700000000089e-05, 6.48479999999993e-05, 6.515299999999835e-05, 6.53890000000025e-05, 6.49029999999981e-05, 6.481899999999721e-05, 6.465199999999838e-05, 6.49440000000008e-05, 6.537499999999946e-05, 6.452799999999773e-05, 6.448599999999902e-05, 6.461099999999914e-05, 6.52220000000002e-05, 6.486099999999939e-05, 6.470800000000013e-05, 6.474999999999884e-05, 6.50700000000004e-05, 6.465299999999785e-05, 6.498699999999899e-05, 6.47219999999997e-05, 6.484699999999982e-05, 6.534700000000032e-05, 6.4583e-05, 6.477799999999798e-05, 6.504200000000127e-05, 6.469400000000056e-05, 6.455500000000086e-05, 6.47500000000023e-05, 6.537499999999946e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201112 12:43:51.784" endtime="20201112 12:43:51.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.779" endtime="20201112 12:43:51.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.793" endtime="20201112 12:43:51.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.797" endtime="20201112 12:43:51.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.795" endtime="20201112 12:43:51.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.791" endtime="20201112 12:43:51.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.419" endtime="20201112 12:43:51.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.418" endtime="20201112 12:43:51.818"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.826" endtime="20201112 12:43:51.844"></status>
</kw>
<msg timestamp="20201112 12:43:51.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.825" endtime="20201112 12:43:51.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.845" endtime="20201112 12:43:51.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.848" endtime="20201112 12:43:51.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.822" endtime="20201112 12:43:51.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.820" endtime="20201112 12:43:51.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.858" endtime="20201112 12:43:52.144"></status>
</kw>
<msg timestamp="20201112 12:43:52.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020765319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.857" endtime="20201112 12:43:52.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020765319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.149" endtime="20201112 12:43:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.158" endtime="20201112 12:43:52.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.854" endtime="20201112 12:43:52.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.852" endtime="20201112 12:43:52.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.164" level="INFO">${RESULT} = [{'time': 0.020831194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.587499999999996e-05, 'source_diff': 6.587499999999996e-05}, {'time': 0.020902208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:52.161" endtime="20201112 12:43:52.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.178" level="INFO">${ACCURACY} = {'time': [0.020831194, 0.020902208, 0.020973208, 0.021044236, 0.021114222, 0.021183236, 0.021252236, 0.021327264, 0.021397264, 0.021468319, 0.021540278, 0.021610278, 0.021679292, 0.021754306, 0.021826...</msg>
<status status="PASS" starttime="20201112 12:43:52.165" endtime="20201112 12:43:52.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.182" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.181" endtime="20201112 12:43:52.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.185" level="INFO">VALUE: [6.587499999999996e-05, 6.64159999999997e-05, 6.586100000000039e-05, 6.636100000000089e-05, 6.629099999999957e-05, 6.601399999999966e-05, 6.55280000000022e-05, 6.588899999999953e-05, 6.630599999999862e-05, 6.638800000000056e-05, 6.62090000000011e-05, 6.55700000000009e-05, 6.561100000000014e-05, 6.558400000000048e-05, 6.59029999999991e-05, 6.606899999999846e-05, 6.545799999999741e-05, 6.552699999999925e-05, 6.579099999999907e-05, 6.625000000000034e-05, 6.593000000000224e-05, 6.555500000000186e-05, 6.637500000000046e-05, 6.556899999999796e-05, 6.629199999999905e-05, 6.562499999999971e-05, 6.643000000000274e-05, 6.615300000000282e-05, 6.63480000000008e-05, 6.612500000000021e-05, 6.640200000000013e-05, 6.637500000000046e-05, 6.597199999999748e-05, 6.64159999999997e-05, 6.636099999999742e-05, 6.570800000000113e-05, 6.625000000000034e-05, 6.577800000000245e-05, 6.586100000000039e-05, 6.609700000000107e-05, 6.588899999999953e-05, 6.591700000000214e-05, 6.641699999999917e-05, 6.597300000000042e-05, 6.63480000000008e-05, 6.634700000000132e-05, 6.612500000000021e-05, 6.629099999999957e-05, 6.631999999999819e-05, 6.60419999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.184" endtime="20201112 12:43:52.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.179" endtime="20201112 12:43:52.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.189" endtime="20201112 12:43:52.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.192" endtime="20201112 12:43:52.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.191" endtime="20201112 12:43:52.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.187" endtime="20201112 12:43:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.819" endtime="20201112 12:43:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.818" endtime="20201112 12:43:52.213"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.222" endtime="20201112 12:43:52.240"></status>
</kw>
<msg timestamp="20201112 12:43:52.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.220" endtime="20201112 12:43:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.241" endtime="20201112 12:43:52.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.244" endtime="20201112 12:43:52.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.218" endtime="20201112 12:43:52.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.216" endtime="20201112 12:43:52.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.254" endtime="20201112 12:43:52.540"></status>
</kw>
<msg timestamp="20201112 12:43:52.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020124625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.253" endtime="20201112 12:43:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020124625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.544" endtime="20201112 12:43:52.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.553" endtime="20201112 12:43:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.250" endtime="20201112 12:43:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.248" endtime="20201112 12:43:52.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.560" level="INFO">${RESULT} = [{'time': 0.020124625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745799999999941e-05, 'source_diff': 6.745799999999941e-05}, {'time': 0.020198667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:52.556" endtime="20201112 12:43:52.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.574" level="INFO">${ACCURACY} = {'time': [0.020124625, 0.020198667, 0.020273667, 0.020347667, 0.020422681, 0.020496681, 0.020566708, 0.020637694, 0.020711694, 0.020787708, 0.020859722, 0.020933722, 0.021003806, 0.021076736, 0.021151...</msg>
<status status="PASS" starttime="20201112 12:43:52.560" endtime="20201112 12:43:52.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.579" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.578" endtime="20201112 12:43:52.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.581" level="INFO">VALUE: [6.745799999999941e-05, 6.651400000000016e-05, 6.684799999999783e-05, 6.679199999999955e-05, 6.686200000000087e-05, 6.702800000000023e-05, 6.733299999999928e-05, 6.730500000000014e-05, 6.701299999999771e-05, 6.687499999999749e-05, 6.670800000000213e-05, 6.719399999999959e-05, 6.68480000000013e-05, 6.697199999999848e-05, 6.65419999999993e-05, 6.736099999999842e-05, 6.659700000000157e-05, 6.693099999999924e-05, 6.659799999999758e-05, 6.675000000000084e-05, 6.706999999999894e-05, 6.74030000000006e-05, 6.72220000000022e-05, 6.652700000000025e-05, 6.72640000000009e-05, 6.673600000000127e-05, 6.711099999999817e-05, 6.725000000000134e-05, 6.683299999999878e-05, 6.65419999999993e-05, 6.679200000000302e-05, 6.665299999999985e-05, 6.72090000000021e-05, 6.681999999999869e-05, 6.677799999999998e-05, 6.680599999999912e-05, 6.711099999999817e-05, 6.692999999999977e-05, 6.683299999999878e-05, 6.722199999999873e-05, 6.679100000000007e-05, 6.650000000000059e-05, 6.716699999999992e-05, 6.737500000000146e-05, 6.715300000000035e-05, 6.734700000000232e-05, 6.65419999999993e-05, 6.694499999999881e-05, 6.648600000000102e-05, 6.705599999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.580" endtime="20201112 12:43:52.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.575" endtime="20201112 12:43:52.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.585" endtime="20201112 12:43:52.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.589" endtime="20201112 12:43:52.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.588" endtime="20201112 12:43:52.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.584" endtime="20201112 12:43:52.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.214" endtime="20201112 12:43:52.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.213" endtime="20201112 12:43:52.611"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.619" endtime="20201112 12:43:52.637"></status>
</kw>
<msg timestamp="20201112 12:43:52.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.618" endtime="20201112 12:43:52.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.639" endtime="20201112 12:43:52.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.641" endtime="20201112 12:43:52.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.615" endtime="20201112 12:43:52.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.613" endtime="20201112 12:43:52.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.652" endtime="20201112 12:43:52.938"></status>
</kw>
<msg timestamp="20201112 12:43:52.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.650" endtime="20201112 12:43:52.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.942" endtime="20201112 12:43:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.951" endtime="20201112 12:43:52.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.648" endtime="20201112 12:43:52.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.646" endtime="20201112 12:43:52.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.958" level="INFO">${RESULT} = [{'time': 0.020862764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.748599999999855e-05, 'source_diff': 6.748599999999855e-05}, {'time': 0.020939778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:52.954" endtime="20201112 12:43:52.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.971" level="INFO">${ACCURACY} = {'time': [0.020862764, 0.020939778, 0.021015792, 0.021088806, 0.021162819, 0.021232806, 0.021308819, 0.021384847, 0.021459833, 0.021532847, 0.021607861, 0.021680861, 0.021757875, 0.021834889, 0.021911...</msg>
<status status="PASS" starttime="20201112 12:43:52.959" endtime="20201112 12:43:52.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.976" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.975" endtime="20201112 12:43:52.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.979" level="INFO">VALUE: [6.748599999999855e-05, 6.779200000000055e-05, 6.777799999999751e-05, 6.793100000000024e-05, 6.847199999999998e-05, 6.779200000000055e-05, 6.824999999999887e-05, 6.80969999999996e-05, 6.82640000000019e-05, 6.834699999999985e-05, 6.816699999999745e-05, 6.786099999999892e-05, 6.829200000000105e-05, 6.812499999999874e-05, 6.837499999999899e-05, 6.763899999999781e-05, 6.783399999999926e-05, 6.772300000000217e-05, 6.788900000000153e-05, 6.845899999999988e-05, 6.756899999999996e-05, 6.784699999999935e-05, 6.787499999999849e-05, 6.774999999999837e-05, 6.754100000000082e-05, 6.845899999999988e-05, 6.847199999999998e-05, 6.770799999999966e-05, 6.755600000000334e-05, 6.836099999999942e-05, 6.793100000000024e-05, 6.822199999999973e-05, 6.772300000000217e-05, 6.805600000000037e-05, 6.773699999999827e-05, 6.765199999999791e-05, 6.784699999999935e-05, 6.754100000000082e-05, 6.795799999999991e-05, 6.77359999999988e-05, 6.834699999999985e-05, 6.824999999999887e-05, 6.837499999999899e-05, 6.780600000000012e-05, 6.811099999999917e-05, 6.755599999999987e-05, 6.826399999999844e-05, 6.799999999999862e-05, 6.749999999999812e-05, 6.84169999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.977" endtime="20201112 12:43:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.972" endtime="20201112 12:43:52.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.982" endtime="20201112 12:43:52.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.986" endtime="20201112 12:43:53.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.984" endtime="20201112 12:43:53.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.981" endtime="20201112 12:43:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.612" endtime="20201112 12:43:53.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.611" endtime="20201112 12:43:53.007"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.016" endtime="20201112 12:43:53.034"></status>
</kw>
<msg timestamp="20201112 12:43:53.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.014" endtime="20201112 12:43:53.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.036" endtime="20201112 12:43:53.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.038" endtime="20201112 12:43:53.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.012" endtime="20201112 12:43:53.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.009" endtime="20201112 12:43:53.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.048" endtime="20201112 12:43:53.334"></status>
</kw>
<msg timestamp="20201112 12:43:53.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.047" endtime="20201112 12:43:53.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.338" endtime="20201112 12:43:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.347" endtime="20201112 12:43:53.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.044" endtime="20201112 12:43:53.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.042" endtime="20201112 12:43:53.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.354" level="INFO">${RESULT} = [{'time': 0.020476125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.922200000000073e-05, 'source_diff': 6.922200000000073e-05}, {'time': 0.020555125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:53.350" endtime="20201112 12:43:53.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.367" level="INFO">${ACCURACY} = {'time': [0.020476125, 0.020555125, 0.020632139, 0.020709153, 0.020785153, 0.020860222, 0.020936181, 0.021013181, 0.021085208, 0.021161194, 0.021238208, 0.021311222, 0.021390236, 0.02146725, 0.0215422...</msg>
<status status="PASS" starttime="20201112 12:43:53.355" endtime="20201112 12:43:53.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.372" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.371" endtime="20201112 12:43:53.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.375" level="INFO">VALUE: [6.922200000000073e-05, 6.933300000000128e-05, 6.908300000000103e-05, 6.924999999999987e-05, 6.919500000000106e-05, 6.856900000000096e-05, 6.844500000000031e-05, 6.899999999999962e-05, 6.90970000000006e-05, 6.901299999999971e-05, 6.900000000000309e-05, 6.863900000000228e-05, 6.94169999999987e-05, 6.879200000000155e-05, 6.922200000000073e-05, 6.877800000000198e-05, 6.913900000000278e-05, 6.926399999999944e-05, 6.858299999999706e-05, 6.907000000000094e-05, 6.927799999999901e-05, 6.92360000000003e-05, 6.92909999999991e-05, 6.891599999999873e-05, 6.901399999999919e-05, 6.940299999999913e-05, 6.930499999999867e-05, 6.938900000000303e-05, 6.884700000000035e-05, 6.913899999999931e-05, 6.908300000000103e-05, 6.929200000000205e-05, 6.88619999999994e-05, 6.901399999999919e-05, 6.90420000000018e-05, 6.866700000000142e-05, 6.85970000000001e-05, 6.883299999999731e-05, 6.916599999999898e-05, 6.866600000000195e-05, 6.945799999999794e-05, 6.936100000000042e-05, 6.847199999999998e-05, 6.8584e-05, 6.858300000000053e-05, 6.937499999999999e-05, 6.852799999999826e-05, 6.938900000000303e-05, 6.893099999999777e-05, 6.861099999999967e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.373" endtime="20201112 12:43:53.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.368" endtime="20201112 12:43:53.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.378" endtime="20201112 12:43:53.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.382" endtime="20201112 12:43:53.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.380" endtime="20201112 12:43:53.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.377" endtime="20201112 12:43:53.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.008" endtime="20201112 12:43:53.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.007" endtime="20201112 12:43:53.403"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.411" endtime="20201112 12:43:53.429"></status>
</kw>
<msg timestamp="20201112 12:43:53.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.410" endtime="20201112 12:43:53.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.431" endtime="20201112 12:43:53.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.433" endtime="20201112 12:43:53.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.407" endtime="20201112 12:43:53.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.405" endtime="20201112 12:43:53.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.443" endtime="20201112 12:43:53.730"></status>
</kw>
<msg timestamp="20201112 12:43:53.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02098025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:53.442" endtime="20201112 12:43:53.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02098025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:53.734" endtime="20201112 12:43:53.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.743" endtime="20201112 12:43:53.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.439" endtime="20201112 12:43:53.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.437" endtime="20201112 12:43:53.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.750" level="INFO">${RESULT} = [{'time': 0.02098025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.977799999999951e-05, 'source_diff': 6.977799999999951e-05}, {'time': 0.021057222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:53.746" endtime="20201112 12:43:53.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.763" level="INFO">${ACCURACY} = {'time': [0.02098025, 0.021057222, 0.021136222, 0.021209236, 0.021281236, 0.021360264, 0.021436264, 0.021512264, 0.021589278, 0.021663278, 0.021737292, 0.021815306, 0.021890306, 0.021964333, 0.0220403...</msg>
<status status="PASS" starttime="20201112 12:43:53.751" endtime="20201112 12:43:53.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.768" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.767" endtime="20201112 12:43:53.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.771" level="INFO">VALUE: [6.977799999999951e-05, 6.950000000000012e-05, 7.012500000000074e-05, 6.984699999999788e-05, 6.955499999999892e-05, 6.980599999999865e-05, 6.97360000000008e-05, 6.950000000000012e-05, 7.002799999999976e-05, 6.987500000000049e-05, 7.029199999999958e-05, 7.02230000000012e-05, 7.033399999999829e-05, 7.013900000000031e-05, 7.040199999999719e-05, 7.037499999999752e-05, 6.981899999999874e-05, 7.030499999999967e-05, 6.956900000000196e-05, 7.015299999999988e-05, 7.001400000000019e-05, 7.040300000000013e-05, 6.993099999999877e-05, 6.959800000000058e-05, 6.955600000000187e-05, 7.016699999999945e-05, 7.013800000000084e-05, 6.970800000000166e-05, 7.015299999999988e-05, 6.950000000000012e-05, 7.019400000000259e-05, 6.97499999999969e-05, 7.030499999999967e-05, 6.958299999999806e-05, 7.029199999999958e-05, 7.004199999999933e-05, 7.011100000000117e-05, 7.033400000000176e-05, 6.97360000000008e-05, 7.002799999999976e-05, 7.02230000000012e-05, 7.02369999999973e-05, 7.045799999999894e-05, 6.977700000000003e-05, 6.977700000000003e-05, 7.006899999999899e-05, 6.98620000000004e-05, 7.019399999999912e-05, 7.027800000000001e-05, 7.030599999999915e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.769" endtime="20201112 12:43:53.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.764" endtime="20201112 12:43:53.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.774" endtime="20201112 12:43:53.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.778" endtime="20201112 12:43:53.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.776" endtime="20201112 12:43:53.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.773" endtime="20201112 12:43:53.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.404" endtime="20201112 12:43:53.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.403" endtime="20201112 12:43:53.799"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.808" endtime="20201112 12:43:53.826"></status>
</kw>
<msg timestamp="20201112 12:43:53.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.807" endtime="20201112 12:43:53.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.828" endtime="20201112 12:43:53.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.830" endtime="20201112 12:43:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.804" endtime="20201112 12:43:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.802" endtime="20201112 12:43:53.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.840" endtime="20201112 12:43:54.127"></status>
</kw>
<msg timestamp="20201112 12:43:54.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021085542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.839" endtime="20201112 12:43:54.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021085542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.131" endtime="20201112 12:43:54.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.140" endtime="20201112 12:43:54.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.836" endtime="20201112 12:43:54.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.834" endtime="20201112 12:43:54.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.147" level="INFO">${RESULT} = [{'time': 0.021156444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.090200000000116e-05, 'source_diff': 7.090200000000116e-05}, {'time': 0.021230444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:54.143" endtime="20201112 12:43:54.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:54.161" level="INFO">${ACCURACY} = {'time': [0.021156444, 0.021230444, 0.021307458, 0.021385458, 0.021464486, 0.021538486, 0.021614486, 0.0216885, 0.021764556, 0.021844514, 0.021920542, 0.022001542, 0.022082542, 0.022156556, 0.02223155...</msg>
<status status="PASS" starttime="20201112 12:43:54.148" endtime="20201112 12:43:54.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.166" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:54.165" endtime="20201112 12:43:54.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.168" level="INFO">VALUE: [7.090200000000116e-05, 7.131900000000024e-05, 7.066600000000048e-05, 7.07910000000006e-05, 7.10970000000026e-05, 7.077800000000051e-05, 7.09300000000003e-05, 7.12499999999984e-05, 7.12230000000022e-05, 7.058299999999906e-05, 7.063900000000081e-05, 7.140299999999766e-05, 7.138900000000156e-05, 7.123700000000177e-05, 7.104200000000033e-05, 7.09300000000003e-05, 7.049999999999765e-05, 7.147199999999951e-05, 7.07910000000006e-05, 7.069499999999909e-05, 7.077799999999704e-05, 7.1069e-05, 7.094499999999934e-05, 7.112499999999827e-05, 7.133399999999929e-05, 7.07360000000018e-05, 7.084799999999836e-05, 7.087500000000149e-05, 7.056900000000296e-05, 7.065200000000091e-05, 7.118000000000055e-05, 7.133299999999981e-05, 7.090299999999716e-05, 7.076399999999747e-05, 7.058299999999906e-05, 7.077800000000051e-05, 7.10559999999999e-05, 7.14170000000007e-05, 7.083299999999931e-05, 7.062499999999777e-05, 7.125000000000187e-05, 7.084800000000183e-05, 7.113799999999837e-05, 7.065200000000091e-05, 7.075000000000137e-05, 7.077700000000103e-05, 7.133299999999981e-05, 7.080500000000017e-05, 7.059699999999863e-05, 7.086099999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:43:54.167" endtime="20201112 12:43:54.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.162" endtime="20201112 12:43:54.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.172" endtime="20201112 12:43:54.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.176" endtime="20201112 12:43:54.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.174" endtime="20201112 12:43:54.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.171" endtime="20201112 12:43:54.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.800" endtime="20201112 12:43:54.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.800" endtime="20201112 12:43:54.197"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.206" endtime="20201112 12:43:54.223"></status>
</kw>
<msg timestamp="20201112 12:43:54.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.204" endtime="20201112 12:43:54.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.225" endtime="20201112 12:43:54.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.227" endtime="20201112 12:43:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.201" endtime="20201112 12:43:54.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.199" endtime="20201112 12:43:54.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.238" endtime="20201112 12:43:54.524"></status>
</kw>
<msg timestamp="20201112 12:43:54.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.236" endtime="20201112 12:43:54.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.529" endtime="20201112 12:43:54.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.537" endtime="20201112 12:43:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.234" endtime="20201112 12:43:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.232" endtime="20201112 12:43:54.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.544" level="INFO">${RESULT} = [{'time': 0.021060403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.188899999999859e-05, 'source_diff': 7.188899999999859e-05}, {'time': 0.021136417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:54.541" endtime="20201112 12:43:54.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:54.558" level="INFO">${ACCURACY} = {'time': [0.021060403, 0.021136417, 0.021210417, 0.021287431, 0.021362444, 0.021442486, 0.021519458, 0.021600472, 0.021680486, 0.021756486, 0.0218325, 0.0219085, 0.021987528, 0.022067514, 0.022144542,...</msg>
<status status="PASS" starttime="20201112 12:43:54.545" endtime="20201112 12:43:54.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.562" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:54.561" endtime="20201112 12:43:54.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.565" level="INFO">VALUE: [7.188899999999859e-05, 7.165300000000138e-05, 7.148599999999908e-05, 7.162499999999877e-05, 7.2069000000001e-05, 7.155500000000092e-05, 7.241600000000223e-05, 7.165299999999791e-05, 7.202799999999829e-05, 7.212499999999927e-05, 7.213900000000231e-05, 7.188900000000206e-05, 7.182000000000022e-05, 7.232000000000072e-05, 7.219500000000059e-05, 7.177800000000151e-05, 7.231999999999725e-05, 7.212500000000274e-05, 7.247200000000051e-05, 7.227700000000253e-05, 7.197200000000001e-05, 7.234700000000038e-05, 7.172199999999976e-05, 7.202799999999829e-05, 7.158300000000006e-05, 7.223599999999983e-05, 7.229200000000158e-05, 7.232000000000072e-05, 7.243100000000127e-05, 7.154200000000083e-05, 7.190299999999816e-05, 7.161200000000215e-05, 7.17910000000016e-05, 7.245800000000094e-05, 7.236099999999995e-05, 7.2069000000001e-05, 7.184699999999988e-05, 7.15690000000005e-05, 7.212499999999927e-05, 7.201399999999872e-05, 7.16109999999992e-05, 7.223599999999983e-05, 7.240299999999866e-05, 7.231999999999725e-05, 7.243100000000127e-05, 7.17910000000016e-05, 7.20560000000009e-05, 7.158300000000006e-05, 7.186099999999945e-05, 7.226399999999897e-05]</msg>
<status status="PASS" starttime="20201112 12:43:54.563" endtime="20201112 12:43:54.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.559" endtime="20201112 12:43:54.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.569" endtime="20201112 12:43:54.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.572" endtime="20201112 12:43:54.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.570" endtime="20201112 12:43:54.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.567" endtime="20201112 12:43:54.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.198" endtime="20201112 12:43:54.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.197" endtime="20201112 12:43:54.593"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.602" endtime="20201112 12:43:54.620"></status>
</kw>
<msg timestamp="20201112 12:43:54.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.600" endtime="20201112 12:43:54.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.622" endtime="20201112 12:43:54.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.625" endtime="20201112 12:43:54.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.598" endtime="20201112 12:43:54.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.595" endtime="20201112 12:43:54.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.635" endtime="20201112 12:43:54.921"></status>
</kw>
<msg timestamp="20201112 12:43:54.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.634" endtime="20201112 12:43:54.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.925" endtime="20201112 12:43:54.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.934" endtime="20201112 12:43:54.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.631" endtime="20201112 12:43:54.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.629" endtime="20201112 12:43:54.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.941" level="INFO">${RESULT} = [{'time': 0.021058375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.281900000000174e-05, 'source_diff': 7.281900000000174e-05}, {'time': 0.021138458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:54.937" endtime="20201112 12:43:54.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:54.954" level="INFO">${ACCURACY} = {'time': [0.021058375, 0.021138458, 0.021214389, 0.021291417, 0.021368444, 0.021451444, 0.021526431, 0.021603486, 0.021680444, 0.021762514, 0.021838486, 0.0219175, 0.0219955, 0.022075486, 0.022154514,...</msg>
<status status="PASS" starttime="20201112 12:43:54.942" endtime="20201112 12:43:54.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.959" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:54.958" endtime="20201112 12:43:54.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.961" level="INFO">VALUE: [7.281900000000174e-05, 7.255499999999845e-05, 7.283300000000131e-05, 7.330599999999868e-05, 7.316599999999951e-05, 7.336100000000095e-05, 7.255599999999793e-05, 7.334700000000138e-05, 7.336100000000095e-05, 7.294500000000134e-05, 7.255500000000192e-05, 7.32500000000004e-05, 7.319400000000212e-05, 7.295799999999797e-05, 7.316699999999898e-05, 7.288899999999959e-05, 7.269499999999762e-05, 7.293100000000177e-05, 7.272300000000023e-05, 7.265300000000238e-05, 7.272200000000076e-05, 7.27499999999999e-05, 7.277699999999956e-05, 7.245800000000094e-05, 7.298600000000058e-05, 7.29309999999983e-05, 7.319399999999865e-05, 7.290199999999969e-05, 7.287500000000002e-05, 7.277799999999904e-05, 7.251399999999922e-05, 7.266699999999848e-05, 7.287500000000002e-05, 7.330599999999868e-05, 7.306899999999852e-05, 7.312500000000027e-05, 7.295800000000144e-05, 7.259700000000063e-05, 7.255500000000192e-05, 7.272300000000023e-05, 7.279200000000208e-05, 7.347200000000151e-05, 7.25560000000014e-05, 7.276399999999947e-05, 7.280599999999818e-05, 7.273599999999686e-05, 7.307000000000147e-05, 7.308300000000156e-05, 7.258400000000054e-05, 7.311099999999723e-05]</msg>
<status status="PASS" starttime="20201112 12:43:54.960" endtime="20201112 12:43:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.955" endtime="20201112 12:43:54.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.965" endtime="20201112 12:43:54.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.969" endtime="20201112 12:43:54.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.967" endtime="20201112 12:43:54.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.963" endtime="20201112 12:43:54.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.594" endtime="20201112 12:43:54.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.593" endtime="20201112 12:43:54.990"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.998" endtime="20201112 12:43:55.017"></status>
</kw>
<msg timestamp="20201112 12:43:55.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.997" endtime="20201112 12:43:55.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.018" endtime="20201112 12:43:55.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.021" endtime="20201112 12:43:55.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.994" endtime="20201112 12:43:55.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.992" endtime="20201112 12:43:55.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.031" endtime="20201112 12:43:55.317"></status>
</kw>
<msg timestamp="20201112 12:43:55.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020093403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.029" endtime="20201112 12:43:55.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020093403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.321" endtime="20201112 12:43:55.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.330" endtime="20201112 12:43:55.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.027" endtime="20201112 12:43:55.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.025" endtime="20201112 12:43:55.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.337" level="INFO">${RESULT} = [{'time': 0.020093403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.411099999999823e-05, 'source_diff': 7.411099999999823e-05}, {'time': 0.020171417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:55.333" endtime="20201112 12:43:55.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.350" level="INFO">${ACCURACY} = {'time': [0.020093403, 0.020171417, 0.020251403, 0.020331417, 0.020414444, 0.020498431, 0.020577458, 0.020656458, 0.020737458, 0.020813472, 0.020893542, 0.020976486, 0.021058514, 0.021135528, 0.021218...</msg>
<status status="PASS" starttime="20201112 12:43:55.338" endtime="20201112 12:43:55.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.355" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.354" endtime="20201112 12:43:55.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.358" level="INFO">VALUE: [7.411099999999823e-05, 7.415300000000041e-05, 7.37500000000009e-05, 7.368100000000252e-05, 7.431899999999977e-05, 7.433400000000229e-05, 7.384699999999841e-05, 7.418000000000008e-05, 7.419399999999965e-05, 7.348600000000108e-05, 7.422300000000173e-05, 7.363900000000034e-05, 7.379199999999961e-05, 7.431999999999925e-05, 7.358300000000206e-05, 7.376400000000047e-05, 7.383399999999832e-05, 7.419399999999965e-05, 7.383400000000179e-05, 7.397199999999854e-05, 7.350000000000065e-05, 7.352799999999979e-05, 7.437499999999805e-05, 7.429100000000063e-05, 7.397299999999801e-05, 7.427799999999707e-05, 7.40829999999991e-05, 7.416699999999998e-05, 7.348599999999761e-05, 7.386099999999798e-05, 7.361199999999721e-05, 7.418100000000302e-05, 7.434699999999891e-05, 7.40829999999991e-05, 7.367999999999958e-05, 7.433299999999934e-05, 7.413900000000084e-05, 7.359699999999816e-05, 7.429200000000011e-05, 7.359700000000163e-05, 7.401400000000072e-05, 7.383299999999884e-05, 7.388900000000059e-05, 7.377800000000004e-05, 7.368100000000252e-05, 7.365299999999991e-05, 7.355599999999893e-05, 7.387500000000102e-05, 7.379100000000013e-05, 7.441600000000076e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.356" endtime="20201112 12:43:55.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.351" endtime="20201112 12:43:55.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.361" endtime="20201112 12:43:55.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.365" endtime="20201112 12:43:55.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.363" endtime="20201112 12:43:55.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.360" endtime="20201112 12:43:55.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.991" endtime="20201112 12:43:55.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.990" endtime="20201112 12:43:55.386"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.395" endtime="20201112 12:43:55.411"></status>
</kw>
<msg timestamp="20201112 12:43:55.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.393" endtime="20201112 12:43:55.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.413" endtime="20201112 12:43:55.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.415" endtime="20201112 12:43:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.391" endtime="20201112 12:43:55.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.388" endtime="20201112 12:43:55.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.426" endtime="20201112 12:43:55.710"></status>
</kw>
<msg timestamp="20201112 12:43:55.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020059861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.424" endtime="20201112 12:43:55.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020059861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.714" endtime="20201112 12:43:55.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.723" endtime="20201112 12:43:55.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.421" endtime="20201112 12:43:55.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.420" endtime="20201112 12:43:55.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.730" level="INFO">${RESULT} = [{'time': 0.020135181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.532000000000025e-05, 'source_diff': 7.532000000000025e-05}, {'time': 0.020212181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:55.726" endtime="20201112 12:43:55.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.744" level="INFO">${ACCURACY} = {'time': [0.020135181, 0.020212181, 0.02029525, 0.020377208, 0.020459222, 0.020543222, 0.020626236, 0.020705236, 0.02078325, 0.020867278, 0.020950292, 0.021034278, 0.021119306, 0.021198306, 0.02127934...</msg>
<status status="PASS" starttime="20201112 12:43:55.731" endtime="20201112 12:43:55.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.749" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.748" endtime="20201112 12:43:55.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.751" level="INFO">VALUE: [7.532000000000025e-05, 7.447299999999851e-05, 7.512500000000227e-05, 7.527700000000206e-05, 7.48050000000007e-05, 7.52639999999985e-05, 7.531900000000077e-05, 7.529199999999764e-05, 7.530600000000068e-05, 7.465300000000091e-05, 7.509799999999914e-05, 7.536099999999948e-05, 7.534799999999939e-05, 7.479200000000061e-05, 7.518000000000108e-05, 7.461099999999873e-05, 7.46110000000022e-05, 7.502799999999782e-05, 7.511099999999923e-05, 7.465300000000091e-05, 7.473600000000233e-05, 7.515299999999794e-05, 7.488899999999812e-05, 7.469499999999962e-05, 7.508400000000304e-05, 7.448599999999861e-05, 7.49029999999977e-05, 7.461200000000168e-05, 7.469499999999962e-05, 7.49440000000004e-05, 7.526400000000197e-05, 7.531900000000077e-05, 7.454100000000088e-05, 7.470799999999972e-05, 7.470799999999972e-05, 7.483299999999984e-05, 7.477800000000104e-05, 7.4763999999998e-05, 7.505600000000043e-05, 7.452800000000079e-05, 7.474999999999843e-05, 7.495900000000291e-05, 7.543000000000133e-05, 7.505500000000095e-05, 7.50830000000001e-05, 7.465200000000144e-05, 7.452800000000079e-05, 7.49440000000004e-05, 7.523599999999936e-05, 7.473600000000233e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.750" endtime="20201112 12:43:55.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.745" endtime="20201112 12:43:55.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.755" endtime="20201112 12:43:55.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.759" endtime="20201112 12:43:55.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.757" endtime="20201112 12:43:55.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.753" endtime="20201112 12:43:55.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.387" endtime="20201112 12:43:55.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.386" endtime="20201112 12:43:55.780"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.789" endtime="20201112 12:43:55.807"></status>
</kw>
<msg timestamp="20201112 12:43:55.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.787" endtime="20201112 12:43:55.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.809" endtime="20201112 12:43:55.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.811" endtime="20201112 12:43:55.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.784" endtime="20201112 12:43:55.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.782" endtime="20201112 12:43:55.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.821" endtime="20201112 12:43:56.107"></status>
</kw>
<msg timestamp="20201112 12:43:56.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.820" endtime="20201112 12:43:56.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.112" endtime="20201112 12:43:56.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.120" endtime="20201112 12:43:56.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.817" endtime="20201112 12:43:56.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.815" endtime="20201112 12:43:56.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.127" level="INFO">${RESULT} = [{'time': 0.020365333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.637500000000005e-05, 'source_diff': 7.637500000000005e-05}, {'time': 0.020444319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:56.124" endtime="20201112 12:43:56.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.141" level="INFO">${ACCURACY} = {'time': [0.020365333, 0.020444319, 0.020523319, 0.020603333, 0.020685347, 0.020770347, 0.020848361, 0.020928375, 0.021009389, 0.021090403, 0.021170403, 0.021250403, 0.021332417, 0.021411431, 0.021491...</msg>
<status status="PASS" starttime="20201112 12:43:56.128" endtime="20201112 12:43:56.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.145" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.144" endtime="20201112 12:43:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.148" level="INFO">VALUE: [7.637500000000005e-05, 7.561099999999973e-05, 7.559700000000016e-05, 7.58890000000026e-05, 7.574999999999943e-05, 7.636100000000048e-05, 7.579199999999814e-05, 7.586099999999998e-05, 7.563899999999887e-05, 7.570900000000019e-05, 7.588899999999912e-05, 7.558400000000007e-05, 7.638899999999962e-05, 7.626400000000297e-05, 7.554199999999789e-05, 7.555500000000145e-05, 7.647200000000104e-05, 7.588899999999912e-05, 7.563899999999887e-05, 7.623600000000036e-05, 7.577799999999857e-05, 7.565300000000191e-05, 7.597200000000054e-05, 7.573599999999986e-05, 7.64029999999992e-05, 7.59310000000013e-05, 7.576400000000247e-05, 7.556900000000102e-05, 7.583300000000084e-05, 7.630499999999873e-05, 7.550000000000265e-05, 7.636100000000048e-05, 7.637500000000005e-05, 7.591700000000173e-05, 7.56249999999993e-05, 7.597200000000054e-05, 7.624999999999993e-05, 7.623600000000036e-05, 7.6070000000001e-05, 7.62229999999968e-05, 7.623600000000036e-05, 7.587499999999955e-05, 7.629199999999864e-05, 7.574999999999943e-05, 7.630499999999873e-05, 7.62639999999995e-05, 7.634699999999744e-05, 7.583300000000084e-05, 7.591699999999826e-05, 7.605599999999796e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.146" endtime="20201112 12:43:56.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.141" endtime="20201112 12:43:56.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.151" endtime="20201112 12:43:56.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.155" endtime="20201112 12:43:56.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.153" endtime="20201112 12:43:56.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.150" endtime="20201112 12:43:56.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.781" endtime="20201112 12:43:56.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.780" endtime="20201112 12:43:56.176"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.185" endtime="20201112 12:43:56.204"></status>
</kw>
<msg timestamp="20201112 12:43:56.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.183" endtime="20201112 12:43:56.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.206" endtime="20201112 12:43:56.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.209" endtime="20201112 12:43:56.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.181" endtime="20201112 12:43:56.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.179" endtime="20201112 12:43:56.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.219" endtime="20201112 12:43:56.505"></status>
</kw>
<msg timestamp="20201112 12:43:56.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.217" endtime="20201112 12:43:56.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.509" endtime="20201112 12:43:56.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.518" endtime="20201112 12:43:56.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.214" endtime="20201112 12:43:56.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.213" endtime="20201112 12:43:56.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.525" level="INFO">${RESULT} = [{'time': 0.020923542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.743099999999933e-05, 'source_diff': 7.743099999999933e-05}, {'time': 0.021005556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:56.521" endtime="20201112 12:43:56.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.538" level="INFO">${ACCURACY} = {'time': [0.020923542, 0.021005556, 0.021087583, 0.021173569, 0.021255597, 0.021335597, 0.021418597, 0.021504625, 0.021583625, 0.021669625, 0.021748653, 0.021830694, 0.021915667, 0.021997681, 0.022077...</msg>
<status status="PASS" starttime="20201112 12:43:56.526" endtime="20201112 12:43:56.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.543" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.542" endtime="20201112 12:43:56.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.545" level="INFO">VALUE: [7.743099999999933e-05, 7.69310000000023e-05, 7.741600000000029e-05, 7.71250000000008e-05, 7.734700000000191e-05, 7.725000000000093e-05, 7.715299999999994e-05, 7.713900000000037e-05, 7.655599999999846e-05, 7.665300000000291e-05, 7.656999999999803e-05, 7.666599999999954e-05, 7.677799999999957e-05, 7.694500000000187e-05, 7.677799999999957e-05, 7.705499999999949e-05, 7.736100000000148e-05, 7.731900000000277e-05, 7.675000000000043e-05, 7.662499999999683e-05, 7.652799999999932e-05, 7.736100000000148e-05, 7.741699999999976e-05, 7.680599999999871e-05, 7.670900000000119e-05, 7.708400000000157e-05, 7.700000000000068e-05, 7.738900000000062e-05, 7.738900000000062e-05, 7.648600000000061e-05, 7.730499999999974e-05, 7.684700000000141e-05, 7.686100000000098e-05, 7.720799999999875e-05, 7.704200000000286e-05, 7.745899999999847e-05, 7.658400000000107e-05, 7.669500000000162e-05, 7.670900000000119e-05, 7.747300000000151e-05, 7.731999999999878e-05, 7.725000000000093e-05, 7.716600000000004e-05, 7.647200000000104e-05, 7.730499999999974e-05, 7.661100000000073e-05, 7.704099999999992e-05, 7.738899999999715e-05, 7.6764e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.544" endtime="20201112 12:43:56.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.539" endtime="20201112 12:43:56.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.549" endtime="20201112 12:43:56.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.552" endtime="20201112 12:43:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.551" endtime="20201112 12:43:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.547" endtime="20201112 12:43:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.177" endtime="20201112 12:43:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.177" endtime="20201112 12:43:56.573"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.582" endtime="20201112 12:43:56.602"></status>
</kw>
<msg timestamp="20201112 12:43:56.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.581" endtime="20201112 12:43:56.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.603" endtime="20201112 12:43:56.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.606" endtime="20201112 12:43:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.578" endtime="20201112 12:43:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.576" endtime="20201112 12:43:56.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.616" endtime="20201112 12:43:56.903"></status>
</kw>
<msg timestamp="20201112 12:43:56.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.615" endtime="20201112 12:43:56.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.907" endtime="20201112 12:43:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.916" endtime="20201112 12:43:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.612" endtime="20201112 12:43:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.610" endtime="20201112 12:43:56.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.923" level="INFO">${RESULT} = [{'time': 0.021068875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.823600000000236e-05, 'source_diff': 7.823600000000236e-05}, {'time': 0.021152861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:56.919" endtime="20201112 12:43:56.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.936" level="INFO">${ACCURACY} = {'time': [0.021068875, 0.021152861, 0.021232889, 0.021313889, 0.021394903, 0.021481931, 0.021562931, 0.021649931, 0.021730931, 0.021814944, 0.021895986, 0.021982958, 0.022070972, 0.022154986, 0.022239...</msg>
<status status="PASS" starttime="20201112 12:43:56.924" endtime="20201112 12:43:56.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.941" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.940" endtime="20201112 12:43:56.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.943" level="INFO">VALUE: [7.823600000000236e-05, 7.84169999999973e-05, 7.773600000000186e-05, 7.751400000000075e-05, 7.777800000000057e-05, 7.759799999999817e-05, 7.833399999999935e-05, 7.758400000000207e-05, 7.783399999999885e-05, 7.784699999999894e-05, 7.786099999999851e-05, 7.788900000000112e-05, 7.834700000000291e-05, 7.822200000000279e-05, 7.780599999999971e-05, 7.804199999999692e-05, 7.7764000000001e-05, 7.75830000000026e-05, 7.815299999999747e-05, 7.763900000000087e-05, 7.756999999999903e-05, 7.834799999999892e-05, 7.824999999999846e-05, 7.78189999999998e-05, 7.779100000000067e-05, 7.76250000000013e-05, 7.741699999999976e-05, 7.761099999999826e-05, 7.748600000000161e-05, 7.77779999999971e-05, 7.762499999999783e-05, 7.852800000000132e-05, 7.802799999999735e-05, 7.768099999999958e-05, 7.804100000000092e-05, 7.841600000000129e-05, 7.805500000000049e-05, 7.754100000000042e-05, 7.797199999999907e-05, 7.813900000000137e-05, 7.787500000000155e-05, 7.786100000000198e-05, 7.831999999999978e-05, 7.787499999999808e-05, 7.774999999999796e-05, 7.805599999999996e-05, 7.80969999999992e-05, 7.766700000000001e-05, 7.802700000000135e-05, 7.813900000000137e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.942" endtime="20201112 12:43:56.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.937" endtime="20201112 12:43:56.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.952" endtime="20201112 12:43:56.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.955" endtime="20201112 12:43:56.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.954" endtime="20201112 12:43:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.950" endtime="20201112 12:43:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.574" endtime="20201112 12:43:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.574" endtime="20201112 12:43:56.976"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.985" endtime="20201112 12:43:57.003"></status>
</kw>
<msg timestamp="20201112 12:43:57.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.984" endtime="20201112 12:43:57.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.005" endtime="20201112 12:43:57.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.008" endtime="20201112 12:43:57.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.981" endtime="20201112 12:43:57.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.979" endtime="20201112 12:43:57.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.018" endtime="20201112 12:43:57.304"></status>
</kw>
<msg timestamp="20201112 12:43:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.016" endtime="20201112 12:43:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.308" endtime="20201112 12:43:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.317" endtime="20201112 12:43:57.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.014" endtime="20201112 12:43:57.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.012" endtime="20201112 12:43:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.324" level="INFO">${RESULT} = [{'time': 0.020293097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.92909999999987e-05, 'source_diff': 7.92909999999987e-05}, {'time': 0.020381056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:57.320" endtime="20201112 12:43:57.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.338" level="INFO">${ACCURACY} = {'time': [0.020293097, 0.020381056, 0.020469042, 0.020551097, 0.020637083, 0.020723083, 0.020808083, 0.020892111, 0.020977125, 0.021061111, 0.021147125, 0.021232139, 0.021318139, 0.021400194, 0.021482...</msg>
<status status="PASS" starttime="20201112 12:43:57.325" endtime="20201112 12:43:57.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.343" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.342" endtime="20201112 12:43:57.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.345" level="INFO">VALUE: [7.92909999999987e-05, 7.866700000000101e-05, 7.888899999999865e-05, 7.927800000000207e-05, 7.918000000000161e-05, 7.848599999999914e-05, 7.915200000000247e-05, 7.870800000000025e-05, 7.899999999999921e-05, 7.941700000000176e-05, 7.848599999999914e-05, 7.874999999999896e-05, 7.855600000000046e-05, 7.880500000000124e-05, 7.923599999999989e-05, 7.852799999999785e-05, 7.851400000000175e-05, 7.947200000000057e-05, 7.944400000000143e-05, 7.901399999999878e-05, 7.943099999999786e-05, 7.850000000000218e-05, 7.906899999999759e-05, 7.862499999999883e-05, 7.930599999999774e-05, 7.873599999999939e-05, 7.857000000000003e-05, 7.86389999999984e-05, 7.908300000000063e-05, 7.861200000000221e-05, 7.886099999999951e-05, 7.858300000000012e-05, 7.899999999999921e-05, 7.855600000000046e-05, 7.866700000000101e-05, 7.90970000000002e-05, 7.90970000000002e-05, 7.929200000000164e-05, 7.848600000000261e-05, 7.909800000000314e-05, 7.91389999999989e-05, 7.942999999999839e-05, 7.936200000000296e-05, 7.90129999999993e-05, 7.908300000000063e-05, 7.923599999999989e-05, 7.938899999999915e-05, 7.88190000000008e-05, 7.936100000000001e-05, 7.902800000000182e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.344" endtime="20201112 12:43:57.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.339" endtime="20201112 12:43:57.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.349" endtime="20201112 12:43:57.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.352" endtime="20201112 12:43:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.351" endtime="20201112 12:43:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.347" endtime="20201112 12:43:57.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.977" endtime="20201112 12:43:57.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.977" endtime="20201112 12:43:57.373"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.382" endtime="20201112 12:43:57.400"></status>
</kw>
<msg timestamp="20201112 12:43:57.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.380" endtime="20201112 12:43:57.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.402" endtime="20201112 12:43:57.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.404" endtime="20201112 12:43:57.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.378" endtime="20201112 12:43:57.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.376" endtime="20201112 12:43:57.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.415" endtime="20201112 12:43:57.701"></status>
</kw>
<msg timestamp="20201112 12:43:57.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:57.413" endtime="20201112 12:43:57.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:57.706" endtime="20201112 12:43:57.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.714" endtime="20201112 12:43:57.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.411" endtime="20201112 12:43:57.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.409" endtime="20201112 12:43:57.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.721" level="INFO">${RESULT} = [{'time': 0.020090931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.043099999999886e-05, 'source_diff': 8.043099999999886e-05}, {'time': 0.020177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:57.718" endtime="20201112 12:43:57.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.735" level="INFO">${ACCURACY} = {'time': [0.020090931, 0.020177944, 0.020267972, 0.020349972, 0.020436972, 0.020521, 0.020605986, 0.020694014, 0.020780014, 0.020868014, 0.020950042, 0.021038042, 0.021125042, 0.021211056, 0.021299069...</msg>
<status status="PASS" starttime="20201112 12:43:57.722" endtime="20201112 12:43:57.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.739" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.738" endtime="20201112 12:43:57.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.742" level="INFO">VALUE: [8.043099999999886e-05, 7.980499999999877e-05, 8.044399999999896e-05, 7.980500000000224e-05, 8.020800000000175e-05, 7.95970000000007e-05, 8.011100000000076e-05, 7.986100000000051e-05, 8.038900000000015e-05, 7.974999999999996e-05, 7.944499999999743e-05, 7.959800000000017e-05, 7.955600000000146e-05, 8.020899999999775e-05, 8.031899999999884e-05, 7.96250000000033e-05, 8.017999999999914e-05, 8.02779999999996e-05, 7.984700000000094e-05, 8.033300000000188e-05, 8.005600000000196e-05, 8.01389999999999e-05, 8.031999999999831e-05, 7.955599999999799e-05, 7.95840000000006e-05, 7.99589999999975e-05, 8.037500000000058e-05, 7.972200000000082e-05, 7.962499999999983e-05, 7.956899999999809e-05, 7.987500000000008e-05, 7.988899999999965e-05, 8.024999999999699e-05, 7.98329999999979e-05, 8.01389999999999e-05, 8.04719999999981e-05, 7.983400000000085e-05, 8.001399999999978e-05, 8.012500000000033e-05, 8.004200000000239e-05, 7.998600000000064e-05, 8.037500000000058e-05, 7.961100000000026e-05, 8.03329999999984e-05, 7.97779999999991e-05, 8.04450000000019e-05, 7.961100000000026e-05, 7.968099999999811e-05, 7.961100000000026e-05, 8.0458999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.741" endtime="20201112 12:43:57.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.736" endtime="20201112 12:43:57.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.746" endtime="20201112 12:43:57.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.749" endtime="20201112 12:43:57.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.748" endtime="20201112 12:43:57.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.744" endtime="20201112 12:43:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.374" endtime="20201112 12:43:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.374" endtime="20201112 12:43:57.770"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.779" endtime="20201112 12:43:57.797"></status>
</kw>
<msg timestamp="20201112 12:43:57.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.777" endtime="20201112 12:43:57.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.799" endtime="20201112 12:43:57.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.801" endtime="20201112 12:43:57.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.775" endtime="20201112 12:43:57.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.773" endtime="20201112 12:43:57.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.812" endtime="20201112 12:43:58.097"></status>
</kw>
<msg timestamp="20201112 12:43:58.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.810" endtime="20201112 12:43:58.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.102" endtime="20201112 12:43:58.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.110" endtime="20201112 12:43:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.807" endtime="20201112 12:43:58.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.806" endtime="20201112 12:43:58.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.117" level="INFO">${RESULT} = [{'time': 0.020137944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.08190000000028e-05, 'source_diff': 8.08190000000028e-05}, {'time': 0.020226972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:58.114" endtime="20201112 12:43:58.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.131" level="INFO">${ACCURACY} = {'time': [0.020137944, 0.020226972, 0.020315986, 0.020401972, 0.020489028, 0.020574, 0.020663056, 0.020751028, 0.020836097, 0.020927083, 0.021011097, 0.021098056, 0.021189069, 0.021275083, 0.021362083...</msg>
<status status="PASS" starttime="20201112 12:43:58.118" endtime="20201112 12:43:58.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.135" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.134" endtime="20201112 12:43:58.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.138" level="INFO">VALUE: [8.08190000000028e-05, 8.126400000000103e-05, 8.062500000000083e-05, 8.067999999999964e-05, 8.079199999999967e-05, 8.106899999999959e-05, 8.055599999999899e-05, 8.129200000000017e-05, 8.09580000000025e-05, 8.138899999999769e-05, 8.06109999999978e-05, 8.073700000000086e-05, 8.141600000000082e-05, 8.087500000000108e-05, 8.143000000000039e-05, 8.081899999999934e-05, 8.115300000000047e-05, 8.136099999999855e-05, 8.131899999999984e-05, 8.06109999999978e-05, 8.137500000000158e-05, 8.076399999999706e-05, 8.066699999999954e-05, 8.05269999999969e-05, 8.130500000000027e-05, 8.086099999999805e-05, 8.102800000000035e-05, 8.106899999999959e-05, 8.123599999999842e-05, 8.126400000000103e-05, 8.054199999999942e-05, 8.112499999999787e-05, 8.068099999999911e-05, 8.047200000000157e-05, 8.074999999999749e-05, 8.049999999999724e-05, 8.12910000000007e-05, 8.070900000000172e-05, 8.08190000000028e-05, 8.086100000000151e-05, 8.088899999999719e-05, 8.131899999999984e-05, 8.065299999999997e-05, 8.116700000000004e-05, 8.072200000000182e-05, 8.119499999999918e-05, 8.070899999999825e-05, 8.088900000000065e-05, 8.05840000000016e-05, 8.069499999999868e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.136" endtime="20201112 12:43:58.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.132" endtime="20201112 12:43:58.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.142" endtime="20201112 12:43:58.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.145" endtime="20201112 12:43:58.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.143" endtime="20201112 12:43:58.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.140" endtime="20201112 12:43:58.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.771" endtime="20201112 12:43:58.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.771" endtime="20201112 12:43:58.166"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.175" endtime="20201112 12:43:58.193"></status>
</kw>
<msg timestamp="20201112 12:43:58.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.173" endtime="20201112 12:43:58.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.194" endtime="20201112 12:43:58.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.197" endtime="20201112 12:43:58.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.171" endtime="20201112 12:43:58.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.169" endtime="20201112 12:43:58.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.207" endtime="20201112 12:43:58.493"></status>
</kw>
<msg timestamp="20201112 12:43:58.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.206" endtime="20201112 12:43:58.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.497" endtime="20201112 12:43:58.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.506" endtime="20201112 12:43:58.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.203" endtime="20201112 12:43:58.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.201" endtime="20201112 12:43:58.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.513" level="INFO">${RESULT} = [{'time': 0.020931583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.150000000000171e-05, 'source_diff': 8.150000000000171e-05}, {'time': 0.021022583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:58.509" endtime="20201112 12:43:58.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.526" level="INFO">${ACCURACY} = {'time': [0.020931583, 0.021022583, 0.021111625, 0.021199611, 0.021283667, 0.021371681, 0.021457639, 0.021542653, 0.021633653, 0.021720667, 0.021806681, 0.021895681, 0.021980708, 0.022066708, 0.022153...</msg>
<status status="PASS" starttime="20201112 12:43:58.514" endtime="20201112 12:43:58.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.531" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.530" endtime="20201112 12:43:58.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.534" level="INFO">VALUE: [8.150000000000171e-05, 8.204100000000145e-05, 8.180599999999677e-05, 8.168000000000064e-05, 8.184799999999895e-05, 8.179200000000067e-05, 8.188900000000165e-05, 8.184699999999948e-05, 8.212499999999887e-05, 8.218100000000061e-05, 8.183400000000285e-05, 8.201400000000178e-05, 8.23330000000004e-05, 8.16520000000015e-05, 8.21109999999993e-05, 8.234699999999998e-05, 8.150000000000171e-05, 8.248599999999967e-05, 8.154200000000042e-05, 8.241699999999783e-05, 8.213899999999844e-05, 8.21390000000019e-05, 8.186099999999905e-05, 8.243000000000139e-05, 8.20130000000023e-05, 8.181899999999687e-05, 8.209699999999973e-05, 8.188900000000165e-05, 8.233399999999988e-05, 8.154200000000042e-05, 8.176400000000153e-05, 8.219500000000018e-05, 8.207000000000006e-05, 8.21109999999993e-05, 8.174999999999849e-05, 8.148700000000161e-05, 8.205500000000102e-05, 8.251399999999881e-05, 8.191600000000132e-05, 8.21109999999993e-05, 8.170799999999978e-05, 8.201399999999831e-05, 8.24170000000013e-05, 8.19719999999996e-05, 8.202799999999788e-05, 8.205600000000049e-05, 8.154199999999695e-05, 8.230599999999727e-05, 8.205599999999702e-05, 8.21390000000019e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.532" endtime="20201112 12:43:58.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.527" endtime="20201112 12:43:58.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.537" endtime="20201112 12:43:58.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.541" endtime="20201112 12:43:58.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.539" endtime="20201112 12:43:58.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.536" endtime="20201112 12:43:58.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.167" endtime="20201112 12:43:58.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.167" endtime="20201112 12:43:58.562"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.571" endtime="20201112 12:43:58.589"></status>
</kw>
<msg timestamp="20201112 12:43:58.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.569" endtime="20201112 12:43:58.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.591" endtime="20201112 12:43:58.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.593" endtime="20201112 12:43:58.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.566" endtime="20201112 12:43:58.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.564" endtime="20201112 12:43:58.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.603" endtime="20201112 12:43:58.889"></status>
</kw>
<msg timestamp="20201112 12:43:58.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.602" endtime="20201112 12:43:58.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.893" endtime="20201112 12:43:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.902" endtime="20201112 12:43:58.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.599" endtime="20201112 12:43:58.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.597" endtime="20201112 12:43:58.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.909" level="INFO">${RESULT} = [{'time': 0.020198569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.340199999999978e-05, 'source_diff': 8.340199999999978e-05}, {'time': 0.020291583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:58.905" endtime="20201112 12:43:58.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.923" level="INFO">${ACCURACY} = {'time': [0.020198569, 0.020291583, 0.020379639, 0.020469597, 0.020560597, 0.020653597, 0.020744625, 0.020834625, 0.020921639, 0.021007639, 0.021097653, 0.021184667, 0.021271681, 0.021363681, 0.021455...</msg>
<status status="PASS" starttime="20201112 12:43:58.910" endtime="20201112 12:43:58.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.928" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.927" endtime="20201112 12:43:58.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.931" level="INFO">VALUE: [8.340199999999978e-05, 8.336099999999708e-05, 8.34170000000023e-05, 8.305499999999855e-05, 8.276399999999906e-05, 8.333299999999794e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.326399999999956e-05, 8.323600000000042e-05, 8.279200000000167e-05, 8.280600000000124e-05, 8.313899999999944e-05, 8.336200000000002e-05, 8.290299999999876e-05, 8.291699999999833e-05, 8.292999999999842e-05, 8.340299999999926e-05, 8.331900000000184e-05, 8.254200000000142e-05, 8.268099999999765e-05, 8.293100000000136e-05, 8.273599999999992e-05, 8.250000000000271e-05, 8.344500000000143e-05, 8.262499999999937e-05, 8.267999999999817e-05, 8.270800000000078e-05, 8.327699999999966e-05, 8.305499999999855e-05, 8.298600000000017e-05, 8.33330000000014e-05, 8.34309999999984e-05, 8.344500000000143e-05, 8.302800000000235e-05, 8.258400000000013e-05, 8.262499999999937e-05, 8.295800000000103e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.287499999999962e-05, 8.254200000000142e-05, 8.28330000000009e-05, 8.268000000000164e-05, 8.27919999999982e-05, 8.281999999999734e-05, 8.299999999999974e-05, 8.320900000000075e-05, 8.32919999999987e-05, 8.340300000000272e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.929" endtime="20201112 12:43:58.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.924" endtime="20201112 12:43:58.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.934" endtime="20201112 12:43:58.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.938" endtime="20201112 12:43:58.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.936" endtime="20201112 12:43:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.932" endtime="20201112 12:43:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.563" endtime="20201112 12:43:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.562" endtime="20201112 12:43:58.959"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.968" endtime="20201112 12:43:58.986"></status>
</kw>
<msg timestamp="20201112 12:43:58.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.966" endtime="20201112 12:43:58.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.988" endtime="20201112 12:43:58.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.990" endtime="20201112 12:43:58.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.963" endtime="20201112 12:43:58.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.961" endtime="20201112 12:43:58.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.001" endtime="20201112 12:43:59.287"></status>
</kw>
<msg timestamp="20201112 12:43:59.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.999" endtime="20201112 12:43:59.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.292" endtime="20201112 12:43:59.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.300" endtime="20201112 12:43:59.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.996" endtime="20201112 12:43:59.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.995" endtime="20201112 12:43:59.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.307" level="INFO">${RESULT} = [{'time': 0.020404125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.36529999999995e-05, 'source_diff': 8.36529999999995e-05}, {'time': 0.020493097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:59.304" endtime="20201112 12:43:59.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:59.321" level="INFO">${ACCURACY} = {'time': [0.020404125, 0.020493097, 0.020582125, 0.020674139, 0.020766139, 0.020860139, 0.020949153, 0.021041181, 0.021132167, 0.021224194, 0.021314194, 0.021402208, 0.021491208, 0.021585222, 0.021675...</msg>
<status status="PASS" starttime="20201112 12:43:59.308" endtime="20201112 12:43:59.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.325" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:59.324" endtime="20201112 12:43:59.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.328" level="INFO">VALUE: [8.36529999999995e-05, 8.392999999999942e-05, 8.388900000000019e-05, 8.419500000000218e-05, 8.383299999999844e-05, 8.43469999999985e-05, 8.387500000000062e-05, 8.426400000000056e-05, 8.377799999999963e-05, 8.374999999999702e-05, 8.351300000000034e-05, 8.406899999999912e-05, 8.393000000000289e-05, 8.441600000000035e-05, 8.373600000000092e-05, 8.430599999999927e-05, 8.43330000000024e-05, 8.44309999999994e-05, 8.440300000000026e-05, 8.4153e-05, 8.35980000000007e-05, 8.444500000000243e-05, 8.43330000000024e-05, 8.359699999999776e-05, 8.351399999999981e-05, 8.366699999999908e-05, 8.431899999999937e-05, 8.379200000000267e-05, 8.418099999999915e-05, 8.388900000000019e-05, 8.354199999999895e-05, 8.412500000000087e-05, 8.369500000000168e-05, 8.420800000000228e-05, 8.429100000000023e-05, 8.441600000000035e-05, 8.369399999999874e-05, 8.386100000000105e-05, 8.441699999999983e-05, 8.4153e-05, 8.437499999999765e-05, 8.351399999999981e-05, 8.4459000000002e-05, 8.358300000000166e-05, 8.383400000000138e-05, 8.376400000000006e-05, 8.365200000000003e-05, 8.408299999999869e-05, 8.384700000000148e-05, 8.441600000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:43:59.326" endtime="20201112 12:43:59.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.322" endtime="20201112 12:43:59.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.331" endtime="20201112 12:43:59.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.335" endtime="20201112 12:43:59.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.333" endtime="20201112 12:43:59.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.330" endtime="20201112 12:43:59.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.960" endtime="20201112 12:43:59.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.959" endtime="20201112 12:43:59.356"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.365" endtime="20201112 12:43:59.383"></status>
</kw>
<msg timestamp="20201112 12:43:59.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.363" endtime="20201112 12:43:59.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.385" endtime="20201112 12:43:59.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.387" endtime="20201112 12:43:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.361" endtime="20201112 12:43:59.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.358" endtime="20201112 12:43:59.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.398" endtime="20201112 12:43:59.684"></status>
</kw>
<msg timestamp="20201112 12:43:59.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.396" endtime="20201112 12:43:59.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.688" endtime="20201112 12:43:59.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.697" endtime="20201112 12:43:59.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.393" endtime="20201112 12:43:59.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.392" endtime="20201112 12:43:59.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.704" level="INFO">${RESULT} = [{'time': 0.020419264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.540299999999779e-05, 'source_diff': 8.540299999999779e-05}, {'time': 0.020514278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:59.701" endtime="20201112 12:43:59.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:59.718" level="INFO">${ACCURACY} = {'time': [0.020419264, 0.020514278, 0.020608292, 0.020700319, 0.020792306, 0.020881333, 0.020975333, 0.021067347, 0.021158361, 0.021248375, 0.021340375, 0.021429389, 0.021518417, 0.021610417, 0.021701...</msg>
<status status="PASS" starttime="20201112 12:43:59.705" endtime="20201112 12:43:59.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.723" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:59.722" endtime="20201112 12:43:59.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.725" level="INFO">VALUE: [8.540299999999779e-05, 8.533399999999941e-05, 8.537499999999865e-05, 8.481899999999987e-05, 8.527800000000113e-05, 8.505499999999708e-05, 8.506900000000012e-05, 8.497199999999913e-05, 8.545800000000006e-05, 8.536099999999908e-05, 8.480600000000324e-05, 8.466700000000008e-05, 8.468100000000311e-05, 8.522299999999886e-05, 8.450000000000124e-05, 8.512500000000187e-05, 8.54310000000004e-05, 8.501299999999837e-05, 8.48050000000003e-05, 8.512500000000187e-05, 8.537500000000212e-05, 8.477800000000063e-05, 8.547300000000257e-05, 8.541700000000083e-05, 8.4846999999999e-05, 8.519499999999972e-05, 8.530600000000027e-05, 8.455599999999952e-05, 8.53469999999995e-05, 8.497199999999913e-05, 8.487500000000162e-05, 8.501399999999784e-05, 8.504100000000098e-05, 8.533299999999994e-05, 8.5153000000001e-05, 8.470800000000278e-05, 8.477800000000063e-05, 8.463899999999747e-05, 8.454199999999995e-05, 8.455599999999952e-05, 8.502799999999741e-05, 8.459699999999876e-05, 8.495799999999956e-05, 8.481899999999987e-05, 8.523600000000242e-05, 8.523600000000242e-05, 8.481899999999987e-05, 8.516700000000058e-05, 8.458299999999919e-05, 8.53469999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:43:59.724" endtime="20201112 12:43:59.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.719" endtime="20201112 12:43:59.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.729" endtime="20201112 12:43:59.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.732" endtime="20201112 12:43:59.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.731" endtime="20201112 12:43:59.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.727" endtime="20201112 12:43:59.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.357" endtime="20201112 12:43:59.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.356" endtime="20201112 12:43:59.753"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.763" endtime="20201112 12:43:59.781"></status>
</kw>
<msg timestamp="20201112 12:43:59.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.761" endtime="20201112 12:43:59.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.783" endtime="20201112 12:43:59.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.785" endtime="20201112 12:43:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.758" endtime="20201112 12:43:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.756" endtime="20201112 12:43:59.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.796" endtime="20201112 12:44:00.081"></status>
</kw>
<msg timestamp="20201112 12:44:00.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.794" endtime="20201112 12:44:00.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.086" endtime="20201112 12:44:00.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.094" endtime="20201112 12:44:00.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.791" endtime="20201112 12:44:00.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.789" endtime="20201112 12:44:00.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.101" level="INFO">${RESULT} = [{'time': 0.021484569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638799999999974e-05, 'source_diff': 8.638799999999974e-05}, {'time': 0.021576583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:00.097" endtime="20201112 12:44:00.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.115" level="INFO">${ACCURACY} = {'time': [0.021484569, 0.021576583, 0.021665597, 0.021759639, 0.021853611, 0.021947639, 0.022042639, 0.022136639, 0.022232667, 0.022321681, 0.022417681, 0.022507694, 0.022599708, 0.022692708, 0.022782...</msg>
<status status="PASS" starttime="20201112 12:44:00.102" endtime="20201112 12:44:00.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.119" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.118" endtime="20201112 12:44:00.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.122" level="INFO">VALUE: [8.638799999999974e-05, 8.590199999999881e-05, 8.63050000000018e-05, 8.588900000000219e-05, 8.599999999999927e-05, 8.555600000000052e-05, 8.580600000000077e-05, 8.624999999999952e-05, 8.64310000000014e-05, 8.601399999999884e-05, 8.634799999999998e-05, 8.637500000000312e-05, 8.592999999999795e-05, 8.554099999999801e-05, 8.580499999999783e-05, 8.562500000000237e-05, 8.57920000000012e-05, 8.608300000000069e-05, 8.633300000000094e-05, 8.56530000000015e-05, 8.551400000000181e-05, 8.554200000000095e-05, 8.584799999999948e-05, 8.559699999999976e-05, 8.63470000000005e-05, 8.581900000000087e-05, 8.638899999999922e-05, 8.611099999999983e-05, 8.633300000000094e-05, 8.583299999999697e-05, 8.604200000000145e-05, 8.64310000000014e-05, 8.626399999999909e-05, 8.573599999999945e-05, 8.642999999999845e-05, 8.556900000000062e-05, 8.5847e-05, 8.591599999999838e-05, 8.601399999999884e-05, 8.604200000000145e-05, 8.640299999999879e-05, 8.555600000000052e-05, 8.64310000000014e-05, 8.601399999999884e-05, 8.54859999999992e-05, 8.570900000000325e-05, 8.638799999999974e-05, 8.602699999999894e-05, 8.555500000000105e-05, 8.579099999999826e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.120" endtime="20201112 12:44:00.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.115" endtime="20201112 12:44:00.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.125" endtime="20201112 12:44:00.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.129" endtime="20201112 12:44:00.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.127" endtime="20201112 12:44:00.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.124" endtime="20201112 12:44:00.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.754" endtime="20201112 12:44:00.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.754" endtime="20201112 12:44:00.150"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.159" endtime="20201112 12:44:00.177"></status>
</kw>
<msg timestamp="20201112 12:44:00.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.157" endtime="20201112 12:44:00.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.179" endtime="20201112 12:44:00.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.181" endtime="20201112 12:44:00.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.155" endtime="20201112 12:44:00.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.152" endtime="20201112 12:44:00.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.191" endtime="20201112 12:44:00.477"></status>
</kw>
<msg timestamp="20201112 12:44:00.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.190" endtime="20201112 12:44:00.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.482" endtime="20201112 12:44:00.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.490" endtime="20201112 12:44:00.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.187" endtime="20201112 12:44:00.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.186" endtime="20201112 12:44:00.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.497" level="INFO">${RESULT} = [{'time': 0.020150111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.651399999999934e-05, 'source_diff': 8.651399999999934e-05}, {'time': 0.020243139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:00.493" endtime="20201112 12:44:00.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.511" level="INFO">${ACCURACY} = {'time': [0.020150111, 0.020243139, 0.020332125, 0.020423139, 0.020512153, 0.020603181, 0.020694181, 0.020789181, 0.020882194, 0.020973208, 0.021066208, 0.021158222, 0.021255264, 0.02135025, 0.0214452...</msg>
<status status="PASS" starttime="20201112 12:44:00.498" endtime="20201112 12:44:00.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.516" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.515" endtime="20201112 12:44:00.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.519" level="INFO">VALUE: [8.651399999999934e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.729199999999923e-05, 8.680600000000177e-05, 8.732000000000184e-05, 8.66669999999986e-05, 8.732000000000184e-05, 8.722200000000138e-05, 8.705499999999908e-05, 8.697200000000113e-05, 8.71799999999992e-05, 8.741699999999936e-05, 8.677800000000263e-05, 8.73470000000015e-05, 8.681999999999787e-05, 8.668099999999818e-05, 8.676300000000012e-05, 8.740299999999979e-05, 8.71799999999992e-05, 8.733299999999847e-05, 8.711100000000083e-05, 8.737500000000065e-05, 8.652799999999891e-05, 8.672200000000088e-05, 8.738900000000022e-05, 8.681999999999787e-05, 8.74449999999985e-05, 8.733400000000141e-05, 8.66249999999999e-05, 8.651399999999934e-05, 8.673600000000045e-05, 8.697200000000113e-05, 8.654100000000248e-05, 8.695799999999809e-05, 8.680499999999883e-05, 8.705499999999908e-05, 8.747199999999816e-05, 8.727799999999966e-05, 8.708400000000116e-05, 8.705600000000202e-05, 8.677799999999916e-05, 8.663899999999947e-05, 8.6847000000001e-05, 8.731900000000237e-05, 8.688899999999972e-05, 8.750000000000077e-05, 8.677799999999916e-05, 8.654199999999848e-05, 8.698599999999723e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.517" endtime="20201112 12:44:00.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.512" endtime="20201112 12:44:00.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.522" endtime="20201112 12:44:00.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.526" endtime="20201112 12:44:00.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.524" endtime="20201112 12:44:00.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.521" endtime="20201112 12:44:00.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.151" endtime="20201112 12:44:00.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.150" endtime="20201112 12:44:00.547"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.556" endtime="20201112 12:44:00.574"></status>
</kw>
<msg timestamp="20201112 12:44:00.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.554" endtime="20201112 12:44:00.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.576" endtime="20201112 12:44:00.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.578" endtime="20201112 12:44:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.551" endtime="20201112 12:44:00.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.549" endtime="20201112 12:44:00.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.589" endtime="20201112 12:44:00.875"></status>
</kw>
<msg timestamp="20201112 12:44:00.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.587" endtime="20201112 12:44:00.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.879" endtime="20201112 12:44:00.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.888" endtime="20201112 12:44:00.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.584" endtime="20201112 12:44:00.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.583" endtime="20201112 12:44:00.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.895" level="INFO">${RESULT} = [{'time': 0.020086944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805500000000008e-05, 'source_diff': 8.805500000000008e-05}, {'time': 0.020177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:00.891" endtime="20201112 12:44:00.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.908" level="INFO">${ACCURACY} = {'time': [0.020086944, 0.020177944, 0.020267958, 0.020362972, 0.020454972, 0.020545, 0.020639014, 0.020731042, 0.020829014, 0.020921042, 0.021015042, 0.021105056, 0.021198056, 0.021292069, 0.021389083...</msg>
<status status="PASS" starttime="20201112 12:44:00.896" endtime="20201112 12:44:00.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.913" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.912" endtime="20201112 12:44:00.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.915" level="INFO">VALUE: [8.805500000000008e-05, 8.777700000000069e-05, 8.748599999999773e-05, 8.844400000000002e-05, 8.829099999999729e-05, 8.750000000000077e-05, 8.841700000000036e-05, 8.833400000000241e-05, 8.836099999999861e-05, 8.76669999999996e-05, 8.822300000000186e-05, 8.779199999999973e-05, 8.793099999999943e-05, 8.838800000000174e-05, 8.765200000000056e-05, 8.773600000000145e-05, 8.836100000000208e-05, 8.744399999999902e-05, 8.834699999999904e-05, 8.81670000000001e-05, 8.784799999999801e-05, 8.758299999999872e-05, 8.770900000000179e-05, 8.754100000000001e-05, 8.750000000000077e-05, 8.838799999999827e-05, 8.81800000000002e-05, 8.747200000000163e-05, 8.808299999999922e-05, 8.78059999999993e-05, 8.806999999999912e-05, 8.759700000000176e-05, 8.769499999999875e-05, 8.769499999999875e-05, 8.782000000000234e-05, 8.793099999999943e-05, 8.820800000000281e-05, 8.752700000000044e-05, 8.774999999999755e-05, 8.772200000000188e-05, 8.761100000000133e-05, 8.777800000000016e-05, 8.834699999999904e-05, 8.780600000000277e-05, 8.765300000000004e-05, 8.79999999999978e-05, 8.752799999999991e-05, 8.780499999999983e-05, 8.797199999999866e-05, 8.751400000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.914" endtime="20201112 12:44:00.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.909" endtime="20201112 12:44:00.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.919" endtime="20201112 12:44:00.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.923" endtime="20201112 12:44:00.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.921" endtime="20201112 12:44:00.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.917" endtime="20201112 12:44:00.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.548" endtime="20201112 12:44:00.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.547" endtime="20201112 12:44:00.944"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.952" endtime="20201112 12:44:00.972"></status>
</kw>
<msg timestamp="20201112 12:44:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.951" endtime="20201112 12:44:00.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.973" endtime="20201112 12:44:00.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.976" endtime="20201112 12:44:00.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.948" endtime="20201112 12:44:00.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.946" endtime="20201112 12:44:00.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.986" endtime="20201112 12:44:01.272"></status>
</kw>
<msg timestamp="20201112 12:44:01.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.984" endtime="20201112 12:44:01.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.277" endtime="20201112 12:44:01.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.285" endtime="20201112 12:44:01.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.982" endtime="20201112 12:44:01.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.980" endtime="20201112 12:44:01.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.292" level="INFO">${RESULT} = [{'time': 0.020441139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.859699999999929e-05, 'source_diff': 8.859699999999929e-05}, {'time': 0.020534153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:01.288" endtime="20201112 12:44:01.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.305" level="INFO">${ACCURACY} = {'time': [0.020441139, 0.020534153, 0.020631167, 0.020726181, 0.020817194, 0.020914194, 0.021009222, 0.021103236, 0.021199236, 0.021297292, 0.021395264, 0.021492264, 0.021588292, 0.021682278, 0.021777...</msg>
<status status="PASS" starttime="20201112 12:44:01.293" endtime="20201112 12:44:01.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.310" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.309" endtime="20201112 12:44:01.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.312" level="INFO">VALUE: [8.859699999999929e-05, 8.886099999999911e-05, 8.852799999999744e-05, 8.947299999999964e-05, 8.845799999999959e-05, 8.883299999999997e-05, 8.869400000000027e-05, 8.872199999999941e-05, 8.902800000000141e-05, 8.918099999999721e-05, 8.890300000000129e-05, 8.877800000000116e-05, 8.848599999999873e-05, 8.862499999999843e-05, 8.94450000000005e-05, 8.943000000000145e-05, 8.91519999999986e-05, 8.916600000000163e-05, 8.874999999999855e-05, 8.852800000000091e-05, 8.922199999999991e-05, 8.858299999999972e-05, 8.945800000000059e-05, 8.924999999999905e-05, 8.895899999999957e-05, 8.881999999999987e-05, 8.868100000000018e-05, 8.918100000000068e-05, 8.924999999999905e-05, 8.913900000000197e-05, 8.888899999999825e-05, 8.900000000000227e-05, 8.872199999999941e-05, 8.936099999999961e-05, 8.947200000000016e-05, 8.901400000000184e-05, 8.874999999999855e-05, 8.941699999999789e-05, 8.943100000000093e-05, 8.879099999999779e-05, 8.91250000000024e-05, 8.936099999999961e-05, 8.884699999999954e-05, 8.852800000000091e-05, 8.906900000000065e-05, 8.911099999999936e-05, 8.862499999999843e-05, 8.881999999999987e-05, 8.877799999999769e-05, 8.873700000000193e-05]</msg>
<status status="PASS" starttime="20201112 12:44:01.311" endtime="20201112 12:44:01.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.306" endtime="20201112 12:44:01.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.316" endtime="20201112 12:44:01.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.320" endtime="20201112 12:44:01.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.318" endtime="20201112 12:44:01.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.314" endtime="20201112 12:44:01.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.944" endtime="20201112 12:44:01.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.944" endtime="20201112 12:44:01.341"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.350" endtime="20201112 12:44:01.369"></status>
</kw>
<msg timestamp="20201112 12:44:01.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.348" endtime="20201112 12:44:01.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.371" endtime="20201112 12:44:01.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.373" endtime="20201112 12:44:01.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.345" endtime="20201112 12:44:01.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.343" endtime="20201112 12:44:01.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.384" endtime="20201112 12:44:01.672"></status>
</kw>
<msg timestamp="20201112 12:44:01.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020737514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.382" endtime="20201112 12:44:01.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020737514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.678" endtime="20201112 12:44:01.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.688" endtime="20201112 12:44:01.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.379" endtime="20201112 12:44:01.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.378" endtime="20201112 12:44:01.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.695" level="INFO">${RESULT} = [{'time': 0.020737514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020799999999787e-05, 'source_diff': 9.020799999999787e-05}, {'time': 0.020833514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:01.692" endtime="20201112 12:44:01.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.709" level="INFO">${ACCURACY} = {'time': [0.020737514, 0.020833514, 0.020927514, 0.021022528, 0.021120542, 0.021213597, 0.021307569, 0.021400583, 0.021495583, 0.021588611, 0.021682625, 0.021780625, 0.021877639, 0.021975694, 0.022072...</msg>
<status status="PASS" starttime="20201112 12:44:01.696" endtime="20201112 12:44:01.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.714" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.713" endtime="20201112 12:44:01.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.717" level="INFO">VALUE: [9.020799999999787e-05, 8.973599999999998e-05, 8.988900000000272e-05, 9.041699999999889e-05, 9.023600000000048e-05, 8.958300000000072e-05, 9.005499999999861e-05, 9.001399999999937e-05, 9.041599999999941e-05, 9.025000000000005e-05, 8.991700000000186e-05, 8.984700000000054e-05, 9.026399999999962e-05, 8.959700000000029e-05, 9.03060000000018e-05, 8.976399999999912e-05, 8.972200000000041e-05, 8.972200000000041e-05, 9.041599999999941e-05, 9.005499999999861e-05, 9.027800000000266e-05, 8.997200000000066e-05, 9.012499999999993e-05, 8.998600000000023e-05, 8.99999999999998e-05, 9.037500000000018e-05, 8.991699999999839e-05, 9.005599999999808e-05, 9.002799999999894e-05, 8.980499999999836e-05, 8.959700000000029e-05, 8.954100000000201e-05, 8.974999999999955e-05, 8.959699999999682e-05, 8.965299999999857e-05, 9.006900000000165e-05, 8.952800000000191e-05, 9.047300000000064e-05, 9.025000000000005e-05, 9.012499999999993e-05, 9.016699999999864e-05, 9.00129999999999e-05, 9.025000000000005e-05, 9.038899999999975e-05, 8.987499999999968e-05, 8.951400000000234e-05, 9.040299999999932e-05, 8.955599999999758e-05, 9.001399999999937e-05, 8.959799999999976e-05]</msg>
<status status="PASS" starttime="20201112 12:44:01.715" endtime="20201112 12:44:01.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.710" endtime="20201112 12:44:01.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.728" endtime="20201112 12:44:01.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.732" endtime="20201112 12:44:01.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.731" endtime="20201112 12:44:01.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.727" endtime="20201112 12:44:01.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.342" endtime="20201112 12:44:01.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.341" endtime="20201112 12:44:01.753"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.763" endtime="20201112 12:44:01.783"></status>
</kw>
<msg timestamp="20201112 12:44:01.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.761" endtime="20201112 12:44:01.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.785" endtime="20201112 12:44:01.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.787" endtime="20201112 12:44:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.758" endtime="20201112 12:44:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.756" endtime="20201112 12:44:01.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.797" endtime="20201112 12:44:02.083"></status>
</kw>
<msg timestamp="20201112 12:44:02.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.796" endtime="20201112 12:44:02.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.088" endtime="20201112 12:44:02.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.096" endtime="20201112 12:44:02.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.793" endtime="20201112 12:44:02.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.791" endtime="20201112 12:44:02.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.103" level="INFO">${RESULT} = [{'time': 0.021580583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.136100000000161e-05, 'source_diff': 9.136100000000161e-05}, {'time': 0.021675514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:02.099" endtime="20201112 12:44:02.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.117" level="INFO">${ACCURACY} = {'time': [0.021580583, 0.021675514, 0.021773528, 0.021870583, 0.021970542, 0.022068556, 0.022165569, 0.022265625, 0.022364583, 0.022460667, 0.022558611, 0.022657625, 0.022754681, 0.022851667, 0.022945...</msg>
<status status="PASS" starttime="20201112 12:44:02.104" endtime="20201112 12:44:02.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.122" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.121" endtime="20201112 12:44:02.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.124" level="INFO">VALUE: [9.136100000000161e-05, 9.130599999999933e-05, 9.05000000000003e-05, 9.142999999999998e-05, 9.088900000000025e-05, 9.09589999999981e-05, 9.113800000000102e-05, 9.094399999999905e-05, 9.130499999999986e-05, 9.116699999999964e-05, 9.055499999999911e-05, 9.061100000000086e-05, 9.079199999999926e-05, 9.052799999999944e-05, 9.106999999999865e-05, 9.048599999999726e-05, 9.097299999999767e-05, 9.059700000000129e-05, 9.098599999999776e-05, 9.087500000000068e-05, 9.138899999999728e-05, 9.070800000000184e-05, 9.118099999999921e-05, 9.118100000000268e-05, 9.118099999999921e-05, 9.105599999999908e-05, 9.080599999999883e-05, 9.070900000000132e-05, 9.083400000000144e-05, 9.090200000000034e-05, 9.055500000000258e-05, 9.108299999999875e-05, 9.081899999999893e-05, 9.106899999999918e-05, 9.10000000000008e-05, 9.070800000000184e-05, 9.132000000000237e-05, 9.091699999999939e-05, 9.068099999999871e-05, 9.058299999999825e-05, 9.090200000000034e-05, 9.084700000000154e-05, 9.051399999999987e-05, 9.098600000000123e-05, 9.111100000000136e-05, 9.098600000000123e-05, 9.059700000000129e-05, 9.088900000000025e-05, 9.059800000000076e-05, 9.126300000000115e-05]</msg>
<status status="PASS" starttime="20201112 12:44:02.123" endtime="20201112 12:44:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.118" endtime="20201112 12:44:02.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.128" endtime="20201112 12:44:02.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.131" endtime="20201112 12:44:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.130" endtime="20201112 12:44:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.126" endtime="20201112 12:44:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.754" endtime="20201112 12:44:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.754" endtime="20201112 12:44:02.152"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.161" endtime="20201112 12:44:02.181"></status>
</kw>
<msg timestamp="20201112 12:44:02.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.159" endtime="20201112 12:44:02.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.182" endtime="20201112 12:44:02.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.185" endtime="20201112 12:44:02.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.157" endtime="20201112 12:44:02.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.154" endtime="20201112 12:44:02.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.195" endtime="20201112 12:44:02.492"></status>
</kw>
<msg timestamp="20201112 12:44:02.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.193" endtime="20201112 12:44:02.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.497" endtime="20201112 12:44:02.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.505" endtime="20201112 12:44:02.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.191" endtime="20201112 12:44:02.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.189" endtime="20201112 12:44:02.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.512" level="INFO">${RESULT} = [{'time': 0.020687431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.154200000000001e-05, 'source_diff': 9.154200000000001e-05}, {'time': 0.020788444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:02.508" endtime="20201112 12:44:02.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.525" level="INFO">${ACCURACY} = {'time': [0.020687431, 0.020788444, 0.020883458, 0.020980458, 0.021078472, 0.021177472, 0.021274486, 0.0213755, 0.021476514, 0.021577528, 0.021675597, 0.021772569, 0.021870569, 0.021968569, 0.02206756...</msg>
<status status="PASS" starttime="20201112 12:44:02.513" endtime="20201112 12:44:02.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.530" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.529" endtime="20201112 12:44:02.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.532" level="INFO">VALUE: [9.154200000000001e-05, 9.155500000000011e-05, 9.205500000000061e-05, 9.218000000000073e-05, 9.240300000000132e-05, 9.179100000000079e-05, 9.194400000000005e-05, 9.16529999999971e-05, 9.180599999999983e-05, 9.190299999999735e-05, 9.229100000000129e-05, 9.220799999999987e-05, 9.223599999999901e-05, 9.223599999999901e-05, 9.155500000000011e-05, 9.225000000000205e-05, 9.15000000000013e-05, 9.16939999999998e-05, 9.166700000000014e-05, 9.215300000000107e-05, 9.176399999999765e-05, 9.157000000000262e-05, 9.188900000000125e-05, 9.158400000000219e-05, 9.14870000000012e-05, 9.208299999999975e-05, 9.205499999999714e-05, 9.240300000000132e-05, 9.226400000000162e-05, 9.21529999999976e-05, 9.226400000000162e-05, 9.226399999999815e-05, 9.209699999999932e-05, 9.20139999999979e-05, 9.238899999999828e-05, 9.222299999999892e-05, 9.190200000000134e-05, 9.166600000000066e-05, 9.1639000000001e-05, 9.199999999999833e-05, 9.2333e-05, 9.243100000000046e-05, 9.187500000000168e-05, 9.208399999999922e-05, 9.179200000000026e-05, 9.206999999999965e-05, 9.177800000000069e-05, 9.179100000000079e-05, 9.194400000000005e-05, 9.21390000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:44:02.531" endtime="20201112 12:44:02.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.526" endtime="20201112 12:44:02.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.536" endtime="20201112 12:44:02.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.539" endtime="20201112 12:44:02.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.538" endtime="20201112 12:44:02.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.534" endtime="20201112 12:44:02.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.153" endtime="20201112 12:44:02.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.152" endtime="20201112 12:44:02.560"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.569" endtime="20201112 12:44:02.588"></status>
</kw>
<msg timestamp="20201112 12:44:02.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.567" endtime="20201112 12:44:02.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.589" endtime="20201112 12:44:02.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.592" endtime="20201112 12:44:02.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.565" endtime="20201112 12:44:02.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.563" endtime="20201112 12:44:02.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.602" endtime="20201112 12:44:02.886"></status>
</kw>
<msg timestamp="20201112 12:44:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.600" endtime="20201112 12:44:02.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.890" endtime="20201112 12:44:02.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.899" endtime="20201112 12:44:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.598" endtime="20201112 12:44:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.596" endtime="20201112 12:44:02.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.906" level="INFO">${RESULT} = [{'time': 0.020040139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.291699999999792e-05, 'source_diff': 9.291699999999792e-05}, {'time': 0.020143153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:02.902" endtime="20201112 12:44:02.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.919" level="INFO">${ACCURACY} = {'time': [0.020040139, 0.020143153, 0.020240167, 0.020340167, 0.020437181, 0.020533222, 0.020629264, 0.020728222, 0.020825236, 0.020924306, 0.02102425, 0.021121306, 0.021219292, 0.021317292, 0.0214173...</msg>
<status status="PASS" starttime="20201112 12:44:02.907" endtime="20201112 12:44:02.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.924" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.923" endtime="20201112 12:44:02.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.926" level="INFO">VALUE: [9.291699999999792e-05, 9.341700000000189e-05, 9.279200000000126e-05, 9.248599999999926e-05, 9.3333999999997e-05, 9.309700000000032e-05, 9.28330000000005e-05, 9.340300000000232e-05, 9.330500000000186e-05, 9.329200000000176e-05, 9.320800000000087e-05, 9.311199999999936e-05, 9.293100000000096e-05, 9.294500000000053e-05, 9.30139999999989e-05, 9.29720000000002e-05, 9.330500000000186e-05, 9.270800000000037e-05, 9.299999999999933e-05, 9.312499999999946e-05, 9.3333000000001e-05, 9.29720000000002e-05, 9.326399999999915e-05, 9.249999999999883e-05, 9.293100000000096e-05, 9.284799999999954e-05, 9.255599999999711e-05, 9.308300000000075e-05, 9.315199999999912e-05, 9.280499999999789e-05, 9.331900000000143e-05, 9.255500000000111e-05, 9.324999999999958e-05, 9.304199999999804e-05, 9.336099999999667e-05, 9.284800000000301e-05, 9.288900000000225e-05, 9.33200000000009e-05, 9.274999999999908e-05, 9.258300000000025e-05, 9.272199999999994e-05, 9.29720000000002e-05, 9.34590000000006e-05, 9.344400000000155e-05, 9.255600000000058e-05, 9.28200000000004e-05, 9.337499999999971e-05, 9.25000000000023e-05, 9.270899999999985e-05, 9.248599999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:44:02.925" endtime="20201112 12:44:02.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.920" endtime="20201112 12:44:02.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.930" endtime="20201112 12:44:02.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.933" endtime="20201112 12:44:02.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.932" endtime="20201112 12:44:02.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.928" endtime="20201112 12:44:02.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.561" endtime="20201112 12:44:02.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.561" endtime="20201112 12:44:02.954"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.963" endtime="20201112 12:44:02.980"></status>
</kw>
<msg timestamp="20201112 12:44:02.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.961" endtime="20201112 12:44:02.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.982" endtime="20201112 12:44:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.984" endtime="20201112 12:44:02.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.959" endtime="20201112 12:44:02.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.957" endtime="20201112 12:44:02.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.995" endtime="20201112 12:44:03.280"></status>
</kw>
<msg timestamp="20201112 12:44:03.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.993" endtime="20201112 12:44:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.284" endtime="20201112 12:44:03.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.293" endtime="20201112 12:44:03.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.991" endtime="20201112 12:44:03.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.989" endtime="20201112 12:44:03.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.300" level="INFO">${RESULT} = [{'time': 0.020101736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.381899999999846e-05, 'source_diff': 9.381899999999846e-05}, {'time': 0.02020075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:03.296" endtime="20201112 12:44:03.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.313" level="INFO">${ACCURACY} = {'time': [0.020101736, 0.02020075, 0.020299764, 0.020399778, 0.020502792, 0.020605792, 0.020707819, 0.020806819, 0.020906875, 0.021005875, 0.021107917, 0.021210861, 0.021314875, 0.021411889, 0.0215099...</msg>
<status status="PASS" starttime="20201112 12:44:03.301" endtime="20201112 12:44:03.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.317" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.316" endtime="20201112 12:44:03.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.320" level="INFO">VALUE: [9.381899999999846e-05, 9.36529999999991e-05, 9.394500000000153e-05, 9.44590000000016e-05, 9.405599999999861e-05, 9.429200000000276e-05, 9.379099999999932e-05, 9.387500000000021e-05, 9.451399999999693e-05, 9.390299999999935e-05, 9.413900000000003e-05, 9.434700000000157e-05, 9.434700000000157e-05, 9.430599999999886e-05, 9.430599999999886e-05, 9.38339999999975e-05, 9.37079999999979e-05, 9.386200000000011e-05, 9.381900000000193e-05, 9.436100000000114e-05, 9.426400000000015e-05, 9.402799999999947e-05, 9.426400000000015e-05, 9.345800000000112e-05, 9.441700000000289e-05, 9.387500000000021e-05, 9.395899999999763e-05, 9.388899999999978e-05, 9.372200000000094e-05, 9.354099999999907e-05, 9.377799999999922e-05, 9.358300000000125e-05, 9.433299999999853e-05, 9.442999999999951e-05, 9.390299999999935e-05, 9.437500000000071e-05, 9.412500000000046e-05, 9.380599999999836e-05, 9.438900000000028e-05, 9.43880000000008e-05, 9.369399999999833e-05, 9.406900000000218e-05, 9.39720000000012e-05, 9.409700000000132e-05, 9.375000000000008e-05, 9.37079999999979e-05, 9.416699999999917e-05, 9.357000000000115e-05, 9.348600000000026e-05, 9.443100000000246e-05]</msg>
<status status="PASS" starttime="20201112 12:44:03.319" endtime="20201112 12:44:03.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.314" endtime="20201112 12:44:03.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.324" endtime="20201112 12:44:03.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.327" endtime="20201112 12:44:03.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.325" endtime="20201112 12:44:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.322" endtime="20201112 12:44:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.955" endtime="20201112 12:44:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.954" endtime="20201112 12:44:03.348"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.357" endtime="20201112 12:44:03.376"></status>
</kw>
<msg timestamp="20201112 12:44:03.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.355" endtime="20201112 12:44:03.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.378" endtime="20201112 12:44:03.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.380" endtime="20201112 12:44:03.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.352" endtime="20201112 12:44:03.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.350" endtime="20201112 12:44:03.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.390" endtime="20201112 12:44:03.677"></status>
</kw>
<msg timestamp="20201112 12:44:03.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.389" endtime="20201112 12:44:03.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.681" endtime="20201112 12:44:03.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.690" endtime="20201112 12:44:03.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.386" endtime="20201112 12:44:03.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.384" endtime="20201112 12:44:03.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.696" level="INFO">${RESULT} = [{'time': 0.020367958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.48469999999986e-05, 'source_diff': 9.48469999999986e-05}, {'time': 0.020469972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:03.693" endtime="20201112 12:44:03.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.711" level="INFO">${ACCURACY} = {'time': [0.020367958, 0.020469972, 0.020571, 0.020671069, 0.020775014, 0.020878028, 0.020983069, 0.021083042, 0.021182056, 0.021284083, 0.021388083, 0.021486097, 0.021591167, 0.021693125, 0.021793139...</msg>
<status status="PASS" starttime="20201112 12:44:03.697" endtime="20201112 12:44:03.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.715" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.714" endtime="20201112 12:44:03.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.718" level="INFO">VALUE: [9.48469999999986e-05, 9.51530000000006e-05, 9.547199999999922e-05, 9.501300000000143e-05, 9.513900000000103e-05, 9.525000000000158e-05, 9.545799999999965e-05, 9.486099999999817e-05, 9.46530000000001e-05, 9.522199999999897e-05, 9.530500000000039e-05, 9.526399999999768e-05, 9.548600000000226e-05, 9.502800000000047e-05, 9.518099999999974e-05, 9.475000000000108e-05, 9.533400000000247e-05, 9.463900000000053e-05, 9.469500000000228e-05, 9.542999999999704e-05, 9.512500000000146e-05, 9.537500000000171e-05, 9.473599999999804e-05, 9.458300000000225e-05, 9.526399999999768e-05, 9.540300000000085e-05, 9.537499999999824e-05, 9.490200000000087e-05, 9.509699999999885e-05, 9.499999999999786e-05, 9.481899999999946e-05, 9.523599999999854e-05, 9.519499999999931e-05, 9.491699999999992e-05, 9.466699999999967e-05, 9.543000000000051e-05, 9.452799999999997e-05, 9.479199999999979e-05, 9.51530000000006e-05, 9.469399999999933e-05, 9.504200000000004e-05, 9.536199999999814e-05, 9.512499999999799e-05, 9.537499999999824e-05, 9.480499999999989e-05, 9.46530000000001e-05, 9.541700000000042e-05, 9.480599999999936e-05, 9.463900000000053e-05, 9.454199999999954e-05]</msg>
<status status="PASS" starttime="20201112 12:44:03.716" endtime="20201112 12:44:03.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.712" endtime="20201112 12:44:03.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.721" endtime="20201112 12:44:03.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.725" endtime="20201112 12:44:03.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.723" endtime="20201112 12:44:03.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.720" endtime="20201112 12:44:03.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.349" endtime="20201112 12:44:03.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.348" endtime="20201112 12:44:03.746"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.755" endtime="20201112 12:44:03.774"></status>
</kw>
<msg timestamp="20201112 12:44:03.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.753" endtime="20201112 12:44:03.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.775" endtime="20201112 12:44:03.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.778" endtime="20201112 12:44:03.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.750" endtime="20201112 12:44:03.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.748" endtime="20201112 12:44:03.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.788" endtime="20201112 12:44:04.073"></status>
</kw>
<msg timestamp="20201112 12:44:04.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020764639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020860444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.786" endtime="20201112 12:44:04.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020764639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020860444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.077" endtime="20201112 12:44:04.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.086" endtime="20201112 12:44:04.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.784" endtime="20201112 12:44:04.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.782" endtime="20201112 12:44:04.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.093" level="INFO">${RESULT} = [{'time': 0.020860444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580499999999742e-05, 'source_diff': 9.580499999999742e-05}, {'time': 0.020960431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.089" endtime="20201112 12:44:04.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.106" level="INFO">${ACCURACY} = {'time': [0.020860444, 0.020960431, 0.021062444, 0.021161458, 0.0212665, 0.021366486, 0.021467514, 0.021572514, 0.021677514, 0.021777528, 0.021879611, 0.021981556, 0.022083569, 0.022188583, 0.02228658...</msg>
<status status="PASS" starttime="20201112 12:44:04.094" endtime="20201112 12:44:04.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.111" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.109" endtime="20201112 12:44:04.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.113" level="INFO">VALUE: [9.580499999999742e-05, 9.604200000000104e-05, 9.63470000000001e-05, 9.583300000000003e-05, 9.631900000000096e-05, 9.626400000000215e-05, 9.619500000000031e-05, 9.583300000000003e-05, 9.565299999999763e-05, 9.636099999999967e-05, 9.622199999999997e-05, 9.645900000000013e-05, 9.59859999999993e-05, 9.590200000000187e-05, 9.573599999999904e-05, 9.613899999999856e-05, 9.57079999999999e-05, 9.605600000000061e-05, 9.593100000000049e-05, 9.625000000000258e-05, 9.602800000000147e-05, 9.575000000000208e-05, 9.618100000000074e-05, 9.569400000000033e-05, 9.583300000000003e-05, 9.587499999999874e-05, 9.56530000000011e-05, 9.608300000000028e-05, 9.552800000000097e-05, 9.629199999999782e-05, 9.570899999999938e-05, 9.623599999999954e-05, 9.56530000000011e-05, 9.577699999999828e-05, 9.625000000000258e-05, 9.590200000000187e-05, 9.555500000000064e-05, 9.613900000000203e-05, 9.556900000000021e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.623599999999954e-05, 9.591599999999798e-05, 9.62080000000004e-05, 9.63470000000001e-05, 9.623599999999954e-05, 9.565199999999816e-05, 9.572199999999947e-05, 9.609699999999985e-05, 9.54859999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:44:04.112" endtime="20201112 12:44:04.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.107" endtime="20201112 12:44:04.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.117" endtime="20201112 12:44:04.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.120" endtime="20201112 12:44:04.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.119" endtime="20201112 12:44:04.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.115" endtime="20201112 12:44:04.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.747" endtime="20201112 12:44:04.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.746" endtime="20201112 12:44:04.141"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.150" endtime="20201112 12:44:04.169"></status>
</kw>
<msg timestamp="20201112 12:44:04.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.148" endtime="20201112 12:44:04.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.170" endtime="20201112 12:44:04.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.173" endtime="20201112 12:44:04.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.146" endtime="20201112 12:44:04.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.143" endtime="20201112 12:44:04.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.183" endtime="20201112 12:44:04.467"></status>
</kw>
<msg timestamp="20201112 12:44:04.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.181" endtime="20201112 12:44:04.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.471" endtime="20201112 12:44:04.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.480" endtime="20201112 12:44:04.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.179" endtime="20201112 12:44:04.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.177" endtime="20201112 12:44:04.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.487" level="INFO">${RESULT} = [{'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.737500000000024e-05, 'source_diff': 9.737500000000024e-05}, {'time': 0.020108333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.483" endtime="20201112 12:44:04.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.500" level="INFO">${ACCURACY} = {'time': [0.020005306, 0.020108333, 0.020207333, 0.020314361, 0.020413417, 0.020517389, 0.020620389, 0.020724389, 0.020830417, 0.020935417, 0.021039431, 0.021142444, 0.021245458, 0.021351472, 0.021454...</msg>
<status status="PASS" starttime="20201112 12:44:04.488" endtime="20201112 12:44:04.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.504" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.503" endtime="20201112 12:44:04.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.507" level="INFO">VALUE: [9.737500000000024e-05, 9.723600000000054e-05, 9.64859999999998e-05, 9.742999999999905e-05, 9.661099999999992e-05, 9.673600000000004e-05, 9.691699999999845e-05, 9.651399999999893e-05, 9.705600000000161e-05, 9.655600000000111e-05, 9.720900000000088e-05, 9.674999999999961e-05, 9.649999999999936e-05, 9.712499999999999e-05, 9.69860000000003e-05, 9.729199999999882e-05, 9.673600000000004e-05, 9.709700000000085e-05, 9.725000000000011e-05, 9.658400000000025e-05, 9.698699999999977e-05, 9.659799999999982e-05, 9.686100000000017e-05, 9.720799999999793e-05, 9.738899999999981e-05, 9.658300000000078e-05, 9.687499999999974e-05, 9.73609999999972e-05, 9.736100000000067e-05, 9.652800000000197e-05, 9.66669999999982e-05, 9.658300000000078e-05, 9.73470000000011e-05, 9.659700000000035e-05, 9.72219999999975e-05, 9.705499999999867e-05, 9.665299999999863e-05, 9.677799999999875e-05, 9.682000000000093e-05, 9.69730000000002e-05, 9.663899999999906e-05, 9.680600000000136e-05, 9.681900000000146e-05, 9.681900000000146e-05, 9.708300000000128e-05, 9.651399999999893e-05, 9.718099999999827e-05, 9.661099999999992e-05, 9.712499999999999e-05, 9.72219999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:44:04.506" endtime="20201112 12:44:04.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.501" endtime="20201112 12:44:04.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.511" endtime="20201112 12:44:04.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.514" endtime="20201112 12:44:04.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.512" endtime="20201112 12:44:04.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.509" endtime="20201112 12:44:04.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.142" endtime="20201112 12:44:04.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.141" endtime="20201112 12:44:04.535"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.544" endtime="20201112 12:44:04.562"></status>
</kw>
<msg timestamp="20201112 12:44:04.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.542" endtime="20201112 12:44:04.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.564" endtime="20201112 12:44:04.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.566" endtime="20201112 12:44:04.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.540" endtime="20201112 12:44:04.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.537" endtime="20201112 12:44:04.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.576" endtime="20201112 12:44:04.863"></status>
</kw>
<msg timestamp="20201112 12:44:04.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.575" endtime="20201112 12:44:04.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.867" endtime="20201112 12:44:04.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.875" endtime="20201112 12:44:04.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.572" endtime="20201112 12:44:04.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.570" endtime="20201112 12:44:04.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.882" level="INFO">${RESULT} = [{'time': 0.020577431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.761200000000039e-05, 'source_diff': 9.761200000000039e-05}, {'time': 0.020680444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.879" endtime="20201112 12:44:04.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.896" level="INFO">${ACCURACY} = {'time': [0.020577431, 0.020680444, 0.020784444, 0.020890458, 0.020993486, 0.0211015, 0.021202542, 0.021304514, 0.021405514, 0.021506542, 0.021610569, 0.021714569, 0.021820569, 0.021927583, 0.02203463...</msg>
<status status="PASS" starttime="20201112 12:44:04.883" endtime="20201112 12:44:04.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.900" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.899" endtime="20201112 12:44:04.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.903" level="INFO">VALUE: [9.761200000000039e-05, 9.787500000000074e-05, 9.82219999999985e-05, 9.825000000000111e-05, 9.795799999999869e-05, 9.843099999999952e-05, 9.812500000000099e-05, 9.806999999999871e-05, 9.827800000000025e-05, 9.761100000000092e-05, 9.776300000000071e-05, 9.792999999999955e-05, 9.825000000000111e-05, 9.836100000000167e-05, 9.787500000000074e-05, 9.829100000000035e-05, 9.812500000000099e-05, 9.833399999999853e-05, 9.840300000000038e-05, 9.813900000000056e-05, 9.77920000000028e-05, 9.806999999999871e-05, 9.770900000000138e-05, 9.777699999999681e-05, 9.806899999999924e-05, 9.794400000000258e-05, 9.841699999999995e-05, 9.770799999999843e-05, 9.84860000000018e-05, 9.808299999999881e-05, 9.820900000000188e-05, 9.765299999999963e-05, 9.812500000000099e-05, 9.758300000000178e-05, 9.841600000000048e-05, 9.751399999999993e-05, 9.806899999999924e-05, 9.761100000000092e-05, 9.768099999999877e-05, 9.755599999999864e-05, 9.759699999999788e-05, 9.777799999999975e-05, 9.830499999999992e-05, 9.848599999999832e-05, 9.761099999999745e-05, 9.786100000000117e-05, 9.806899999999924e-05, 9.773600000000104e-05, 9.783300000000203e-05, 9.826400000000068e-05]</msg>
<status status="PASS" starttime="20201112 12:44:04.901" endtime="20201112 12:44:04.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.897" endtime="20201112 12:44:04.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.906" endtime="20201112 12:44:04.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.910" endtime="20201112 12:44:04.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.908" endtime="20201112 12:44:04.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.905" endtime="20201112 12:44:04.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.536" endtime="20201112 12:44:04.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.535" endtime="20201112 12:44:04.931"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.939" endtime="20201112 12:44:04.958"></status>
</kw>
<msg timestamp="20201112 12:44:04.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.938" endtime="20201112 12:44:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.960" endtime="20201112 12:44:04.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.962" endtime="20201112 12:44:04.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.935" endtime="20201112 12:44:04.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.933" endtime="20201112 12:44:04.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.972" endtime="20201112 12:44:05.262"></status>
</kw>
<msg timestamp="20201112 12:44:05.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020019861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.971" endtime="20201112 12:44:05.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020019861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.271" endtime="20201112 12:44:05.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.290" endtime="20201112 12:44:05.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.968" endtime="20201112 12:44:05.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.966" endtime="20201112 12:44:05.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.304" level="INFO">${RESULT} = [{'time': 0.020019861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.86670000000002e-05, 'source_diff': 9.86670000000002e-05}, {'time': 0.020126889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:05.297" endtime="20201112 12:44:05.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.336" level="INFO">${ACCURACY} = {'time': [0.020019861, 0.020126889, 0.020234903, 0.020339917, 0.020440931, 0.020545944, 0.020650972, 0.020754944, 0.020861972, 0.020965972, 0.021067986, 0.021174, 0.021281014, 0.021387042, 0.021492056...</msg>
<status status="PASS" starttime="20201112 12:44:05.306" endtime="20201112 12:44:05.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.345" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.343" endtime="20201112 12:44:05.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.348" level="INFO">VALUE: [9.86670000000002e-05, 9.877799999999728e-05, 9.859699999999888e-05, 9.89999999999984e-05, 9.869499999999934e-05, 9.852700000000103e-05, 9.924999999999864e-05, 9.893000000000055e-05, 9.851400000000093e-05, 9.909699999999938e-05, 9.924999999999864e-05, 9.895799999999969e-05, 9.908299999999981e-05, 9.897299999999873e-05, 9.84869999999978e-05, 9.908299999999981e-05, 9.937500000000224e-05, 9.924999999999864e-05, 9.873599999999857e-05, 9.894400000000012e-05, 9.901400000000143e-05, 9.863900000000106e-05, 9.890299999999741e-05, 9.856999999999921e-05, 9.884699999999913e-05, 9.901399999999796e-05, 9.881999999999946e-05, 9.89860000000023e-05, 9.915300000000113e-05, 9.913900000000156e-05, 9.945899999999966e-05, 9.923599999999907e-05, 9.934699999999963e-05, 9.904200000000057e-05, 9.934800000000257e-05, 9.902699999999806e-05, 9.897299999999873e-05, 9.873600000000204e-05, 9.881899999999999e-05, 9.856899999999974e-05, 9.930599999999692e-05, 9.884699999999913e-05, 9.905600000000014e-05, 9.908299999999981e-05, 9.854200000000007e-05, 9.919500000000331e-05, 9.88479999999986e-05, 9.863900000000106e-05, 9.883299999999956e-05, 9.929100000000135e-05]</msg>
<status status="PASS" starttime="20201112 12:44:05.347" endtime="20201112 12:44:05.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.338" endtime="20201112 12:44:05.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.352" endtime="20201112 12:44:05.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.355" endtime="20201112 12:44:05.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.354" endtime="20201112 12:44:05.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.350" endtime="20201112 12:44:05.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.932" endtime="20201112 12:44:05.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.931" endtime="20201112 12:44:05.376"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.385" endtime="20201112 12:44:05.405"></status>
</kw>
<msg timestamp="20201112 12:44:05.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.383" endtime="20201112 12:44:05.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.406" endtime="20201112 12:44:05.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.409" endtime="20201112 12:44:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.381" endtime="20201112 12:44:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.379" endtime="20201112 12:44:05.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.419" endtime="20201112 12:44:05.705"></status>
</kw>
<msg timestamp="20201112 12:44:05.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01993025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:05.418" endtime="20201112 12:44:05.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01993025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:05.709" endtime="20201112 12:44:05.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.718" endtime="20201112 12:44:05.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.415" endtime="20201112 12:44:05.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.413" endtime="20201112 12:44:05.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.724" level="INFO">${RESULT} = [{'time': 0.020030347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010009700000000038, 'source_diff': 0.00010009700000000038}, {'time': 0.020136375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:05.721" endtime="20201112 12:44:05.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.738" level="INFO">${ACCURACY} = {'time': [0.020030347, 0.020136375, 0.020238375, 0.020343389, 0.020447403, 0.020555417, 0.020663431, 0.020766431, 0.0208725, 0.020976458, 0.021083458, 0.021188486, 0.021292486, 0.0213975, 0.021503514,...</msg>
<status status="PASS" starttime="20201112 12:44:05.725" endtime="20201112 12:44:05.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.742" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.741" endtime="20201112 12:44:05.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.745" level="INFO">VALUE: [0.00010009700000000038, 0.00010047200000000076, 9.973599999999957e-05, 9.987499999999927e-05, 0.00010007000000000071, 0.00010024999999999964, 0.00010033400000000053, 0.00010023699999999955, 9.973599999999957e-05, 9.966599999999826e-05, 9.970800000000044e-05, 9.98609999999997e-05, 9.979199999999785e-05, 9.987499999999927e-05, 0.00010047200000000076, 0.00010038899999999934, 9.957000000000021e-05, 9.980500000000142e-05, 0.00010032000000000096, 9.95280000000015e-05, 9.956899999999727e-05, 0.00010004099999999863, 0.00010006899999999777, 9.977800000000175e-05, 0.00010025000000000311, 0.00010030599999999792, 9.974999999999914e-05, 9.95280000000015e-05, 0.00010025000000000311, 9.95410000000016e-05, 0.00010006900000000124, 0.00010034700000000063, 9.963899999999859e-05, 0.00010033300000000106, 0.00010033299999999759, 9.950000000000236e-05, 9.948599999999932e-05, 0.0001001809999999978, 0.00010037499999999977, 9.987499999999927e-05, 0.00010013899999999909, 0.00010008299999999734, 9.979099999999838e-05, 9.990300000000188e-05, 9.968100000000077e-05, 9.975000000000261e-05, 0.00010013900000000256, 9.982000000000046e-05, 9.962499999999902e-05, 9.988899999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:44:05.743" endtime="20201112 12:44:05.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.739" endtime="20201112 12:44:05.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.748" endtime="20201112 12:44:05.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.752" endtime="20201112 12:44:05.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.750" endtime="20201112 12:44:05.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.747" endtime="20201112 12:44:05.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.377" endtime="20201112 12:44:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.377" endtime="20201112 12:44:05.773"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.782" endtime="20201112 12:44:05.802"></status>
</kw>
<msg timestamp="20201112 12:44:05.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.780" endtime="20201112 12:44:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.804" endtime="20201112 12:44:05.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.806" endtime="20201112 12:44:05.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.777" endtime="20201112 12:44:05.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.775" endtime="20201112 12:44:05.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.817" endtime="20201112 12:44:06.103"></status>
</kw>
<msg timestamp="20201112 12:44:06.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.815" endtime="20201112 12:44:06.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.107" endtime="20201112 12:44:06.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.115" endtime="20201112 12:44:06.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.812" endtime="20201112 12:44:06.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.811" endtime="20201112 12:44:06.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.122" level="INFO">${RESULT} = [{'time': 0.020669264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010102799999999953, 'source_diff': 0.00010102799999999953}, {'time': 0.020773278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:06.119" endtime="20201112 12:44:06.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.135" level="INFO">${ACCURACY} = {'time': [0.020669264, 0.020773278, 0.020878292, 0.020985306, 0.021093333, 0.021201389, 0.021304333, 0.021413347, 0.021517375, 0.021627417, 0.021734389, 0.021843403, 0.021949417, 0.022055431, 0.022165...</msg>
<status status="PASS" starttime="20201112 12:44:06.123" endtime="20201112 12:44:06.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.140" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.139" endtime="20201112 12:44:06.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.142" level="INFO">VALUE: [0.00010102799999999953, 0.00010095899999999769, 0.00010065299999999916, 0.00010051399999999946, 0.00010051399999999946, 0.00010055600000000164, 0.00010079100000000285, 0.00010084699999999766, 0.00010083299999999809, 0.00010061100000000045, 0.00010094499999999812, 0.00010123600000000108, 0.00010083399999999756, 0.00010063899999999959, 0.00010137500000000077, 0.00010094399999999865, 0.00010054099999999913, 0.0001006800000000023, 0.00010056899999999827, 0.00010076399999999971, 0.0001013610000000012, 0.00010126400000000021, 0.00010138900000000034, 0.00010115299999999966, 0.00010083400000000103, 0.00010106899999999877, 0.00010138899999999687, 0.00010079199999999885, 0.00010143100000000252, 0.0001015000000000009, 0.00010097200000000126, 0.00010059699999999741, 0.00010068100000000177, 0.00010102799999999953, 0.00010141699999999948, 0.00010129099999999988, 0.00010056899999999827, 0.0001013610000000012, 0.00010083300000000156, 0.00010129199999999935, 0.00010144399999999915, 0.00010061099999999698, 0.00010090299999999941, 0.00010098600000000083, 0.00010058400000000078, 0.00010127700000000031, 0.00010084700000000113, 0.00010056900000000174, 0.00010090299999999941, 0.0001005280000000025]</msg>
<status status="PASS" starttime="20201112 12:44:06.141" endtime="20201112 12:44:06.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.136" endtime="20201112 12:44:06.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.146" endtime="20201112 12:44:06.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.149" endtime="20201112 12:44:06.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.148" endtime="20201112 12:44:06.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.144" endtime="20201112 12:44:06.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.774" endtime="20201112 12:44:06.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.773" endtime="20201112 12:44:06.170"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.179" endtime="20201112 12:44:06.199"></status>
</kw>
<msg timestamp="20201112 12:44:06.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.177" endtime="20201112 12:44:06.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.200" endtime="20201112 12:44:06.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.203" endtime="20201112 12:44:06.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.175" endtime="20201112 12:44:06.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.173" endtime="20201112 12:44:06.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.213" endtime="20201112 12:44:06.498"></status>
</kw>
<msg timestamp="20201112 12:44:06.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.211" endtime="20201112 12:44:06.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.502" endtime="20201112 12:44:06.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.510" endtime="20201112 12:44:06.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.208" endtime="20201112 12:44:06.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.207" endtime="20201112 12:44:06.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.517" level="INFO">${RESULT} = [{'time': 0.020628389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010191699999999998, 'source_diff': 0.00010191699999999998}, {'time': 0.020736403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:06.514" endtime="20201112 12:44:06.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.530" level="INFO">${ACCURACY} = {'time': [0.020628389, 0.020736403, 0.020841431, 0.020952431, 0.021060444, 0.021165472, 0.021277472, 0.021384486, 0.0214945, 0.0216015, 0.021710528, 0.021814583, 0.021923556, 0.022034583, 0.022143583,...</msg>
<status status="PASS" starttime="20201112 12:44:06.518" endtime="20201112 12:44:06.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.535" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.533" endtime="20201112 12:44:06.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.537" level="INFO">VALUE: [0.00010191699999999998, 0.0001016809999999993, 0.0001014870000000008, 0.00010188900000000084, 0.00010237500000000177, 0.0001015549999999997, 0.00010241599999999754, 0.00010218000000000033, 0.00010224999999999818, 0.0001016939999999994, 0.00010202800000000053, 0.00010161099999999798, 0.00010223700000000155, 0.00010240200000000144, 0.0001020000000000014, 0.00010226399999999775, 0.0001020000000000014, 0.00010237500000000177, 0.00010229200000000035, 0.00010158299999999884, 0.00010234699999999916, 0.00010201400000000097, 0.0001021809999999998, 0.00010213900000000109, 0.00010229099999999741, 0.00010158299999999884, 0.00010212499999999805, 0.00010236099999999873, 0.0001023749999999983, 0.00010172199999999854, 0.00010182000000000246, 0.00010188900000000084, 0.00010230599999999992, 0.00010223700000000155, 0.00010170900000000191, 0.00010231899999999655, 0.00010152800000000003, 0.00010202800000000053, 0.00010156899999999927, 0.00010219499999999937, 0.00010245899999999919, 0.00010234699999999916, 0.00010234799999999863, 0.00010180599999999942, 0.0001018619999999977, 0.00010231900000000002, 0.00010161099999999798, 0.00010194399999999965, 0.00010248600000000233, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201112 12:44:06.536" endtime="20201112 12:44:06.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.531" endtime="20201112 12:44:06.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.541" endtime="20201112 12:44:06.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.544" endtime="20201112 12:44:06.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.543" endtime="20201112 12:44:06.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.539" endtime="20201112 12:44:06.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.171" endtime="20201112 12:44:06.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.170" endtime="20201112 12:44:06.565"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.574" endtime="20201112 12:44:06.592"></status>
</kw>
<msg timestamp="20201112 12:44:06.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.572" endtime="20201112 12:44:06.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.594" endtime="20201112 12:44:06.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.596" endtime="20201112 12:44:06.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.570" endtime="20201112 12:44:06.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.568" endtime="20201112 12:44:06.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.606" endtime="20201112 12:44:06.896"></status>
</kw>
<msg timestamp="20201112 12:44:06.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.605" endtime="20201112 12:44:06.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.900" endtime="20201112 12:44:06.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.909" endtime="20201112 12:44:06.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.602" endtime="20201112 12:44:06.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.601" endtime="20201112 12:44:06.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.915" level="INFO">${RESULT} = [{'time': 0.020012958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010326400000000222, 'source_diff': 0.00010326400000000222}, {'time': 0.020120972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:06.912" endtime="20201112 12:44:06.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.929" level="INFO">${ACCURACY} = {'time': [0.020012958, 0.020120972, 0.020227986, 0.020337986, 0.020445056, 0.020550014, 0.020659028, 0.020766056, 0.020878069, 0.020984097, 0.021091069, 0.021199083, 0.021311111, 0.021420125, 0.021525...</msg>
<status status="PASS" starttime="20201112 12:44:06.916" endtime="20201112 12:44:06.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.934" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.933" endtime="20201112 12:44:06.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.936" level="INFO">VALUE: [0.00010326400000000222, 0.00010316600000000176, 0.00010313899999999862, 0.00010272199999999954, 0.0001028619999999987, 0.00010254199999999714, 0.00010347200000000029, 0.00010258400000000278, 0.00010283300000000009, 0.00010306900000000077, 0.0001030550000000012, 0.00010318000000000133, 0.00010336099999999973, 0.00010291700000000098, 0.00010248599999999886, 0.00010286099999999923, 0.0001026810000000003, 0.00010265299999999769, 0.00010261200000000192, 0.00010261200000000192, 0.00010312499999999905, 0.0001028610000000027, 0.00010298599999999936, 0.00010261099999999898, 0.00010315299999999819, 0.0001033749999999993, 0.00010265300000000116, 0.00010277800000000128, 0.00010251400000000147, 0.00010248599999999886, 0.000103416000000002, 0.00010311099999999948, 0.00010281900000000052, 0.00010258299999999984, 0.00010341700000000148, 0.00010329200000000135, 0.00010304199999999764, 0.00010334799999999963, 0.00010266700000000073, 0.0001033619999999992, 0.00010263799999999865, 0.00010291599999999804, 0.00010248600000000233, 0.00010316699999999776, 0.00010333400000000006, 0.00010269499999999987, 0.00010324999999999918, 0.0001027359999999991, 0.00010313900000000209, 0.00010312499999999905]</msg>
<status status="PASS" starttime="20201112 12:44:06.935" endtime="20201112 12:44:06.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.930" endtime="20201112 12:44:06.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.940" endtime="20201112 12:44:06.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.943" endtime="20201112 12:44:06.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.942" endtime="20201112 12:44:06.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.938" endtime="20201112 12:44:06.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.566" endtime="20201112 12:44:06.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.565" endtime="20201112 12:44:06.964"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.973" endtime="20201112 12:44:06.993"></status>
</kw>
<msg timestamp="20201112 12:44:06.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.972" endtime="20201112 12:44:06.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.994" endtime="20201112 12:44:06.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.997" endtime="20201112 12:44:06.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.969" endtime="20201112 12:44:07.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.967" endtime="20201112 12:44:07.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.007" endtime="20201112 12:44:07.292"></status>
</kw>
<msg timestamp="20201112 12:44:07.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.005" endtime="20201112 12:44:07.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.297" endtime="20201112 12:44:07.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.305" endtime="20201112 12:44:07.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.003" endtime="20201112 12:44:07.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.001" endtime="20201112 12:44:07.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.311" level="INFO">${RESULT} = [{'time': 0.020098625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010434699999999769, 'source_diff': 0.00010434699999999769}, {'time': 0.020205625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:07.308" endtime="20201112 12:44:07.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:07.324" level="INFO">${ACCURACY} = {'time': [0.020098625, 0.020205625, 0.020312639, 0.020424653, 0.020537681, 0.020649708, 0.020761694, 0.020873722, 0.020986722, 0.02109975, 0.02121175, 0.021324806, 0.021437806, 0.021544778, 0.02165780...</msg>
<status status="PASS" starttime="20201112 12:44:07.312" endtime="20201112 12:44:07.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.329" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:44:07.328" endtime="20201112 12:44:07.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.331" level="INFO">VALUE: [0.00010434699999999769, 0.00010399999999999993, 0.00010359700000000041, 0.0001043200000000015, 0.00010354199999999814, 0.00010380499999999848, 0.00010354100000000213, 0.00010379100000000238, 0.0001040689999999983, 0.00010362499999999955, 0.0001035420000000016, 0.00010394500000000112, 0.0001038619999999997, 0.00010399999999999993, 0.00010383400000000056, 0.00010441599999999954, 0.00010351299999999952, 0.00010415199999999972, 0.00010349999999999943, 0.0001036940000000014, 0.00010412500000000005, 0.0001037360000000001, 0.00010444500000000162, 0.00010397300000000026, 0.00010352799999999857, 0.00010442999999999911, 0.00010352699999999909, 0.00010369500000000087, 0.00010381899999999805, 0.00010436100000000073, 0.00010363900000000259, 0.00010352799999999857, 0.00010404199999999864, 0.0001043750000000003, 0.00010366699999999826, 0.00010434800000000063, 0.00010370800000000097, 0.00010429100000000288, 0.0001036940000000014, 0.00010348599999999986, 0.00010363899999999912, 0.00010394499999999765, 0.0001035420000000016, 0.0001036810000000013, 0.00010408400000000081, 0.00010422300000000051, 0.00010379099999999891, 0.00010377700000000281, 0.00010420800000000147, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201112 12:44:07.330" endtime="20201112 12:44:07.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.325" endtime="20201112 12:44:07.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.340" endtime="20201112 12:44:07.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.344" endtime="20201112 12:44:07.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.342" endtime="20201112 12:44:07.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.339" endtime="20201112 12:44:07.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.965" endtime="20201112 12:44:07.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.965" endtime="20201112 12:44:07.365"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.373" endtime="20201112 12:44:07.393"></status>
</kw>
<msg timestamp="20201112 12:44:07.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.372" endtime="20201112 12:44:07.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.394" endtime="20201112 12:44:07.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.397" endtime="20201112 12:44:07.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.369" endtime="20201112 12:44:07.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.367" endtime="20201112 12:44:07.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.407" endtime="20201112 12:44:07.692"></status>
</kw>
<msg timestamp="20201112 12:44:07.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:07.405" endtime="20201112 12:44:07.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:07.697" endtime="20201112 12:44:07.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.705" endtime="20201112 12:44:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.403" endtime="20201112 12:44:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.401" endtime="20201112 12:44:07.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.712" level="INFO">${RESULT} = [{'time': 0.020058292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010479199999999939, 'source_diff': 0.00010479199999999939}, {'time': 0.020167292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:07.708" endtime="20201112 12:44:07.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:07.725" level="INFO">${ACCURACY} = {'time': [0.020058292, 0.020167292, 0.020277306, 0.020385333, 0.020496333, 0.020610347, 0.020722361, 0.020834375, 0.020948389, 0.021056389, 0.021166403, 0.021274417, 0.021383444, 0.021491444, 0.021601...</msg>
<status status="PASS" starttime="20201112 12:44:07.713" endtime="20201112 12:44:07.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.729" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:44:07.728" endtime="20201112 12:44:07.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.732" level="INFO">VALUE: [0.00010479199999999939, 0.00010456999999999828, 0.00010511199999999749, 0.0001052499999999977, 0.00010522199999999857, 0.00010506900000000277, 0.00010544400000000315, 0.000105207999999999, 0.00010507000000000224, 0.0001052499999999977, 0.0001048750000000008, 0.00010476400000000025, 0.00010515200000000072, 0.00010454099999999966, 0.00010472200000000154, 0.00010512499999999758, 0.0001050140000000005, 0.00010527800000000032, 0.00010458299999999837, 0.0001050140000000005, 0.00010511100000000148, 0.0001048750000000008, 0.00010517999999999986, 0.00010463799999999718, 0.00010515200000000072, 0.00010508299999999887, 0.00010545799999999925, 0.00010529199999999989, 0.00010536100000000173, 0.00010491699999999951, 0.00010511099999999801, 0.00010470800000000197, 0.00010525000000000118, 0.00010484699999999819, 0.00010475000000000068, 0.0001052360000000016, 0.0001045689999999988, 0.00010526400000000075, 0.00010458400000000131, 0.00010545899999999872, 0.00010512500000000105, 0.00010468099999999883, 0.00010538799999999793, 0.00010486100000000123, 0.00010508300000000234, 0.0001050689999999993, 0.00010481900000000252, 0.00010450000000000043, 0.00010494500000000212, 0.00010457000000000174]</msg>
<status status="PASS" starttime="20201112 12:44:07.730" endtime="20201112 12:44:07.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.726" endtime="20201112 12:44:07.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.735" endtime="20201112 12:44:07.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.739" endtime="20201112 12:44:07.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.737" endtime="20201112 12:44:07.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.734" endtime="20201112 12:44:07.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.366" endtime="20201112 12:44:07.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.365" endtime="20201112 12:44:07.760"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.768" endtime="20201112 12:44:07.788"></status>
</kw>
<msg timestamp="20201112 12:44:07.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.767" endtime="20201112 12:44:07.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.789" endtime="20201112 12:44:07.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.792" endtime="20201112 12:44:07.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.764" endtime="20201112 12:44:07.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.762" endtime="20201112 12:44:07.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.802" endtime="20201112 12:44:08.090"></status>
</kw>
<msg timestamp="20201112 12:44:08.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.800" endtime="20201112 12:44:08.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.095" endtime="20201112 12:44:08.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.103" endtime="20201112 12:44:08.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.798" endtime="20201112 12:44:08.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.796" endtime="20201112 12:44:08.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.110" level="INFO">${RESULT} = [{'time': 0.020312194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010623599999999914, 'source_diff': 0.00010623599999999914}, {'time': 0.020424194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:08.107" endtime="20201112 12:44:08.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.123" level="INFO">${ACCURACY} = {'time': [0.020312194, 0.020424194, 0.020536208, 0.020645236, 0.020756278, 0.02086725, 0.02098025, 0.021088264, 0.021201278, 0.021314333, 0.021430361, 0.021542375, 0.021654333, 0.021763347, 0.02187436...</msg>
<status status="PASS" starttime="20201112 12:44:08.111" endtime="20201112 12:44:08.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.128" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.126" endtime="20201112 12:44:08.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.130" level="INFO">VALUE: [0.00010623599999999914, 0.00010616600000000129, 0.00010575000000000168, 0.00010555500000000023, 0.0001063889999999984, 0.00010616700000000076, 0.00010626399999999828, 0.0001055559999999997, 0.00010644500000000015, 0.00010577700000000134, 0.00010645799999999678, 0.00010597199999999932, 0.00010645800000000025, 0.00010561099999999851, 0.00010617999999999739, 0.00010576399999999778, 0.00010558399999999885, 0.0001057360000000021, 0.00010620899999999947, 0.00010633300000000012, 0.0001056949999999994, 0.00010634699999999969, 0.00010572199999999907, 0.0001060140000000015, 0.00010584700000000266, 0.00010630600000000046, 0.00010640299999999797, 0.00010620899999999947, 0.00010576399999999778, 0.00010599999999999846, 0.00010643000000000111, 0.00010630499999999751, 0.00010561099999999851, 0.0001063750000000023, 0.00010593000000000061, 0.00010608299999999987, 0.00010550000000000143, 0.00010623599999999914, 0.00010643000000000111, 0.0001055559999999997, 0.00010636099999999926, 0.0001063750000000023, 0.00010613899999999815, 0.00010645800000000025, 0.00010611099999999901, 0.00010588900000000137, 0.00010609699999999944, 0.00010601399999999803, 0.00010629200000000089, 0.00010627799999999785]</msg>
<status status="PASS" starttime="20201112 12:44:08.129" endtime="20201112 12:44:08.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.124" endtime="20201112 12:44:08.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.134" endtime="20201112 12:44:08.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.137" endtime="20201112 12:44:08.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.136" endtime="20201112 12:44:08.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.132" endtime="20201112 12:44:08.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.761" endtime="20201112 12:44:08.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.760" endtime="20201112 12:44:08.158"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.167" endtime="20201112 12:44:08.187"></status>
</kw>
<msg timestamp="20201112 12:44:08.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.165" endtime="20201112 12:44:08.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.188" endtime="20201112 12:44:08.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.191" endtime="20201112 12:44:08.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.162" endtime="20201112 12:44:08.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.160" endtime="20201112 12:44:08.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.201" endtime="20201112 12:44:08.484"></status>
</kw>
<msg timestamp="20201112 12:44:08.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02006175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:08.199" endtime="20201112 12:44:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02006175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:08.489" endtime="20201112 12:44:08.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.497" endtime="20201112 12:44:08.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.197" endtime="20201112 12:44:08.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.195" endtime="20201112 12:44:08.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.503" level="INFO">${RESULT} = [{'time': 0.02006175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010677799999999835, 'source_diff': 0.00010677799999999835}, {'time': 0.020174764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:44:08.500" endtime="20201112 12:44:08.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.518" level="INFO">${ACCURACY} = {'time': [0.02006175, 0.020174764, 0.020285778, 0.020401792, 0.020512806, 0.020624819, 0.020737819, 0.020853917, 0.020967847, 0.021078861, 0.021193889, 0.021305889, 0.021418903, 0.021532917, 0.0216479...</msg>
<status status="PASS" starttime="20201112 12:44:08.504" endtime="20201112 12:44:08.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.522" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.521" endtime="20201112 12:44:08.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.524" level="INFO">VALUE: [0.00010677799999999835, 0.00010675000000000268, 0.00010730600000000146, 0.0001070279999999986, 0.0001073620000000032, 0.00010694399999999771, 0.00010698599999999989, 0.00010697299999999979, 0.00010655500000000123, 0.00010736100000000026, 0.00010732000000000103, 0.00010734700000000069, 0.00010668100000000083, 0.00010648599999999939, 0.0001072629999999998, 0.00010740300000000244, 0.00010654099999999819, 0.00010722200000000057, 0.0001070690000000013, 0.00010649999999999896, 0.00010672200000000007, 0.00010740299999999897, 0.00010676399999999878, 0.00010647299999999929, 0.00010668100000000083, 0.0001065690000000008, 0.00010668000000000136, 0.00010726399999999928, 0.00010743099999999811, 0.00010741700000000201, 0.00010659699999999994, 0.00010666700000000126, 0.00010723600000000014, 0.00010701300000000302, 0.00010736100000000026, 0.00010658300000000037, 0.00010651399999999853, 0.0001072499999999997, 0.00010701399999999903, 0.00010688900000000237, 0.00010747200000000082, 0.00010665300000000169, 0.0001068340000000001, 0.00010655499999999776, 0.00010661099999999951, 0.00010717999999999839, 0.0001070690000000013, 0.00010665300000000169, 0.00010713899999999915, 0.00010709700000000044]</msg>
<status status="PASS" starttime="20201112 12:44:08.523" endtime="20201112 12:44:08.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.519" endtime="20201112 12:44:08.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.528" endtime="20201112 12:44:08.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.532" endtime="20201112 12:44:08.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.530" endtime="20201112 12:44:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.526" endtime="20201112 12:44:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.159" endtime="20201112 12:44:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.158" endtime="20201112 12:44:08.553"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.561" endtime="20201112 12:44:08.581"></status>
</kw>
<msg timestamp="20201112 12:44:08.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.560" endtime="20201112 12:44:08.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.582" endtime="20201112 12:44:08.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.585" endtime="20201112 12:44:08.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.557" endtime="20201112 12:44:08.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.555" endtime="20201112 12:44:08.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.595" endtime="20201112 12:44:08.880"></status>
</kw>
<msg timestamp="20201112 12:44:08.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.593" endtime="20201112 12:44:08.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.884" endtime="20201112 12:44:08.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.893" endtime="20201112 12:44:08.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.591" endtime="20201112 12:44:08.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.589" endtime="20201112 12:44:08.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.899" level="INFO">${RESULT} = [{'time': 0.019935986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010786100000000076, 'source_diff': 0.00010786100000000076}, {'time': 0.020048, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:08.896" endtime="20201112 12:44:08.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.912" level="INFO">${ACCURACY} = {'time': [0.019935986, 0.020048, 0.020165014, 0.020276069, 0.020389056, 0.020505056, 0.020621069, 0.020736083, 0.020849111, 0.020964111, 0.021076125, 0.021187208, 0.021299153, 0.021412153, 0.021527167...</msg>
<status status="PASS" starttime="20201112 12:44:08.900" endtime="20201112 12:44:08.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.917" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.916" endtime="20201112 12:44:08.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.919" level="INFO">VALUE: [0.00010786100000000076, 0.00010812500000000058, 0.00010812499999999711, 0.00010805499999999926, 0.00010811200000000049, 0.00010807000000000178, 0.00010800000000000046, 0.00010773600000000064, 0.00010787500000000033, 0.00010773600000000064, 0.00010759700000000094, 0.0001075829999999979, 0.00010807000000000178, 0.00010786100000000076, 0.00010797300000000079, 0.00010749999999999996, 0.00010805499999999926, 0.00010844399999999921, 0.0001077500000000002, 0.00010763899999999965, 0.00010813900000000015, 0.00010848599999999792, 0.00010748600000000039, 0.00010779199999999892, 0.00010766699999999879, 0.00010769399999999846, 0.00010829099999999994, 0.00010791699999999904, 0.00010811100000000101, 0.0001075560000000017, 0.00010840299999999997, 0.00010781999999999806, 0.00010791699999999904, 0.00010812500000000058, 0.00010766599999999932, 0.00010804100000000316, 0.00010836100000000126, 0.00010798600000000089, 0.00010811100000000101, 0.0001075690000000018, 0.00010824999999999724, 0.00010800000000000046, 0.00010800000000000046, 0.00010793100000000208, 0.00010772200000000107, 0.00010779099999999944, 0.00010756899999999833, 0.00010831899999999908, 0.00010786100000000076, 0.00010826400000000028]</msg>
<status status="PASS" starttime="20201112 12:44:08.918" endtime="20201112 12:44:08.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.913" endtime="20201112 12:44:08.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.923" endtime="20201112 12:44:08.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.926" endtime="20201112 12:44:08.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.925" endtime="20201112 12:44:08.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.921" endtime="20201112 12:44:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.553" endtime="20201112 12:44:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.553" endtime="20201112 12:44:08.947"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.956" endtime="20201112 12:44:08.976"></status>
</kw>
<msg timestamp="20201112 12:44:08.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.954" endtime="20201112 12:44:08.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.977" endtime="20201112 12:44:08.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.980" endtime="20201112 12:44:08.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.952" endtime="20201112 12:44:08.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.950" endtime="20201112 12:44:08.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.990" endtime="20201112 12:44:09.275"></status>
</kw>
<msg timestamp="20201112 12:44:09.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.989" endtime="20201112 12:44:09.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.280" endtime="20201112 12:44:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.288" endtime="20201112 12:44:09.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.986" endtime="20201112 12:44:09.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.984" endtime="20201112 12:44:09.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.294" level="INFO">${RESULT} = [{'time': 0.020332639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010859699999999847, 'source_diff': 0.00010859699999999847}, {'time': 0.020444653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:09.291" endtime="20201112 12:44:09.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:09.308" level="INFO">${ACCURACY} = {'time': [0.020332639, 0.020444653, 0.020560667, 0.020677681, 0.020795694, 0.020913722, 0.021028722, 0.021141736, 0.02125575, 0.021370778, 0.021483778, 0.021598806, 0.021714833, 0.021830819, 0.0219458...</msg>
<status status="PASS" starttime="20201112 12:44:09.296" endtime="20201112 12:44:09.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.312" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:44:09.311" endtime="20201112 12:44:09.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.315" level="INFO">VALUE: [0.00010859699999999847, 0.00010931999999999956, 0.00010926400000000128, 0.00010924999999999824, 0.00010880500000000001, 0.0001088890000000009, 0.00010890300000000047, 0.0001085690000000028, 0.00010941700000000054, 0.00010941700000000054, 0.00010858399999999838, 0.00010901400000000103, 0.00010899999999999799, 0.00010847200000000182, 0.00010948600000000239, 0.00010873599999999817, 0.00010916700000000029, 0.00010861099999999804, 0.00010945799999999978, 0.00010912500000000158, 0.00010858399999999838, 0.00010875000000000121, 0.00010879100000000044, 0.00010902699999999765, 0.00010865199999999728, 0.00010881899999999958, 0.00010919399999999996, 0.00010930599999999999, 0.00010886100000000176, 0.00010915300000000072, 0.00010904200000000017, 0.00010865300000000022, 0.00010880500000000001, 0.00010912500000000158, 0.00010880500000000001, 0.00010879100000000044, 0.00010929200000000042, 0.0001090829999999994, 0.00010880600000000296, 0.00010875000000000121, 0.00010933399999999913, 0.00010943100000000011, 0.00010926299999999833, 0.00010920799999999953, 0.00010930500000000051, 0.00010927800000000085, 0.00010937500000000183, 0.00010891700000000004, 0.0001090699999999993, 0.00010879199999999992]</msg>
<status status="PASS" starttime="20201112 12:44:09.313" endtime="20201112 12:44:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.309" endtime="20201112 12:44:09.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.318" endtime="20201112 12:44:09.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.322" endtime="20201112 12:44:09.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.320" endtime="20201112 12:44:09.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.317" endtime="20201112 12:44:09.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.948" endtime="20201112 12:44:09.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.948" endtime="20201112 12:44:09.343"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.351" endtime="20201112 12:44:09.370"></status>
</kw>
<msg timestamp="20201112 12:44:09.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.350" endtime="20201112 12:44:09.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.371" endtime="20201112 12:44:09.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.374" endtime="20201112 12:44:09.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.347" endtime="20201112 12:44:09.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.345" endtime="20201112 12:44:09.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.384" endtime="20201112 12:44:09.669"></status>
</kw>
<msg timestamp="20201112 12:44:09.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019881931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.382" endtime="20201112 12:44:09.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019881931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.673" endtime="20201112 12:44:09.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.681" endtime="20201112 12:44:09.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.380" endtime="20201112 12:44:09.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.378" endtime="20201112 12:44:09.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.688" level="INFO">${RESULT} = [{'time': 0.019991514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001095829999999999, 'source_diff': 0.0001095829999999999}, {'time': 0.020105569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:09.685" endtime="20201112 12:44:09.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:09.701" level="INFO">${ACCURACY} = {'time': [0.019991514, 0.020105569, 0.020218542, 0.020333556, 0.020451583, 0.020565597, 0.020677597, 0.020789611, 0.020903625, 0.021021639, 0.021139667, 0.021253681, 0.021366736, 0.021484681, 0.021599...</msg>
<status status="PASS" starttime="20201112 12:44:09.689" endtime="20201112 12:44:09.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.706" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:44:09.704" endtime="20201112 12:44:09.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.708" level="INFO">VALUE: [0.0001095829999999999, 0.00011031900000000108, 0.0001095699999999998, 0.00010987499999999886, 0.00010986099999999929, 0.00010956900000000033, 0.00010970800000000003, 0.00010980500000000101, 0.00011006899999999736, 0.00010951400000000153, 0.00011009799999999945, 0.00011037499999999936, 0.00010966700000000079, 0.00010972299999999907, 0.00011011099999999954, 0.00011006899999999736, 0.00010994400000000071, 0.00010997199999999985, 0.00010972299999999907, 0.00010965300000000122, 0.00010984699999999972, 0.0001097089999999995, 0.00010965299999999775, 0.00011033300000000065, 0.00011031900000000108, 0.00011024999999999924, 0.00010987499999999886, 0.00010980600000000049, 0.00011013899999999868, 0.00010968100000000036, 0.00010958399999999938, 0.00011043000000000164, 0.00010986099999999929, 0.00011002799999999813, 0.00010986099999999929, 0.00010948599999999892, 0.00010982000000000006, 0.00011025000000000271, 0.00011034700000000022, 0.00010959800000000242, 0.00010987499999999886, 0.00011019399999999749, 0.00011016699999999782, 0.00011037499999999936, 0.00010976399999999831, 0.00010948599999999892, 0.00010961099999999904, 0.00010982000000000006, 0.00011013899999999868, 0.00011000000000000246]</msg>
<status status="PASS" starttime="20201112 12:44:09.707" endtime="20201112 12:44:09.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.702" endtime="20201112 12:44:09.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.712" endtime="20201112 12:44:09.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.715" endtime="20201112 12:44:09.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.714" endtime="20201112 12:44:09.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.710" endtime="20201112 12:44:09.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.343" endtime="20201112 12:44:09.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.343" endtime="20201112 12:44:09.736"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.745" endtime="20201112 12:44:09.764"></status>
</kw>
<msg timestamp="20201112 12:44:09.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.743" endtime="20201112 12:44:09.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.765" endtime="20201112 12:44:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.768" endtime="20201112 12:44:09.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.741" endtime="20201112 12:44:09.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.739" endtime="20201112 12:44:09.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.778" endtime="20201112 12:44:10.064"></status>
</kw>
<msg timestamp="20201112 12:44:10.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.776" endtime="20201112 12:44:10.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.068" endtime="20201112 12:44:10.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.076" endtime="20201112 12:44:10.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.774" endtime="20201112 12:44:10.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.772" endtime="20201112 12:44:10.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.083" level="INFO">${RESULT} = [{'time': 0.019966819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011133300000000165, 'source_diff': 0.00011133300000000165}, {'time': 0.020081847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:10.079" endtime="20201112 12:44:10.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.097" level="INFO">${ACCURACY} = {'time': [0.019966819, 0.020081847, 0.020199847, 0.020320861, 0.020438875, 0.020552903, 0.020671903, 0.020790917, 0.020909931, 0.021025958, 0.021145958, 0.021259972, 0.021377, 0.021495, 0.021610014, 0...</msg>
<status status="PASS" starttime="20201112 12:44:10.084" endtime="20201112 12:44:10.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.101" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.100" endtime="20201112 12:44:10.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.104" level="INFO">VALUE: [0.00011133300000000165, 0.00011062499999999961, 0.00011116599999999935, 0.0001114029999999995, 0.00011095799999999781, 0.00011084700000000072, 0.00011084699999999725, 0.00011045900000000025, 0.0001110700000000013, 0.00011116599999999935, 0.00011065199999999928, 0.00011125000000000024, 0.00011051399999999906, 0.00011047200000000035, 0.00011126399999999981, 0.0001105700000000008, 0.00011073600000000017, 0.00011136100000000079, 0.00011140200000000003, 0.00011054099999999872, 0.00011075000000000321, 0.00011118100000000186, 0.00011127799999999938, 0.000110596999999997, 0.0001108480000000002, 0.00011069400000000146, 0.00011077799999999888, 0.00011130499999999904, 0.00011073600000000017, 0.00011054100000000219, 0.00011119400000000196, 0.00011119400000000196, 0.00011076399999999931, 0.00011061100000000004, 0.00011086100000000029, 0.00011126400000000328, 0.00011082000000000106, 0.00011131899999999861, 0.00011084700000000072, 0.00011101399999999956, 0.0001105700000000008, 0.00011076399999999931, 0.00011061100000000004, 0.00011137499999999689, 0.00011091699999999857, 0.00011055599999999777, 0.00011123600000000067, 0.0001105830000000009, 0.00011144400000000221, 0.00011129199999999895]</msg>
<status status="PASS" starttime="20201112 12:44:10.102" endtime="20201112 12:44:10.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.098" endtime="20201112 12:44:10.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.107" endtime="20201112 12:44:10.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.111" endtime="20201112 12:44:10.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.109" endtime="20201112 12:44:10.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.106" endtime="20201112 12:44:10.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.737" endtime="20201112 12:44:10.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.736" endtime="20201112 12:44:10.132"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.140" endtime="20201112 12:44:10.160"></status>
</kw>
<msg timestamp="20201112 12:44:10.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.139" endtime="20201112 12:44:10.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.162" endtime="20201112 12:44:10.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.164" endtime="20201112 12:44:10.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.136" endtime="20201112 12:44:10.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.134" endtime="20201112 12:44:10.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.175" endtime="20201112 12:44:10.459"></status>
</kw>
<msg timestamp="20201112 12:44:10.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.173" endtime="20201112 12:44:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020728986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.464" endtime="20201112 12:44:10.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.472" endtime="20201112 12:44:10.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.170" endtime="20201112 12:44:10.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.169" endtime="20201112 12:44:10.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.478" level="INFO">${RESULT} = [{'time': 0.020840556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011156999999999834, 'source_diff': 0.00011156999999999834}, {'time': 0.020962569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:10.475" endtime="20201112 12:44:10.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.491" level="INFO">${ACCURACY} = {'time': [0.020840556, 0.020962569, 0.021082597, 0.021198653, 0.021319611, 0.021437639, 0.021557639, 0.021675653, 0.021794681, 0.021913681, 0.022031694, 0.022151722, 0.022265736, 0.022386736, 0.022501...</msg>
<status status="PASS" starttime="20201112 12:44:10.479" endtime="20201112 12:44:10.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.496" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.495" endtime="20201112 12:44:10.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.498" level="INFO">VALUE: [0.00011156999999999834, 0.00011233299999999918, 0.00011175000000000074, 0.00011186100000000129, 0.00011236099999999832, 0.00011201400000000056, 0.00011225000000000124, 0.00011175000000000074, 0.00011245899999999878, 0.00011236200000000127, 0.00011247200000000235, 0.00011230500000000004, 0.00011175000000000074, 0.00011152799999999963, 0.00011162500000000061, 0.0001114029999999995, 0.0001117220000000016, 0.00011233400000000213, 0.00011149999999999702, 0.00011211200000000102, 0.00011202700000000065, 0.0001124160000000006, 0.00011177799999999988, 0.00011205599999999927, 0.00011195800000000228, 0.00011236099999999832, 0.00011162500000000061, 0.00011234799999999823, 0.00011232000000000256, 0.00011187500000000086, 0.00011154099999999972, 0.00011236099999999832, 0.00011247300000000182, 0.00011225000000000124, 0.00011158299999999843, 0.00011168100000000236, 0.00011236100000000179, 0.00011244399999999974, 0.00011202700000000065, 0.00011184699999999825, 0.00011211100000000154, 0.00011163900000000018, 0.00011161100000000104, 0.00011229199999999995, 0.0001120419999999997, 0.00011209800000000145, 0.00011233399999999866, 0.00011251400000000106, 0.00011162500000000061, 0.0001115549999999993]</msg>
<status status="PASS" starttime="20201112 12:44:10.497" endtime="20201112 12:44:10.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.492" endtime="20201112 12:44:10.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.502" endtime="20201112 12:44:10.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.505" endtime="20201112 12:44:10.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.504" endtime="20201112 12:44:10.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.500" endtime="20201112 12:44:10.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.133" endtime="20201112 12:44:10.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.132" endtime="20201112 12:44:10.526"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.535" endtime="20201112 12:44:10.554"></status>
</kw>
<msg timestamp="20201112 12:44:10.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.534" endtime="20201112 12:44:10.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.556" endtime="20201112 12:44:10.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.559" endtime="20201112 12:44:10.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.531" endtime="20201112 12:44:10.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.529" endtime="20201112 12:44:10.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.569" endtime="20201112 12:44:10.855"></status>
</kw>
<msg timestamp="20201112 12:44:10.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.567" endtime="20201112 12:44:10.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.859" endtime="20201112 12:44:10.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.868" endtime="20201112 12:44:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.564" endtime="20201112 12:44:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.563" endtime="20201112 12:44:10.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.875" level="INFO">${RESULT} = [{'time': 0.020149556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011309799999999898, 'source_diff': 0.00011309799999999898}, {'time': 0.020269556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:10.872" endtime="20201112 12:44:10.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.888" level="INFO">${ACCURACY} = {'time': [0.020149556, 0.020269556, 0.020390569, 0.020511611, 0.020630611, 0.020749694, 0.020865625, 0.020982681, 0.021103722, 0.021223722, 0.021346681, 0.021465694, 0.021587708, 0.021708764, 0.021829...</msg>
<status status="PASS" starttime="20201112 12:44:10.876" endtime="20201112 12:44:10.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.893" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.892" endtime="20201112 12:44:10.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.895" level="INFO">VALUE: [0.00011309799999999898, 0.00011319499999999996, 0.00011333300000000018, 0.00011279200000000045, 0.00011341700000000107, 0.00011276299999999836, 0.0001125420000000002, 0.00011334799999999923, 0.00011336099999999932, 0.00011261100000000204, 0.0001134169999999976, 0.00011298599999999895, 0.00011258299999999943, 0.00011280600000000002, 0.00011327799999999791, 0.00011318099999999692, 0.00011323699999999867, 0.00011343100000000064, 0.00011309799999999898, 0.00011308399999999941, 0.00011316600000000135, 0.0001125550000000003, 0.0001125830000000029, 0.00011276399999999784, 0.0001132359999999992, 0.00011254199999999673, 0.00011277800000000088, 0.00011279199999999698, 0.00011315300000000125, 0.00011332000000000009, 0.00011336100000000279, 0.00011329100000000147, 0.00011281900000000011, 0.00011348599999999945, 0.00011277800000000088, 0.00011265300000000075, 0.00011301399999999809, 0.00011305600000000027, 0.00011338900000000193, 0.00011265200000000128, 0.0001130550000000008, 0.00011288900000000143, 0.00011263900000000118, 0.00011291700000000057, 0.00011341700000000107, 0.00011341700000000107, 0.00011324999999999877, 0.00011309799999999898, 0.0001129160000000011, 0.00011261099999999857]</msg>
<status status="PASS" starttime="20201112 12:44:10.894" endtime="20201112 12:44:10.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.889" endtime="20201112 12:44:10.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.899" endtime="20201112 12:44:10.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.902" endtime="20201112 12:44:10.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.901" endtime="20201112 12:44:10.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.897" endtime="20201112 12:44:10.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.527" endtime="20201112 12:44:10.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.527" endtime="20201112 12:44:10.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.249" endtime="20201112 12:44:10.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.928" endtime="20201112 12:44:10.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.926" endtime="20201112 12:44:10.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.925" endtime="20201112 12:44:10.948"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:28.149" endtime="20201112 12:44:10.949" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:40.941" endtime="20201112 12:44:10.952"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.009" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:44:11.017" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:44:12.084" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:44:11.008" endtime="20201112 12:44:12.085"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.088" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:44:12.086" endtime="20201112 12:44:12.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.006" endtime="20201112 12:44:12.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.091" endtime="20201112 12:44:12.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.089" endtime="20201112 12:44:12.276"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.288" endtime="20201112 12:44:15.310"></status>
</kw>
<msg timestamp="20201112 12:44:15.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.286" endtime="20201112 12:44:15.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.313" endtime="20201112 12:44:15.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:44:15.318" endtime="20201112 12:44:15.323"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:12.284" endtime="20201112 12:44:15.324"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:12.282" endtime="20201112 12:44:15.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.280" endtime="20201112 12:44:15.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:44:15.336" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:44:15.334" endtime="20201112 12:44:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.328" endtime="20201112 12:44:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.280" endtime="20201112 12:44:15.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.279" endtime="20201112 12:44:15.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.339" endtime="20201112 12:44:15.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.278" endtime="20201112 12:44:15.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.346" endtime="20201112 12:44:15.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.276" endtime="20201112 12:44:15.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.005" endtime="20201112 12:44:15.351"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.363" endtime="20201112 12:44:15.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.360" endtime="20201112 12:44:15.386"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.413" endtime="20201112 12:44:18.433"></status>
</kw>
<msg timestamp="20201112 12:44:18.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.410" endtime="20201112 12:44:18.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.436" endtime="20201112 12:44:18.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.446" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:44:18.442" endtime="20201112 12:44:18.446"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:15.404" endtime="20201112 12:44:18.448"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:15.400" endtime="20201112 12:44:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.397" endtime="20201112 12:44:18.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:44:18.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:44:18.456" endtime="20201112 12:44:18.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.451" endtime="20201112 12:44:18.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.395" endtime="20201112 12:44:18.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.394" endtime="20201112 12:44:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.461" endtime="20201112 12:44:18.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.391" endtime="20201112 12:44:18.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.388" endtime="20201112 12:44:18.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.358" endtime="20201112 12:44:18.466"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:18.474" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.493" endtime="20201112 12:44:20.604"></status>
</kw>
<msg timestamp="20201112 12:44:20.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6087081, 'wakeups': [6097088, 6107088, 6117088, 6127088, 6137088, 6147...</msg>
<status status="PASS" starttime="20201112 12:44:18.490" endtime="20201112 12:44:20.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6087081, 'wakeups': [6097088, 6107088, 6117088, 6127088, 6137088, 6147...</msg>
<status status="PASS" starttime="20201112 12:44:20.607" endtime="20201112 12:44:20.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.614" endtime="20201112 12:44:20.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.484" endtime="20201112 12:44:20.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.478" endtime="20201112 12:44:20.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.625" level="INFO">${RESULT} = {'wakeups': [6097088, 6107088, 6117088, 6127088, 6137088, 6147088, 6157088, 6167088, 6177088, 6187088, 6197088, 6207088, 6217088, 6227088, 6237088, 6247088, 6257088, 6267088, 6277088, 6287088, 6297088...</msg>
<status status="PASS" starttime="20201112 12:44:20.621" endtime="20201112 12:44:20.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.634" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:20.632" endtime="20201112 12:44:20.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.638" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:20.636" endtime="20201112 12:44:20.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.627" endtime="20201112 12:44:20.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.648" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:20.646" endtime="20201112 12:44:20.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.652" level="INFO">VALUE: 6087081</msg>
<status status="PASS" starttime="20201112 12:44:20.650" endtime="20201112 12:44:20.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.641" endtime="20201112 12:44:20.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.657" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:20.656" endtime="20201112 12:44:20.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.659" level="INFO">VALUE: [6097088, 6107088, 6117088, 6127088, 6137088, 6147088, 6157088, 6167088, 6177088, 6187088, 6197088, 6207088, 6217088, 6227088, 6237088, 6247088, 6257088, 6267088, 6277088, 6287088, 6297088, 6307088, 6317088, 6327088, 6337088, 6347088, 6357088, 6367088, 6377088, 6387088, 6397088, 6407088, 6417088, 6427088, 6437088, 6447088, 6457088, 6467088, 6477088, 6487088, 6497088, 6507088, 6517088, 6527088, 6537088, 6547088, 6557088, 6567088, 6577088, 6587088, 6597088, 6607088, 6617088, 6627088, 6637088, 6647088, 6657088, 6667088, 6677088, 6687088, 6697088, 6707088, 6717088, 6727088, 6737088, 6747088, 6757088, 6767088, 6777088, 6787088, 6797088, 6807088, 6817088, 6827088, 6837088, 6847088, 6857088, 6867088, 6877088, 6887088, 6897088, 6907088, 6917088, 6927088, 6937088, 6947088, 6957088, 6967088, 6977088, 6987088, 6997088, 7007088, 7017088, 7027088, 7037088, 7047088, 7057088, 7067088, 7077088, 7087088]</msg>
<status status="PASS" starttime="20201112 12:44:20.658" endtime="20201112 12:44:20.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.654" endtime="20201112 12:44:20.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.667" endtime="20201112 12:44:20.972"></status>
</kw>
<msg timestamp="20201112 12:44:20.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.129881861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.665" endtime="20201112 12:44:20.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.129881861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.976" endtime="20201112 12:44:20.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.984" endtime="20201112 12:44:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.662" endtime="20201112 12:44:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.661" endtime="20201112 12:44:20.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.011" level="INFO">${RESULT} = {'time': [3.119873597, 3.129881861, 3.139882972, 3.149884111, 3.159885264, 3.169886375, 3.179887597, 3.189888681, 3.199889819, 3.209890931, 3.219892125, 3.229893208, 3.239894375, 3.249895486, 3.259896...</msg>
<status status="PASS" starttime="20201112 12:44:20.987" endtime="20201112 12:44:21.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.016" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:21.014" endtime="20201112 12:44:21.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.018" level="INFO">VALUE: 3.119873597</msg>
<status status="PASS" starttime="20201112 12:44:21.017" endtime="20201112 12:44:21.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.012" endtime="20201112 12:44:21.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.023" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:21.022" endtime="20201112 12:44:21.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.026" level="INFO">VALUE: [3.129881861, 3.139882972, 3.149884111, 3.159885264, 3.169886375, 3.179887597, 3.189888681, 3.199889819, 3.209890931, 3.219892125, 3.229893208, 3.239894375, 3.249895486, 3.259896667, 3.269897764, 3.279898972, 3.289900083, 3.299901236, 3.309902319, 3.319903486, 3.329904611, 3.339905778, 3.349906917, 3.359908042, 3.369909167, 3.379910347, 3.389911458, 3.399912597, 3.409913736, 3.419914875, 3.429916014, 3.439917167, 3.449918278, 3.459919458, 3.469920569, 3.479921722, 3.489922833, 3.499924, 3.509925111, 3.519926292, 3.529927403, 3.539928556, 3.549929667, 3.559930847, 3.569931986, 3.579933125, 3.589934236, 3.599935389, 3.609936542, 3.619937667, 3.629938875, 3.639939944, 3.649941069, 3.659942236, 3.669943347, 3.679944528, 3.689945639, 3.699946806, 3.709947917, 3.719949069, 3.729950181, 3.739951347, 3.749952458, 3.759953639, 3.769954778, 3.779955903, 3.789957042, 3.799958181, 3.809959306, 3.819960486, 3.829961597, 3.839962736, 3.849963875, 3.859965014, 3.869966139, 3.879967347, 3.889968417, 3.899969583, 3.909970736, 3.919971875, 3.929972972, 3.939974139, 3.949975264, 3.959976431, 3.969977528, 3.979978708, 3.989979806, 3.999980972, 4.009982097, 4.019983306, 4.029984361, 4.039985542, 4.049986639, 4.059987819, 4.069988931, 4.079990153, 4.089991222, 4.099992361, 4.1099935, 4.119994653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:21.025" endtime="20201112 12:44:21.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.020" endtime="20201112 12:44:21.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.029" endtime="20201112 12:44:21.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:21.032" endtime="20201112 12:44:21.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.031" endtime="20201112 12:44:21.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.027" endtime="20201112 12:44:21.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.475" endtime="20201112 12:44:21.053"></status>
</kw>
<msg timestamp="20201112 12:44:21.053" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.061" endtime="20201112 12:44:23.170"></status>
</kw>
<msg timestamp="20201112 12:44:23.171" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8653787, 'wakeups': [8663794, 8673794, 8683794, 8693794, 8703794, 8713...</msg>
<status status="PASS" starttime="20201112 12:44:21.060" endtime="20201112 12:44:23.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.177" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8653787, 'wakeups': [8663794, 8673794, 8683794, 8693794, 8703794, 8713...</msg>
<status status="PASS" starttime="20201112 12:44:23.173" endtime="20201112 12:44:23.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.180" endtime="20201112 12:44:23.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.057" endtime="20201112 12:44:23.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.055" endtime="20201112 12:44:23.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.191" level="INFO">${RESULT} = {'wakeups': [8663794, 8673794, 8683794, 8693794, 8703794, 8713794, 8723794, 8733794, 8743794, 8753794, 8763794, 8773794, 8783794, 8793794, 8803794, 8813794, 8823794, 8833794, 8843794, 8853794, 8863794...</msg>
<status status="PASS" starttime="20201112 12:44:23.187" endtime="20201112 12:44:23.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.202" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:23.198" endtime="20201112 12:44:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.207" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:23.205" endtime="20201112 12:44:23.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.193" endtime="20201112 12:44:23.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.213" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:23.211" endtime="20201112 12:44:23.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.215" level="INFO">VALUE: 8653787</msg>
<status status="PASS" starttime="20201112 12:44:23.214" endtime="20201112 12:44:23.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.209" endtime="20201112 12:44:23.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.220" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:23.219" endtime="20201112 12:44:23.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.222" level="INFO">VALUE: [8663794, 8673794, 8683794, 8693794, 8703794, 8713794, 8723794, 8733794, 8743794, 8753794, 8763794, 8773794, 8783794, 8793794, 8803794, 8813794, 8823794, 8833794, 8843794, 8853794, 8863794, 8873794, 8883794, 8893794, 8903794, 8913794, 8923794, 8933794, 8943794, 8953794, 8963794, 8973794, 8983794, 8993794, 9003794, 9013794, 9023794, 9033794, 9043794, 9053794, 9063794, 9073794, 9083794, 9093794, 9103794, 9113794, 9123794, 9133794, 9143794, 9153794, 9163794, 9173794, 9183794, 9193794, 9203794, 9213794, 9223794, 9233794, 9243794, 9253794, 9263794, 9273794, 9283794, 9293794, 9303794, 9313794, 9323794, 9333794, 9343794, 9353794, 9363794, 9373794, 9383794, 9393794, 9403794, 9413794, 9423794, 9433794, 9443794, 9453794, 9463794, 9473794, 9483794, 9493794, 9503794, 9513794, 9523794, 9533794, 9543794, 9553794, 9563794, 9573794, 9583794, 9593794, 9603794, 9613794, 9623794, 9633794, 9643794, 9653794]</msg>
<status status="PASS" starttime="20201112 12:44:23.221" endtime="20201112 12:44:23.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.216" endtime="20201112 12:44:23.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.229" endtime="20201112 12:44:23.521"></status>
</kw>
<msg timestamp="20201112 12:44:23.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018216181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028224736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.228" endtime="20201112 12:44:23.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018216181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028224736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.525" endtime="20201112 12:44:23.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.532" endtime="20201112 12:44:23.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.225" endtime="20201112 12:44:23.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.223" endtime="20201112 12:44:23.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.558" level="INFO">${RESULT} = {'time': [0.018216181, 0.028224736, 0.038225889, 0.048227, 0.058228167, 0.068229306, 0.078230472, 0.088231569, 0.098232806, 0.108233861, 0.118235014, 0.128236139, 0.138237319, 0.148238431, 0.158239583...</msg>
<status status="PASS" starttime="20201112 12:44:23.535" endtime="20201112 12:44:23.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.563" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:23.562" endtime="20201112 12:44:23.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.565" level="INFO">VALUE: 0.018216181</msg>
<status status="PASS" starttime="20201112 12:44:23.564" endtime="20201112 12:44:23.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.559" endtime="20201112 12:44:23.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.571" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:23.570" endtime="20201112 12:44:23.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.573" level="INFO">VALUE: [0.028224736, 0.038225889, 0.048227, 0.058228167, 0.068229306, 0.078230472, 0.088231569, 0.098232806, 0.108233861, 0.118235014, 0.128236139, 0.138237319, 0.148238431, 0.158239583, 0.168240722, 0.178241903, 0.188243, 0.198244153, 0.208245319, 0.218246444, 0.228247556, 0.238248722, 0.248249833, 0.258251014, 0.268252125, 0.278253292, 0.288254486, 0.298255569, 0.308256736, 0.318257861, 0.328258972, 0.338260139, 0.348261264, 0.358262444, 0.368263569, 0.378264722, 0.388265847, 0.398267042, 0.408268153, 0.418269292, 0.428270403, 0.438271583, 0.448272694, 0.458273861, 0.468274986, 0.478276194, 0.488277292, 0.498278431, 0.508279556, 0.518280708, 0.528281833, 0.538283, 0.548284125, 0.558285278, 0.568286403, 0.578287556, 0.588288667, 0.598289833, 0.608290972, 0.618292111, 0.628293222, 0.638294389, 0.648295486, 0.658296653, 0.668297778, 0.678298917, 0.688300028, 0.698301208, 0.708302319, 0.718303458, 0.728304597, 0.738305764, 0.748306847, 0.758308028, 0.768309125, 0.778310278, 0.788311389, 0.798312556, 0.808313667, 0.818314833, 0.828315958, 0.838317111, 0.848318208, 0.858319444, 0.868320486, 0.878321653, 0.888322778, 0.898323917, 0.908325042, 0.918326208, 0.928327319, 0.938328472, 0.948329583, 0.958330764, 0.968331917, 0.978333028, 0.988334125, 0.998335292, 1.008336403, 1.018337569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:23.572" endtime="20201112 12:44:23.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.567" endtime="20201112 12:44:23.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.577" endtime="20201112 12:44:23.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.580" endtime="20201112 12:44:23.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.579" endtime="20201112 12:44:23.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.575" endtime="20201112 12:44:23.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.054" endtime="20201112 12:44:23.601"></status>
</kw>
<msg timestamp="20201112 12:44:23.601" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.609" endtime="20201112 12:44:25.728"></status>
</kw>
<msg timestamp="20201112 12:44:25.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11201696, 'wakeups': [11211703, 11221703, 11231703, 11241703, 11251703...</msg>
<status status="PASS" starttime="20201112 12:44:23.608" endtime="20201112 12:44:25.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11201696, 'wakeups': [11211703, 11221703, 11231703, 11241703, 11251703...</msg>
<status status="PASS" starttime="20201112 12:44:25.732" endtime="20201112 12:44:25.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.738" endtime="20201112 12:44:25.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.605" endtime="20201112 12:44:25.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.603" endtime="20201112 12:44:25.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.749" level="INFO">${RESULT} = {'wakeups': [11211703, 11221703, 11231703, 11241703, 11251703, 11261703, 11271703, 11281703, 11291703, 11301703, 11311703, 11321703, 11331703, 11341703, 11351703, 11361703, 11371703, 11381703, 1139170...</msg>
<status status="PASS" starttime="20201112 12:44:25.744" endtime="20201112 12:44:25.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.757" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:25.755" endtime="20201112 12:44:25.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.761" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:25.759" endtime="20201112 12:44:25.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.750" endtime="20201112 12:44:25.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.770" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.769" endtime="20201112 12:44:25.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.772" level="INFO">VALUE: 11201696</msg>
<status status="PASS" starttime="20201112 12:44:25.771" endtime="20201112 12:44:25.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.764" endtime="20201112 12:44:25.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.777" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.776" endtime="20201112 12:44:25.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.779" level="INFO">VALUE: [11211703, 11221703, 11231703, 11241703, 11251703, 11261703, 11271703, 11281703, 11291703, 11301703, 11311703, 11321703, 11331703, 11341703, 11351703, 11361703, 11371703, 11381703, 11391703, 11401703, 11411703, 11421703, 11431703, 11441703, 11451703, 11461703, 11471703, 11481703, 11491703, 11501703, 11511703, 11521703, 11531703, 11541703, 11551703, 11561703, 11571703, 11581703, 11591703, 11601703, 11611703, 11621703, 11631703, 11641703, 11651703, 11661703, 11671703, 11681703, 11691703, 11701703, 11711703, 11721703, 11731703, 11741703, 11751703, 11761703, 11771703, 11781703, 11791703, 11801703, 11811703, 11821703, 11831703, 11841703, 11851703, 11861703, 11871703, 11881703, 11891703, 11901703, 11911703, 11921703, 11931703, 11941703, 11951703, 11961703, 11971703, 11981703, 11991703, 12001703, 12011703, 12021703, 12031703, 12041703, 12051703, 12061703, 12071703, 12081703, 12091703, 12101703, 12111703, 12121703, 12131703, 12141703, 12151703, 12161703, 12171703, 12181703, 12191703, 12201703]</msg>
<status status="PASS" starttime="20201112 12:44:25.778" endtime="20201112 12:44:25.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.773" endtime="20201112 12:44:25.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.846" endtime="20201112 12:44:26.138"></status>
</kw>
<msg timestamp="20201112 12:44:26.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028268264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.845" endtime="20201112 12:44:26.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018259347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028268264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.141" endtime="20201112 12:44:26.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.149" endtime="20201112 12:44:26.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.841" endtime="20201112 12:44:26.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.781" endtime="20201112 12:44:26.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:26.176" level="INFO">${RESULT} = {'time': [0.018259347, 0.028268264, 0.038269472, 0.048270528, 0.058271694, 0.068272806, 0.078273972, 0.088275097, 0.098276264, 0.108277375, 0.118278542, 0.128279653, 0.138280819, 0.148281972, 0.158283...</msg>
<status status="PASS" starttime="20201112 12:44:26.153" endtime="20201112 12:44:26.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.180" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:26.179" endtime="20201112 12:44:26.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.182" level="INFO">VALUE: 0.018259347</msg>
<status status="PASS" starttime="20201112 12:44:26.181" endtime="20201112 12:44:26.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.176" endtime="20201112 12:44:26.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.187" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:26.186" endtime="20201112 12:44:26.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.190" level="INFO">VALUE: [0.028268264, 0.038269472, 0.048270528, 0.058271694, 0.068272806, 0.078273972, 0.088275097, 0.098276264, 0.108277375, 0.118278542, 0.128279653, 0.138280819, 0.148281972, 0.158283111, 0.168284222, 0.178285389, 0.188286528, 0.198287667, 0.208288792, 0.21829, 0.228291083, 0.238292278, 0.248293389, 0.258294528, 0.268295694, 0.278296806, 0.288297972, 0.298299111, 0.308300222, 0.318301389, 0.328302486, 0.338303653, 0.348304778, 0.358306, 0.368307111, 0.378308222, 0.388309347, 0.398310514, 0.408311639, 0.418312792, 0.428313944, 0.438315083, 0.448316208, 0.458317361, 0.4683185, 0.478319667, 0.488320778, 0.498321944, 0.508323069, 0.518324222, 0.528325347, 0.538326514, 0.548327639, 0.558328806, 0.568329917, 0.578331083, 0.588332194, 0.598333361, 0.6083345, 0.618335653, 0.628336778, 0.638338, 0.648339069, 0.658340222, 0.668341333, 0.678342514, 0.688343625, 0.698344792, 0.708345917, 0.718347069, 0.728348208, 0.738349361, 0.748350472, 0.758351639, 0.768352764, 0.778353931, 0.788355056, 0.798356222, 0.808357333, 0.8183585, 0.828359611, 0.838360778, 0.848361917, 0.858363056, 0.868364167, 0.878365333, 0.888366444, 0.898367639, 0.908368722, 0.918369931, 0.928371, 0.938372167, 0.948373264, 0.958374431, 0.968375597, 0.978376694, 0.988377833, 0.998378972, 1.008380069, 1.018381236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:26.189" endtime="20201112 12:44:26.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.183" endtime="20201112 12:44:26.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.193" endtime="20201112 12:44:26.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:26.196" endtime="20201112 12:44:26.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.194" endtime="20201112 12:44:26.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.191" endtime="20201112 12:44:26.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.602" endtime="20201112 12:44:26.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.471" endtime="20201112 12:44:26.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.469" endtime="20201112 12:44:26.217"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:26.220" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.229" endtime="20201112 12:44:28.330"></status>
</kw>
<msg timestamp="20201112 12:44:28.331" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13821835, 'wakeups': [13831851, 13841850, 13851850, 13861850, 13871850...</msg>
<status status="PASS" starttime="20201112 12:44:26.227" endtime="20201112 12:44:28.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13821835, 'wakeups': [13831851, 13841850, 13851850, 13861850, 13871850...</msg>
<status status="PASS" starttime="20201112 12:44:28.332" endtime="20201112 12:44:28.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.335" endtime="20201112 12:44:28.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.224" endtime="20201112 12:44:28.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.222" endtime="20201112 12:44:28.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.341" level="INFO">${RESULT} = {'wakeups': [13831851, 13841850, 13851850, 13861850, 13871850, 13881850, 13891850, 13901850, 13911850, 13921850, 13931850, 13941850, 13951850, 13961850, 13971850, 13981850, 13991850, 14001850, 1401185...</msg>
<status status="PASS" starttime="20201112 12:44:28.339" endtime="20201112 12:44:28.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.346" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:28.345" endtime="20201112 12:44:28.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.348" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:28.347" endtime="20201112 12:44:28.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.342" endtime="20201112 12:44:28.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.353" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:28.352" endtime="20201112 12:44:28.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.355" level="INFO">VALUE: 13821835</msg>
<status status="PASS" starttime="20201112 12:44:28.354" endtime="20201112 12:44:28.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.349" endtime="20201112 12:44:28.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.360" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:28.359" endtime="20201112 12:44:28.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.362" level="INFO">VALUE: [13831851, 13841850, 13851850, 13861850, 13871850, 13881850, 13891850, 13901850, 13911850, 13921850, 13931850, 13941850, 13951850, 13961850, 13971850, 13981850, 13991850, 14001850, 14011850, 14021850, 14031850, 14041850, 14051850, 14061850, 14071850, 14081850, 14091850, 14101850, 14111850, 14121850, 14131850, 14141850, 14151850, 14161850, 14171850, 14181850, 14191850, 14201850, 14211850, 14221850, 14231850, 14241850, 14251850, 14261850, 14271850, 14281850, 14291850, 14301850, 14311850, 14321850, 14331850, 14341850, 14351850, 14361850, 14371850, 14381850, 14391850, 14401850, 14411850, 14421850, 14431850, 14441850, 14451850, 14461850, 14471850, 14481850, 14491850, 14501850, 14511850, 14521850, 14531850, 14541850, 14551850, 14561850, 14571850, 14581850, 14591850, 14601850, 14611850, 14621850, 14631850, 14641850, 14651850, 14661850, 14671850, 14681850, 14691850, 14701850, 14711850, 14721850, 14731850, 14741850, 14751850, 14761850, 14771850, 14781850, 14791850, 14801850, 14811850, 14821850]</msg>
<status status="PASS" starttime="20201112 12:44:28.361" endtime="20201112 12:44:28.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.356" endtime="20201112 12:44:28.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.369" endtime="20201112 12:44:28.661"></status>
</kw>
<msg timestamp="20201112 12:44:28.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032437708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.368" endtime="20201112 12:44:28.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032437708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.665" endtime="20201112 12:44:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.673" endtime="20201112 12:44:28.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.365" endtime="20201112 12:44:28.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.363" endtime="20201112 12:44:28.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.699" level="INFO">${RESULT} = {'time': [0.022421083, 0.032437708, 0.042437889, 0.052438986, 0.062440153, 0.072441292, 0.082442444, 0.092443556, 0.102444764, 0.112445847, 0.122447028, 0.132448125, 0.142449292, 0.152450403, 0.162451...</msg>
<status status="PASS" starttime="20201112 12:44:28.676" endtime="20201112 12:44:28.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.704" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:28.703" endtime="20201112 12:44:28.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.706" level="INFO">VALUE: 0.022421083</msg>
<status status="PASS" starttime="20201112 12:44:28.705" endtime="20201112 12:44:28.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.700" endtime="20201112 12:44:28.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.711" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:28.710" endtime="20201112 12:44:28.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.713" level="INFO">VALUE: [0.032437708, 0.042437889, 0.052438986, 0.062440153, 0.072441292, 0.082442444, 0.092443556, 0.102444764, 0.112445847, 0.122447028, 0.132448125, 0.142449292, 0.152450403, 0.162451583, 0.172452694, 0.182453875, 0.192454972, 0.202456167, 0.212457278, 0.222458431, 0.232459542, 0.242460722, 0.252461861, 0.262463014, 0.272464111, 0.282465292, 0.292466403, 0.302467569, 0.312468694, 0.322469903, 0.332470972, 0.342472139, 0.35247325, 0.362474431, 0.372475556, 0.38247675, 0.392477819, 0.402478986, 0.412480125, 0.422481278, 0.432482389, 0.442483556, 0.452484681, 0.462485833, 0.472486944, 0.482488097, 0.492489208, 0.502490361, 0.512491486, 0.522492639, 0.53249375, 0.542494917, 0.552496028, 0.562497194, 0.572498292, 0.582499472, 0.592500569, 0.602501722, 0.612502833, 0.622504014, 0.632505111, 0.642506306, 0.652507389, 0.662508556, 0.672509653, 0.682510819, 0.692511931, 0.702513097, 0.712514208, 0.722515403, 0.732516486, 0.742517639, 0.75251875, 0.762519931, 0.772521111, 0.782522194, 0.792523306, 0.802524458, 0.812525569, 0.822526764, 0.832527847, 0.842529028, 0.852530139, 0.862531278, 0.872532458, 0.882533611, 0.89253475, 0.902535833, 0.912536958, 0.922538139, 0.932539222, 0.942540389, 0.9525415, 0.962542653, 0.972543778, 0.982544944, 0.992546042, 1.002547208, 1.012548319, 1.022549486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:28.712" endtime="20201112 12:44:28.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.707" endtime="20201112 12:44:28.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.717" endtime="20201112 12:44:28.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.720" endtime="20201112 12:44:28.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.719" endtime="20201112 12:44:28.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.715" endtime="20201112 12:44:28.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.221" endtime="20201112 12:44:28.741"></status>
</kw>
<msg timestamp="20201112 12:44:28.741" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.749" endtime="20201112 12:44:30.868"></status>
</kw>
<msg timestamp="20201112 12:44:30.869" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16341536, 'wakeups': [16351551, 16361551, 16371551, 16381551, 16391551...</msg>
<status status="PASS" starttime="20201112 12:44:28.748" endtime="20201112 12:44:30.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16341536, 'wakeups': [16351551, 16361551, 16371551, 16381551, 16391551...</msg>
<status status="PASS" starttime="20201112 12:44:30.871" endtime="20201112 12:44:30.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.874" endtime="20201112 12:44:30.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.745" endtime="20201112 12:44:30.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.743" endtime="20201112 12:44:30.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.879" level="INFO">${RESULT} = {'wakeups': [16351551, 16361551, 16371551, 16381551, 16391551, 16401551, 16411551, 16421551, 16431551, 16441551, 16451551, 16461551, 16471551, 16481551, 16491551, 16501551, 16511551, 16521551, 1653155...</msg>
<status status="PASS" starttime="20201112 12:44:30.877" endtime="20201112 12:44:30.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.888" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:30.887" endtime="20201112 12:44:30.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.890" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:30.889" endtime="20201112 12:44:30.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.884" endtime="20201112 12:44:30.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.895" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.894" endtime="20201112 12:44:30.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.898" level="INFO">VALUE: 16341536</msg>
<status status="PASS" starttime="20201112 12:44:30.897" endtime="20201112 12:44:30.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.892" endtime="20201112 12:44:30.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.903" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.902" endtime="20201112 12:44:30.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.906" level="INFO">VALUE: [16351551, 16361551, 16371551, 16381551, 16391551, 16401551, 16411551, 16421551, 16431551, 16441551, 16451551, 16461551, 16471551, 16481551, 16491551, 16501551, 16511551, 16521551, 16531551, 16541551, 16551551, 16561551, 16571551, 16581551, 16591551, 16601551, 16611551, 16621551, 16631551, 16641551, 16651551, 16661551, 16671551, 16681551, 16691551, 16701551, 16711551, 16721551, 16731551, 16741551, 16751551, 16761551, 16771551, 16781551, 16791551, 16801551, 16811551, 16821551, 16831551, 16841551, 16851551, 16861551, 16871551, 16881551, 16891551, 16901551, 16911551, 16921551, 16931551, 16941551, 16951551, 16961551, 16971551, 16981551, 16991551, 17001551, 17011551, 17021551, 17031551, 17041551, 17051551, 17061551, 17071551, 17081551, 17091551, 17101551, 17111551, 17121551, 17131551, 17141551, 17151551, 17161551, 17171551, 17181551, 17191551, 17201551, 17211551, 17221551, 17231551, 17241551, 17251551, 17261551, 17271551, 17281551, 17291551, 17301551, 17311551, 17321551, 17331551, 17341551]</msg>
<status status="PASS" starttime="20201112 12:44:30.904" endtime="20201112 12:44:30.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.900" endtime="20201112 12:44:30.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.913" endtime="20201112 12:44:31.204"></status>
</kw>
<msg timestamp="20201112 12:44:31.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028227181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.911" endtime="20201112 12:44:31.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018210583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028227181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.208" endtime="20201112 12:44:31.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.215" endtime="20201112 12:44:31.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.909" endtime="20201112 12:44:31.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.907" endtime="20201112 12:44:31.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:31.242" level="INFO">${RESULT} = {'time': [0.018210583, 0.028227181, 0.038228347, 0.048229528, 0.058230681, 0.06823175, 0.078232889, 0.088234028, 0.098235194, 0.108236306, 0.118237472, 0.128238583, 0.138239736, 0.148240889, 0.1582420...</msg>
<status status="PASS" starttime="20201112 12:44:31.219" endtime="20201112 12:44:31.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.246" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:31.245" endtime="20201112 12:44:31.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.248" level="INFO">VALUE: 0.018210583</msg>
<status status="PASS" starttime="20201112 12:44:31.247" endtime="20201112 12:44:31.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.243" endtime="20201112 12:44:31.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.254" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:31.253" endtime="20201112 12:44:31.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.257" level="INFO">VALUE: [0.028227181, 0.038228347, 0.048229528, 0.058230681, 0.06823175, 0.078232889, 0.088234028, 0.098235194, 0.108236306, 0.118237472, 0.128238583, 0.138239736, 0.148240889, 0.158242028, 0.168243181, 0.178244306, 0.188245431, 0.198246611, 0.208247708, 0.218248903, 0.22825, 0.238251167, 0.248252292, 0.258253472, 0.268254569, 0.278255722, 0.288256847, 0.298258028, 0.308259139, 0.318260306, 0.328261417, 0.338262611, 0.348263708, 0.358264861, 0.368265986, 0.378267167, 0.388268306, 0.398269444, 0.408270556, 0.418271736, 0.428272861, 0.438274028, 0.448275125, 0.458276292, 0.468277444, 0.478278583, 0.488279708, 0.498280861, 0.508281986, 0.518283167, 0.528284278, 0.538285431, 0.548286556, 0.558287764, 0.568288833, 0.578290028, 0.588291125, 0.598292292, 0.608293403, 0.618294569, 0.62829575, 0.638296875, 0.648297972, 0.658299208, 0.668300278, 0.678301431, 0.688302556, 0.698303722, 0.708304847, 0.718306014, 0.728307125, 0.738308306, 0.748309417, 0.758310569, 0.768311694, 0.778312861, 0.788313986, 0.798315194, 0.808316306, 0.818317431, 0.828318542, 0.838319722, 0.848320833, 0.858322, 0.868323139, 0.878324347, 0.888325403, 0.898326583, 0.908327694, 0.918328889, 0.928329986, 0.938331139, 0.948332264, 0.958333444, 0.968334542, 0.978335778, 0.988336833, 0.998338, 1.008339125, 1.018340333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:31.256" endtime="20201112 12:44:31.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.250" endtime="20201112 12:44:31.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.260" endtime="20201112 12:44:31.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.264" endtime="20201112 12:44:31.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.262" endtime="20201112 12:44:31.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.259" endtime="20201112 12:44:31.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.742" endtime="20201112 12:44:31.284"></status>
</kw>
<msg timestamp="20201112 12:44:31.284" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.293" endtime="20201112 12:44:33.412"></status>
</kw>
<msg timestamp="20201112 12:44:33.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18885630, 'wakeups': [18895645, 18905645, 18915645, 18925645, 18935645...</msg>
<status status="PASS" starttime="20201112 12:44:31.291" endtime="20201112 12:44:33.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.419" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18885630, 'wakeups': [18895645, 18905645, 18915645, 18925645, 18935645...</msg>
<status status="PASS" starttime="20201112 12:44:33.415" endtime="20201112 12:44:33.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.421" endtime="20201112 12:44:33.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.288" endtime="20201112 12:44:33.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.287" endtime="20201112 12:44:33.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.429" level="INFO">${RESULT} = {'wakeups': [18895645, 18905645, 18915645, 18925645, 18935645, 18945645, 18955645, 18965645, 18975645, 18985645, 18995645, 19005645, 19015645, 19025645, 19035645, 19045645, 19055645, 19065645, 1907564...</msg>
<status status="PASS" starttime="20201112 12:44:33.427" endtime="20201112 12:44:33.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.433" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:33.432" endtime="20201112 12:44:33.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.435" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:33.434" endtime="20201112 12:44:33.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.430" endtime="20201112 12:44:33.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.440" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:33.439" endtime="20201112 12:44:33.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.442" level="INFO">VALUE: 18885630</msg>
<status status="PASS" starttime="20201112 12:44:33.441" endtime="20201112 12:44:33.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.436" endtime="20201112 12:44:33.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.447" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:33.446" endtime="20201112 12:44:33.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.449" level="INFO">VALUE: [18895645, 18905645, 18915645, 18925645, 18935645, 18945645, 18955645, 18965645, 18975645, 18985645, 18995645, 19005645, 19015645, 19025645, 19035645, 19045645, 19055645, 19065645, 19075645, 19085645, 19095645, 19105645, 19115645, 19125645, 19135645, 19145645, 19155645, 19165645, 19175645, 19185645, 19195645, 19205645, 19215645, 19225645, 19235645, 19245645, 19255645, 19265645, 19275645, 19285645, 19295645, 19305645, 19315645, 19325645, 19335645, 19345645, 19355645, 19365645, 19375645, 19385645, 19395645, 19405645, 19415645, 19425645, 19435645, 19445645, 19455645, 19465645, 19475645, 19485645, 19495645, 19505645, 19515645, 19525645, 19535645, 19545645, 19555645, 19565645, 19575645, 19585645, 19595645, 19605645, 19615645, 19625645, 19635645, 19645645, 19655645, 19665645, 19675645, 19685645, 19695645, 19705645, 19715645, 19725645, 19735645, 19745645, 19755645, 19765645, 19775645, 19785645, 19795645, 19805645, 19815645, 19825645, 19835645, 19845645, 19855645, 19865645, 19875645, 19885645]</msg>
<status status="PASS" starttime="20201112 12:44:33.448" endtime="20201112 12:44:33.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.443" endtime="20201112 12:44:33.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.457" endtime="20201112 12:44:33.750"></status>
</kw>
<msg timestamp="20201112 12:44:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028880667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.455" endtime="20201112 12:44:33.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028880667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.754" endtime="20201112 12:44:33.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.762" endtime="20201112 12:44:33.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.453" endtime="20201112 12:44:33.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.451" endtime="20201112 12:44:33.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.788" level="INFO">${RESULT} = {'time': [0.018864333, 0.028880667, 0.038881875, 0.048882944, 0.058884194, 0.068885236, 0.078886389, 0.088887569, 0.098888681, 0.108889806, 0.118891028, 0.128892083, 0.13889325, 0.148894361, 0.1588955...</msg>
<status status="PASS" starttime="20201112 12:44:33.766" endtime="20201112 12:44:33.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.792" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:33.791" endtime="20201112 12:44:33.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.794" level="INFO">VALUE: 0.018864333</msg>
<status status="PASS" starttime="20201112 12:44:33.794" endtime="20201112 12:44:33.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.789" endtime="20201112 12:44:33.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.800" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:33.799" endtime="20201112 12:44:33.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.802" level="INFO">VALUE: [0.028880667, 0.038881875, 0.048882944, 0.058884194, 0.068885236, 0.078886389, 0.088887569, 0.098888681, 0.108889806, 0.118891028, 0.128892083, 0.13889325, 0.148894361, 0.158895542, 0.168896653, 0.178897819, 0.188898931, 0.198900097, 0.208901208, 0.218902375, 0.2289035, 0.238904681, 0.248905819, 0.258906958, 0.268908069, 0.278909236, 0.288910347, 0.298911528, 0.308912653, 0.318913819, 0.328914917, 0.338916083, 0.348917208, 0.358918375, 0.368919486, 0.378920667, 0.388921778, 0.398922958, 0.408924125, 0.418925208, 0.428926333, 0.4389275, 0.448928597, 0.45892975, 0.468930861, 0.478932028, 0.488933153, 0.498934306, 0.508935431, 0.518936569, 0.528937694, 0.538938847, 0.548939958, 0.558941125, 0.568942236, 0.578943389, 0.588944569, 0.59894575, 0.608946792, 0.618947944, 0.628949069, 0.638950222, 0.648951361, 0.658952514, 0.668953597, 0.678954792, 0.688955903, 0.698957028, 0.708958167, 0.718959306, 0.728960417, 0.738961583, 0.748962708, 0.758963944, 0.768964972, 0.778966125, 0.788967264, 0.798968403, 0.808969556, 0.818970681, 0.828971792, 0.838972958, 0.848974069, 0.858975236, 0.868976361, 0.8789775, 0.888978611, 0.898979792, 0.908980889, 0.918982097, 0.928983167, 0.938984347, 0.948985458, 0.958986611, 0.968987708, 0.978988875, 0.988989986, 0.998991194, 1.008992278, 1.018993431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:33.801" endtime="20201112 12:44:33.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.796" endtime="20201112 12:44:33.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.805" endtime="20201112 12:44:33.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:33.809" endtime="20201112 12:44:33.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.807" endtime="20201112 12:44:33.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.803" endtime="20201112 12:44:33.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.285" endtime="20201112 12:44:33.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.218" endtime="20201112 12:44:33.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.218" endtime="20201112 12:44:33.832"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:33.834" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.844" endtime="20201112 12:44:35.966"></status>
</kw>
<msg timestamp="20201112 12:44:35.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21436864, 'wakeups': [21446888, 21456887, 21466887, 21476887, 21486887...</msg>
<status status="PASS" starttime="20201112 12:44:33.842" endtime="20201112 12:44:35.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21436864, 'wakeups': [21446888, 21456887, 21466887, 21476887, 21486887...</msg>
<status status="PASS" starttime="20201112 12:44:35.970" endtime="20201112 12:44:35.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.976" endtime="20201112 12:44:35.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.839" endtime="20201112 12:44:35.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.837" endtime="20201112 12:44:35.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.984" level="INFO">${RESULT} = {'wakeups': [21446888, 21456887, 21466887, 21476887, 21486887, 21496887, 21506887, 21516887, 21526887, 21536887, 21546887, 21556887, 21566887, 21576887, 21586887, 21596887, 21606887, 21616887, 2162688...</msg>
<status status="PASS" starttime="20201112 12:44:35.982" endtime="20201112 12:44:35.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.988" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:35.987" endtime="20201112 12:44:35.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.990" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:35.989" endtime="20201112 12:44:35.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.985" endtime="20201112 12:44:35.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.995" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:35.994" endtime="20201112 12:44:35.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.997" level="INFO">VALUE: 21436864</msg>
<status status="PASS" starttime="20201112 12:44:35.996" endtime="20201112 12:44:35.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.992" endtime="20201112 12:44:35.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.002" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:36.001" endtime="20201112 12:44:36.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.004" level="INFO">VALUE: [21446888, 21456887, 21466887, 21476887, 21486887, 21496887, 21506887, 21516887, 21526887, 21536887, 21546887, 21556887, 21566887, 21576887, 21586887, 21596887, 21606887, 21616887, 21626887, 21636887, 21646887, 21656887, 21666887, 21676887, 21686887, 21696887, 21706887, 21716887, 21726887, 21736887, 21746887, 21756887, 21766887, 21776887, 21786887, 21796887, 21806887, 21816887, 21826887, 21836887, 21846887, 21856887, 21866887, 21876887, 21886887, 21896887, 21906887, 21916887, 21926887, 21936887, 21946887, 21956887, 21966887, 21976887, 21986887, 21996887, 22006887, 22016887, 22026887, 22036887, 22046887, 22056887, 22066887, 22076887, 22086887, 22096887, 22106887, 22116887, 22126887, 22136887, 22146887, 22156887, 22166887, 22176887, 22186887, 22196887, 22206887, 22216887, 22226887, 22236887, 22246887, 22256887, 22266887, 22276887, 22286887, 22296887, 22306887, 22316887, 22326887, 22336887, 22346887, 22356887, 22366887, 22376887, 22386887, 22396887, 22406887, 22416887, 22426887, 22436887]</msg>
<status status="PASS" starttime="20201112 12:44:36.003" endtime="20201112 12:44:36.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.999" endtime="20201112 12:44:36.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.012" endtime="20201112 12:44:36.303"></status>
</kw>
<msg timestamp="20201112 12:44:36.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034058986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.010" endtime="20201112 12:44:36.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034058986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.307" endtime="20201112 12:44:36.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.315" endtime="20201112 12:44:36.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.008" endtime="20201112 12:44:36.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.006" endtime="20201112 12:44:36.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.343" level="INFO">${RESULT} = {'time': [0.024034014, 0.034058986, 0.044060139, 0.054061194, 0.064062375, 0.0740635, 0.084064653, 0.094065764, 0.104066931, 0.114068042, 0.124069208, 0.134070347, 0.144071514, 0.154072611, 0.16407377...</msg>
<status status="PASS" starttime="20201112 12:44:36.319" endtime="20201112 12:44:36.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.347" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:36.346" endtime="20201112 12:44:36.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.349" level="INFO">VALUE: 0.024034014</msg>
<status status="PASS" starttime="20201112 12:44:36.348" endtime="20201112 12:44:36.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.344" endtime="20201112 12:44:36.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.355" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:36.354" endtime="20201112 12:44:36.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.357" level="INFO">VALUE: [0.034058986, 0.044060139, 0.054061194, 0.064062375, 0.0740635, 0.084064653, 0.094065764, 0.104066931, 0.114068042, 0.124069208, 0.134070347, 0.144071514, 0.154072611, 0.164073778, 0.174074903, 0.184076069, 0.194077181, 0.204078361, 0.214079458, 0.224080625, 0.23408175, 0.244082944, 0.254084083, 0.264085208, 0.274086319, 0.284087514, 0.294088611, 0.304089764, 0.314090903, 0.324092069, 0.334093167, 0.344094361, 0.354095472, 0.364096625, 0.374097736, 0.384098931, 0.394100014, 0.404101236, 0.414102292, 0.424103486, 0.434104597, 0.444105736, 0.454106847, 0.464108014, 0.474109125, 0.484110292, 0.494111417, 0.504112625, 0.514113681, 0.524114833, 0.534115944, 0.544117125, 0.554118222, 0.564119389, 0.574120569, 0.584121667, 0.594122792, 0.604123986, 0.614125069, 0.624126236, 0.634127333, 0.6441285, 0.654129625, 0.664130778, 0.674131889, 0.684133056, 0.694134167, 0.704135347, 0.714136444, 0.724137625, 0.734138722, 0.744139889, 0.754141028, 0.764142167, 0.774143292, 0.784144458, 0.794145556, 0.804146722, 0.814147875, 0.824149014, 0.834150125, 0.844151278, 0.854152389, 0.864153569, 0.874154736, 0.884155847, 0.894156986, 0.904158111, 0.914159236, 0.924160403, 0.934161514, 0.944162667, 0.954163792, 0.964164986, 0.974166069, 0.984167236, 0.994168347, 1.004169514, 1.014170625, 1.024171792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:36.356" endtime="20201112 12:44:36.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.351" endtime="20201112 12:44:36.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.360" endtime="20201112 12:44:36.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:36.364" endtime="20201112 12:44:36.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.362" endtime="20201112 12:44:36.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.359" endtime="20201112 12:44:36.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.835" endtime="20201112 12:44:36.385"></status>
</kw>
<msg timestamp="20201112 12:44:36.385" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.393" endtime="20201112 12:44:38.514"></status>
</kw>
<msg timestamp="20201112 12:44:38.516" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23985218, 'wakeups': [23995242, 24005241, 24015241, 24025241, 24035241...</msg>
<status status="PASS" starttime="20201112 12:44:36.391" endtime="20201112 12:44:38.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.522" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23985218, 'wakeups': [23995242, 24005241, 24015241, 24025241, 24035241...</msg>
<status status="PASS" starttime="20201112 12:44:38.518" endtime="20201112 12:44:38.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.525" endtime="20201112 12:44:38.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.389" endtime="20201112 12:44:38.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.387" endtime="20201112 12:44:38.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.536" level="INFO">${RESULT} = {'wakeups': [23995242, 24005241, 24015241, 24025241, 24035241, 24045241, 24055241, 24065241, 24075241, 24085241, 24095241, 24105241, 24115241, 24125241, 24135241, 24145241, 24155241, 24165241, 2417524...</msg>
<status status="PASS" starttime="20201112 12:44:38.532" endtime="20201112 12:44:38.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.540" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:38.539" endtime="20201112 12:44:38.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.542" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:38.541" endtime="20201112 12:44:38.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.537" endtime="20201112 12:44:38.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.548" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.547" endtime="20201112 12:44:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.551" level="INFO">VALUE: 23985218</msg>
<status status="PASS" starttime="20201112 12:44:38.550" endtime="20201112 12:44:38.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.544" endtime="20201112 12:44:38.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.555" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.554" endtime="20201112 12:44:38.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.558" level="INFO">VALUE: [23995242, 24005241, 24015241, 24025241, 24035241, 24045241, 24055241, 24065241, 24075241, 24085241, 24095241, 24105241, 24115241, 24125241, 24135241, 24145241, 24155241, 24165241, 24175241, 24185241, 24195241, 24205241, 24215241, 24225241, 24235241, 24245241, 24255241, 24265241, 24275241, 24285241, 24295241, 24305241, 24315241, 24325241, 24335241, 24345241, 24355241, 24365241, 24375241, 24385241, 24395241, 24405241, 24415241, 24425241, 24435241, 24445241, 24455241, 24465241, 24475241, 24485241, 24495241, 24505241, 24515241, 24525241, 24535241, 24545241, 24555241, 24565241, 24575241, 24585241, 24595241, 24605241, 24615241, 24625241, 24635241, 24645241, 24655241, 24665241, 24675241, 24685241, 24695241, 24705241, 24715241, 24725241, 24735241, 24745241, 24755241, 24765241, 24775241, 24785241, 24795241, 24805241, 24815241, 24825241, 24835241, 24845241, 24855241, 24865241, 24875241, 24885241, 24895241, 24905241, 24915241, 24925241, 24935241, 24945241, 24955241, 24965241, 24975241, 24985241]</msg>
<status status="PASS" starttime="20201112 12:44:38.557" endtime="20201112 12:44:38.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.552" endtime="20201112 12:44:38.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.565" endtime="20201112 12:44:38.855"></status>
</kw>
<msg timestamp="20201112 12:44:38.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028382375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.563" endtime="20201112 12:44:38.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028382375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.859" endtime="20201112 12:44:38.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.867" endtime="20201112 12:44:38.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.561" endtime="20201112 12:44:38.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.559" endtime="20201112 12:44:38.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.893" level="INFO">${RESULT} = {'time': [0.018357778, 0.028382375, 0.0383835, 0.048384597, 0.058385764, 0.068386903, 0.078388056, 0.088389167, 0.098390333, 0.108391444, 0.118392611, 0.128393736, 0.138394917, 0.148396042, 0.15839718...</msg>
<status status="PASS" starttime="20201112 12:44:38.870" endtime="20201112 12:44:38.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.898" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.897" endtime="20201112 12:44:38.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.900" level="INFO">VALUE: 0.018357778</msg>
<status status="PASS" starttime="20201112 12:44:38.899" endtime="20201112 12:44:38.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.894" endtime="20201112 12:44:38.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.906" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.905" endtime="20201112 12:44:38.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.909" level="INFO">VALUE: [0.028382375, 0.0383835, 0.048384597, 0.058385764, 0.068386903, 0.078388056, 0.088389167, 0.098390333, 0.108391444, 0.118392611, 0.128393736, 0.138394917, 0.148396042, 0.158397181, 0.168398292, 0.178399472, 0.188400583, 0.19840175, 0.208402875, 0.218404028, 0.228405153, 0.238406333, 0.248407444, 0.258408597, 0.268409736, 0.278410889, 0.288412, 0.298413167, 0.308414306, 0.318415444, 0.328416597, 0.33841775, 0.348418847, 0.358420042, 0.368421139, 0.378422306, 0.388423431, 0.398424597, 0.408425736, 0.418426875, 0.428428, 0.438429181, 0.448430278, 0.458431444, 0.468432569, 0.478433764, 0.488434847, 0.498436014, 0.508437139, 0.518438306, 0.528439417, 0.538440597, 0.548441708, 0.558442861, 0.568443986, 0.578445153, 0.58844625, 0.598447403, 0.608448528, 0.618449681, 0.628450806, 0.638451958, 0.648453097, 0.658454222, 0.668455333, 0.678456514, 0.688457625, 0.698458778, 0.708459903, 0.718461042, 0.728462153, 0.738463319, 0.748464444, 0.758465597, 0.768466708, 0.778467875, 0.788468986, 0.798470139, 0.808471264, 0.818472431, 0.828473528, 0.838474694, 0.848475819, 0.858476958, 0.868478097, 0.878479236, 0.888480347, 0.898481528, 0.908482625, 0.918483778, 0.928484903, 0.938486056, 0.948487167, 0.958488403, 0.968489458, 0.978490611, 0.988491736, 0.998492889, 1.008494069, 1.018495153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:38.908" endtime="20201112 12:44:38.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.902" endtime="20201112 12:44:38.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.912" endtime="20201112 12:44:38.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:38.915" endtime="20201112 12:44:38.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.914" endtime="20201112 12:44:38.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.910" endtime="20201112 12:44:38.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.385" endtime="20201112 12:44:38.936"></status>
</kw>
<msg timestamp="20201112 12:44:38.936" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.944" endtime="20201112 12:44:41.066"></status>
</kw>
<msg timestamp="20201112 12:44:41.067" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26536847, 'wakeups': [26546871, 26556870, 26566870, 26576870, 26586870...</msg>
<status status="PASS" starttime="20201112 12:44:38.943" endtime="20201112 12:44:41.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.073" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26536847, 'wakeups': [26546871, 26556870, 26566870, 26576870, 26586870...</msg>
<status status="PASS" starttime="20201112 12:44:41.070" endtime="20201112 12:44:41.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.076" endtime="20201112 12:44:41.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.940" endtime="20201112 12:44:41.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.938" endtime="20201112 12:44:41.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.087" level="INFO">${RESULT} = {'wakeups': [26546871, 26556870, 26566870, 26576870, 26586870, 26596870, 26606870, 26616870, 26626870, 26636870, 26646870, 26656870, 26666870, 26676870, 26686870, 26696870, 26706870, 26716870, 2672687...</msg>
<status status="PASS" starttime="20201112 12:44:41.083" endtime="20201112 12:44:41.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.093" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:41.092" endtime="20201112 12:44:41.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:41.094" endtime="20201112 12:44:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.089" endtime="20201112 12:44:41.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.107" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:41.105" endtime="20201112 12:44:41.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.109" level="INFO">VALUE: 26536847</msg>
<status status="PASS" starttime="20201112 12:44:41.108" endtime="20201112 12:44:41.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.103" endtime="20201112 12:44:41.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.114" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:41.112" endtime="20201112 12:44:41.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.116" level="INFO">VALUE: [26546871, 26556870, 26566870, 26576870, 26586870, 26596870, 26606870, 26616870, 26626870, 26636870, 26646870, 26656870, 26666870, 26676870, 26686870, 26696870, 26706870, 26716870, 26726870, 26736870, 26746870, 26756870, 26766870, 26776870, 26786870, 26796870, 26806870, 26816870, 26826870, 26836870, 26846870, 26856870, 26866870, 26876870, 26886870, 26896870, 26906870, 26916870, 26926870, 26936870, 26946870, 26956870, 26966870, 26976870, 26986870, 26996870, 27006870, 27016870, 27026870, 27036870, 27046870, 27056870, 27066870, 27076870, 27086870, 27096870, 27106870, 27116870, 27126870, 27136870, 27146870, 27156870, 27166870, 27176870, 27186870, 27196870, 27206870, 27216870, 27226870, 27236870, 27246870, 27256870, 27266870, 27276870, 27286870, 27296870, 27306870, 27316870, 27326870, 27336870, 27346870, 27356870, 27366870, 27376870, 27386870, 27396870, 27406870, 27416870, 27426870, 27436870, 27446870, 27456870, 27466870, 27476870, 27486870, 27496870, 27506870, 27516870, 27526870, 27536870]</msg>
<status status="PASS" starttime="20201112 12:44:41.115" endtime="20201112 12:44:41.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.110" endtime="20201112 12:44:41.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.124" endtime="20201112 12:44:41.415"></status>
</kw>
<msg timestamp="20201112 12:44:41.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018458875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028484, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:41.122" endtime="20201112 12:44:41.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018458875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028484, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:41.419" endtime="20201112 12:44:41.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.426" endtime="20201112 12:44:41.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.119" endtime="20201112 12:44:41.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.117" endtime="20201112 12:44:41.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.453" level="INFO">${RESULT} = {'time': [0.018458875, 0.028484, 0.038485042, 0.048486167, 0.058487319, 0.068488431, 0.078489597, 0.088490736, 0.098491875, 0.108493014, 0.118494194, 0.128495278, 0.138496444, 0.148497569, 0.158498722...</msg>
<status status="PASS" starttime="20201112 12:44:41.430" endtime="20201112 12:44:41.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.458" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:41.456" endtime="20201112 12:44:41.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.460" level="INFO">VALUE: 0.018458875</msg>
<status status="PASS" starttime="20201112 12:44:41.459" endtime="20201112 12:44:41.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.454" endtime="20201112 12:44:41.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.465" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:41.464" endtime="20201112 12:44:41.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.467" level="INFO">VALUE: [0.028484, 0.038485042, 0.048486167, 0.058487319, 0.068488431, 0.078489597, 0.088490736, 0.098491875, 0.108493014, 0.118494194, 0.128495278, 0.138496444, 0.148497569, 0.158498722, 0.168499847, 0.178501028, 0.188502194, 0.198503292, 0.208504417, 0.218505583, 0.228506708, 0.238507889, 0.248508986, 0.258510153, 0.268511264, 0.278512431, 0.288513556, 0.298514708, 0.308515833, 0.318517, 0.328518139, 0.338519292, 0.348520403, 0.358521569, 0.368522708, 0.378523847, 0.388524972, 0.398526139, 0.408527264, 0.418528417, 0.428529542, 0.438530708, 0.448531819, 0.458533, 0.468534111, 0.478535278, 0.488536403, 0.498537569, 0.508538681, 0.518539861, 0.528540972, 0.538542125, 0.548543264, 0.558544458, 0.568545556, 0.578546708, 0.588547819, 0.598549, 0.608550125, 0.618551278, 0.628552389, 0.638553556, 0.648554681, 0.658555889, 0.668556958, 0.678558125, 0.688559264, 0.698560431, 0.708561528, 0.718562694, 0.728563847, 0.738564986, 0.748566111, 0.758567264, 0.768568389, 0.778569556, 0.788570667, 0.798571833, 0.808572958, 0.818574125, 0.828575236, 0.838576403, 0.848577528, 0.858578694, 0.868579806, 0.878580986, 0.888582111, 0.898583264, 0.908584375, 0.918585583, 0.928586639, 0.938587819, 0.948588917, 0.958590069, 0.968591194, 0.978592347, 0.988593472, 0.998594639, 1.008595736, 1.018596889] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:41.466" endtime="20201112 12:44:41.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.461" endtime="20201112 12:44:41.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.471" endtime="20201112 12:44:41.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:41.474" endtime="20201112 12:44:41.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.473" endtime="20201112 12:44:41.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.469" endtime="20201112 12:44:41.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.937" endtime="20201112 12:44:41.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.833" endtime="20201112 12:44:41.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.832" endtime="20201112 12:44:41.496"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:41.498" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.507" endtime="20201112 12:44:43.628"></status>
</kw>
<msg timestamp="20201112 12:44:43.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29099635, 'wakeups': [29109669, 29119668, 29129668, 29139668, 29149668...</msg>
<status status="PASS" starttime="20201112 12:44:41.505" endtime="20201112 12:44:43.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.636" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29099635, 'wakeups': [29109669, 29119668, 29129668, 29139668, 29149668...</msg>
<status status="PASS" starttime="20201112 12:44:43.632" endtime="20201112 12:44:43.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.638" endtime="20201112 12:44:43.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.502" endtime="20201112 12:44:43.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.500" endtime="20201112 12:44:43.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.647" level="INFO">${RESULT} = {'wakeups': [29109669, 29119668, 29129668, 29139668, 29149668, 29159668, 29169668, 29179668, 29189668, 29199668, 29209668, 29219668, 29229668, 29239668, 29249668, 29259668, 29269668, 29279668, 2928966...</msg>
<status status="PASS" starttime="20201112 12:44:43.645" endtime="20201112 12:44:43.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.652" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:43.651" endtime="20201112 12:44:43.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.654" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:43.653" endtime="20201112 12:44:43.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.648" endtime="20201112 12:44:43.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.659" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:43.658" endtime="20201112 12:44:43.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.661" level="INFO">VALUE: 29099635</msg>
<status status="PASS" starttime="20201112 12:44:43.660" endtime="20201112 12:44:43.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.655" endtime="20201112 12:44:43.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.666" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:43.665" endtime="20201112 12:44:43.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.668" level="INFO">VALUE: [29109669, 29119668, 29129668, 29139668, 29149668, 29159668, 29169668, 29179668, 29189668, 29199668, 29209668, 29219668, 29229668, 29239668, 29249668, 29259668, 29269668, 29279668, 29289668, 29299668, 29309668, 29319668, 29329668, 29339668, 29349668, 29359668, 29369668, 29379668, 29389668, 29399668, 29409668, 29419668, 29429668, 29439668, 29449668, 29459668, 29469668, 29479668, 29489668, 29499668, 29509668, 29519668, 29529668, 29539668, 29549668, 29559668, 29569668, 29579668, 29589668, 29599668, 29609668, 29619668, 29629668, 29639668, 29649668, 29659668, 29669668, 29679668, 29689668, 29699668, 29709668, 29719668, 29729668, 29739668, 29749668, 29759668, 29769668, 29779668, 29789668, 29799668, 29809668, 29819668, 29829668, 29839668, 29849668, 29859668, 29869668, 29879668, 29889668, 29899668, 29909668, 29919668, 29929668, 29939668, 29949668, 29959668, 29969668, 29979668, 29989668, 29999668, 30009668, 30019668, 30029668, 30039668, 30049668, 30059668, 30069668, 30079668, 30089668, 30099668]</msg>
<status status="PASS" starttime="20201112 12:44:43.667" endtime="20201112 12:44:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.662" endtime="20201112 12:44:43.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.676" endtime="20201112 12:44:43.967"></status>
</kw>
<msg timestamp="20201112 12:44:43.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03230975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:43.674" endtime="20201112 12:44:43.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03230975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:43.971" endtime="20201112 12:44:43.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.979" endtime="20201112 12:44:43.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.672" endtime="20201112 12:44:43.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.670" endtime="20201112 12:44:43.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.006" level="INFO">${RESULT} = {'time': [0.022274208, 0.03230975, 0.042309778, 0.052310889, 0.062312069, 0.072313181, 0.082314333, 0.0923155, 0.102316625, 0.112317736, 0.122318903, 0.132320028, 0.142321194, 0.152322306, 0.162323528...</msg>
<status status="PASS" starttime="20201112 12:44:43.982" endtime="20201112 12:44:44.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.010" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:44.009" endtime="20201112 12:44:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.012" level="INFO">VALUE: 0.022274208</msg>
<status status="PASS" starttime="20201112 12:44:44.011" endtime="20201112 12:44:44.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.007" endtime="20201112 12:44:44.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.018" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:44.017" endtime="20201112 12:44:44.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.020" level="INFO">VALUE: [0.03230975, 0.042309778, 0.052310889, 0.062312069, 0.072313181, 0.082314333, 0.0923155, 0.102316625, 0.112317736, 0.122318903, 0.132320028, 0.142321194, 0.152322306, 0.162323528, 0.172324583, 0.18232575, 0.192326875, 0.202328042, 0.212329208, 0.222330319, 0.232331431, 0.242332639, 0.252333722, 0.262334889, 0.272336, 0.282337181, 0.292338306, 0.302339458, 0.312340569, 0.322341736, 0.332342875, 0.342344042, 0.352345153, 0.362346319, 0.372347458, 0.382348625, 0.392349722, 0.402350889, 0.412352, 0.422353181, 0.432354278, 0.442355444, 0.452356569, 0.462357736, 0.472358903, 0.482360028, 0.492361153, 0.502362347, 0.512363417, 0.522364597, 0.532365764, 0.542366889, 0.552368083, 0.562369181, 0.572370306, 0.582371444, 0.592372583, 0.602373736, 0.612374861, 0.622376014, 0.632377153, 0.642378306, 0.652379417, 0.662380583, 0.672381708, 0.682382889, 0.692384, 0.702385167, 0.712386278, 0.722387444, 0.732388569, 0.742389722, 0.752390847, 0.762392014, 0.772393139, 0.782394319, 0.792395417, 0.802396583, 0.812397736, 0.822398889, 0.832400028, 0.842401153, 0.852402278, 0.862403444, 0.872404556, 0.882405722, 0.892406903, 0.902408028, 0.912409139, 0.922410292, 0.932411417, 0.942412597, 0.952413694, 0.962414889, 0.972416, 0.982417181, 0.992418264, 1.002419458, 1.012420569, 1.022421722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:44.019" endtime="20201112 12:44:44.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.014" endtime="20201112 12:44:44.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.023" endtime="20201112 12:44:44.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:44.027" endtime="20201112 12:44:44.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.025" endtime="20201112 12:44:44.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.021" endtime="20201112 12:44:44.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.499" endtime="20201112 12:44:44.047"></status>
</kw>
<msg timestamp="20201112 12:44:44.048" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.056" endtime="20201112 12:44:46.178"></status>
</kw>
<msg timestamp="20201112 12:44:46.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31648513, 'wakeups': [31658546, 31668546, 31678546, 31688546, 31698546...</msg>
<status status="PASS" starttime="20201112 12:44:44.054" endtime="20201112 12:44:46.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.185" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31648513, 'wakeups': [31658546, 31668546, 31678546, 31688546, 31698546...</msg>
<status status="PASS" starttime="20201112 12:44:46.181" endtime="20201112 12:44:46.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.187" endtime="20201112 12:44:46.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.052" endtime="20201112 12:44:46.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.050" endtime="20201112 12:44:46.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:46.199" level="INFO">${RESULT} = {'wakeups': [31658546, 31668546, 31678546, 31688546, 31698546, 31708546, 31718546, 31728546, 31738546, 31748546, 31758546, 31768546, 31778546, 31788546, 31798546, 31808546, 31818546, 31828546, 3183854...</msg>
<status status="PASS" starttime="20201112 12:44:46.194" endtime="20201112 12:44:46.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.204" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:46.203" endtime="20201112 12:44:46.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.206" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:46.205" endtime="20201112 12:44:46.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.200" endtime="20201112 12:44:46.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.211" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:46.210" endtime="20201112 12:44:46.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.214" level="INFO">VALUE: 31648513</msg>
<status status="PASS" starttime="20201112 12:44:46.213" endtime="20201112 12:44:46.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.207" endtime="20201112 12:44:46.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.219" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:46.218" endtime="20201112 12:44:46.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.221" level="INFO">VALUE: [31658546, 31668546, 31678546, 31688546, 31698546, 31708546, 31718546, 31728546, 31738546, 31748546, 31758546, 31768546, 31778546, 31788546, 31798546, 31808546, 31818546, 31828546, 31838546, 31848546, 31858546, 31868546, 31878546, 31888546, 31898546, 31908546, 31918546, 31928546, 31938546, 31948546, 31958546, 31968546, 31978546, 31988546, 31998546, 32008546, 32018546, 32028546, 32038546, 32048546, 32058546, 32068546, 32078546, 32088546, 32098546, 32108546, 32118546, 32128546, 32138546, 32148546, 32158546, 32168546, 32178546, 32188546, 32198546, 32208546, 32218546, 32228546, 32238546, 32248546, 32258546, 32268546, 32278546, 32288546, 32298546, 32308546, 32318546, 32328546, 32338546, 32348546, 32358546, 32368546, 32378546, 32388546, 32398546, 32408546, 32418546, 32428546, 32438546, 32448546, 32458546, 32468546, 32478546, 32488546, 32498546, 32508546, 32518546, 32528546, 32538546, 32548546, 32558546, 32568546, 32578546, 32588546, 32598546, 32608546, 32618546, 32628546, 32638546, 32648546]</msg>
<status status="PASS" starttime="20201112 12:44:46.220" endtime="20201112 12:44:46.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.216" endtime="20201112 12:44:46.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.229" endtime="20201112 12:44:46.521"></status>
</kw>
<msg timestamp="20201112 12:44:46.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018860528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028895833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.227" endtime="20201112 12:44:46.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018860528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028895833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.525" endtime="20201112 12:44:46.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.532" endtime="20201112 12:44:46.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.225" endtime="20201112 12:44:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.223" endtime="20201112 12:44:46.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:46.564" level="INFO">${RESULT} = {'time': [0.018860528, 0.028895833, 0.038896861, 0.048897986, 0.058899153, 0.068900264, 0.078901431, 0.088902556, 0.098903722, 0.108904833, 0.118906014, 0.128907125, 0.138908278, 0.148909417, 0.158910...</msg>
<status status="PASS" starttime="20201112 12:44:46.540" endtime="20201112 12:44:46.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.568" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:46.567" endtime="20201112 12:44:46.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.570" level="INFO">VALUE: 0.018860528</msg>
<status status="PASS" starttime="20201112 12:44:46.569" endtime="20201112 12:44:46.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.565" endtime="20201112 12:44:46.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.576" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:46.575" endtime="20201112 12:44:46.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.579" level="INFO">VALUE: [0.028895833, 0.038896861, 0.048897986, 0.058899153, 0.068900264, 0.078901431, 0.088902556, 0.098903722, 0.108904833, 0.118906014, 0.128907125, 0.138908278, 0.148909417, 0.158910569, 0.168911694, 0.178912847, 0.188913958, 0.198915125, 0.208916264, 0.218917417, 0.228918542, 0.238919694, 0.248920819, 0.258921986, 0.268923111, 0.278924278, 0.288925403, 0.298926556, 0.308927667, 0.318928833, 0.328929958, 0.338931125, 0.34893225, 0.358933403, 0.368934556, 0.378935694, 0.388936806, 0.398937972, 0.408939111, 0.418940278, 0.428941403, 0.438942542, 0.448943681, 0.458944847, 0.468945972, 0.478947111, 0.488948236, 0.498949417, 0.508950514, 0.518951681, 0.528952819, 0.538953986, 0.548955097, 0.558956319, 0.568957389, 0.578958542, 0.588959667, 0.598960861, 0.608961944, 0.618963111, 0.62896425, 0.638965472, 0.648966514, 0.658967681, 0.668968806, 0.678969972, 0.688971097, 0.69897225, 0.708973389, 0.718974556, 0.728975653, 0.738976833, 0.748977944, 0.758979111, 0.768980236, 0.778981389, 0.788982514, 0.798983681, 0.808984806, 0.818985972, 0.828987097, 0.83898825, 0.848989389, 0.858990542, 0.868991667, 0.878992819, 0.888993944, 0.898995125, 0.908996264, 0.918997389, 0.928998514, 0.938999681, 0.949000806, 0.959001958, 0.969003083, 0.97900425, 0.989005444, 0.999006542, 1.009007653, 1.019008792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:46.578" endtime="20201112 12:44:46.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.572" endtime="20201112 12:44:46.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.582" endtime="20201112 12:44:46.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:46.585" endtime="20201112 12:44:46.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.584" endtime="20201112 12:44:46.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.580" endtime="20201112 12:44:46.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.048" endtime="20201112 12:44:46.606"></status>
</kw>
<msg timestamp="20201112 12:44:46.607" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.615" endtime="20201112 12:44:48.736"></status>
</kw>
<msg timestamp="20201112 12:44:48.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34206895, 'wakeups': [34216929, 34226928, 34236928, 34246928, 34256928...</msg>
<status status="PASS" starttime="20201112 12:44:46.613" endtime="20201112 12:44:48.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.743" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34206895, 'wakeups': [34216929, 34226928, 34236928, 34246928, 34256928...</msg>
<status status="PASS" starttime="20201112 12:44:48.740" endtime="20201112 12:44:48.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.746" endtime="20201112 12:44:48.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.610" endtime="20201112 12:44:48.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.609" endtime="20201112 12:44:48.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.756" level="INFO">${RESULT} = {'wakeups': [34216929, 34226928, 34236928, 34246928, 34256928, 34266928, 34276928, 34286928, 34296928, 34306928, 34316928, 34326928, 34336928, 34346928, 34356928, 34366928, 34376928, 34386928, 3439692...</msg>
<status status="PASS" starttime="20201112 12:44:48.753" endtime="20201112 12:44:48.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.761" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:48.760" endtime="20201112 12:44:48.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.763" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:48.762" endtime="20201112 12:44:48.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.757" endtime="20201112 12:44:48.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.768" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:48.767" endtime="20201112 12:44:48.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.770" level="INFO">VALUE: 34206895</msg>
<status status="PASS" starttime="20201112 12:44:48.769" endtime="20201112 12:44:48.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.764" endtime="20201112 12:44:48.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.775" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:48.774" endtime="20201112 12:44:48.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.777" level="INFO">VALUE: [34216929, 34226928, 34236928, 34246928, 34256928, 34266928, 34276928, 34286928, 34296928, 34306928, 34316928, 34326928, 34336928, 34346928, 34356928, 34366928, 34376928, 34386928, 34396928, 34406928, 34416928, 34426928, 34436928, 34446928, 34456928, 34466928, 34476928, 34486928, 34496928, 34506928, 34516928, 34526928, 34536928, 34546928, 34556928, 34566928, 34576928, 34586928, 34596928, 34606928, 34616928, 34626928, 34636928, 34646928, 34656928, 34666928, 34676928, 34686928, 34696928, 34706928, 34716928, 34726928, 34736928, 34746928, 34756928, 34766928, 34776928, 34786928, 34796928, 34806928, 34816928, 34826928, 34836928, 34846928, 34856928, 34866928, 34876928, 34886928, 34896928, 34906928, 34916928, 34926928, 34936928, 34946928, 34956928, 34966928, 34976928, 34986928, 34996928, 35006928, 35016928, 35026928, 35036928, 35046928, 35056928, 35066928, 35076928, 35086928, 35096928, 35106928, 35116928, 35126928, 35136928, 35146928, 35156928, 35166928, 35176928, 35186928, 35196928, 35206928]</msg>
<status status="PASS" starttime="20201112 12:44:48.776" endtime="20201112 12:44:48.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.771" endtime="20201112 12:44:48.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.785" endtime="20201112 12:44:49.076"></status>
</kw>
<msg timestamp="20201112 12:44:49.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018391653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.783" endtime="20201112 12:44:49.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018391653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028427153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:49.080" endtime="20201112 12:44:49.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.087" endtime="20201112 12:44:49.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.780" endtime="20201112 12:44:49.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.779" endtime="20201112 12:44:49.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:49.113" level="INFO">${RESULT} = {'time': [0.018391653, 0.028427153, 0.038427194, 0.048428333, 0.0584295, 0.068430611, 0.078431764, 0.088432889, 0.098434056, 0.108435181, 0.118436333, 0.128437444, 0.138438625, 0.148439736, 0.15844094...</msg>
<status status="PASS" starttime="20201112 12:44:49.091" endtime="20201112 12:44:49.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.118" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:49.117" endtime="20201112 12:44:49.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.120" level="INFO">VALUE: 0.018391653</msg>
<status status="PASS" starttime="20201112 12:44:49.119" endtime="20201112 12:44:49.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.114" endtime="20201112 12:44:49.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.125" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:49.124" endtime="20201112 12:44:49.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.128" level="INFO">VALUE: [0.028427153, 0.038427194, 0.048428333, 0.0584295, 0.068430611, 0.078431764, 0.088432889, 0.098434056, 0.108435181, 0.118436333, 0.128437444, 0.138438625, 0.148439736, 0.158440944, 0.168442028, 0.178443181, 0.188444292, 0.198445486, 0.208446597, 0.21844775, 0.228448861, 0.238450028, 0.248451208, 0.258452319, 0.268453431, 0.278454653, 0.288455722, 0.298456903, 0.308458014, 0.318459167, 0.328460306, 0.338461458, 0.348462569, 0.358463778, 0.368464889, 0.378466042, 0.388467139, 0.398468319, 0.408469431, 0.418470597, 0.428471722, 0.438472889, 0.448474014, 0.458475181, 0.468476278, 0.4784775, 0.488478569, 0.498479736, 0.508480847, 0.518482014, 0.528483194, 0.538484306, 0.548485417, 0.558486583, 0.568487708, 0.578488917, 0.588489986, 0.598491208, 0.608492278, 0.618493444, 0.628494639, 0.638495736, 0.648496847, 0.658498042, 0.668499139, 0.678500347, 0.688501417, 0.698502611, 0.708503708, 0.718504875, 0.728505986, 0.738507153, 0.748508278, 0.758509458, 0.768510556, 0.778511736, 0.788512861, 0.798514, 0.808515111, 0.818516278, 0.828517389, 0.838518556, 0.848519681, 0.858520819, 0.868521944, 0.878523181, 0.888524208, 0.898525361, 0.9085265, 0.918527639, 0.92852875, 0.938529958, 0.948531028, 0.958532181, 0.968533292, 0.978534458, 0.988535569, 0.998536736, 1.008537875, 1.018539014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:49.126" endtime="20201112 12:44:49.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.121" endtime="20201112 12:44:49.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.131" endtime="20201112 12:44:49.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:49.135" endtime="20201112 12:44:49.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.133" endtime="20201112 12:44:49.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.129" endtime="20201112 12:44:49.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.607" endtime="20201112 12:44:49.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.497" endtime="20201112 12:44:49.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.496" endtime="20201112 12:44:49.156"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:49.158" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.168" endtime="20201112 12:44:51.289"></status>
</kw>
<msg timestamp="20201112 12:44:51.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36759793, 'wakeups': [36769838, 36779837, 36789837, 36799837, 36809837...</msg>
<status status="PASS" starttime="20201112 12:44:49.166" endtime="20201112 12:44:51.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36759793, 'wakeups': [36769838, 36779837, 36789837, 36799837, 36809837...</msg>
<status status="PASS" starttime="20201112 12:44:51.293" endtime="20201112 12:44:51.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.299" endtime="20201112 12:44:51.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.162" endtime="20201112 12:44:51.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.160" endtime="20201112 12:44:51.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.310" level="INFO">${RESULT} = {'wakeups': [36769838, 36779837, 36789837, 36799837, 36809837, 36819837, 36829837, 36839837, 36849837, 36859837, 36869837, 36879837, 36889837, 36899837, 36909837, 36919837, 36929837, 36939837, 3694983...</msg>
<status status="PASS" starttime="20201112 12:44:51.306" endtime="20201112 12:44:51.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.314" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:51.313" endtime="20201112 12:44:51.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.316" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:51.315" endtime="20201112 12:44:51.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.311" endtime="20201112 12:44:51.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.321" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:51.320" endtime="20201112 12:44:51.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.323" level="INFO">VALUE: 36759793</msg>
<status status="PASS" starttime="20201112 12:44:51.322" endtime="20201112 12:44:51.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.318" endtime="20201112 12:44:51.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.329" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:51.328" endtime="20201112 12:44:51.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.331" level="INFO">VALUE: [36769838, 36779837, 36789837, 36799837, 36809837, 36819837, 36829837, 36839837, 36849837, 36859837, 36869837, 36879837, 36889837, 36899837, 36909837, 36919837, 36929837, 36939837, 36949837, 36959837, 36969837, 36979837, 36989837, 36999837, 37009837, 37019837, 37029837, 37039837, 37049837, 37059837, 37069837, 37079837, 37089837, 37099837, 37109837, 37119837, 37129837, 37139837, 37149837, 37159837, 37169837, 37179837, 37189837, 37199837, 37209837, 37219837, 37229837, 37239837, 37249837, 37259837, 37269837, 37279837, 37289837, 37299837, 37309837, 37319837, 37329837, 37339837, 37349837, 37359837, 37369837, 37379837, 37389837, 37399837, 37409837, 37419837, 37429837, 37439837, 37449837, 37459837, 37469837, 37479837, 37489837, 37499837, 37509837, 37519837, 37529837, 37539837, 37549837, 37559837, 37569837, 37579837, 37589837, 37599837, 37609837, 37619837, 37629837, 37639837, 37649837, 37659837, 37669837, 37679837, 37689837, 37699837, 37709837, 37719837, 37729837, 37739837, 37749837, 37759837]</msg>
<status status="PASS" starttime="20201112 12:44:51.330" endtime="20201112 12:44:51.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.325" endtime="20201112 12:44:51.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.338" endtime="20201112 12:44:51.630"></status>
</kw>
<msg timestamp="20201112 12:44:51.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032341139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.337" endtime="20201112 12:44:51.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032341139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.634" endtime="20201112 12:44:51.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.641" endtime="20201112 12:44:51.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.334" endtime="20201112 12:44:51.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.332" endtime="20201112 12:44:51.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.669" level="INFO">${RESULT} = {'time': [0.022294708, 0.032341139, 0.042342069, 0.052343208, 0.062344347, 0.072345472, 0.082346639, 0.092347778, 0.102348931, 0.112350042, 0.122351194, 0.132352319, 0.142353486, 0.152354597, 0.162355...</msg>
<status status="PASS" starttime="20201112 12:44:51.645" endtime="20201112 12:44:51.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.673" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:51.672" endtime="20201112 12:44:51.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.676" level="INFO">VALUE: 0.022294708</msg>
<status status="PASS" starttime="20201112 12:44:51.675" endtime="20201112 12:44:51.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.670" endtime="20201112 12:44:51.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.681" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:51.680" endtime="20201112 12:44:51.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.683" level="INFO">VALUE: [0.032341139, 0.042342069, 0.052343208, 0.062344347, 0.072345472, 0.082346639, 0.092347778, 0.102348931, 0.112350042, 0.122351194, 0.132352319, 0.142353486, 0.152354597, 0.162355764, 0.172356903, 0.182358069, 0.192359167, 0.202360361, 0.212361458, 0.222362625, 0.232363736, 0.242364917, 0.252366069, 0.262367181, 0.272368319, 0.282369486, 0.292370597, 0.302371764, 0.312372917, 0.322374028, 0.332375208, 0.342376319, 0.352377458, 0.362378597, 0.372379736, 0.382380889, 0.392382, 0.402383181, 0.412384292, 0.422385472, 0.432386569, 0.442387736, 0.452388861, 0.462390028, 0.472391153, 0.482392333, 0.492393431, 0.502394611, 0.512395736, 0.522396889, 0.532398014, 0.542399167, 0.552400278, 0.562401458, 0.572402569, 0.58240375, 0.592404847, 0.602406028, 0.612407139, 0.622408306, 0.632409458, 0.642410597, 0.652411722, 0.662412889, 0.672414, 0.682415181, 0.692416278, 0.702417444, 0.712418569, 0.72241975, 0.732420847, 0.742422014, 0.752423139, 0.762424306, 0.772425431, 0.782426583, 0.792427708, 0.802428917, 0.81243, 0.822431153, 0.832432278, 0.842433444, 0.852434569, 0.862435722, 0.872436847, 0.882438069, 0.892439125, 0.902440306, 0.912441431, 0.922442583, 0.932443694, 0.942444875, 0.952445986, 0.962447153, 0.972448292, 0.982449431, 0.992450556, 1.002451708, 1.012452875, 1.022453986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:51.682" endtime="20201112 12:44:51.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.677" endtime="20201112 12:44:51.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.686" endtime="20201112 12:44:51.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:51.694" endtime="20201112 12:44:51.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.692" endtime="20201112 12:44:51.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.685" endtime="20201112 12:44:51.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.159" endtime="20201112 12:44:51.715"></status>
</kw>
<msg timestamp="20201112 12:44:51.715" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.723" endtime="20201112 12:44:53.845"></status>
</kw>
<msg timestamp="20201112 12:44:53.847" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39315244, 'wakeups': [39325289, 39335288, 39345288, 39355288, 39365288...</msg>
<status status="PASS" starttime="20201112 12:44:51.722" endtime="20201112 12:44:53.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39315244, 'wakeups': [39325289, 39335288, 39345288, 39355288, 39365288...</msg>
<status status="PASS" starttime="20201112 12:44:53.849" endtime="20201112 12:44:53.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.856" endtime="20201112 12:44:53.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.719" endtime="20201112 12:44:53.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.717" endtime="20201112 12:44:53.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:53.866" level="INFO">${RESULT} = {'wakeups': [39325289, 39335288, 39345288, 39355288, 39365288, 39375288, 39385288, 39395288, 39405288, 39415288, 39425288, 39435288, 39445288, 39455288, 39465288, 39475288, 39485288, 39495288, 3950528...</msg>
<status status="PASS" starttime="20201112 12:44:53.863" endtime="20201112 12:44:53.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.870" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:53.869" endtime="20201112 12:44:53.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.873" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:53.871" endtime="20201112 12:44:53.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.867" endtime="20201112 12:44:53.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.879" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:53.878" endtime="20201112 12:44:53.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.881" level="INFO">VALUE: 39315244</msg>
<status status="PASS" starttime="20201112 12:44:53.880" endtime="20201112 12:44:53.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.874" endtime="20201112 12:44:53.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.886" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:53.885" endtime="20201112 12:44:53.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.889" level="INFO">VALUE: [39325289, 39335288, 39345288, 39355288, 39365288, 39375288, 39385288, 39395288, 39405288, 39415288, 39425288, 39435288, 39445288, 39455288, 39465288, 39475288, 39485288, 39495288, 39505288, 39515288, 39525288, 39535288, 39545288, 39555288, 39565288, 39575288, 39585288, 39595288, 39605288, 39615288, 39625288, 39635288, 39645288, 39655288, 39665288, 39675288, 39685288, 39695288, 39705288, 39715288, 39725288, 39735288, 39745288, 39755288, 39765288, 39775288, 39785288, 39795288, 39805288, 39815288, 39825288, 39835288, 39845288, 39855288, 39865288, 39875288, 39885288, 39895288, 39905288, 39915288, 39925288, 39935288, 39945288, 39955288, 39965288, 39975288, 39985288, 39995288, 40005288, 40015288, 40025288, 40035288, 40045288, 40055288, 40065288, 40075288, 40085288, 40095288, 40105288, 40115288, 40125288, 40135288, 40145288, 40155288, 40165288, 40175288, 40185288, 40195288, 40205288, 40215288, 40225288, 40235288, 40245288, 40255288, 40265288, 40275288, 40285288, 40295288, 40305288, 40315288]</msg>
<status status="PASS" starttime="20201112 12:44:53.887" endtime="20201112 12:44:53.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.883" endtime="20201112 12:44:53.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.898" endtime="20201112 12:44:54.189"></status>
</kw>
<msg timestamp="20201112 12:44:54.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028421403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:53.895" endtime="20201112 12:44:54.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028421403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.193" endtime="20201112 12:44:54.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.201" endtime="20201112 12:44:54.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.892" endtime="20201112 12:44:54.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.890" endtime="20201112 12:44:54.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:54.227" level="INFO">${RESULT} = {'time': [0.018375347, 0.028421403, 0.038422319, 0.048423431, 0.058424597, 0.068425708, 0.078426875, 0.088428, 0.098429167, 0.108430278, 0.118431472, 0.128432556, 0.138433736, 0.148434861, 0.158436042...</msg>
<status status="PASS" starttime="20201112 12:44:54.204" endtime="20201112 12:44:54.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.231" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:54.230" endtime="20201112 12:44:54.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.234" level="INFO">VALUE: 0.018375347</msg>
<status status="PASS" starttime="20201112 12:44:54.233" endtime="20201112 12:44:54.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.228" endtime="20201112 12:44:54.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.240" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:54.238" endtime="20201112 12:44:54.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.242" level="INFO">VALUE: [0.028421403, 0.038422319, 0.048423431, 0.058424597, 0.068425708, 0.078426875, 0.088428, 0.098429167, 0.108430278, 0.118431472, 0.128432556, 0.138433736, 0.148434861, 0.158436042, 0.168437125, 0.178438292, 0.188439417, 0.198440597, 0.208441694, 0.218442861, 0.228443972, 0.238445153, 0.248446278, 0.258447431, 0.268448542, 0.278449708, 0.288450903, 0.298452, 0.308453111, 0.318454292, 0.328455389, 0.338456556, 0.348457681, 0.358458861, 0.368459958, 0.378461125, 0.388462319, 0.398463417, 0.408464528, 0.418465694, 0.428466819, 0.438468, 0.448469111, 0.458470264, 0.468471389, 0.478472556, 0.488473694, 0.498474833, 0.508475972, 0.518477125, 0.528478236, 0.538479417, 0.548480528, 0.558481708, 0.568482847, 0.578483986, 0.588485097, 0.598486264, 0.608487375, 0.618488569, 0.628489667, 0.638490833, 0.648491986, 0.658493125, 0.668494236, 0.678495403, 0.688496528, 0.698497694, 0.708498806, 0.718499972, 0.728501097, 0.738502264, 0.748503375, 0.758504542, 0.768505667, 0.778506875, 0.788507958, 0.798509111, 0.808510236, 0.818511403, 0.828512514, 0.838513681, 0.848514819, 0.858515972, 0.868517083, 0.87851825, 0.888519375, 0.898520556, 0.908521653, 0.918522819, 0.928523944, 0.938525153, 0.948526222, 0.958527389, 0.968528514, 0.978529681, 0.988530806, 0.998531944, 1.008533069, 1.018534278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:54.241" endtime="20201112 12:44:54.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.235" endtime="20201112 12:44:54.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.245" endtime="20201112 12:44:54.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:54.249" endtime="20201112 12:44:54.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.247" endtime="20201112 12:44:54.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.243" endtime="20201112 12:44:54.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.716" endtime="20201112 12:44:54.269"></status>
</kw>
<msg timestamp="20201112 12:44:54.270" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.278" endtime="20201112 12:44:56.399"></status>
</kw>
<msg timestamp="20201112 12:44:56.400" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41869770, 'wakeups': [41879815, 41889814, 41899814, 41909814, 41919814...</msg>
<status status="PASS" starttime="20201112 12:44:54.276" endtime="20201112 12:44:56.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41869770, 'wakeups': [41879815, 41889814, 41899814, 41909814, 41919814...</msg>
<status status="PASS" starttime="20201112 12:44:56.402" endtime="20201112 12:44:56.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.409" endtime="20201112 12:44:56.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.273" endtime="20201112 12:44:56.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.272" endtime="20201112 12:44:56.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.419" level="INFO">${RESULT} = {'wakeups': [41879815, 41889814, 41899814, 41909814, 41919814, 41929814, 41939814, 41949814, 41959814, 41969814, 41979814, 41989814, 41999814, 42009814, 42019814, 42029814, 42039814, 42049814, 4205981...</msg>
<status status="PASS" starttime="20201112 12:44:56.416" endtime="20201112 12:44:56.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.423" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:56.422" endtime="20201112 12:44:56.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.426" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:56.424" endtime="20201112 12:44:56.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.420" endtime="20201112 12:44:56.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.430" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:56.429" endtime="20201112 12:44:56.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.432" level="INFO">VALUE: 41869770</msg>
<status status="PASS" starttime="20201112 12:44:56.431" endtime="20201112 12:44:56.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.427" endtime="20201112 12:44:56.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.437" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:56.436" endtime="20201112 12:44:56.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.440" level="INFO">VALUE: [41879815, 41889814, 41899814, 41909814, 41919814, 41929814, 41939814, 41949814, 41959814, 41969814, 41979814, 41989814, 41999814, 42009814, 42019814, 42029814, 42039814, 42049814, 42059814, 42069814, 42079814, 42089814, 42099814, 42109814, 42119814, 42129814, 42139814, 42149814, 42159814, 42169814, 42179814, 42189814, 42199814, 42209814, 42219814, 42229814, 42239814, 42249814, 42259814, 42269814, 42279814, 42289814, 42299814, 42309814, 42319814, 42329814, 42339814, 42349814, 42359814, 42369814, 42379814, 42389814, 42399814, 42409814, 42419814, 42429814, 42439814, 42449814, 42459814, 42469814, 42479814, 42489814, 42499814, 42509814, 42519814, 42529814, 42539814, 42549814, 42559814, 42569814, 42579814, 42589814, 42599814, 42609814, 42619814, 42629814, 42639814, 42649814, 42659814, 42669814, 42679814, 42689814, 42699814, 42709814, 42719814, 42729814, 42739814, 42749814, 42759814, 42769814, 42779814, 42789814, 42799814, 42809814, 42819814, 42829814, 42839814, 42849814, 42859814, 42869814]</msg>
<status status="PASS" starttime="20201112 12:44:56.438" endtime="20201112 12:44:56.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.434" endtime="20201112 12:44:56.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.447" endtime="20201112 12:44:56.738"></status>
</kw>
<msg timestamp="20201112 12:44:56.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028398667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.445" endtime="20201112 12:44:56.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028398667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.742" endtime="20201112 12:44:56.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.750" endtime="20201112 12:44:56.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.443" endtime="20201112 12:44:56.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.441" endtime="20201112 12:44:56.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.776" level="INFO">${RESULT} = {'time': [0.018352292, 0.028398667, 0.038399597, 0.048400694, 0.058401875, 0.068402972, 0.078404139, 0.088405264, 0.098406431, 0.108407556, 0.118408708, 0.128409819, 0.138411014, 0.148412111, 0.158413...</msg>
<status status="PASS" starttime="20201112 12:44:56.753" endtime="20201112 12:44:56.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.786" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:56.785" endtime="20201112 12:44:56.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.788" level="INFO">VALUE: 0.018352292</msg>
<status status="PASS" starttime="20201112 12:44:56.787" endtime="20201112 12:44:56.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.782" endtime="20201112 12:44:56.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.794" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:56.792" endtime="20201112 12:44:56.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.796" level="INFO">VALUE: [0.028398667, 0.038399597, 0.048400694, 0.058401875, 0.068402972, 0.078404139, 0.088405264, 0.098406431, 0.108407556, 0.118408708, 0.128409819, 0.138411014, 0.148412111, 0.158413278, 0.168414389, 0.178415556, 0.188416681, 0.198417847, 0.208418986, 0.218420125, 0.228421264, 0.238422403, 0.248423528, 0.258424694, 0.268425806, 0.278426986, 0.288428111, 0.298429264, 0.308430431, 0.318431556, 0.328432681, 0.338433833, 0.348434958, 0.358436111, 0.368437292, 0.378438403, 0.388439514, 0.398440681, 0.408441806, 0.418442972, 0.428444083, 0.43844525, 0.448446375, 0.458447569, 0.468448653, 0.478449889, 0.488450944, 0.498452167, 0.508453222, 0.518454403, 0.528455528, 0.538456681, 0.548457792, 0.558458958, 0.568460097, 0.578461264, 0.588462375, 0.598463542, 0.608464653, 0.618465847, 0.628466958, 0.638468111, 0.648469222, 0.658470389, 0.668471528, 0.678472681, 0.688473847, 0.698474972, 0.708476069, 0.718477222, 0.728478361, 0.7384795, 0.748480597, 0.758481778, 0.768482889, 0.778484042, 0.788485167, 0.798486319, 0.808487431, 0.818488597, 0.828489694, 0.838490847, 0.848491986, 0.858493181, 0.868494236, 0.878495403, 0.888496514, 0.89849775, 0.908498792, 0.918499972, 0.928501083, 0.938502236, 0.948503333, 0.958504486, 0.968505625, 0.978506764, 0.988507889, 0.998509069, 1.008510208, 1.018511347] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:56.795" endtime="20201112 12:44:56.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.790" endtime="20201112 12:44:56.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.799" endtime="20201112 12:44:56.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:56.802" endtime="20201112 12:44:56.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.801" endtime="20201112 12:44:56.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.797" endtime="20201112 12:44:56.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.270" endtime="20201112 12:44:56.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.157" endtime="20201112 12:44:56.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.156" endtime="20201112 12:44:56.823"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:56.826" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.836" endtime="20201112 12:44:58.956"></status>
</kw>
<msg timestamp="20201112 12:44:58.957" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44428367, 'wakeups': [44438424, 44448424, 44458424, 44468424, 44478424...</msg>
<status status="PASS" starttime="20201112 12:44:56.834" endtime="20201112 12:44:58.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44428367, 'wakeups': [44438424, 44448424, 44458424, 44468424, 44478424...</msg>
<status status="PASS" starttime="20201112 12:44:58.959" endtime="20201112 12:44:58.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.966" endtime="20201112 12:44:58.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.830" endtime="20201112 12:44:58.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.828" endtime="20201112 12:44:58.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:58.976" level="INFO">${RESULT} = {'wakeups': [44438424, 44448424, 44458424, 44468424, 44478424, 44488424, 44498424, 44508424, 44518424, 44528424, 44538424, 44548424, 44558424, 44568424, 44578424, 44588424, 44598424, 44608424, 4461842...</msg>
<status status="PASS" starttime="20201112 12:44:58.974" endtime="20201112 12:44:58.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.980" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:58.979" endtime="20201112 12:44:58.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.982" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:58.981" endtime="20201112 12:44:58.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.977" endtime="20201112 12:44:58.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.987" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:58.986" endtime="20201112 12:44:58.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.989" level="INFO">VALUE: 44428367</msg>
<status status="PASS" starttime="20201112 12:44:58.988" endtime="20201112 12:44:58.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.984" endtime="20201112 12:44:58.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.994" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:58.993" endtime="20201112 12:44:58.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.997" level="INFO">VALUE: [44438424, 44448424, 44458424, 44468424, 44478424, 44488424, 44498424, 44508424, 44518424, 44528424, 44538424, 44548424, 44558424, 44568424, 44578424, 44588424, 44598424, 44608424, 44618424, 44628424, 44638424, 44648424, 44658424, 44668424, 44678424, 44688424, 44698424, 44708424, 44718424, 44728424, 44738424, 44748424, 44758424, 44768424, 44778424, 44788424, 44798424, 44808424, 44818424, 44828424, 44838424, 44848424, 44858424, 44868424, 44878424, 44888424, 44898424, 44908424, 44918424, 44928424, 44938424, 44948424, 44958424, 44968424, 44978424, 44988424, 44998424, 45008424, 45018424, 45028424, 45038424, 45048424, 45058424, 45068424, 45078424, 45088424, 45098424, 45108424, 45118424, 45128424, 45138424, 45148424, 45158424, 45168424, 45178424, 45188424, 45198424, 45208424, 45218424, 45228424, 45238424, 45248424, 45258424, 45268424, 45278424, 45288424, 45298424, 45308424, 45318424, 45328424, 45338424, 45348424, 45358424, 45368424, 45378424, 45388424, 45398424, 45408424, 45418424, 45428424]</msg>
<status status="PASS" starttime="20201112 12:44:58.995" endtime="20201112 12:44:58.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.991" endtime="20201112 12:44:58.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.004" endtime="20201112 12:44:59.296"></status>
</kw>
<msg timestamp="20201112 12:44:59.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02325575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033314236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:59.002" endtime="20201112 12:44:59.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02325575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033314236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:59.300" endtime="20201112 12:44:59.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.307" endtime="20201112 12:44:59.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.000" endtime="20201112 12:44:59.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.998" endtime="20201112 12:44:59.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:59.334" level="INFO">${RESULT} = {'time': [0.02325575, 0.033314236, 0.043315042, 0.053316139, 0.063317306, 0.073318431, 0.083319597, 0.093320722, 0.103321875, 0.113322986, 0.123324181, 0.133325278, 0.143326431, 0.153327569, 0.1633287...</msg>
<status status="PASS" starttime="20201112 12:44:59.311" endtime="20201112 12:44:59.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.338" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:59.337" endtime="20201112 12:44:59.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.340" level="INFO">VALUE: 0.02325575</msg>
<status status="PASS" starttime="20201112 12:44:59.339" endtime="20201112 12:44:59.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.335" endtime="20201112 12:44:59.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.346" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:59.345" endtime="20201112 12:44:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.348" level="INFO">VALUE: [0.033314236, 0.043315042, 0.053316139, 0.063317306, 0.073318431, 0.083319597, 0.093320722, 0.103321875, 0.113322986, 0.123324181, 0.133325278, 0.143326431, 0.153327569, 0.163328736, 0.173329847, 0.183331, 0.193332125, 0.203333278, 0.213334403, 0.223335597, 0.233336694, 0.243337847, 0.253338972, 0.263340139, 0.27334125, 0.283342417, 0.293343528, 0.303344708, 0.313345819, 0.323346986, 0.333348097, 0.343349278, 0.353350389, 0.363351556, 0.373352694, 0.383353847, 0.393354958, 0.403356153, 0.41335725, 0.423358431, 0.433359528, 0.443360708, 0.453361819, 0.463363, 0.473364097, 0.483365264, 0.493366389, 0.503367556, 0.513368667, 0.523369833, 0.533370972, 0.543372139, 0.55337325, 0.563374403, 0.573375542, 0.583376694, 0.593377861, 0.603378972, 0.613380083, 0.62338125, 0.633382361, 0.643383569, 0.653384639, 0.663385792, 0.673386931, 0.683388069, 0.693389181, 0.703390333, 0.713391444, 0.723392625, 0.733393736, 0.743394944, 0.753396, 0.763397167, 0.773398264, 0.783399458, 0.793400542, 0.803401708, 0.813402819, 0.823403972, 0.833405097, 0.84340625, 0.853407361, 0.863408528, 0.873409639, 0.883410806, 0.893411931, 0.903413069, 0.913414194, 0.923415347, 0.933416514, 0.943417625, 0.953418736, 0.963419917, 0.973421014, 0.983422181, 0.993423306, 1.003424444, 1.013425556, 1.023426722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:59.347" endtime="20201112 12:44:59.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.342" endtime="20201112 12:44:59.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.351" endtime="20201112 12:44:59.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:59.355" endtime="20201112 12:44:59.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.353" endtime="20201112 12:44:59.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.350" endtime="20201112 12:44:59.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.827" endtime="20201112 12:44:59.376"></status>
</kw>
<msg timestamp="20201112 12:44:59.376" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.384" endtime="20201112 12:45:01.504"></status>
</kw>
<msg timestamp="20201112 12:45:01.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46975924, 'wakeups': [46985981, 46995981, 47005981, 47015981, 47025981...</msg>
<status status="PASS" starttime="20201112 12:44:59.382" endtime="20201112 12:45:01.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.511" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46975924, 'wakeups': [46985981, 46995981, 47005981, 47015981, 47025981...</msg>
<status status="PASS" starttime="20201112 12:45:01.508" endtime="20201112 12:45:01.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.513" endtime="20201112 12:45:01.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.380" endtime="20201112 12:45:01.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.378" endtime="20201112 12:45:01.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:01.524" level="INFO">${RESULT} = {'wakeups': [46985981, 46995981, 47005981, 47015981, 47025981, 47035981, 47045981, 47055981, 47065981, 47075981, 47085981, 47095981, 47105981, 47115981, 47125981, 47135981, 47145981, 47155981, 4716598...</msg>
<status status="PASS" starttime="20201112 12:45:01.520" endtime="20201112 12:45:01.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.531" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:01.530" endtime="20201112 12:45:01.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.533" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:01.532" endtime="20201112 12:45:01.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.526" endtime="20201112 12:45:01.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.538" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:01.537" endtime="20201112 12:45:01.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.541" level="INFO">VALUE: 46975924</msg>
<status status="PASS" starttime="20201112 12:45:01.540" endtime="20201112 12:45:01.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.534" endtime="20201112 12:45:01.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.546" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:01.545" endtime="20201112 12:45:01.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.548" level="INFO">VALUE: [46985981, 46995981, 47005981, 47015981, 47025981, 47035981, 47045981, 47055981, 47065981, 47075981, 47085981, 47095981, 47105981, 47115981, 47125981, 47135981, 47145981, 47155981, 47165981, 47175981, 47185981, 47195981, 47205981, 47215981, 47225981, 47235981, 47245981, 47255981, 47265981, 47275981, 47285981, 47295981, 47305981, 47315981, 47325981, 47335981, 47345981, 47355981, 47365981, 47375981, 47385981, 47395981, 47405981, 47415981, 47425981, 47435981, 47445981, 47455981, 47465981, 47475981, 47485981, 47495981, 47505981, 47515981, 47525981, 47535981, 47545981, 47555981, 47565981, 47575981, 47585981, 47595981, 47605981, 47615981, 47625981, 47635981, 47645981, 47655981, 47665981, 47675981, 47685981, 47695981, 47705981, 47715981, 47725981, 47735981, 47745981, 47755981, 47765981, 47775981, 47785981, 47795981, 47805981, 47815981, 47825981, 47835981, 47845981, 47855981, 47865981, 47875981, 47885981, 47895981, 47905981, 47915981, 47925981, 47935981, 47945981, 47955981, 47965981, 47975981]</msg>
<status status="PASS" starttime="20201112 12:45:01.547" endtime="20201112 12:45:01.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.542" endtime="20201112 12:45:01.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.556" endtime="20201112 12:45:01.849"></status>
</kw>
<msg timestamp="20201112 12:45:01.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:01.554" endtime="20201112 12:45:01.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:01.853" endtime="20201112 12:45:01.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.860" endtime="20201112 12:45:01.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.552" endtime="20201112 12:45:01.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.550" endtime="20201112 12:45:01.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:01.887" level="INFO">${RESULT} = {'time': [0.018247125, 0.028305403, 0.038306208, 0.048307319, 0.058308486, 0.068309597, 0.078310778, 0.088311889, 0.098313042, 0.108314181, 0.118315347, 0.128316444, 0.138317639, 0.148318736, 0.158319...</msg>
<status status="PASS" starttime="20201112 12:45:01.864" endtime="20201112 12:45:01.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.892" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:01.891" endtime="20201112 12:45:01.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.894" level="INFO">VALUE: 0.018247125</msg>
<status status="PASS" starttime="20201112 12:45:01.893" endtime="20201112 12:45:01.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.888" endtime="20201112 12:45:01.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.900" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:01.899" endtime="20201112 12:45:01.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.903" level="INFO">VALUE: [0.028305403, 0.038306208, 0.048307319, 0.058308486, 0.068309597, 0.078310778, 0.088311889, 0.098313042, 0.108314181, 0.118315347, 0.128316444, 0.138317639, 0.148318736, 0.158319903, 0.168321014, 0.17832225, 0.188323306, 0.198324458, 0.208325583, 0.21832675, 0.228327944, 0.238329028, 0.248330153, 0.258331361, 0.268332431, 0.278333611, 0.288334722, 0.298335889, 0.308337, 0.318338167, 0.328339292, 0.338340458, 0.348341597, 0.35834275, 0.368343861, 0.378345028, 0.388346139, 0.398347306, 0.408348431, 0.418349597, 0.428350708, 0.438351889, 0.448353042, 0.458354167, 0.468355292, 0.478356472, 0.488357583, 0.498358736, 0.508359847, 0.518361028, 0.528362125, 0.538363361, 0.548364417, 0.558365639, 0.568366681, 0.578367847, 0.588368958, 0.598370125, 0.60837125, 0.618372389, 0.6283735, 0.638374667, 0.648375778, 0.658376958, 0.668378083, 0.678379222, 0.688380389, 0.6983815, 0.708382625, 0.718383764, 0.728384931, 0.738386042, 0.748387153, 0.758388319, 0.768389431, 0.778390611, 0.788391708, 0.798392875, 0.808393986, 0.818395153, 0.828396278, 0.838397431, 0.848398542, 0.858399722, 0.868400819, 0.878401986, 0.888403097, 0.898404306, 0.908405431, 0.918406556, 0.928407653, 0.938408833, 0.948409931, 0.958411097, 0.968412236, 0.978413375, 0.9884145, 0.998415667, 1.008416778, 1.018417944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:01.902" endtime="20201112 12:45:01.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.896" endtime="20201112 12:45:01.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.906" endtime="20201112 12:45:01.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:01.910" endtime="20201112 12:45:01.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.908" endtime="20201112 12:45:01.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.905" endtime="20201112 12:45:01.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.377" endtime="20201112 12:45:01.931"></status>
</kw>
<msg timestamp="20201112 12:45:01.931" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.940" endtime="20201112 12:45:04.069"></status>
</kw>
<msg timestamp="20201112 12:45:04.070" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49531838, 'wakeups': [49541895, 49551895, 49561895, 49571895, 49581895...</msg>
<status status="PASS" starttime="20201112 12:45:01.938" endtime="20201112 12:45:04.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.077" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49531838, 'wakeups': [49541895, 49551895, 49561895, 49571895, 49581895...</msg>
<status status="PASS" starttime="20201112 12:45:04.073" endtime="20201112 12:45:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.080" endtime="20201112 12:45:04.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.935" endtime="20201112 12:45:04.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.933" endtime="20201112 12:45:04.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:04.087" level="INFO">${RESULT} = {'wakeups': [49541895, 49551895, 49561895, 49571895, 49581895, 49591895, 49601895, 49611895, 49621895, 49631895, 49641895, 49651895, 49661895, 49671895, 49681895, 49691895, 49701895, 49711895, 4972189...</msg>
<status status="PASS" starttime="20201112 12:45:04.085" endtime="20201112 12:45:04.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.092" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:04.091" endtime="20201112 12:45:04.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.094" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:04.093" endtime="20201112 12:45:04.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.088" endtime="20201112 12:45:04.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.099" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:04.098" endtime="20201112 12:45:04.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.101" level="INFO">VALUE: 49531838</msg>
<status status="PASS" starttime="20201112 12:45:04.100" endtime="20201112 12:45:04.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.096" endtime="20201112 12:45:04.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.107" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:04.106" endtime="20201112 12:45:04.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.109" level="INFO">VALUE: [49541895, 49551895, 49561895, 49571895, 49581895, 49591895, 49601895, 49611895, 49621895, 49631895, 49641895, 49651895, 49661895, 49671895, 49681895, 49691895, 49701895, 49711895, 49721895, 49731895, 49741895, 49751895, 49761895, 49771895, 49781895, 49791895, 49801895, 49811895, 49821895, 49831895, 49841895, 49851895, 49861895, 49871895, 49881895, 49891895, 49901895, 49911895, 49921895, 49931895, 49941895, 49951895, 49961895, 49971895, 49981895, 49991895, 50001895, 50011895, 50021895, 50031895, 50041895, 50051895, 50061895, 50071895, 50081895, 50091895, 50101895, 50111895, 50121895, 50131895, 50141895, 50151895, 50161895, 50171895, 50181895, 50191895, 50201895, 50211895, 50221895, 50231895, 50241895, 50251895, 50261895, 50271895, 50281895, 50291895, 50301895, 50311895, 50321895, 50331895, 50341895, 50351895, 50361895, 50371895, 50381895, 50391895, 50401895, 50411895, 50421895, 50431895, 50441895, 50451895, 50461895, 50471895, 50481895, 50491895, 50501895, 50511895, 50521895, 50531895]</msg>
<status status="PASS" starttime="20201112 12:45:04.108" endtime="20201112 12:45:04.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.103" endtime="20201112 12:45:04.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.117" endtime="20201112 12:45:04.411"></status>
</kw>
<msg timestamp="20201112 12:45:04.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018971917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029029903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:04.115" endtime="20201112 12:45:04.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018971917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029029903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:04.415" endtime="20201112 12:45:04.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.422" endtime="20201112 12:45:04.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.112" endtime="20201112 12:45:04.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.111" endtime="20201112 12:45:04.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:04.448" level="INFO">${RESULT} = {'time': [0.018971917, 0.029029903, 0.039030722, 0.049031833, 0.059033014, 0.069034111, 0.079035347, 0.089036403, 0.099037556, 0.109038694, 0.119039847, 0.129041014, 0.139042125, 0.149043264, 0.159044...</msg>
<status status="PASS" starttime="20201112 12:45:04.426" endtime="20201112 12:45:04.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.453" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:04.452" endtime="20201112 12:45:04.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.455" level="INFO">VALUE: 0.018971917</msg>
<status status="PASS" starttime="20201112 12:45:04.454" endtime="20201112 12:45:04.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.449" endtime="20201112 12:45:04.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.460" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:04.459" endtime="20201112 12:45:04.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.462" level="INFO">VALUE: [0.029029903, 0.039030722, 0.049031833, 0.059033014, 0.069034111, 0.079035347, 0.089036403, 0.099037556, 0.109038694, 0.119039847, 0.129041014, 0.139042125, 0.149043264, 0.159044431, 0.169045542, 0.179046722, 0.189047819, 0.199048986, 0.209050097, 0.219051264, 0.229052389, 0.239053542, 0.249054667, 0.259055847, 0.269056944, 0.279058139, 0.289059236, 0.299060403, 0.309061528, 0.319062694, 0.329063806, 0.339064972, 0.349066111, 0.359067278, 0.369068389, 0.379069556, 0.389070667, 0.399071833, 0.409072944, 0.419074111, 0.429075222, 0.439076389, 0.449077486, 0.459078653, 0.469079764, 0.479080917, 0.489082028, 0.499083194, 0.509084319, 0.519085486, 0.529086583, 0.539087736, 0.549088847, 0.559090028, 0.569091139, 0.579092333, 0.589093417, 0.599094556, 0.609095681, 0.619096833, 0.629097944, 0.639099111, 0.649100236, 0.659101389, 0.669102542, 0.679103653, 0.689104806, 0.699105944, 0.709107056, 0.719108222, 0.729109319, 0.7391105, 0.749111639, 0.759112792, 0.769113917, 0.779115042, 0.789116167, 0.799117306, 0.809118417, 0.819119583, 0.829120694, 0.839121861, 0.849122986, 0.859124167, 0.86912525, 0.879126417, 0.889127542, 0.899128694, 0.909129806, 0.919130958, 0.929132125, 0.93913325, 0.949134375, 0.959135514, 0.969136625, 0.979137792, 0.989138903, 0.999140069, 1.009141181, 1.019142361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:04.461" endtime="20201112 12:45:04.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.456" endtime="20201112 12:45:04.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.465" endtime="20201112 12:45:04.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:04.469" endtime="20201112 12:45:04.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.467" endtime="20201112 12:45:04.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.464" endtime="20201112 12:45:04.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.932" endtime="20201112 12:45:04.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.825" endtime="20201112 12:45:04.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.824" endtime="20201112 12:45:04.490"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:04.493" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.502" endtime="20201112 12:45:06.622"></status>
</kw>
<msg timestamp="20201112 12:45:06.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52093444, 'wakeups': [52103512, 52113511, 52123511, 52133511, 52143511...</msg>
<status status="PASS" starttime="20201112 12:45:04.500" endtime="20201112 12:45:06.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.629" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52093444, 'wakeups': [52103512, 52113511, 52123511, 52133511, 52143511...</msg>
<status status="PASS" starttime="20201112 12:45:06.625" endtime="20201112 12:45:06.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.631" endtime="20201112 12:45:06.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.497" endtime="20201112 12:45:06.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.495" endtime="20201112 12:45:06.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:06.640" level="INFO">${RESULT} = {'wakeups': [52103512, 52113511, 52123511, 52133511, 52143511, 52153511, 52163511, 52173511, 52183511, 52193511, 52203511, 52213511, 52223511, 52233511, 52243511, 52253511, 52263511, 52273511, 5228351...</msg>
<status status="PASS" starttime="20201112 12:45:06.638" endtime="20201112 12:45:06.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.645" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:06.644" endtime="20201112 12:45:06.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.647" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:06.646" endtime="20201112 12:45:06.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.641" endtime="20201112 12:45:06.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.652" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:06.651" endtime="20201112 12:45:06.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.654" level="INFO">VALUE: 52093444</msg>
<status status="PASS" starttime="20201112 12:45:06.653" endtime="20201112 12:45:06.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.648" endtime="20201112 12:45:06.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.659" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:06.658" endtime="20201112 12:45:06.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.661" level="INFO">VALUE: [52103512, 52113511, 52123511, 52133511, 52143511, 52153511, 52163511, 52173511, 52183511, 52193511, 52203511, 52213511, 52223511, 52233511, 52243511, 52253511, 52263511, 52273511, 52283511, 52293511, 52303511, 52313511, 52323511, 52333511, 52343511, 52353511, 52363511, 52373511, 52383511, 52393511, 52403511, 52413511, 52423511, 52433511, 52443511, 52453511, 52463511, 52473511, 52483511, 52493511, 52503511, 52513511, 52523511, 52533511, 52543511, 52553511, 52563511, 52573511, 52583511, 52593511, 52603511, 52613511, 52623511, 52633511, 52643511, 52653511, 52663511, 52673511, 52683511, 52693511, 52703511, 52713511, 52723511, 52733511, 52743511, 52753511, 52763511, 52773511, 52783511, 52793511, 52803511, 52813511, 52823511, 52833511, 52843511, 52853511, 52863511, 52873511, 52883511, 52893511, 52903511, 52913511, 52923511, 52933511, 52943511, 52953511, 52963511, 52973511, 52983511, 52993511, 53003511, 53013511, 53023511, 53033511, 53043511, 53053511, 53063511, 53073511, 53083511, 53093511]</msg>
<status status="PASS" starttime="20201112 12:45:06.660" endtime="20201112 12:45:06.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.655" endtime="20201112 12:45:06.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.668" endtime="20201112 12:45:06.959"></status>
</kw>
<msg timestamp="20201112 12:45:06.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03194875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:06.667" endtime="20201112 12:45:06.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03194875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:06.962" endtime="20201112 12:45:06.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.970" endtime="20201112 12:45:06.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.664" endtime="20201112 12:45:06.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.662" endtime="20201112 12:45:06.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:06.996" level="INFO">${RESULT} = {'time': [0.021878944, 0.03194875, 0.041948861, 0.051949986, 0.061951181, 0.071952278, 0.081953431, 0.091954542, 0.101955722, 0.111956819, 0.121958, 0.131959125, 0.141960333, 0.151961403, 0.161962556,...</msg>
<status status="PASS" starttime="20201112 12:45:06.973" endtime="20201112 12:45:06.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:07.001" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:07.000" endtime="20201112 12:45:07.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:07.003" level="INFO">VALUE: 0.021878944</msg>
<status status="PASS" starttime="20201112 12:45:07.002" endtime="20201112 12:45:07.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.997" endtime="20201112 12:45:07.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:07.008" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:07.007" endtime="20201112 12:45:07.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:07.011" level="INFO">VALUE: [0.03194875, 0.041948861, 0.051949986, 0.061951181, 0.071952278, 0.081953431, 0.091954542, 0.101955722, 0.111956819, 0.121958, 0.131959125, 0.141960333, 0.151961403, 0.161962556, 0.171963681, 0.181964847, 0.191966, 0.201967125, 0.211968236, 0.221969431, 0.231970528, 0.241971722, 0.251972806, 0.261974014, 0.271975111, 0.281976264, 0.291977389, 0.301978542, 0.311979681, 0.321980833, 0.331981944, 0.341983167, 0.351984264, 0.361985389, 0.371986514, 0.381987667, 0.391988847, 0.401989944, 0.411991069, 0.421992208, 0.431993319, 0.4419945, 0.451995597, 0.46199675, 0.471997875, 0.481999028, 0.492000153, 0.502001292, 0.512002431, 0.522003597, 0.532004708, 0.542005847, 0.552006972, 0.562008139, 0.572009222, 0.582010403, 0.5920115, 0.602012667, 0.612013792, 0.622014931, 0.632016069, 0.642017208, 0.652018361, 0.662019556, 0.672020611, 0.682021764, 0.692022875, 0.702024028, 0.712025153, 0.722026306, 0.732027417, 0.742028583, 0.752029708, 0.762030875, 0.772031958, 0.782033125, 0.792034264, 0.802035417, 0.812036583, 0.822037681, 0.832038792, 0.842039944, 0.852041056, 0.862042236, 0.872043347, 0.882044514, 0.892045611, 0.902046778, 0.912047889, 0.922049042, 0.932050181, 0.942051375, 0.952052444, 0.962053597, 0.972054708, 0.982055875, 0.992057014, 1.002058139, 1.01205925, 1.022060417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:07.010" endtime="20201112 12:45:07.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.004" endtime="20201112 12:45:07.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:07.014" endtime="20201112 12:45:07.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:07.017" endtime="20201112 12:45:07.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.016" endtime="20201112 12:45:07.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.012" endtime="20201112 12:45:07.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.493" endtime="20201112 12:45:07.038"></status>
</kw>
<msg timestamp="20201112 12:45:07.039" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:07.047" endtime="20201112 12:45:09.166"></status>
</kw>
<msg timestamp="20201112 12:45:09.167" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54638438, 'wakeups': [54648506, 54658505, 54668505, 54678505, 54688505...</msg>
<status status="PASS" starttime="20201112 12:45:07.045" endtime="20201112 12:45:09.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54638438, 'wakeups': [54648506, 54658505, 54668505, 54678505, 54688505...</msg>
<status status="PASS" starttime="20201112 12:45:09.169" endtime="20201112 12:45:09.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.175" endtime="20201112 12:45:09.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.042" endtime="20201112 12:45:09.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.041" endtime="20201112 12:45:09.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:09.186" level="INFO">${RESULT} = {'wakeups': [54648506, 54658505, 54668505, 54678505, 54688505, 54698505, 54708505, 54718505, 54728505, 54738505, 54748505, 54758505, 54768505, 54778505, 54788505, 54798505, 54808505, 54818505, 5482850...</msg>
<status status="PASS" starttime="20201112 12:45:09.182" endtime="20201112 12:45:09.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.194" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:09.193" endtime="20201112 12:45:09.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.196" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:09.195" endtime="20201112 12:45:09.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.188" endtime="20201112 12:45:09.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.202" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:09.201" endtime="20201112 12:45:09.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.204" level="INFO">VALUE: 54638438</msg>
<status status="PASS" starttime="20201112 12:45:09.203" endtime="20201112 12:45:09.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.199" endtime="20201112 12:45:09.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.209" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:09.208" endtime="20201112 12:45:09.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.216" level="INFO">VALUE: [54648506, 54658505, 54668505, 54678505, 54688505, 54698505, 54708505, 54718505, 54728505, 54738505, 54748505, 54758505, 54768505, 54778505, 54788505, 54798505, 54808505, 54818505, 54828505, 54838505, 54848505, 54858505, 54868505, 54878505, 54888505, 54898505, 54908505, 54918505, 54928505, 54938505, 54948505, 54958505, 54968505, 54978505, 54988505, 54998505, 55008505, 55018505, 55028505, 55038505, 55048505, 55058505, 55068505, 55078505, 55088505, 55098505, 55108505, 55118505, 55128505, 55138505, 55148505, 55158505, 55168505, 55178505, 55188505, 55198505, 55208505, 55218505, 55228505, 55238505, 55248505, 55258505, 55268505, 55278505, 55288505, 55298505, 55308505, 55318505, 55328505, 55338505, 55348505, 55358505, 55368505, 55378505, 55388505, 55398505, 55408505, 55418505, 55428505, 55438505, 55448505, 55458505, 55468505, 55478505, 55488505, 55498505, 55508505, 55518505, 55528505, 55538505, 55548505, 55558505, 55568505, 55578505, 55588505, 55598505, 55608505, 55618505, 55628505, 55638505]</msg>
<status status="PASS" starttime="20201112 12:45:09.215" endtime="20201112 12:45:09.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.206" endtime="20201112 12:45:09.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.224" endtime="20201112 12:45:09.515"></status>
</kw>
<msg timestamp="20201112 12:45:09.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018244333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028313819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:09.222" endtime="20201112 12:45:09.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018244333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028313819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:09.519" endtime="20201112 12:45:09.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.526" endtime="20201112 12:45:09.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.220" endtime="20201112 12:45:09.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.218" endtime="20201112 12:45:09.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:09.552" level="INFO">${RESULT} = {'time': [0.018244333, 0.028313819, 0.038313917, 0.048315028, 0.058316264, 0.068317306, 0.078318486, 0.088319597, 0.098320778, 0.108321903, 0.118323042, 0.128324167, 0.138325347, 0.148326458, 0.158327...</msg>
<status status="PASS" starttime="20201112 12:45:09.529" endtime="20201112 12:45:09.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.558" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:09.556" endtime="20201112 12:45:09.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.560" level="INFO">VALUE: 0.018244333</msg>
<status status="PASS" starttime="20201112 12:45:09.559" endtime="20201112 12:45:09.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.553" endtime="20201112 12:45:09.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.565" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:09.564" endtime="20201112 12:45:09.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.567" level="INFO">VALUE: [0.028313819, 0.038313917, 0.048315028, 0.058316264, 0.068317306, 0.078318486, 0.088319597, 0.098320778, 0.108321903, 0.118323042, 0.128324167, 0.138325347, 0.148326458, 0.158327625, 0.168328736, 0.178329903, 0.188331014, 0.198332208, 0.208333306, 0.218334486, 0.228335569, 0.238336764, 0.248337861, 0.258339069, 0.268340153, 0.278341319, 0.288342444, 0.298343625, 0.308344708, 0.318345875, 0.328347014, 0.338348167, 0.348349278, 0.358350444, 0.368351583, 0.37835275, 0.388353847, 0.398355028, 0.408356181, 0.418357319, 0.428358417, 0.438359583, 0.448360736, 0.458361889, 0.468362986, 0.478364167, 0.488365278, 0.498366444, 0.508367597, 0.518368736, 0.528369847, 0.538371028, 0.548372139, 0.558373319, 0.568374417, 0.578375583, 0.588376708, 0.598377875, 0.608379042, 0.618380167, 0.628381278, 0.638382444, 0.648383556, 0.658384736, 0.668385861, 0.678387014, 0.688388153, 0.698389319, 0.708390431, 0.718391611, 0.728392694, 0.738393931, 0.748394986, 0.758396167, 0.768397278, 0.778398431, 0.788399556, 0.798400722, 0.808401861, 0.818403028, 0.828404125, 0.838405292, 0.848406417, 0.858407597, 0.868408694, 0.878409861, 0.888410972, 0.898412139, 0.908413264, 0.918414403, 0.928415528, 0.938416681, 0.948417792, 0.958418972, 0.968420125, 0.978421236, 0.988422347, 0.998423528, 1.008424639, 1.018425792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:09.566" endtime="20201112 12:45:09.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.561" endtime="20201112 12:45:09.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.570" endtime="20201112 12:45:09.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:09.574" endtime="20201112 12:45:09.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.572" endtime="20201112 12:45:09.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.569" endtime="20201112 12:45:09.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:07.039" endtime="20201112 12:45:09.595"></status>
</kw>
<msg timestamp="20201112 12:45:09.595" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.603" endtime="20201112 12:45:11.722"></status>
</kw>
<msg timestamp="20201112 12:45:11.723" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57195561, 'wakeups': [57205629, 57215628, 57225628, 57235628, 57245628...</msg>
<status status="PASS" starttime="20201112 12:45:09.602" endtime="20201112 12:45:11.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57195561, 'wakeups': [57205629, 57215628, 57225628, 57235628, 57245628...</msg>
<status status="PASS" starttime="20201112 12:45:11.726" endtime="20201112 12:45:11.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.731" endtime="20201112 12:45:11.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.599" endtime="20201112 12:45:11.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.597" endtime="20201112 12:45:11.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:11.742" level="INFO">${RESULT} = {'wakeups': [57205629, 57215628, 57225628, 57235628, 57245628, 57255628, 57265628, 57275628, 57285628, 57295628, 57305628, 57315628, 57325628, 57335628, 57345628, 57355628, 57365628, 57375628, 5738562...</msg>
<status status="PASS" starttime="20201112 12:45:11.738" endtime="20201112 12:45:11.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.749" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:11.748" endtime="20201112 12:45:11.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.751" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:11.750" endtime="20201112 12:45:11.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.744" endtime="20201112 12:45:11.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.756" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:11.755" endtime="20201112 12:45:11.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.758" level="INFO">VALUE: 57195561</msg>
<status status="PASS" starttime="20201112 12:45:11.757" endtime="20201112 12:45:11.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.753" endtime="20201112 12:45:11.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.763" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:11.762" endtime="20201112 12:45:11.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.766" level="INFO">VALUE: [57205629, 57215628, 57225628, 57235628, 57245628, 57255628, 57265628, 57275628, 57285628, 57295628, 57305628, 57315628, 57325628, 57335628, 57345628, 57355628, 57365628, 57375628, 57385628, 57395628, 57405628, 57415628, 57425628, 57435628, 57445628, 57455628, 57465628, 57475628, 57485628, 57495628, 57505628, 57515628, 57525628, 57535628, 57545628, 57555628, 57565628, 57575628, 57585628, 57595628, 57605628, 57615628, 57625628, 57635628, 57645628, 57655628, 57665628, 57675628, 57685628, 57695628, 57705628, 57715628, 57725628, 57735628, 57745628, 57755628, 57765628, 57775628, 57785628, 57795628, 57805628, 57815628, 57825628, 57835628, 57845628, 57855628, 57865628, 57875628, 57885628, 57895628, 57905628, 57915628, 57925628, 57935628, 57945628, 57955628, 57965628, 57975628, 57985628, 57995628, 58005628, 58015628, 58025628, 58035628, 58045628, 58055628, 58065628, 58075628, 58085628, 58095628, 58105628, 58115628, 58125628, 58135628, 58145628, 58155628, 58165628, 58175628, 58185628, 58195628]</msg>
<status status="PASS" starttime="20201112 12:45:11.764" endtime="20201112 12:45:11.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.760" endtime="20201112 12:45:11.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.774" endtime="20201112 12:45:12.066"></status>
</kw>
<msg timestamp="20201112 12:45:12.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028965569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:11.772" endtime="20201112 12:45:12.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:12.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028965569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:12.070" endtime="20201112 12:45:12.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:12.078" endtime="20201112 12:45:12.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.769" endtime="20201112 12:45:12.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.767" endtime="20201112 12:45:12.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:12.103" level="INFO">${RESULT} = {'time': [0.018895972, 0.028965569, 0.038965694, 0.048966792, 0.058967958, 0.068969083, 0.078970236, 0.088971361, 0.098972528, 0.108973639, 0.118974806, 0.128975986, 0.138977083, 0.148978208, 0.158979...</msg>
<status status="PASS" starttime="20201112 12:45:12.081" endtime="20201112 12:45:12.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:12.108" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:12.107" endtime="20201112 12:45:12.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:12.110" level="INFO">VALUE: 0.018895972</msg>
<status status="PASS" starttime="20201112 12:45:12.109" endtime="20201112 12:45:12.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.104" endtime="20201112 12:45:12.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:12.115" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:12.114" endtime="20201112 12:45:12.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:12.117" level="INFO">VALUE: [0.028965569, 0.038965694, 0.048966792, 0.058967958, 0.068969083, 0.078970236, 0.088971361, 0.098972528, 0.108973639, 0.118974806, 0.128975986, 0.138977083, 0.148978208, 0.158979375, 0.1689805, 0.178981653, 0.188982778, 0.198983958, 0.208985056, 0.218986222, 0.228987347, 0.2389885, 0.248989625, 0.258990819, 0.268991903, 0.278993069, 0.288994208, 0.298995361, 0.308996472, 0.318997694, 0.328998764, 0.338999931, 0.349001069, 0.359002236, 0.369003333, 0.3790045, 0.389005611, 0.399006792, 0.409007917, 0.419009139, 0.429010181, 0.439011347, 0.449012472, 0.459013653, 0.469014764, 0.479015972, 0.489017042, 0.499018208, 0.509019319, 0.519020486, 0.529021611, 0.539022778, 0.549023889, 0.559025056, 0.569026194, 0.579027347, 0.589028458, 0.599029625, 0.60903075, 0.619031917, 0.629033028, 0.639034194, 0.649035319, 0.659036486, 0.669037611, 0.679038778, 0.689039889, 0.699041097, 0.709042167, 0.719043333, 0.729044458, 0.739045639, 0.749046736, 0.759047917, 0.769049028, 0.779050181, 0.789051292, 0.799052514, 0.809053583, 0.819054722, 0.829055847, 0.839057042, 0.849058111, 0.859059278, 0.869060403, 0.879061542, 0.889062653, 0.899063819, 0.909064931, 0.919066083, 0.929067222, 0.939068403, 0.949069486, 0.959070639, 0.969071764, 0.979072903, 0.989074028, 0.999075208, 1.009076306, 1.019077486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:12.116" endtime="20201112 12:45:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.111" endtime="20201112 12:45:12.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:12.120" endtime="20201112 12:45:12.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:12.124" endtime="20201112 12:45:12.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.122" endtime="20201112 12:45:12.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.119" endtime="20201112 12:45:12.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.596" endtime="20201112 12:45:12.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.491" endtime="20201112 12:45:12.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.490" endtime="20201112 12:45:12.145"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:12.148" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:12.157" endtime="20201112 12:45:14.276"></status>
</kw>
<msg timestamp="20201112 12:45:14.278" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59748441, 'wakeups': [59758524, 59768524, 59778524, 59788524, 59798524...</msg>
<status status="PASS" starttime="20201112 12:45:12.155" endtime="20201112 12:45:14.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.288" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59748441, 'wakeups': [59758524, 59768524, 59778524, 59788524, 59798524...</msg>
<status status="PASS" starttime="20201112 12:45:14.285" endtime="20201112 12:45:14.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.291" endtime="20201112 12:45:14.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.152" endtime="20201112 12:45:14.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.150" endtime="20201112 12:45:14.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:14.302" level="INFO">${RESULT} = {'wakeups': [59758524, 59768524, 59778524, 59788524, 59798524, 59808524, 59818524, 59828524, 59838524, 59848524, 59858524, 59868524, 59878524, 59888524, 59898524, 59908524, 59918524, 59928524, 5993852...</msg>
<status status="PASS" starttime="20201112 12:45:14.298" endtime="20201112 12:45:14.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:14.305" endtime="20201112 12:45:14.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:14.308" endtime="20201112 12:45:14.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.303" endtime="20201112 12:45:14.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.313" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:14.312" endtime="20201112 12:45:14.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.315" level="INFO">VALUE: 59748441</msg>
<status status="PASS" starttime="20201112 12:45:14.314" endtime="20201112 12:45:14.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.310" endtime="20201112 12:45:14.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.320" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:14.319" endtime="20201112 12:45:14.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.323" level="INFO">VALUE: [59758524, 59768524, 59778524, 59788524, 59798524, 59808524, 59818524, 59828524, 59838524, 59848524, 59858524, 59868524, 59878524, 59888524, 59898524, 59908524, 59918524, 59928524, 59938524, 59948524, 59958524, 59968524, 59978524, 59988524, 59998524, 60008524, 60018524, 60028524, 60038524, 60048524, 60058524, 60068524, 60078524, 60088524, 60098524, 60108524, 60118524, 60128524, 60138524, 60148524, 60158524, 60168524, 60178524, 60188524, 60198524, 60208524, 60218524, 60228524, 60238524, 60248524, 60258524, 60268524, 60278524, 60288524, 60298524, 60308524, 60318524, 60328524, 60338524, 60348524, 60358524, 60368524, 60378524, 60388524, 60398524, 60408524, 60418524, 60428524, 60438524, 60448524, 60458524, 60468524, 60478524, 60488524, 60498524, 60508524, 60518524, 60528524, 60538524, 60548524, 60558524, 60568524, 60578524, 60588524, 60598524, 60608524, 60618524, 60628524, 60638524, 60648524, 60658524, 60668524, 60678524, 60688524, 60698524, 60708524, 60718524, 60728524, 60738524, 60748524]</msg>
<status status="PASS" starttime="20201112 12:45:14.321" endtime="20201112 12:45:14.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.317" endtime="20201112 12:45:14.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.330" endtime="20201112 12:45:14.620"></status>
</kw>
<msg timestamp="20201112 12:45:14.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032072569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:14.328" endtime="20201112 12:45:14.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032072569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:14.623" endtime="20201112 12:45:14.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.631" endtime="20201112 12:45:14.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.326" endtime="20201112 12:45:14.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.324" endtime="20201112 12:45:14.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:14.658" level="INFO">${RESULT} = {'time': [0.021988028, 0.032072569, 0.042073889, 0.052075014, 0.062076194, 0.072077292, 0.082078528, 0.092079569, 0.102080736, 0.112081847, 0.122083042, 0.132084153, 0.142085306, 0.152086486, 0.162087...</msg>
<status status="PASS" starttime="20201112 12:45:14.634" endtime="20201112 12:45:14.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.663" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:14.662" endtime="20201112 12:45:14.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.665" level="INFO">VALUE: 0.021988028</msg>
<status status="PASS" starttime="20201112 12:45:14.664" endtime="20201112 12:45:14.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.659" endtime="20201112 12:45:14.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.670" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:14.669" endtime="20201112 12:45:14.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.673" level="INFO">VALUE: [0.032072569, 0.042073889, 0.052075014, 0.062076194, 0.072077292, 0.082078528, 0.092079569, 0.102080736, 0.112081847, 0.122083042, 0.132084153, 0.142085306, 0.152086486, 0.162087611, 0.172088722, 0.182089931, 0.192091, 0.202092153, 0.212093278, 0.222094431, 0.232095556, 0.242096722, 0.252097833, 0.262099028, 0.272100125, 0.282101292, 0.292102403, 0.302103583, 0.312104722, 0.322105875, 0.332106972, 0.342108194, 0.352109264, 0.362110444, 0.372111542, 0.382112708, 0.392113833, 0.402115, 0.412116111, 0.422117278, 0.432118403, 0.442119583, 0.452120708, 0.462121861, 0.472122972, 0.482124139, 0.492125264, 0.502126417, 0.512127542, 0.522128708, 0.532129833, 0.542131, 0.552132111, 0.562133278, 0.572134417, 0.582135569, 0.592136681, 0.602137847, 0.612138986, 0.622140139, 0.63214125, 0.642142431, 0.652143542, 0.662144736, 0.672145833, 0.682147028, 0.692148111, 0.702149278, 0.712150403, 0.722151583, 0.732152681, 0.742153861, 0.752154986, 0.762156139, 0.772157319, 0.782158417, 0.792159542, 0.802160708, 0.812161819, 0.822162986, 0.832164111, 0.842165278, 0.852166389, 0.862167556, 0.872168694, 0.882169847, 0.892170958, 0.902172125, 0.91217325, 0.922174431, 0.932175542, 0.942176708, 0.952177847, 0.962178986, 0.972180125, 0.982181292, 0.992182389, 1.002183583, 1.012184667, 1.022185833] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:14.672" endtime="20201112 12:45:14.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.666" endtime="20201112 12:45:14.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.676" endtime="20201112 12:45:14.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:14.679" endtime="20201112 12:45:14.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.678" endtime="20201112 12:45:14.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.674" endtime="20201112 12:45:14.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.148" endtime="20201112 12:45:14.700"></status>
</kw>
<msg timestamp="20201112 12:45:14.700" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.708" endtime="20201112 12:45:16.828"></status>
</kw>
<msg timestamp="20201112 12:45:16.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62300181, 'wakeups': [62310264, 62320264, 62330264, 62340264, 62350264...</msg>
<status status="PASS" starttime="20201112 12:45:14.707" endtime="20201112 12:45:16.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.835" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62300181, 'wakeups': [62310264, 62320264, 62330264, 62340264, 62350264...</msg>
<status status="PASS" starttime="20201112 12:45:16.831" endtime="20201112 12:45:16.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.837" endtime="20201112 12:45:16.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.704" endtime="20201112 12:45:16.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.702" endtime="20201112 12:45:16.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:16.848" level="INFO">${RESULT} = {'wakeups': [62310264, 62320264, 62330264, 62340264, 62350264, 62360264, 62370264, 62380264, 62390264, 62400264, 62410264, 62420264, 62430264, 62440264, 62450264, 62460264, 62470264, 62480264, 6249026...</msg>
<status status="PASS" starttime="20201112 12:45:16.844" endtime="20201112 12:45:16.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.858" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:16.857" endtime="20201112 12:45:16.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.860" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:16.859" endtime="20201112 12:45:16.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.850" endtime="20201112 12:45:16.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.866" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:16.865" endtime="20201112 12:45:16.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.868" level="INFO">VALUE: 62300181</msg>
<status status="PASS" starttime="20201112 12:45:16.867" endtime="20201112 12:45:16.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.862" endtime="20201112 12:45:16.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.873" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:16.872" endtime="20201112 12:45:16.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.875" level="INFO">VALUE: [62310264, 62320264, 62330264, 62340264, 62350264, 62360264, 62370264, 62380264, 62390264, 62400264, 62410264, 62420264, 62430264, 62440264, 62450264, 62460264, 62470264, 62480264, 62490264, 62500264, 62510264, 62520264, 62530264, 62540264, 62550264, 62560264, 62570264, 62580264, 62590264, 62600264, 62610264, 62620264, 62630264, 62640264, 62650264, 62660264, 62670264, 62680264, 62690264, 62700264, 62710264, 62720264, 62730264, 62740264, 62750264, 62760264, 62770264, 62780264, 62790264, 62800264, 62810264, 62820264, 62830264, 62840264, 62850264, 62860264, 62870264, 62880264, 62890264, 62900264, 62910264, 62920264, 62930264, 62940264, 62950264, 62960264, 62970264, 62980264, 62990264, 63000264, 63010264, 63020264, 63030264, 63040264, 63050264, 63060264, 63070264, 63080264, 63090264, 63100264, 63110264, 63120264, 63130264, 63140264, 63150264, 63160264, 63170264, 63180264, 63190264, 63200264, 63210264, 63220264, 63230264, 63240264, 63250264, 63260264, 63270264, 63280264, 63290264, 63300264]</msg>
<status status="PASS" starttime="20201112 12:45:16.874" endtime="20201112 12:45:16.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.869" endtime="20201112 12:45:16.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.882" endtime="20201112 12:45:17.172"></status>
</kw>
<msg timestamp="20201112 12:45:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018354917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028439417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:16.881" endtime="20201112 12:45:17.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018354917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028439417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:17.176" endtime="20201112 12:45:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.183" endtime="20201112 12:45:17.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.878" endtime="20201112 12:45:17.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.876" endtime="20201112 12:45:17.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:17.209" level="INFO">${RESULT} = {'time': [0.018354917, 0.028439417, 0.038440736, 0.048441847, 0.058443014, 0.068444125, 0.078445292, 0.088446431, 0.098447583, 0.108448694, 0.118449861, 0.128450986, 0.138452153, 0.148453264, 0.158454...</msg>
<status status="PASS" starttime="20201112 12:45:17.186" endtime="20201112 12:45:17.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.214" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:17.213" endtime="20201112 12:45:17.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.216" level="INFO">VALUE: 0.018354917</msg>
<status status="PASS" starttime="20201112 12:45:17.215" endtime="20201112 12:45:17.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.210" endtime="20201112 12:45:17.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.221" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:17.220" endtime="20201112 12:45:17.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.223" level="INFO">VALUE: [0.028439417, 0.038440736, 0.048441847, 0.058443014, 0.068444125, 0.078445292, 0.088446431, 0.098447583, 0.108448694, 0.118449861, 0.128450986, 0.138452153, 0.148453264, 0.158454431, 0.168455542, 0.178456708, 0.188457833, 0.198458986, 0.208460111, 0.218461278, 0.228462389, 0.238463569, 0.248464694, 0.258465847, 0.268466958, 0.278468139, 0.28846925, 0.298470417, 0.308471542, 0.318472708, 0.328473806, 0.338474986, 0.348476097, 0.358477264, 0.368478375, 0.378479542, 0.388480681, 0.398481847, 0.408482972, 0.418484097, 0.428485222, 0.438486417, 0.448487486, 0.458488653, 0.468489778, 0.478490917, 0.488492056, 0.498493181, 0.508494306, 0.518495458, 0.528496583, 0.538497764, 0.548498861, 0.558500014, 0.568501111, 0.578502278, 0.588503389, 0.598504583, 0.608505667, 0.618506819, 0.628507958, 0.638509111, 0.648510278, 0.658511431, 0.668512486, 0.678513653, 0.688514764, 0.698515917, 0.708517042, 0.718518194, 0.728519306, 0.738520472, 0.748521611, 0.758522778, 0.768523861, 0.778525042, 0.788526139, 0.798527292, 0.808528403, 0.818529569, 0.828530708, 0.838531847, 0.848532972, 0.858534125, 0.868535236, 0.878536444, 0.8885375, 0.898538667, 0.908539792, 0.918540972, 0.928542069, 0.938543236, 0.948544333, 0.958545514, 0.968546611, 0.978547778, 0.988548958, 0.998550056, 1.008551153, 1.018552319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:17.222" endtime="20201112 12:45:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.217" endtime="20201112 12:45:17.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.227" endtime="20201112 12:45:17.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:17.230" endtime="20201112 12:45:17.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.229" endtime="20201112 12:45:17.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.225" endtime="20201112 12:45:17.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.701" endtime="20201112 12:45:17.251"></status>
</kw>
<msg timestamp="20201112 12:45:17.251" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.259" endtime="20201112 12:45:19.378"></status>
</kw>
<msg timestamp="20201112 12:45:19.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64851167, 'wakeups': [64861250, 64871250, 64881250, 64891250, 64901250...</msg>
<status status="PASS" starttime="20201112 12:45:17.258" endtime="20201112 12:45:19.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64851167, 'wakeups': [64861250, 64871250, 64881250, 64891250, 64901250...</msg>
<status status="PASS" starttime="20201112 12:45:19.381" endtime="20201112 12:45:19.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.387" endtime="20201112 12:45:19.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.255" endtime="20201112 12:45:19.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.253" endtime="20201112 12:45:19.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:19.398" level="INFO">${RESULT} = {'wakeups': [64861250, 64871250, 64881250, 64891250, 64901250, 64911250, 64921250, 64931250, 64941250, 64951250, 64961250, 64971250, 64981250, 64991250, 65001250, 65011250, 65021250, 65031250, 6504125...</msg>
<status status="PASS" starttime="20201112 12:45:19.394" endtime="20201112 12:45:19.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.406" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:19.404" endtime="20201112 12:45:19.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.411" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:19.409" endtime="20201112 12:45:19.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.400" endtime="20201112 12:45:19.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.416" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:19.415" endtime="20201112 12:45:19.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.418" level="INFO">VALUE: 64851167</msg>
<status status="PASS" starttime="20201112 12:45:19.417" endtime="20201112 12:45:19.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.413" endtime="20201112 12:45:19.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.423" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:19.422" endtime="20201112 12:45:19.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.427" level="INFO">VALUE: [64861250, 64871250, 64881250, 64891250, 64901250, 64911250, 64921250, 64931250, 64941250, 64951250, 64961250, 64971250, 64981250, 64991250, 65001250, 65011250, 65021250, 65031250, 65041250, 65051250, 65061250, 65071250, 65081250, 65091250, 65101250, 65111250, 65121250, 65131250, 65141250, 65151250, 65161250, 65171250, 65181250, 65191250, 65201250, 65211250, 65221250, 65231250, 65241250, 65251250, 65261250, 65271250, 65281250, 65291250, 65301250, 65311250, 65321250, 65331250, 65341250, 65351250, 65361250, 65371250, 65381250, 65391250, 65401250, 65411250, 65421250, 65431250, 65441250, 65451250, 65461250, 65471250, 65481250, 65491250, 65501250, 65511250, 65521250, 65531250, 65541250, 65551250, 65561250, 65571250, 65581250, 65591250, 65601250, 65611250, 65621250, 65631250, 65641250, 65651250, 65661250, 65671250, 65681250, 65691250, 65701250, 65711250, 65721250, 65731250, 65741250, 65751250, 65761250, 65771250, 65781250, 65791250, 65801250, 65811250, 65821250, 65831250, 65841250, 65851250]</msg>
<status status="PASS" starttime="20201112 12:45:19.424" endtime="20201112 12:45:19.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.420" endtime="20201112 12:45:19.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.443" endtime="20201112 12:45:19.733"></status>
</kw>
<msg timestamp="20201112 12:45:19.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018270653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028355444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:19.441" endtime="20201112 12:45:19.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018270653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028355444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:19.737" endtime="20201112 12:45:19.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.745" endtime="20201112 12:45:19.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.438" endtime="20201112 12:45:19.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.428" endtime="20201112 12:45:19.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:19.772" level="INFO">${RESULT} = {'time': [0.018270653, 0.028355444, 0.038356764, 0.048357861, 0.058359056, 0.068360153, 0.078361319, 0.088362444, 0.098363597, 0.108364708, 0.118365903, 0.128367014, 0.138368167, 0.148369278, 0.158370...</msg>
<status status="PASS" starttime="20201112 12:45:19.749" endtime="20201112 12:45:19.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.777" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:19.776" endtime="20201112 12:45:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.779" level="INFO">VALUE: 0.018270653</msg>
<status status="PASS" starttime="20201112 12:45:19.778" endtime="20201112 12:45:19.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.773" endtime="20201112 12:45:19.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.784" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:19.783" endtime="20201112 12:45:19.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.786" level="INFO">VALUE: [0.028355444, 0.038356764, 0.048357861, 0.058359056, 0.068360153, 0.078361319, 0.088362444, 0.098363597, 0.108364708, 0.118365903, 0.128367014, 0.138368167, 0.148369278, 0.158370444, 0.168371569, 0.17837275, 0.188373847, 0.198375028, 0.208376125, 0.218377292, 0.228378486, 0.238379583, 0.248380694, 0.258381889, 0.268382986, 0.278384153, 0.288385292, 0.298386431, 0.308387556, 0.318388708, 0.328389847, 0.338391014, 0.348392111, 0.358393278, 0.368394444, 0.378395569, 0.388396681, 0.398397889, 0.408398972, 0.418400139, 0.428401278, 0.438402431, 0.448403542, 0.458404708, 0.468405833, 0.478407, 0.488408111, 0.498409278, 0.508410403, 0.518411569, 0.528412708, 0.538413847, 0.548414972, 0.558416139, 0.568417236, 0.578418403, 0.588419514, 0.598420667, 0.608421792, 0.618422944, 0.628424097, 0.638425222, 0.648426333, 0.658427569, 0.668428611, 0.678429778, 0.688430889, 0.698432069, 0.708433181, 0.718434333, 0.728435444, 0.738436611, 0.748437722, 0.758438889, 0.768440014, 0.778441167, 0.788442278, 0.798443431, 0.808444556, 0.818445792, 0.828446847, 0.838447986, 0.848449111, 0.858450264, 0.868451403, 0.878452542, 0.888453667, 0.898454819, 0.908455958, 0.918457111, 0.928458222, 0.938459375, 0.9484605, 0.958461667, 0.968462778, 0.978463931, 0.988465056, 0.998466222, 1.008467333, 1.0184685] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:19.785" endtime="20201112 12:45:19.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.780" endtime="20201112 12:45:19.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.789" endtime="20201112 12:45:19.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:19.794" endtime="20201112 12:45:19.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.791" endtime="20201112 12:45:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.788" endtime="20201112 12:45:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.252" endtime="20201112 12:45:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.146" endtime="20201112 12:45:19.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.145" endtime="20201112 12:45:19.815"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:19.817" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.826" endtime="20201112 12:45:21.945"></status>
</kw>
<msg timestamp="20201112 12:45:21.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67417676, 'wakeups': [67427776, 67437774, 67447774, 67457774, 67467774...</msg>
<status status="PASS" starttime="20201112 12:45:19.824" endtime="20201112 12:45:21.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67417676, 'wakeups': [67427776, 67437774, 67447774, 67457774, 67467774...</msg>
<status status="PASS" starttime="20201112 12:45:21.948" endtime="20201112 12:45:21.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:21.954" endtime="20201112 12:45:21.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.821" endtime="20201112 12:45:21.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.819" endtime="20201112 12:45:21.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:21.965" level="INFO">${RESULT} = {'wakeups': [67427776, 67437774, 67447774, 67457774, 67467774, 67477774, 67487774, 67497774, 67507774, 67517774, 67527774, 67537774, 67547774, 67557774, 67567774, 67577774, 67587774, 67597774, 6760777...</msg>
<status status="PASS" starttime="20201112 12:45:21.961" endtime="20201112 12:45:21.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.970" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:21.969" endtime="20201112 12:45:21.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.972" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:21.971" endtime="20201112 12:45:21.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.967" endtime="20201112 12:45:21.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.977" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:21.976" endtime="20201112 12:45:21.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.979" level="INFO">VALUE: 67417676</msg>
<status status="PASS" starttime="20201112 12:45:21.978" endtime="20201112 12:45:21.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.974" endtime="20201112 12:45:21.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.984" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:21.983" endtime="20201112 12:45:21.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.986" level="INFO">VALUE: [67427776, 67437774, 67447774, 67457774, 67467774, 67477774, 67487774, 67497774, 67507774, 67517774, 67527774, 67537774, 67547774, 67557774, 67567774, 67577774, 67587774, 67597774, 67607774, 67617774, 67627774, 67637774, 67647774, 67657774, 67667774, 67677774, 67687774, 67697774, 67707774, 67717774, 67727774, 67737774, 67747774, 67757774, 67767774, 67777774, 67787774, 67797774, 67807774, 67817774, 67827774, 67837774, 67847774, 67857774, 67867774, 67877774, 67887774, 67897774, 67907774, 67917774, 67927774, 67937774, 67947774, 67957774, 67967774, 67977774, 67987774, 67997774, 68007774, 68017774, 68027774, 68037774, 68047774, 68057774, 68067774, 68077774, 68087774, 68097774, 68107774, 68117774, 68127774, 68137774, 68147774, 68157774, 68167774, 68177774, 68187774, 68197774, 68207774, 68217774, 68227774, 68237774, 68247774, 68257774, 68267774, 68277774, 68287774, 68297774, 68307774, 68317774, 68327774, 68337774, 68347774, 68357774, 68367774, 68377774, 68387774, 68397774, 68407774, 68417774]</msg>
<status status="PASS" starttime="20201112 12:45:21.985" endtime="20201112 12:45:21.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.981" endtime="20201112 12:45:21.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:21.994" endtime="20201112 12:45:22.287"></status>
</kw>
<msg timestamp="20201112 12:45:22.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031635167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:21.992" endtime="20201112 12:45:22.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031635167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:22.291" endtime="20201112 12:45:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.298" endtime="20201112 12:45:22.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.990" endtime="20201112 12:45:22.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.988" endtime="20201112 12:45:22.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:22.324" level="INFO">${RESULT} = {'time': [0.021533528, 0.031635167, 0.041634292, 0.051635403, 0.061636569, 0.071637694, 0.081638861, 0.091639986, 0.101641139, 0.111642264, 0.121643417, 0.131644542, 0.141645708, 0.151646819, 0.161647...</msg>
<status status="PASS" starttime="20201112 12:45:22.302" endtime="20201112 12:45:22.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.329" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:22.328" endtime="20201112 12:45:22.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.331" level="INFO">VALUE: 0.021533528</msg>
<status status="PASS" starttime="20201112 12:45:22.330" endtime="20201112 12:45:22.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.325" endtime="20201112 12:45:22.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.336" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:22.335" endtime="20201112 12:45:22.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.338" level="INFO">VALUE: [0.031635167, 0.041634292, 0.051635403, 0.061636569, 0.071637694, 0.081638861, 0.091639986, 0.101641139, 0.111642264, 0.121643417, 0.131644542, 0.141645708, 0.151646819, 0.161647986, 0.171649097, 0.181650278, 0.191651417, 0.201652556, 0.211653681, 0.221654833, 0.231655972, 0.241657181, 0.251658236, 0.261659403, 0.271660528, 0.281661694, 0.291662819, 0.301663972, 0.311665097, 0.321666278, 0.331667375, 0.341668556, 0.351669667, 0.361670833, 0.371671958, 0.381673125, 0.39167425, 0.401675403, 0.411676514, 0.421677722, 0.431678806, 0.441679972, 0.451681083, 0.461682264, 0.471683431, 0.481684542, 0.491685653, 0.501686819, 0.511687958, 0.521689125, 0.531690222, 0.541691389, 0.551692514, 0.561693681, 0.571694847, 0.581695958, 0.591697083, 0.60169825, 0.611699361, 0.621700542, 0.631701653, 0.641702833, 0.651703931, 0.661705111, 0.671706278, 0.681707389, 0.691708514, 0.701709694, 0.711710792, 0.721711958, 0.731713083, 0.74171425, 0.751715361, 0.761716528, 0.771717653, 0.781718875, 0.791719931, 0.801721097, 0.811722222, 0.821723403, 0.8317245, 0.841725667, 0.851726792, 0.861727958, 0.871729097, 0.88173025, 0.891731361, 0.901732528, 0.911733639, 0.921734806, 0.931735944, 0.941737111, 0.951738208, 0.961739375, 0.9717405, 0.981741667, 0.991742833, 1.001743958, 1.011745069, 1.021746236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:22.337" endtime="20201112 12:45:22.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.332" endtime="20201112 12:45:22.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.342" endtime="20201112 12:45:22.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:22.345" endtime="20201112 12:45:22.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.343" endtime="20201112 12:45:22.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.340" endtime="20201112 12:45:22.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.818" endtime="20201112 12:45:22.366"></status>
</kw>
<msg timestamp="20201112 12:45:22.366" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.375" endtime="20201112 12:45:24.495"></status>
</kw>
<msg timestamp="20201112 12:45:24.496" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69966930, 'wakeups': [69977030, 69987028, 69997028, 70007028, 70017028...</msg>
<status status="PASS" starttime="20201112 12:45:22.373" endtime="20201112 12:45:24.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.502" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69966930, 'wakeups': [69977030, 69987028, 69997028, 70007028, 70017028...</msg>
<status status="PASS" starttime="20201112 12:45:24.498" endtime="20201112 12:45:24.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.504" endtime="20201112 12:45:24.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.370" endtime="20201112 12:45:24.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.368" endtime="20201112 12:45:24.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:24.515" level="INFO">${RESULT} = {'wakeups': [69977030, 69987028, 69997028, 70007028, 70017028, 70027028, 70037028, 70047028, 70057028, 70067028, 70077028, 70087028, 70097028, 70107028, 70117028, 70127028, 70137028, 70147028, 7015702...</msg>
<status status="PASS" starttime="20201112 12:45:24.511" endtime="20201112 12:45:24.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.525" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:24.524" endtime="20201112 12:45:24.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.527" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:24.526" endtime="20201112 12:45:24.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.521" endtime="20201112 12:45:24.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.532" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:24.531" endtime="20201112 12:45:24.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.534" level="INFO">VALUE: 69966930</msg>
<status status="PASS" starttime="20201112 12:45:24.533" endtime="20201112 12:45:24.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.528" endtime="20201112 12:45:24.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.539" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:24.538" endtime="20201112 12:45:24.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.541" level="INFO">VALUE: [69977030, 69987028, 69997028, 70007028, 70017028, 70027028, 70037028, 70047028, 70057028, 70067028, 70077028, 70087028, 70097028, 70107028, 70117028, 70127028, 70137028, 70147028, 70157028, 70167028, 70177028, 70187028, 70197028, 70207028, 70217028, 70227028, 70237028, 70247028, 70257028, 70267028, 70277028, 70287028, 70297028, 70307028, 70317028, 70327028, 70337028, 70347028, 70357028, 70367028, 70377028, 70387028, 70397028, 70407028, 70417028, 70427028, 70437028, 70447028, 70457028, 70467028, 70477028, 70487028, 70497028, 70507028, 70517028, 70527028, 70537028, 70547028, 70557028, 70567028, 70577028, 70587028, 70597028, 70607028, 70617028, 70627028, 70637028, 70647028, 70657028, 70667028, 70677028, 70687028, 70697028, 70707028, 70717028, 70727028, 70737028, 70747028, 70757028, 70767028, 70777028, 70787028, 70797028, 70807028, 70817028, 70827028, 70837028, 70847028, 70857028, 70867028, 70877028, 70887028, 70897028, 70907028, 70917028, 70927028, 70937028, 70947028, 70957028, 70967028]</msg>
<status status="PASS" starttime="20201112 12:45:24.540" endtime="20201112 12:45:24.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.535" endtime="20201112 12:45:24.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.548" endtime="20201112 12:45:24.839"></status>
</kw>
<msg timestamp="20201112 12:45:24.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:24.547" endtime="20201112 12:45:24.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:24.843" endtime="20201112 12:45:24.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.851" endtime="20201112 12:45:24.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.544" endtime="20201112 12:45:24.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.542" endtime="20201112 12:45:24.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:24.878" level="INFO">${RESULT} = {'time': [0.019473597, 0.029574958, 0.039574083, 0.049575194, 0.059576361, 0.069577486, 0.079578667, 0.089579819, 0.099580944, 0.109582042, 0.119583278, 0.129584333, 0.139585514, 0.149586611, 0.159587...</msg>
<status status="PASS" starttime="20201112 12:45:24.854" endtime="20201112 12:45:24.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.882" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:24.881" endtime="20201112 12:45:24.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.884" level="INFO">VALUE: 0.019473597</msg>
<status status="PASS" starttime="20201112 12:45:24.883" endtime="20201112 12:45:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.879" endtime="20201112 12:45:24.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.890" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:24.889" endtime="20201112 12:45:24.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.892" level="INFO">VALUE: [0.029574958, 0.039574083, 0.049575194, 0.059576361, 0.069577486, 0.079578667, 0.089579819, 0.099580944, 0.109582042, 0.119583278, 0.129584333, 0.139585514, 0.149586611, 0.159587792, 0.169588889, 0.179590056, 0.189591194, 0.199592347, 0.209593472, 0.219594625, 0.22959575, 0.239596917, 0.249598028, 0.259599194, 0.269600319, 0.279601486, 0.289602611, 0.299603764, 0.309604889, 0.319606056, 0.329607167, 0.339608347, 0.349609444, 0.359610625, 0.369611736, 0.379612903, 0.389614014, 0.399615181, 0.409616319, 0.419617486, 0.429618583, 0.439619764, 0.449620875, 0.459622042, 0.469623208, 0.479624333, 0.489625444, 0.499626625, 0.50962775, 0.519628917, 0.529630014, 0.539631194, 0.549632319, 0.5596335, 0.569634583, 0.57963575, 0.589636917, 0.599638056, 0.609639167, 0.619640319, 0.629641472, 0.639642625, 0.649643722, 0.659644889, 0.669646014, 0.679647181, 0.689648292, 0.699649458, 0.709650583, 0.71965175, 0.729652861, 0.739654042, 0.749655153, 0.759656333, 0.769657431, 0.779658597, 0.789659736, 0.799660931, 0.809662028, 0.819663167, 0.829664333, 0.839665458, 0.849666583, 0.859667778, 0.869668861, 0.879670028, 0.889671167, 0.899672319, 0.909673431, 0.919674597, 0.929675722, 0.939676972, 0.949678056, 0.959679167, 0.969680292, 0.979681458, 0.989682583, 0.99968375, 1.009684861, 1.019686042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:24.891" endtime="20201112 12:45:24.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.886" endtime="20201112 12:45:24.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.896" endtime="20201112 12:45:24.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:24.900" endtime="20201112 12:45:24.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.898" endtime="20201112 12:45:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.894" endtime="20201112 12:45:24.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.367" endtime="20201112 12:45:24.921"></status>
</kw>
<msg timestamp="20201112 12:45:24.921" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.929" endtime="20201112 12:45:27.048"></status>
</kw>
<msg timestamp="20201112 12:45:27.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72520718, 'wakeups': [72530817, 72540816, 72550816, 72560816, 72570816...</msg>
<status status="PASS" starttime="20201112 12:45:24.928" endtime="20201112 12:45:27.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.055" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72520718, 'wakeups': [72530817, 72540816, 72550816, 72560816, 72570816...</msg>
<status status="PASS" starttime="20201112 12:45:27.052" endtime="20201112 12:45:27.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.057" endtime="20201112 12:45:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.925" endtime="20201112 12:45:27.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.923" endtime="20201112 12:45:27.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:27.068" level="INFO">${RESULT} = {'wakeups': [72530817, 72540816, 72550816, 72560816, 72570816, 72580816, 72590816, 72600816, 72610816, 72620816, 72630816, 72640816, 72650816, 72660816, 72670816, 72680816, 72690816, 72700816, 7271081...</msg>
<status status="PASS" starttime="20201112 12:45:27.064" endtime="20201112 12:45:27.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.076" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:27.074" endtime="20201112 12:45:27.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.079" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:27.078" endtime="20201112 12:45:27.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.070" endtime="20201112 12:45:27.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.083" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:27.082" endtime="20201112 12:45:27.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.087" level="INFO">VALUE: 72520718</msg>
<status status="PASS" starttime="20201112 12:45:27.085" endtime="20201112 12:45:27.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.080" endtime="20201112 12:45:27.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.092" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:27.091" endtime="20201112 12:45:27.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.094" level="INFO">VALUE: [72530817, 72540816, 72550816, 72560816, 72570816, 72580816, 72590816, 72600816, 72610816, 72620816, 72630816, 72640816, 72650816, 72660816, 72670816, 72680816, 72690816, 72700816, 72710816, 72720816, 72730816, 72740816, 72750816, 72760816, 72770816, 72780816, 72790816, 72800816, 72810816, 72820816, 72830816, 72840816, 72850816, 72860816, 72870816, 72880816, 72890816, 72900816, 72910816, 72920816, 72930816, 72940816, 72950816, 72960816, 72970816, 72980816, 72990816, 73000816, 73010816, 73020816, 73030816, 73040816, 73050816, 73060816, 73070816, 73080816, 73090816, 73100816, 73110816, 73120816, 73130816, 73140816, 73150816, 73160816, 73170816, 73180816, 73190816, 73200816, 73210816, 73220816, 73230816, 73240816, 73250816, 73260816, 73270816, 73280816, 73290816, 73300816, 73310816, 73320816, 73330816, 73340816, 73350816, 73360816, 73370816, 73380816, 73390816, 73400816, 73410816, 73420816, 73430816, 73440816, 73450816, 73460816, 73470816, 73480816, 73490816, 73500816, 73510816, 73520816]</msg>
<status status="PASS" starttime="20201112 12:45:27.093" endtime="20201112 12:45:27.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.088" endtime="20201112 12:45:27.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.102" endtime="20201112 12:45:27.392"></status>
</kw>
<msg timestamp="20201112 12:45:27.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028508278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:27.100" endtime="20201112 12:45:27.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028508278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:27.396" endtime="20201112 12:45:27.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.403" endtime="20201112 12:45:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.098" endtime="20201112 12:45:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.096" endtime="20201112 12:45:27.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:27.429" level="INFO">${RESULT} = {'time': [0.018408097, 0.028508278, 0.038508028, 0.048509167, 0.058510306, 0.068511431, 0.078512597, 0.088513708, 0.098514875, 0.108516, 0.118517167, 0.128518292, 0.138519444, 0.148520556, 0.158521736...</msg>
<status status="PASS" starttime="20201112 12:45:27.406" endtime="20201112 12:45:27.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.433" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:27.432" endtime="20201112 12:45:27.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.435" level="INFO">VALUE: 0.018408097</msg>
<status status="PASS" starttime="20201112 12:45:27.434" endtime="20201112 12:45:27.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.430" endtime="20201112 12:45:27.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.441" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:27.440" endtime="20201112 12:45:27.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.444" level="INFO">VALUE: [0.028508278, 0.038508028, 0.048509167, 0.058510306, 0.068511431, 0.078512597, 0.088513708, 0.098514875, 0.108516, 0.118517167, 0.128518292, 0.138519444, 0.148520556, 0.158521736, 0.168522847, 0.178524042, 0.188525125, 0.198526306, 0.208527417, 0.218528597, 0.228529694, 0.238530861, 0.248532, 0.258533153, 0.268534264, 0.278535431, 0.288536556, 0.298537722, 0.308538847, 0.31854, 0.328541125, 0.338542292, 0.348543403, 0.358544583, 0.368545681, 0.378546861, 0.388547986, 0.398549111, 0.408550236, 0.418551403, 0.4285525, 0.438553667, 0.448554764, 0.458555944, 0.468557069, 0.478558222, 0.488559319, 0.498560486, 0.508561583, 0.518562764, 0.528563875, 0.538565042, 0.548566208, 0.558567333, 0.568568403, 0.578569569, 0.588570681, 0.598571861, 0.608572972, 0.618574139, 0.628575236, 0.638576403, 0.6485775, 0.658578667, 0.668579778, 0.678580958, 0.688582056, 0.698583208, 0.708584333, 0.718585528, 0.728586653, 0.738587778, 0.748588875, 0.758590042, 0.768591153, 0.778592319, 0.788593431, 0.798594583, 0.808595708, 0.818596861, 0.828597972, 0.838599139, 0.84860025, 0.858601431, 0.868602528, 0.878603694, 0.888604847, 0.898605972, 0.908607083, 0.91860825, 0.928609347, 0.938610528, 0.948611639, 0.958612792, 0.968613903, 0.978615069, 0.988616181, 0.998617347, 1.008618472, 1.018619611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:27.443" endtime="20201112 12:45:27.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.437" endtime="20201112 12:45:27.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.447" endtime="20201112 12:45:27.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:27.450" endtime="20201112 12:45:27.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.449" endtime="20201112 12:45:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.445" endtime="20201112 12:45:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.922" endtime="20201112 12:45:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.816" endtime="20201112 12:45:27.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.815" endtime="20201112 12:45:27.472"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:27.474" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.482" endtime="20201112 12:45:29.602"></status>
</kw>
<msg timestamp="20201112 12:45:29.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75074921, 'wakeups': [75085038, 75095038, 75105038, 75115038, 751250...</msg>
<status status="PASS" starttime="20201112 12:45:27.481" endtime="20201112 12:45:29.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.609" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75074921, 'wakeups': [75085038, 75095038, 75105038, 75115038, 751250...</msg>
<status status="PASS" starttime="20201112 12:45:29.606" endtime="20201112 12:45:29.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:29.611" endtime="20201112 12:45:29.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.478" endtime="20201112 12:45:29.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.476" endtime="20201112 12:45:29.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:29.622" level="INFO">${RESULT} = {'wakeups': [75085038, 75095038, 75105038, 75115038, 75125038, 75135038, 75145038, 75155038, 75165038, 75175038, 75185038, 75195038, 75205038, 75215038, 75225038, 75235038, 75245038, 75255038, 7526503...</msg>
<status status="PASS" starttime="20201112 12:45:29.618" endtime="20201112 12:45:29.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.631" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:29.629" endtime="20201112 12:45:29.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.633" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:29.632" endtime="20201112 12:45:29.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.624" endtime="20201112 12:45:29.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.638" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:29.637" endtime="20201112 12:45:29.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.640" level="INFO">VALUE: 75074921</msg>
<status status="PASS" starttime="20201112 12:45:29.639" endtime="20201112 12:45:29.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.634" endtime="20201112 12:45:29.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.645" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:29.644" endtime="20201112 12:45:29.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.647" level="INFO">VALUE: [75085038, 75095038, 75105038, 75115038, 75125038, 75135038, 75145038, 75155038, 75165038, 75175038, 75185038, 75195038, 75205038, 75215038, 75225038, 75235038, 75245038, 75255038, 75265038, 75275038, 75285038, 75295038, 75305038, 75315038, 75325038, 75335038, 75345038, 75355038, 75365038, 75375038, 75385038, 75395038, 75405038, 75415038, 75425038, 75435038, 75445038, 75455038, 75465038, 75475038, 75485038, 75495038, 75505038, 75515038, 75525038, 75535038, 75545038, 75555038, 75565038, 75575038, 75585038, 75595038, 75605038, 75615038, 75625038, 75635038, 75645038, 75655038, 75665038, 75675038, 75685038, 75695038, 75705038, 75715038, 75725038, 75735038, 75745038, 75755038, 75765038, 75775038, 75785038, 75795038, 75805038, 75815038, 75825038, 75835038, 75845038, 75855038, 75865038, 75875038, 75885038, 75895038, 75905038, 75915038, 75925038, 75935038, 75945038, 75955038, 75965038, 75975038, 75985038, 75995038, 76005038, 76015038, 76025038, 76035038, 76045038, 76055038, 76065038, 76075038]</msg>
<status status="PASS" starttime="20201112 12:45:29.646" endtime="20201112 12:45:29.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.641" endtime="20201112 12:45:29.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:29.660" endtime="20201112 12:45:29.952"></status>
</kw>
<msg timestamp="20201112 12:45:29.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032514444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:29.653" endtime="20201112 12:45:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032514444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:29.956" endtime="20201112 12:45:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:29.963" endtime="20201112 12:45:29.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.650" endtime="20201112 12:45:29.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.649" endtime="20201112 12:45:29.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:29.990" level="INFO">${RESULT} = {'time': [0.022395347, 0.032514444, 0.042515597, 0.052516722, 0.062517875, 0.072519, 0.082520167, 0.092521278, 0.102522444, 0.112523556, 0.122524722, 0.132525847, 0.142527014, 0.152528153, 0.162529292...</msg>
<status status="PASS" starttime="20201112 12:45:29.967" endtime="20201112 12:45:29.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.994" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:29.993" endtime="20201112 12:45:29.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.996" level="INFO">VALUE: 0.022395347</msg>
<status status="PASS" starttime="20201112 12:45:29.995" endtime="20201112 12:45:29.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.991" endtime="20201112 12:45:29.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.002" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:30.001" endtime="20201112 12:45:30.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.004" level="INFO">VALUE: [0.032514444, 0.042515597, 0.052516722, 0.062517875, 0.072519, 0.082520167, 0.092521278, 0.102522444, 0.112523556, 0.122524722, 0.132525847, 0.142527014, 0.152528153, 0.162529292, 0.172530417, 0.182531569, 0.192532694, 0.202533861, 0.212534986, 0.222536139, 0.232537278, 0.242538444, 0.252539542, 0.262540708, 0.272541833, 0.282543, 0.292544111, 0.302545278, 0.312546417, 0.322547569, 0.332548694, 0.342549847, 0.352550972, 0.362552194, 0.37255325, 0.3825545, 0.392555542, 0.402556708, 0.412557819, 0.422559014, 0.432560153, 0.442561278, 0.452562444, 0.462563569, 0.472564708, 0.482565861, 0.492566986, 0.502568153, 0.512569264, 0.522570431, 0.532571556, 0.542572708, 0.552573833, 0.562575014, 0.572576111, 0.582577278, 0.592578403, 0.602579569, 0.612580667, 0.622581819, 0.632582931, 0.642584097, 0.65258525, 0.662586361, 0.672587472, 0.682588653, 0.69258975, 0.702590917, 0.712592014, 0.722593181, 0.732594292, 0.742595458, 0.752596583, 0.762597736, 0.772598833, 0.7826, 0.792601111, 0.802602292, 0.812603403, 0.822604569, 0.832605653, 0.842606889, 0.852607931, 0.862609097, 0.872610208, 0.882611361, 0.892612472, 0.902613639, 0.91261475, 0.922615931, 0.932617028, 0.942618181, 0.952619306, 0.962620458, 0.972621569, 0.982622736, 0.992623847, 1.002625014, 1.012626208, 1.022627278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:30.003" endtime="20201112 12:45:30.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.998" endtime="20201112 12:45:30.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.007" endtime="20201112 12:45:30.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:30.011" endtime="20201112 12:45:30.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.009" endtime="20201112 12:45:30.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.006" endtime="20201112 12:45:30.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.475" endtime="20201112 12:45:30.031"></status>
</kw>
<msg timestamp="20201112 12:45:30.032" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.040" endtime="20201112 12:45:32.160"></status>
</kw>
<msg timestamp="20201112 12:45:32.161" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77632103, 'wakeups': [77642220, 77652220, 77662220, 77672220, 776822...</msg>
<status status="PASS" starttime="20201112 12:45:30.038" endtime="20201112 12:45:32.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77632103, 'wakeups': [77642220, 77652220, 77662220, 77672220, 776822...</msg>
<status status="PASS" starttime="20201112 12:45:32.164" endtime="20201112 12:45:32.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.170" endtime="20201112 12:45:32.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.035" endtime="20201112 12:45:32.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.033" endtime="20201112 12:45:32.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:32.181" level="INFO">${RESULT} = {'wakeups': [77642220, 77652220, 77662220, 77672220, 77682220, 77692220, 77702220, 77712220, 77722220, 77732220, 77742220, 77752220, 77762220, 77772220, 77782220, 77792220, 77802220, 77812220, 7782222...</msg>
<status status="PASS" starttime="20201112 12:45:32.177" endtime="20201112 12:45:32.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.188" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:32.187" endtime="20201112 12:45:32.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.190" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:32.189" endtime="20201112 12:45:32.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.183" endtime="20201112 12:45:32.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.195" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:32.194" endtime="20201112 12:45:32.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.197" level="INFO">VALUE: 77632103</msg>
<status status="PASS" starttime="20201112 12:45:32.196" endtime="20201112 12:45:32.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.191" endtime="20201112 12:45:32.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.202" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:32.201" endtime="20201112 12:45:32.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.204" level="INFO">VALUE: [77642220, 77652220, 77662220, 77672220, 77682220, 77692220, 77702220, 77712220, 77722220, 77732220, 77742220, 77752220, 77762220, 77772220, 77782220, 77792220, 77802220, 77812220, 77822220, 77832220, 77842220, 77852220, 77862220, 77872220, 77882220, 77892220, 77902220, 77912220, 77922220, 77932220, 77942220, 77952220, 77962220, 77972220, 77982220, 77992220, 78002220, 78012220, 78022220, 78032220, 78042220, 78052220, 78062220, 78072220, 78082220, 78092220, 78102220, 78112220, 78122220, 78132220, 78142220, 78152220, 78162220, 78172220, 78182220, 78192220, 78202220, 78212220, 78222220, 78232220, 78242220, 78252220, 78262220, 78272220, 78282220, 78292220, 78302220, 78312220, 78322220, 78332220, 78342220, 78352220, 78362220, 78372220, 78382220, 78392220, 78402220, 78412220, 78422220, 78432220, 78442220, 78452220, 78462220, 78472220, 78482220, 78492220, 78502220, 78512220, 78522220, 78532220, 78542220, 78552220, 78562220, 78572220, 78582220, 78592220, 78602220, 78612220, 78622220, 78632220]</msg>
<status status="PASS" starttime="20201112 12:45:32.203" endtime="20201112 12:45:32.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.198" endtime="20201112 12:45:32.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.211" endtime="20201112 12:45:32.501"></status>
</kw>
<msg timestamp="20201112 12:45:32.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019230931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029349208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:32.210" endtime="20201112 12:45:32.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019230931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029349208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:32.505" endtime="20201112 12:45:32.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.512" endtime="20201112 12:45:32.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.207" endtime="20201112 12:45:32.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.206" endtime="20201112 12:45:32.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:32.538" level="INFO">${RESULT} = {'time': [0.019230931, 0.029349208, 0.039350292, 0.049351417, 0.059352569, 0.069353722, 0.079354847, 0.089356028, 0.099357139, 0.10935825, 0.119359417, 0.129360556, 0.139361708, 0.149362819, 0.1593639...</msg>
<status status="PASS" starttime="20201112 12:45:32.515" endtime="20201112 12:45:32.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.543" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:32.542" endtime="20201112 12:45:32.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.545" level="INFO">VALUE: 0.019230931</msg>
<status status="PASS" starttime="20201112 12:45:32.544" endtime="20201112 12:45:32.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.540" endtime="20201112 12:45:32.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.551" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:32.550" endtime="20201112 12:45:32.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.553" level="INFO">VALUE: [0.029349208, 0.039350292, 0.049351417, 0.059352569, 0.069353722, 0.079354847, 0.089356028, 0.099357139, 0.10935825, 0.119359417, 0.129360556, 0.139361708, 0.149362819, 0.159363986, 0.169365097, 0.179366264, 0.189367403, 0.199368556, 0.209369681, 0.219370833, 0.229371972, 0.239373139, 0.249374236, 0.259375403, 0.269376528, 0.279377694, 0.289378806, 0.299379986, 0.309381097, 0.319382278, 0.329383375, 0.339384542, 0.349385667, 0.359386833, 0.369387944, 0.379389111, 0.389390236, 0.399391417, 0.409392597, 0.419393736, 0.429394806, 0.439395986, 0.449397097, 0.459398319, 0.469399375, 0.479400542, 0.489401653, 0.499402819, 0.509403944, 0.519405139, 0.529406236, 0.539407389, 0.549408514, 0.559409681, 0.569410806, 0.579411986, 0.589413083, 0.59941425, 0.609415375, 0.619416556, 0.629417653, 0.639418819, 0.649419944, 0.659421111, 0.669422236, 0.679423389, 0.689424514, 0.699425694, 0.709426806, 0.719427986, 0.729429097, 0.73943025, 0.749431375, 0.759432542, 0.769433667, 0.779434861, 0.789435944, 0.799437111, 0.809438222, 0.819439389, 0.829440528, 0.839441694, 0.849442861, 0.859443972, 0.869445083, 0.87944625, 0.889447361, 0.899448528, 0.909449653, 0.919450847, 0.929451931, 0.939453111, 0.949454236, 0.959455389, 0.969456514, 0.979457708, 0.989458792, 0.999459972, 1.009461069, 1.019462222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:32.552" endtime="20201112 12:45:32.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.547" endtime="20201112 12:45:32.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.556" endtime="20201112 12:45:32.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:32.559" endtime="20201112 12:45:32.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.558" endtime="20201112 12:45:32.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.554" endtime="20201112 12:45:32.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.032" endtime="20201112 12:45:32.580"></status>
</kw>
<msg timestamp="20201112 12:45:32.580" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.588" endtime="20201112 12:45:34.698"></status>
</kw>
<msg timestamp="20201112 12:45:34.699" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80179978, 'wakeups': [80190095, 80200095, 80210095, 80220095, 802300...</msg>
<status status="PASS" starttime="20201112 12:45:32.587" endtime="20201112 12:45:34.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.702" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80179978, 'wakeups': [80190095, 80200095, 80210095, 80220095, 802300...</msg>
<status status="PASS" starttime="20201112 12:45:34.700" endtime="20201112 12:45:34.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:34.703" endtime="20201112 12:45:34.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.584" endtime="20201112 12:45:34.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.582" endtime="20201112 12:45:34.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:34.708" level="INFO">${RESULT} = {'wakeups': [80190095, 80200095, 80210095, 80220095, 80230095, 80240095, 80250095, 80260095, 80270095, 80280095, 80290095, 80300095, 80310095, 80320095, 80330095, 80340095, 80350095, 80360095, 8037009...</msg>
<status status="PASS" starttime="20201112 12:45:34.706" endtime="20201112 12:45:34.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:34.711" endtime="20201112 12:45:34.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.714" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:34.713" endtime="20201112 12:45:34.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.709" endtime="20201112 12:45:34.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.724" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:34.723" endtime="20201112 12:45:34.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.727" level="INFO">VALUE: 80179978</msg>
<status status="PASS" starttime="20201112 12:45:34.725" endtime="20201112 12:45:34.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.721" endtime="20201112 12:45:34.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.732" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:34.731" endtime="20201112 12:45:34.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.735" level="INFO">VALUE: [80190095, 80200095, 80210095, 80220095, 80230095, 80240095, 80250095, 80260095, 80270095, 80280095, 80290095, 80300095, 80310095, 80320095, 80330095, 80340095, 80350095, 80360095, 80370095, 80380095, 80390095, 80400095, 80410095, 80420095, 80430095, 80440095, 80450095, 80460095, 80470095, 80480095, 80490095, 80500095, 80510095, 80520095, 80530095, 80540095, 80550095, 80560095, 80570095, 80580095, 80590095, 80600095, 80610095, 80620095, 80630095, 80640095, 80650095, 80660095, 80670095, 80680095, 80690095, 80700095, 80710095, 80720095, 80730095, 80740095, 80750095, 80760095, 80770095, 80780095, 80790095, 80800095, 80810095, 80820095, 80830095, 80840095, 80850095, 80860095, 80870095, 80880095, 80890095, 80900095, 80910095, 80920095, 80930095, 80940095, 80950095, 80960095, 80970095, 80980095, 80990095, 81000095, 81010095, 81020095, 81030095, 81040095, 81050095, 81060095, 81070095, 81080095, 81090095, 81100095, 81110095, 81120095, 81130095, 81140095, 81150095, 81160095, 81170095, 81180095]</msg>
<status status="PASS" starttime="20201112 12:45:34.733" endtime="20201112 12:45:34.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.729" endtime="20201112 12:45:34.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:34.742" endtime="20201112 12:45:35.033"></status>
</kw>
<msg timestamp="20201112 12:45:35.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:34.740" endtime="20201112 12:45:35.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:35.037" endtime="20201112 12:45:35.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.044" endtime="20201112 12:45:35.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.738" endtime="20201112 12:45:35.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.736" endtime="20201112 12:45:35.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:35.071" level="INFO">${RESULT} = {'time': [0.018384958, 0.028503875, 0.038505028, 0.048506125, 0.058507306, 0.068508417, 0.078509583, 0.088510694, 0.098511875, 0.108512986, 0.118514194, 0.128515278, 0.138516458, 0.148517542, 0.158518...</msg>
<status status="PASS" starttime="20201112 12:45:35.047" endtime="20201112 12:45:35.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.075" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:35.074" endtime="20201112 12:45:35.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.077" level="INFO">VALUE: 0.018384958</msg>
<status status="PASS" starttime="20201112 12:45:35.076" endtime="20201112 12:45:35.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.071" endtime="20201112 12:45:35.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.082" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:35.081" endtime="20201112 12:45:35.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.085" level="INFO">VALUE: [0.028503875, 0.038505028, 0.048506125, 0.058507306, 0.068508417, 0.078509583, 0.088510694, 0.098511875, 0.108512986, 0.118514194, 0.128515278, 0.138516458, 0.148517542, 0.158518708, 0.168519847, 0.178521014, 0.188522111, 0.198523292, 0.208524417, 0.218525583, 0.228526694, 0.238527847, 0.248528972, 0.258530139, 0.26853125, 0.278532417, 0.288533528, 0.298534708, 0.308535861, 0.318537, 0.328538125, 0.338539278, 0.348540389, 0.358541583, 0.368542764, 0.378543847, 0.388544972, 0.398546125, 0.40854725, 0.418548444, 0.428549528, 0.438550694, 0.448551792, 0.458552958, 0.468554069, 0.478555222, 0.488556333, 0.4985575, 0.508558625, 0.518559778, 0.528560944, 0.538562042, 0.548563181, 0.558564319, 0.568565431, 0.578566611, 0.588567708, 0.598568861, 0.608569972, 0.618571153, 0.62857225, 0.638573417, 0.648574542, 0.658575681, 0.668576806, 0.678577972, 0.688579069, 0.698580236, 0.708581347, 0.718582514, 0.728583625, 0.738584778, 0.748585889, 0.758587069, 0.768588167, 0.778589333, 0.788590458, 0.798591611, 0.808592736, 0.818593944, 0.828595028, 0.838596153, 0.848597278, 0.858598431, 0.868599542, 0.878600736, 0.888601833, 0.898603, 0.908604097, 0.918605264, 0.928606375, 0.938607528, 0.948608639, 0.958609819, 0.968610958, 0.978612083, 0.988613194, 0.998614361, 1.008615472, 1.018616653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:35.084" endtime="20201112 12:45:35.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.078" endtime="20201112 12:45:35.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.089" endtime="20201112 12:45:35.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:35.092" endtime="20201112 12:45:35.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.091" endtime="20201112 12:45:35.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.087" endtime="20201112 12:45:35.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.581" endtime="20201112 12:45:35.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.473" endtime="20201112 12:45:35.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.472" endtime="20201112 12:45:35.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.468" endtime="20201112 12:45:35.114"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:44:15.352" endtime="20201112 12:45:35.114" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:44:10.962" endtime="20201112 12:45:35.118"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:41:41.348" endtime="20201112 12:45:35.135"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_arduino-due</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
